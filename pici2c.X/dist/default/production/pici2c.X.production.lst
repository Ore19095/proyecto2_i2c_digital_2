

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Mar 02 10:58:15 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0088                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454                           
   455                           	psect	strings
   456  0003                     __pstrings:
   457  0003                     stringtab:
   458  0003                     __stringtab:
   459  0003                     stringcode:	
   460                           ;	String table - string pointers are 1 byte each
   461                           
   462  0003                     stringdir:
   463  0003  3000               	movlw	high stringdir
   464  0004  008A               	movwf	10
   465  0005  0804               	movf	4,w
   466  0006  0A84               	incf	4,f
   467  0007  0782               	addwf	2,f
   468  0008                     __stringbase:
   469  0008  3400               	retlw	0
   470  0009                     __end_of__stringtab:
   471  0009                     _dpowers:
   472  0009  3401               	retlw	1
   473  000A  3400               	retlw	0
   474  000B  340A               	retlw	10
   475  000C  3400               	retlw	0
   476  000D  3464               	retlw	100
   477  000E  3400               	retlw	0
   478  000F  34E8               	retlw	232
   479  0010  3403               	retlw	3
   480  0011  3410               	retlw	16
   481  0012  3427               	retlw	39
   482  0013                     __end_of_dpowers:
   483  001A                     _RCREG	set	26
   484  000C                     _PIR1bits	set	12
   485  0019                     _TXREG	set	25
   486  0018                     _RCSTAbits	set	24
   487  0005                     _PORTA	set	5
   488  0013                     _SSPBUF	set	19
   489  0014                     _SSPCON	set	20
   490  0063                     _SSPIF	set	99
   491  0087                     _TRISCbits	set	135
   492  0098                     _TXSTAbits	set	152
   493  0099                     _SPBRG	set	153
   494  0091                     _SSPCON2bits	set	145
   495  0085                     _TRISA	set	133
   496  0093                     _SSPADD	set	147
   497  0094                     _SSPSTAT	set	148
   498  0091                     _SSPCON2	set	145
   499  04A0                     _BF	set	1184
   500  048B                     _RCEN	set	1163
   501  048E                     _ACKSTAT	set	1166
   502  048C                     _ACKEN	set	1164
   503  048D                     _ACKDT	set	1165
   504  048A                     _PEN	set	1162
   505  0489                     _RSEN	set	1161
   506  0488                     _SEN	set	1160
   507  043C                     _TRISC4	set	1084
   508  043B                     _TRISC3	set	1083
   509  0188                     _ANSEL	set	392
   510  0013                     STR_4:
   511  0013  3454               	retlw	84	;'T'
   512  0014  3465               	retlw	101	;'e'
   513  0015  346D               	retlw	109	;'m'
   514  0016  3470               	retlw	112	;'p'
   515  0017  343A               	retlw	58	;':'
   516  0018  3420               	retlw	32	;' '
   517  0019  3425               	retlw	37	;'%'
   518  001A  3469               	retlw	105	;'i'
   519  001B  3420               	retlw	32	;' '
   520  001C  3400               	retlw	0
   521  001D                     STR_1:
   522  001D  3441               	retlw	65	;'A'
   523  001E  3478               	retlw	120	;'x'
   524  001F  343A               	retlw	58	;':'
   525  0020  3420               	retlw	32	;' '
   526  0021  3425               	retlw	37	;'%'
   527  0022  3469               	retlw	105	;'i'
   528  0023  3420               	retlw	32	;' '
   529  0024  3400               	retlw	0
   530  0025                     STR_2:
   531  0025  3441               	retlw	65	;'A'
   532  0026  3479               	retlw	121	;'y'
   533  0027  343A               	retlw	58	;':'
   534  0028  3420               	retlw	32	;' '
   535  0029  3425               	retlw	37	;'%'
   536  002A  3469               	retlw	105	;'i'
   537  002B  3420               	retlw	32	;' '
   538  002C  3400               	retlw	0
   539  002D                     STR_3:
   540  002D  3441               	retlw	65	;'A'
   541  002E  347A               	retlw	122	;'z'
   542  002F  343A               	retlw	58	;':'
   543  0030  3420               	retlw	32	;' '
   544  0031  3425               	retlw	37	;'%'
   545  0032  3469               	retlw	105	;'i'
   546  0033  3420               	retlw	32	;' '
   547  0034  3400               	retlw	0
   548                           
   549                           	psect	cinit
   550  07FC                     start_initialization:	
   551                           ; #config settings
   552                           
   553  07FC                     __initialization:
   554  07FC                     end_of_initialization:	
   555                           ;End of C runtime variable initialization code
   556                           
   557  07FC                     __end_of__initialization:
   558  07FC  0183               	clrf	3
   559  07FD  120A  118A  2E8B   	ljmp	_main	;jump to C main() function
   560                           
   561                           	psect	cstackCOMMON
   562  0070                     __pcstackCOMMON:
   563  0070                     ?_I2C_Master_Write:
   564  0070                     ??_I2C_Master_Write:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_confMPU:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_UARTSendChar:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ??_UARTSendChar:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_I2C_Master_Init:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ??_I2C_Master_Init:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_I2C_Master_Wait:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ??_I2C_Master_Wait:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_I2C_Master_Start:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ??_I2C_Master_Start:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_I2C_Start:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_I2C_Master_RepeatedStart:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ??_I2C_Master_RepeatedStart:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_I2C_Master_Stop:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ??_I2C_Master_Stop:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_I2C_ACK:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ??_I2C_ACK:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_I2C_NACK:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ??_I2C_NACK:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_I2C_Read:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ??_I2C_Read:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_main:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?___lwdiv:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?___lldiv:	
   634                           ; 2 bytes @ 0x0
   635                           
   636  0070                     I2C_Master_Write@data:	
   637                           ; 4 bytes @ 0x0
   638                           
   639  0070                     UARTSendChar@c:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ___lwdiv@divisor:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ___lldiv@divisor:	
   646                           ; 2 bytes @ 0x0
   647                           
   648                           
   649                           ; 4 bytes @ 0x0
   650  0070                     	ds	1
   651  0071                     ??_confMPU:
   652  0071                     ?_UARTSendString:	
   653                           ; 1 bytes @ 0x1
   654                           
   655  0071                     ??_I2C_Start:	
   656                           ; 1 bytes @ 0x1
   657                           
   658  0071                     I2C_Start@add:	
   659                           ; 1 bytes @ 0x1
   660                           
   661  0071                     I2C_Read@ACK_NACK:	
   662                           ; 1 bytes @ 0x1
   663                           
   664  0071                     UARTSendString@max_length:	
   665                           ; 1 bytes @ 0x1
   666                           
   667                           
   668                           ; 1 bytes @ 0x1
   669  0071                     	ds	1
   670  0072                     ??_UARTSendString:
   671  0072                     I2C_Read@Data:	
   672                           ; 1 bytes @ 0x2
   673                           
   674  0072                     ___lwdiv@dividend:	
   675                           ; 1 bytes @ 0x2
   676                           
   677                           
   678                           ; 2 bytes @ 0x2
   679  0072                     	ds	1
   680  0073                     UARTSendString@i:
   681                           
   682                           ; 2 bytes @ 0x3
   683  0073                     	ds	1
   684  0074                     ??___lwdiv:
   685  0074                     ___lldiv@dividend:	
   686                           ; 1 bytes @ 0x4
   687                           
   688                           
   689                           ; 4 bytes @ 0x4
   690  0074                     	ds	1
   691  0075                     UARTSendString@str:
   692  0075                     ___lwdiv@quotient:	
   693                           ; 1 bytes @ 0x5
   694                           
   695                           
   696                           ; 2 bytes @ 0x5
   697  0075                     	ds	2
   698  0077                     ___lwdiv@counter:
   699                           
   700                           ; 1 bytes @ 0x7
   701  0077                     	ds	1
   702  0078                     ??___lldiv:
   703  0078                     ?___lwmod:	
   704                           ; 1 bytes @ 0x8
   705                           
   706  0078                     ___lwmod@divisor:	
   707                           ; 2 bytes @ 0x8
   708                           
   709                           
   710                           ; 2 bytes @ 0x8
   711  0078                     	ds	1
   712  0079                     ___lldiv@quotient:
   713                           
   714                           ; 4 bytes @ 0x9
   715  0079                     	ds	1
   716  007A                     ___lwmod@dividend:
   717                           
   718                           ; 2 bytes @ 0xA
   719  007A                     	ds	2
   720  007C                     ??___lwmod:
   721                           
   722                           ; 1 bytes @ 0xC
   723  007C                     	ds	1
   724  007D                     ___lldiv@counter:
   725  007D                     ___lwmod@counter:	
   726                           ; 1 bytes @ 0xD
   727                           
   728                           
   729                           ; 1 bytes @ 0xD
   730  007D                     	ds	1
   731                           
   732                           	psect	cstackBANK0
   733  0020                     __pcstackBANK0:
   734  0020                     ?_UARTInit:
   735  0020                     ?_sprintf:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0020                     sprintf@f:	
   739                           ; 2 bytes @ 0x0
   740                           
   741  0020                     UARTInit@baud_rate:	
   742                           ; 1 bytes @ 0x0
   743                           
   744                           
   745                           ; 4 bytes @ 0x0
   746  0020                     	ds	3
   747  0023                     ??_sprintf:
   748                           
   749                           ; 1 bytes @ 0x3
   750  0023                     	ds	1
   751  0024                     UARTInit@BRGH:
   752                           
   753                           ; 1 bytes @ 0x4
   754  0024                     	ds	1
   755  0025                     ??_UARTInit:
   756                           
   757                           ; 1 bytes @ 0x5
   758  0025                     	ds	1
   759  0026                     sprintf@ap:
   760                           
   761                           ; 1 bytes @ 0x6
   762  0026                     	ds	1
   763  0027                     sprintf@flag:
   764                           
   765                           ; 1 bytes @ 0x7
   766  0027                     	ds	1
   767  0028                     sprintf@prec:
   768                           
   769                           ; 1 bytes @ 0x8
   770  0028                     	ds	1
   771  0029                     sprintf@val:
   772                           
   773                           ; 2 bytes @ 0x9
   774  0029                     	ds	2
   775  002B                     sprintf@sp:
   776                           
   777                           ; 1 bytes @ 0xB
   778  002B                     	ds	1
   779  002C                     sprintf@c:
   780                           
   781                           ; 1 bytes @ 0xC
   782  002C                     	ds	1
   783  002D                     ??_main:
   784                           
   785                           ; 1 bytes @ 0xD
   786  002D                     	ds	4
   787  0031                     main@buffer:
   788                           
   789                           ; 25 bytes @ 0x11
   790  0031                     	ds	25
   791  004A                     main@val:
   792                           
   793                           ; 1 bytes @ 0x2A
   794  004A                     	ds	1
   795  004B                     main@valorx:
   796                           
   797                           ; 2 bytes @ 0x2B
   798  004B                     	ds	2
   799  004D                     main@valory:
   800                           
   801                           ; 2 bytes @ 0x2D
   802  004D                     	ds	2
   803  004F                     main@valorz:
   804                           
   805                           ; 2 bytes @ 0x2F
   806  004F                     	ds	2
   807  0051                     main@temp:
   808                           
   809                           ; 2 bytes @ 0x31
   810  0051                     	ds	2
   811  0053                     main@valores:
   812                           
   813                           ; 8 bytes @ 0x33
   814  0053                     	ds	8
   815  005B                     main@i:
   816                           
   817                           ; 2 bytes @ 0x3B
   818  005B                     	ds	2
   819                           
   820                           	psect	maintext
   821  068B                     __pmaintext:	
   822 ;;
   823 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   824 ;;
   825 ;; *************** function _main *****************
   826 ;; Defined at:
   827 ;;		line 34 in file "main.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  i               2   59[BANK0 ] int 
   832 ;;  buffer         25   17[BANK0 ] unsigned char [25]
   833 ;;  valores         8   51[BANK0 ] unsigned char [8]
   834 ;;  temp            2   49[BANK0 ] int 
   835 ;;  valorz          2   47[BANK0 ] int 
   836 ;;  valory          2   45[BANK0 ] int 
   837 ;;  valorx          2   43[BANK0 ] int 
   838 ;;  val             1   42[BANK0 ] unsigned char 
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   843 ;; Tracked objects:
   844 ;;		On entry : B00/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   848 ;;      Params:         0       0       0       0       0
   849 ;;      Locals:         0      44       0       0       0
   850 ;;      Temps:          0       4       0       0       0
   851 ;;      Totals:         0      48       0       0       0
   852 ;;Total ram usage:       48 bytes
   853 ;; Hardware stack levels required when called:    3
   854 ;; This function calls:
   855 ;;		_I2C_Master_Init
   856 ;;		_I2C_Master_RepeatedStart
   857 ;;		_I2C_Master_Stop
   858 ;;		_I2C_Master_Write
   859 ;;		_I2C_Read
   860 ;;		_I2C_Start
   861 ;;		_UARTInit
   862 ;;		_UARTSendChar
   863 ;;		_UARTSendString
   864 ;;		_confMPU
   865 ;;		_sprintf
   866 ;; This function is called by:
   867 ;;		Startup code after reset
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           
   872                           ;psect for function _main
   873  068B                     _main:
   874  068B                     l1441:	
   875                           ;incstack = 0
   876                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   877                           
   878                           
   879                           ;main.c: 35:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   880  068B  3006               	movlw	6
   881  068C  1283               	bcf	3,5	;RP0=0, select bank0
   882  068D  1303               	bcf	3,6	;RP1=0, select bank0
   883  068E  00AF               	movwf	??_main+2
   884  068F  3013               	movlw	19
   885  0690  00AE               	movwf	??_main+1
   886  0691  30AD               	movlw	173
   887  0692  00AD               	movwf	??_main
   888  0693                     u1007:
   889  0693  0BAD               	decfsz	??_main,f
   890  0694  2E93               	goto	u1007
   891  0695  0BAE               	decfsz	??_main+1,f
   892  0696  2E93               	goto	u1007
   893  0697  0BAF               	decfsz	??_main+2,f
   894  0698  2E93               	goto	u1007
   895  0699                     l1443:
   896                           
   897                           ;main.c: 36:     ANSEL = 0;
   898  0699  1683               	bsf	3,5	;RP0=1, select bank3
   899  069A  1703               	bsf	3,6	;RP1=1, select bank3
   900  069B  0188               	clrf	8	;volatile
   901  069C                     l1445:
   902                           
   903                           ;main.c: 37:     TRISA = 0;
   904  069C  1683               	bsf	3,5	;RP0=1, select bank1
   905  069D  1303               	bcf	3,6	;RP1=0, select bank1
   906  069E  0185               	clrf	5	;volatile
   907  069F                     l1447:
   908                           
   909                           ;main.c: 38:     PORTA = 0;
   910  069F  1283               	bcf	3,5	;RP0=0, select bank0
   911  06A0  1303               	bcf	3,6	;RP1=0, select bank0
   912  06A1  0185               	clrf	5	;volatile
   913  06A2                     l1449:
   914                           
   915                           ;main.c: 39:     char buffer[25];;main.c: 41:     I2C_Master_Init();
   916  06A2  120A  118A  22FB  120A  118A  	fcall	_I2C_Master_Init
   917  06A7                     l1451:
   918                           
   919                           ;main.c: 42:     UARTInit(9600,1);
   920  06A7  3000               	movlw	0
   921  06A8  1283               	bcf	3,5	;RP0=0, select bank0
   922  06A9  1303               	bcf	3,6	;RP1=0, select bank0
   923  06AA  00A3               	movwf	UARTInit@baud_rate+3
   924  06AB  3000               	movlw	0
   925  06AC  00A2               	movwf	UARTInit@baud_rate+2
   926  06AD  3025               	movlw	37
   927  06AE  00A1               	movwf	UARTInit@baud_rate+1
   928  06AF  3080               	movlw	128
   929  06B0  00A0               	movwf	UARTInit@baud_rate
   930  06B1  01A4               	clrf	UARTInit@BRGH
   931  06B2  0AA4               	incf	UARTInit@BRGH,f
   932  06B3  120A  118A  2475  120A  118A  	fcall	_UARTInit
   933  06B8                     l1453:
   934                           
   935                           ;main.c: 43:     uint8_t val= 1;
   936  06B8  1283               	bcf	3,5	;RP0=0, select bank0
   937  06B9  1303               	bcf	3,6	;RP1=0, select bank0
   938  06BA  01CA               	clrf	main@val
   939  06BB  0ACA               	incf	main@val,f
   940  06BC                     l1455:
   941                           
   942                           ;main.c: 44:     confMPU();
   943  06BC  120A  118A  24E4  120A  118A  	fcall	_confMPU
   944  06C1                     l1457:
   945                           
   946                           ;main.c: 48:         I2C_Start(0xD0);
   947  06C1  30D0               	movlw	208
   948  06C2  120A  118A  2325  120A  118A  	fcall	_I2C_Start
   949  06C7                     l128:	
   950                           ;main.c: 49:         while(SSPCON2bits.ACKSTAT);
   951                           
   952  06C7  1683               	bsf	3,5	;RP0=1, select bank1
   953  06C8  1303               	bcf	3,6	;RP1=0, select bank1
   954  06C9  1B11               	btfsc	17,6	;volatile
   955  06CA  2ECC               	goto	u951
   956  06CB  2ECD               	goto	u950
   957  06CC                     u951:
   958  06CC  2EC7               	goto	l128
   959  06CD                     u950:
   960  06CD                     l1459:
   961                           
   962                           ;main.c: 50:         I2C_Master_Write(0x3B);
   963  06CD  303B               	movlw	59
   964  06CE  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
   965  06D3                     l131:	
   966                           ;main.c: 51:         while(SSPCON2bits.ACKSTAT);
   967                           
   968  06D3  1683               	bsf	3,5	;RP0=1, select bank1
   969  06D4  1303               	bcf	3,6	;RP1=0, select bank1
   970  06D5  1B11               	btfsc	17,6	;volatile
   971  06D6  2ED8               	goto	u961
   972  06D7  2ED9               	goto	u960
   973  06D8                     u961:
   974  06D8  2ED3               	goto	l131
   975  06D9                     u960:
   976  06D9                     l1461:
   977                           
   978                           ;main.c: 69:         I2C_Start(0xD0);
   979  06D9  30D0               	movlw	208
   980  06DA  120A  118A  2325  120A  118A  	fcall	_I2C_Start
   981  06DF                     l134:	
   982                           ;main.c: 70:         while(SSPCON2bits.ACKSTAT);
   983                           
   984  06DF  1683               	bsf	3,5	;RP0=1, select bank1
   985  06E0  1303               	bcf	3,6	;RP1=0, select bank1
   986  06E1  1B11               	btfsc	17,6	;volatile
   987  06E2  2EE4               	goto	u971
   988  06E3  2EE5               	goto	u970
   989  06E4                     u971:
   990  06E4  2EDF               	goto	l134
   991  06E5                     u970:
   992  06E5                     l1463:
   993                           
   994                           ;main.c: 71:         I2C_Master_Write(0x3B);
   995  06E5  303B               	movlw	59
   996  06E6  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
   997  06EB                     l137:	
   998                           ;main.c: 72:         while(SSPCON2bits.ACKSTAT);
   999                           
  1000  06EB  1683               	bsf	3,5	;RP0=1, select bank1
  1001  06EC  1303               	bcf	3,6	;RP1=0, select bank1
  1002  06ED  1B11               	btfsc	17,6	;volatile
  1003  06EE  2EF0               	goto	u981
  1004  06EF  2EF1               	goto	u980
  1005  06F0                     u981:
  1006  06F0  2EEB               	goto	l137
  1007  06F1                     u980:
  1008  06F1                     l1465:
  1009                           
  1010                           ;main.c: 73:         I2C_Master_RepeatedStart();
  1011  06F1  120A  118A  22C2  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1012                           
  1013                           ;main.c: 74:         I2C_Master_Write(0xD1);
  1014  06F6  30D1               	movlw	209
  1015  06F7  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
  1016  06FC                     l1467:
  1017                           
  1018                           ;main.c: 75:         for (int i= 0; i<7;i++) valores[i] = I2C_Read(0);
  1019  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1020  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1021  06FE  01DB               	clrf	main@i
  1022  06FF  01DC               	clrf	main@i+1
  1023  0700                     l1473:
  1024  0700  3000               	movlw	0
  1025  0701  120A  118A  2335  120A  118A  	fcall	_I2C_Read
  1026  0706  1283               	bcf	3,5	;RP0=0, select bank0
  1027  0707  1303               	bcf	3,6	;RP1=0, select bank0
  1028  0708  00AD               	movwf	??_main
  1029  0709  085B               	movf	main@i,w
  1030  070A  3E53               	addlw	(low (main@valores| 0))& (0+255)
  1031  070B  0084               	movwf	4
  1032  070C  082D               	movf	??_main,w
  1033  070D  1383               	bcf	3,7	;select IRP bank0
  1034  070E  0080               	movwf	0
  1035  070F                     l1475:
  1036  070F  3001               	movlw	1
  1037  0710  07DB               	addwf	main@i,f
  1038  0711  1803               	skipnc
  1039  0712  0ADC               	incf	main@i+1,f
  1040  0713  3000               	movlw	0
  1041  0714  07DC               	addwf	main@i+1,f
  1042  0715                     l1477:
  1043  0715  085C               	movf	main@i+1,w
  1044  0716  3A80               	xorlw	128
  1045  0717  00FF               	movwf	btemp+1
  1046  0718  3080               	movlw	128
  1047  0719  027F               	subwf	btemp+1,w
  1048  071A  1D03               	skipz
  1049  071B  2F1E               	goto	u995
  1050  071C  3007               	movlw	7
  1051  071D  025B               	subwf	main@i,w
  1052  071E                     u995:
  1053  071E  1C03               	skipc
  1054  071F  2F21               	goto	u991
  1055  0720  2F22               	goto	u990
  1056  0721                     u991:
  1057  0721  2F00               	goto	l1473
  1058  0722                     u990:
  1059  0722                     l1479:
  1060                           
  1061                           ;main.c: 76:         valores[7] = I2C_Read(1);
  1062  0722  3001               	movlw	1
  1063  0723  120A  118A  2335  120A  118A  	fcall	_I2C_Read
  1064  0728  1283               	bcf	3,5	;RP0=0, select bank0
  1065  0729  1303               	bcf	3,6	;RP1=0, select bank0
  1066  072A  00AD               	movwf	??_main
  1067  072B  082D               	movf	??_main,w
  1068  072C  00DA               	movwf	main@valores+7
  1069                           
  1070                           ;main.c: 77:         I2C_Master_Stop();
  1071  072D  120A  118A  22E6  120A  118A  	fcall	_I2C_Master_Stop
  1072  0732                     l1481:
  1073                           
  1074                           ;main.c: 80:         valorx = ((int) valores[0] << 8 ) | ((int) valores[1] );
  1075  0732  1283               	bcf	3,5	;RP0=0, select bank0
  1076  0733  1303               	bcf	3,6	;RP1=0, select bank0
  1077  0734  0854               	movf	main@valores+1,w
  1078  0735  00AD               	movwf	??_main
  1079  0736  01AE               	clrf	??_main+1
  1080  0737  0853               	movf	main@valores,w
  1081  0738  00AF               	movwf	??_main+2
  1082  0739  01B0               	clrf	??_main+3
  1083  073A  082F               	movf	??_main+2,w
  1084  073B  00B0               	movwf	??_main+3
  1085  073C  01AF               	clrf	??_main+2
  1086  073D  082D               	movf	??_main,w
  1087  073E  042F               	iorwf	??_main+2,w
  1088  073F  00CB               	movwf	main@valorx
  1089  0740  082E               	movf	??_main+1,w
  1090  0741  0430               	iorwf	??_main+3,w
  1091  0742  00CC               	movwf	main@valorx+1
  1092  0743                     l1483:
  1093                           
  1094                           ;main.c: 81:         valory = ((int) valores[2] << 8 ) | ((int) valores[3] );
  1095  0743  0856               	movf	main@valores+3,w
  1096  0744  00AD               	movwf	??_main
  1097  0745  01AE               	clrf	??_main+1
  1098  0746  0855               	movf	main@valores+2,w
  1099  0747  00AF               	movwf	??_main+2
  1100  0748  01B0               	clrf	??_main+3
  1101  0749  082F               	movf	??_main+2,w
  1102  074A  00B0               	movwf	??_main+3
  1103  074B  01AF               	clrf	??_main+2
  1104  074C  082D               	movf	??_main,w
  1105  074D  042F               	iorwf	??_main+2,w
  1106  074E  00CD               	movwf	main@valory
  1107  074F  082E               	movf	??_main+1,w
  1108  0750  0430               	iorwf	??_main+3,w
  1109  0751  00CE               	movwf	main@valory+1
  1110  0752                     l1485:
  1111                           
  1112                           ;main.c: 82:         valorz = ((int) valores[4] << 8 ) | ((int) valores[5] );
  1113  0752  0858               	movf	main@valores+5,w
  1114  0753  00AD               	movwf	??_main
  1115  0754  01AE               	clrf	??_main+1
  1116  0755  0857               	movf	main@valores+4,w
  1117  0756  00AF               	movwf	??_main+2
  1118  0757  01B0               	clrf	??_main+3
  1119  0758  082F               	movf	??_main+2,w
  1120  0759  00B0               	movwf	??_main+3
  1121  075A  01AF               	clrf	??_main+2
  1122  075B  082D               	movf	??_main,w
  1123  075C  042F               	iorwf	??_main+2,w
  1124  075D  00CF               	movwf	main@valorz
  1125  075E  082E               	movf	??_main+1,w
  1126  075F  0430               	iorwf	??_main+3,w
  1127  0760  00D0               	movwf	main@valorz+1
  1128  0761                     l1487:
  1129                           
  1130                           ;main.c: 83:         temp = ((int) valores[6] << 8 ) | ((int) valores[7] );
  1131  0761  085A               	movf	main@valores+7,w
  1132  0762  00AD               	movwf	??_main
  1133  0763  01AE               	clrf	??_main+1
  1134  0764  0859               	movf	main@valores+6,w
  1135  0765  00AF               	movwf	??_main+2
  1136  0766  01B0               	clrf	??_main+3
  1137  0767  082F               	movf	??_main+2,w
  1138  0768  00B0               	movwf	??_main+3
  1139  0769  01AF               	clrf	??_main+2
  1140  076A  082D               	movf	??_main,w
  1141  076B  042F               	iorwf	??_main+2,w
  1142  076C  00D1               	movwf	main@temp
  1143  076D  082E               	movf	??_main+1,w
  1144  076E  0430               	iorwf	??_main+3,w
  1145  076F  00D2               	movwf	main@temp+1
  1146  0770                     l1489:
  1147                           
  1148                           ;main.c: 84:         sprintf(buffer,"Ax: %i ",valorx);
  1149  0770  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1150  0771  00AD               	movwf	??_main
  1151  0772  082D               	movf	??_main,w
  1152  0773  00A0               	movwf	sprintf@f
  1153  0774  084C               	movf	main@valorx+1,w
  1154  0775  00A2               	movwf	?_sprintf+2
  1155  0776  084B               	movf	main@valorx,w
  1156  0777  00A1               	movwf	?_sprintf+1
  1157  0778  3031               	movlw	(low (main@buffer| 0))& (0+255)
  1158  0779  120A  118A  25A3  120A  118A  	fcall	_sprintf
  1159  077E                     l1491:
  1160                           
  1161                           ;main.c: 85:         UARTSendString(buffer,15);
  1162  077E  300F               	movlw	15
  1163  077F  1283               	bcf	3,5	;RP0=0, select bank0
  1164  0780  1303               	bcf	3,6	;RP1=0, select bank0
  1165  0781  00AD               	movwf	??_main
  1166  0782  082D               	movf	??_main,w
  1167  0783  00F1               	movwf	UARTSendString@max_length
  1168  0784  3031               	movlw	(low (main@buffer| 0))& (0+255)
  1169  0785  120A  118A  2361  120A  118A  	fcall	_UARTSendString
  1170  078A                     l1493:
  1171                           
  1172                           ;main.c: 86:         sprintf(buffer,"Ay: %i ",valory);
  1173  078A  301D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1174  078B  1283               	bcf	3,5	;RP0=0, select bank0
  1175  078C  1303               	bcf	3,6	;RP1=0, select bank0
  1176  078D  00AD               	movwf	??_main
  1177  078E  082D               	movf	??_main,w
  1178  078F  00A0               	movwf	sprintf@f
  1179  0790  084E               	movf	main@valory+1,w
  1180  0791  00A2               	movwf	?_sprintf+2
  1181  0792  084D               	movf	main@valory,w
  1182  0793  00A1               	movwf	?_sprintf+1
  1183  0794  3031               	movlw	(low (main@buffer| 0))& (0+255)
  1184  0795  120A  118A  25A3  120A  118A  	fcall	_sprintf
  1185  079A                     l1495:
  1186                           
  1187                           ;main.c: 87:         UARTSendString(buffer,15);
  1188  079A  300F               	movlw	15
  1189  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1190  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1191  079D  00AD               	movwf	??_main
  1192  079E  082D               	movf	??_main,w
  1193  079F  00F1               	movwf	UARTSendString@max_length
  1194  07A0  3031               	movlw	(low (main@buffer| 0))& (0+255)
  1195  07A1  120A  118A  2361  120A  118A  	fcall	_UARTSendString
  1196  07A6                     l1497:
  1197                           
  1198                           ;main.c: 88:         sprintf(buffer,"Az: %i ",valorz);
  1199  07A6  3025               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1200  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1201  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1202  07A9  00AD               	movwf	??_main
  1203  07AA  082D               	movf	??_main,w
  1204  07AB  00A0               	movwf	sprintf@f
  1205  07AC  0850               	movf	main@valorz+1,w
  1206  07AD  00A2               	movwf	?_sprintf+2
  1207  07AE  084F               	movf	main@valorz,w
  1208  07AF  00A1               	movwf	?_sprintf+1
  1209  07B0  3031               	movlw	(low (main@buffer| 0))& (0+255)
  1210  07B1  120A  118A  25A3  120A  118A  	fcall	_sprintf
  1211  07B6                     l1499:
  1212                           
  1213                           ;main.c: 89:         UARTSendString(buffer,15);
  1214  07B6  300F               	movlw	15
  1215  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  1216  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  1217  07B9  00AD               	movwf	??_main
  1218  07BA  082D               	movf	??_main,w
  1219  07BB  00F1               	movwf	UARTSendString@max_length
  1220  07BC  3031               	movlw	(low (main@buffer| 0))& (0+255)
  1221  07BD  120A  118A  2361  120A  118A  	fcall	_UARTSendString
  1222  07C2                     l1501:
  1223                           
  1224                           ;main.c: 90:         sprintf(buffer,"Temp: %i ",temp);
  1225  07C2  300B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1226  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  1227  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  1228  07C5  00AD               	movwf	??_main
  1229  07C6  082D               	movf	??_main,w
  1230  07C7  00A0               	movwf	sprintf@f
  1231  07C8  0852               	movf	main@temp+1,w
  1232  07C9  00A2               	movwf	?_sprintf+2
  1233  07CA  0851               	movf	main@temp,w
  1234  07CB  00A1               	movwf	?_sprintf+1
  1235  07CC  3031               	movlw	(low (main@buffer| 0))& (0+255)
  1236  07CD  120A  118A  25A3  120A  118A  	fcall	_sprintf
  1237  07D2                     l1503:
  1238                           
  1239                           ;main.c: 91:         UARTSendString(buffer,15);
  1240  07D2  300F               	movlw	15
  1241  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  1242  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  1243  07D5  00AD               	movwf	??_main
  1244  07D6  082D               	movf	??_main,w
  1245  07D7  00F1               	movwf	UARTSendString@max_length
  1246  07D8  3031               	movlw	(low (main@buffer| 0))& (0+255)
  1247  07D9  120A  118A  2361  120A  118A  	fcall	_UARTSendString
  1248                           
  1249                           ;main.c: 92:         UARTSendChar('\n');
  1250  07DE  300A               	movlw	10
  1251  07DF  120A  118A  22EF  120A  118A  	fcall	_UARTSendChar
  1252  07E4                     l1505:
  1253                           
  1254                           ;main.c: 93:         _delay((unsigned long)((250)*(4000000/4000.0)));
  1255  07E4  3002               	movlw	2
  1256  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  1257  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  1258  07E7  00AF               	movwf	??_main+2
  1259  07E8  3045               	movlw	69
  1260  07E9  00AE               	movwf	??_main+1
  1261  07EA  30A9               	movlw	169
  1262  07EB  00AD               	movwf	??_main
  1263  07EC                     u1017:
  1264  07EC  0BAD               	decfsz	??_main,f
  1265  07ED  2FEC               	goto	u1017
  1266  07EE  0BAE               	decfsz	??_main+1,f
  1267  07EF  2FEC               	goto	u1017
  1268  07F0  0BAF               	decfsz	??_main+2,f
  1269  07F1  2FEC               	goto	u1017
  1270  07F2                     l1507:
  1271                           
  1272                           ;main.c: 94:         val++;
  1273  07F2  3001               	movlw	1
  1274  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  1275  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  1276  07F5  00AD               	movwf	??_main
  1277  07F6  082D               	movf	??_main,w
  1278  07F7  07CA               	addwf	main@val,f
  1279  07F8  2EC1               	goto	l1457
  1280  07F9  120A  118A  2800   	ljmp	start
  1281  07FC                     __end_of_main:
  1282                           
  1283                           	psect	text1
  1284  05A3                     __ptext1:	
  1285 ;; *************** function _sprintf *****************
  1286 ;; Defined at:
  1287 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  sp              1    wreg     PTR unsigned char 
  1290 ;;		 -> main@buffer(25), 
  1291 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1292 ;;		 -> STR_4(10), STR_3(8), STR_2(8), STR_1(8), 
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1295 ;;		 -> main@buffer(25), 
  1296 ;;  tmpval          4    0        struct .
  1297 ;;  val             2    9[BANK0 ] unsigned int 
  1298 ;;  cp              2    0        PTR const unsigned char 
  1299 ;;  len             2    0        unsigned int 
  1300 ;;  c               1   12[BANK0 ] unsigned char 
  1301 ;;  prec            1    8[BANK0 ] char 
  1302 ;;  flag            1    7[BANK0 ] unsigned char 
  1303 ;;  ap              1    6[BANK0 ] PTR void [1]
  1304 ;;		 -> ?_sprintf(2), 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  2    0[BANK0 ] int 
  1307 ;; Registers used:
  1308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1314 ;;      Params:         0       3       0       0       0
  1315 ;;      Locals:         0       7       0       0       0
  1316 ;;      Temps:          0       3       0       0       0
  1317 ;;      Totals:         0      13       0       0       0
  1318 ;;Total ram usage:       13 bytes
  1319 ;; Hardware stack levels used:    1
  1320 ;; Hardware stack levels required when called:    1
  1321 ;; This function calls:
  1322 ;;		___lwdiv
  1323 ;;		___lwmod
  1324 ;; This function is called by:
  1325 ;;		_main
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           
  1330                           ;psect for function _sprintf
  1331  05A3                     _sprintf:
  1332                           
  1333                           ;incstack = 0
  1334                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1335                           ;sprintf@sp stored from wreg
  1336  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  1337  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  1338  05A5  00AB               	movwf	sprintf@sp
  1339  05A6                     l1359:
  1340                           
  1341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1342  05A6  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1343  05A7  00A3               	movwf	??_sprintf
  1344  05A8  0823               	movf	??_sprintf,w
  1345  05A9  00A6               	movwf	sprintf@ap
  1346                           
  1347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1348  05AA  2E74               	goto	l1411
  1349  05AB                     l1361:
  1350                           
  1351                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1352  05AB  3025               	movlw	37
  1353  05AC  062C               	xorwf	sprintf@c,w
  1354  05AD  1903               	btfsc	3,2
  1355  05AE  2DB0               	goto	u851
  1356  05AF  2DB1               	goto	u850
  1357  05B0                     u851:
  1358  05B0  2DBD               	goto	l1367
  1359  05B1                     u850:
  1360  05B1                     l1363:
  1361                           
  1362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1363  05B1  082C               	movf	sprintf@c,w
  1364  05B2  00A3               	movwf	??_sprintf
  1365  05B3  082B               	movf	sprintf@sp,w
  1366  05B4  0084               	movwf	4
  1367  05B5  0823               	movf	??_sprintf,w
  1368  05B6  1383               	bcf	3,7	;select IRP bank0
  1369  05B7  0080               	movwf	0
  1370  05B8                     l1365:
  1371  05B8  3001               	movlw	1
  1372  05B9  00A3               	movwf	??_sprintf
  1373  05BA  0823               	movf	??_sprintf,w
  1374  05BB  07AB               	addwf	sprintf@sp,f
  1375                           
  1376                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1377  05BC  2E74               	goto	l1411
  1378  05BD                     l1367:
  1379                           
  1380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1381  05BD  01A7               	clrf	sprintf@flag
  1382  05BE                     l1371:	
  1383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1384                           
  1385  05BE  3001               	movlw	1
  1386  05BF  07A0               	addwf	sprintf@f,f
  1387  05C0  30FF               	movlw	-1
  1388  05C1  0720               	addwf	sprintf@f,w
  1389  05C2  0084               	movwf	4
  1390  05C3  120A  118A  2003  120A  118A  	fcall	stringdir
  1391  05C8  00AC               	movwf	sprintf@c
  1392  05C9  00A3               	movwf	??_sprintf
  1393  05CA  01A4               	clrf	??_sprintf+1
  1394                           
  1395                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1396                           ; Switch size 1, requested type "simple"
  1397                           ; Number of cases is 1, Range of values is 0 to 0
  1398                           ; switch strategies available:
  1399                           ; Name         Instructions Cycles
  1400                           ; simple_byte            4     3 (average)
  1401                           ; direct_byte           11     8 (fixed)
  1402                           ; jumptable            260     6 (fixed)
  1403                           ;	Chosen strategy is simple_byte
  1404  05CB  0824               	movf	??_sprintf+1,w
  1405  05CC  3A00               	xorlw	0	; case 0
  1406  05CD  1903               	skipnz
  1407  05CE  2DD0               	goto	l1535
  1408  05CF  2E74               	goto	l1411
  1409  05D0                     l1535:
  1410                           
  1411                           ; Switch size 1, requested type "simple"
  1412                           ; Number of cases is 3, Range of values is 0 to 105
  1413                           ; switch strategies available:
  1414                           ; Name         Instructions Cycles
  1415                           ; simple_byte           10     6 (average)
  1416                           ; jumptable            260     6 (fixed)
  1417                           ;	Chosen strategy is simple_byte
  1418  05D0  0823               	movf	??_sprintf,w
  1419  05D1  3A00               	xorlw	0	; case 0
  1420  05D2  1903               	skipnz
  1421  05D3  2E86               	goto	l1413
  1422  05D4  3A64               	xorlw	100	; case 100
  1423  05D5  1903               	skipnz
  1424  05D6  2DDB               	goto	l1373
  1425  05D7  3A0D               	xorlw	13	; case 105
  1426  05D8  1903               	skipnz
  1427  05D9  2DDB               	goto	l1373
  1428  05DA  2E74               	goto	l1411
  1429  05DB                     l1373:
  1430                           
  1431                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1432  05DB  0826               	movf	sprintf@ap,w
  1433  05DC  0084               	movwf	4
  1434  05DD  1383               	bcf	3,7	;select IRP bank0
  1435  05DE  0800               	movf	0,w
  1436  05DF  00A9               	movwf	sprintf@val
  1437  05E0  0A84               	incf	4,f
  1438  05E1  0800               	movf	0,w
  1439  05E2  00AA               	movwf	sprintf@val+1
  1440  05E3                     l1375:
  1441  05E3  3002               	movlw	2
  1442  05E4  00A3               	movwf	??_sprintf
  1443  05E5  0823               	movf	??_sprintf,w
  1444  05E6  07A6               	addwf	sprintf@ap,f
  1445  05E7                     l1377:
  1446                           
  1447                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1448  05E7  1FAA               	btfss	sprintf@val+1,7
  1449  05E8  2DEA               	goto	u861
  1450  05E9  2DEB               	goto	u860
  1451  05EA                     u861:
  1452  05EA  2DF4               	goto	l1383
  1453  05EB                     u860:
  1454  05EB                     l1379:
  1455                           
  1456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1457  05EB  3003               	movlw	3
  1458  05EC  00A3               	movwf	??_sprintf
  1459  05ED  0823               	movf	??_sprintf,w
  1460  05EE  04A7               	iorwf	sprintf@flag,f
  1461  05EF                     l1381:
  1462                           
  1463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1464  05EF  09A9               	comf	sprintf@val,f
  1465  05F0  09AA               	comf	sprintf@val+1,f
  1466  05F1  0AA9               	incf	sprintf@val,f
  1467  05F2  1903               	skipnz
  1468  05F3  0AAA               	incf	sprintf@val+1,f
  1469  05F4                     l1383:
  1470                           
  1471                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1472  05F4  01AC               	clrf	sprintf@c
  1473  05F5  0AAC               	incf	sprintf@c,f
  1474  05F6                     l1389:
  1475                           
  1476                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1477  05F6  082C               	movf	sprintf@c,w
  1478  05F7  00A3               	movwf	??_sprintf
  1479  05F8  0723               	addwf	??_sprintf,w
  1480  05F9  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1481  05FA  0084               	movwf	4
  1482  05FB  120A  118A  2003  120A  118A  	fcall	stringdir
  1483  0600  00A4               	movwf	??_sprintf+1
  1484  0601  120A  118A  2003  120A  118A  	fcall	stringdir
  1485  0606  00A5               	movwf	??_sprintf+2
  1486  0607  0825               	movf	??_sprintf+2,w
  1487  0608  022A               	subwf	sprintf@val+1,w
  1488  0609  1D03               	skipz
  1489  060A  2E0D               	goto	u875
  1490  060B  0824               	movf	??_sprintf+1,w
  1491  060C  0229               	subwf	sprintf@val,w
  1492  060D                     u875:
  1493  060D  1803               	skipnc
  1494  060E  2E10               	goto	u871
  1495  060F  2E11               	goto	u870
  1496  0610                     u871:
  1497  0610  2E12               	goto	l1393
  1498  0611                     u870:
  1499  0611  2E1C               	goto	l1395
  1500  0612                     l1393:
  1501  0612  3001               	movlw	1
  1502  0613  00A3               	movwf	??_sprintf
  1503  0614  0823               	movf	??_sprintf,w
  1504  0615  07AC               	addwf	sprintf@c,f
  1505  0616  3005               	movlw	5
  1506  0617  062C               	xorwf	sprintf@c,w
  1507  0618  1D03               	btfss	3,2
  1508  0619  2E1B               	goto	u881
  1509  061A  2E1C               	goto	u880
  1510  061B                     u881:
  1511  061B  2DF6               	goto	l1389
  1512  061C                     u880:
  1513  061C                     l1395:
  1514                           
  1515                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1516  061C  0827               	movf	sprintf@flag,w
  1517  061D  3903               	andlw	3
  1518  061E  1903               	btfsc	3,2
  1519  061F  2E21               	goto	u891
  1520  0620  2E22               	goto	u890
  1521  0621                     u891:
  1522  0621  2E2D               	goto	l1401
  1523  0622                     u890:
  1524  0622                     l1397:
  1525                           
  1526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1527  0622  302D               	movlw	45
  1528  0623  00A3               	movwf	??_sprintf
  1529  0624  082B               	movf	sprintf@sp,w
  1530  0625  0084               	movwf	4
  1531  0626  0823               	movf	??_sprintf,w
  1532  0627  1383               	bcf	3,7	;select IRP bank0
  1533  0628  0080               	movwf	0
  1534  0629                     l1399:
  1535  0629  3001               	movlw	1
  1536  062A  00A3               	movwf	??_sprintf
  1537  062B  0823               	movf	??_sprintf,w
  1538  062C  07AB               	addwf	sprintf@sp,f
  1539  062D                     l1401:
  1540                           
  1541                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1542  062D  082C               	movf	sprintf@c,w
  1543  062E  00A3               	movwf	??_sprintf
  1544  062F  0823               	movf	??_sprintf,w
  1545  0630  00A8               	movwf	sprintf@prec
  1546                           
  1547                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1548  0631  2E6B               	goto	l1409
  1549  0632                     l1403:
  1550                           
  1551                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1552  0632  300A               	movlw	10
  1553  0633  00F8               	movwf	___lwmod@divisor
  1554  0634  3000               	movlw	0
  1555  0635  00F9               	movwf	___lwmod@divisor+1
  1556  0636  0828               	movf	sprintf@prec,w
  1557  0637  00A3               	movwf	??_sprintf
  1558  0638  0723               	addwf	??_sprintf,w
  1559  0639  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1560  063A  0084               	movwf	4
  1561  063B  120A  118A  2003  120A  118A  	fcall	stringdir
  1562  0640  00F0               	movwf	___lwdiv@divisor
  1563  0641  120A  118A  2003  120A  118A  	fcall	stringdir
  1564  0646  00F1               	movwf	___lwdiv@divisor+1
  1565  0647  082A               	movf	sprintf@val+1,w
  1566  0648  00F3               	movwf	___lwdiv@dividend+1
  1567  0649  0829               	movf	sprintf@val,w
  1568  064A  00F2               	movwf	___lwdiv@dividend
  1569  064B  120A  118A  23CB  120A  118A  	fcall	___lwdiv
  1570  0650  0871               	movf	?___lwdiv+1,w
  1571  0651  00FB               	movwf	___lwmod@dividend+1
  1572  0652  0870               	movf	?___lwdiv,w
  1573  0653  00FA               	movwf	___lwmod@dividend
  1574  0654  120A  118A  2391  120A  118A  	fcall	___lwmod
  1575  0659  0878               	movf	?___lwmod,w
  1576  065A  3E30               	addlw	48
  1577  065B  1283               	bcf	3,5	;RP0=0, select bank0
  1578  065C  1303               	bcf	3,6	;RP1=0, select bank0
  1579  065D  00A4               	movwf	??_sprintf+1
  1580  065E  0824               	movf	??_sprintf+1,w
  1581  065F  00AC               	movwf	sprintf@c
  1582  0660                     l1405:
  1583                           
  1584                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1585  0660  082C               	movf	sprintf@c,w
  1586  0661  00A3               	movwf	??_sprintf
  1587  0662  082B               	movf	sprintf@sp,w
  1588  0663  0084               	movwf	4
  1589  0664  0823               	movf	??_sprintf,w
  1590  0665  1383               	bcf	3,7	;select IRP bank0
  1591  0666  0080               	movwf	0
  1592  0667                     l1407:
  1593  0667  3001               	movlw	1
  1594  0668  00A3               	movwf	??_sprintf
  1595  0669  0823               	movf	??_sprintf,w
  1596  066A  07AB               	addwf	sprintf@sp,f
  1597  066B                     l1409:
  1598                           
  1599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1600  066B  30FF               	movlw	255
  1601  066C  00A3               	movwf	??_sprintf
  1602  066D  0823               	movf	??_sprintf,w
  1603  066E  07A8               	addwf	sprintf@prec,f
  1604  066F  0A28               	incf	sprintf@prec,w
  1605  0670  1D03               	btfss	3,2
  1606  0671  2E73               	goto	u901
  1607  0672  2E74               	goto	u900
  1608  0673                     u901:
  1609  0673  2E32               	goto	l1403
  1610  0674                     u900:
  1611  0674                     l1411:
  1612                           
  1613                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1614  0674  3001               	movlw	1
  1615  0675  07A0               	addwf	sprintf@f,f
  1616  0676  30FF               	movlw	-1
  1617  0677  0720               	addwf	sprintf@f,w
  1618  0678  0084               	movwf	4
  1619  0679  120A  118A  2003  120A  118A  	fcall	stringdir
  1620  067E  00A3               	movwf	??_sprintf
  1621  067F  0823               	movf	??_sprintf,w
  1622  0680  00AC               	movwf	sprintf@c
  1623  0681  082C               	movf	sprintf@c,w
  1624  0682  1D03               	btfss	3,2
  1625  0683  2E85               	goto	u911
  1626  0684  2E86               	goto	u910
  1627  0685                     u911:
  1628  0685  2DAB               	goto	l1361
  1629  0686                     u910:
  1630  0686                     l1413:
  1631                           
  1632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1633  0686  082B               	movf	sprintf@sp,w
  1634  0687  0084               	movwf	4
  1635  0688  1383               	bcf	3,7	;select IRP bank0
  1636  0689  0180               	clrf	0
  1637  068A                     l317:
  1638  068A  0008               	return
  1639  068B                     __end_of_sprintf:
  1640                           
  1641                           	psect	text2
  1642  0391                     __ptext2:	
  1643 ;; *************** function ___lwmod *****************
  1644 ;; Defined at:
  1645 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  divisor         2    8[COMMON] unsigned int 
  1648 ;;  dividend        2   10[COMMON] unsigned int 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  counter         1   13[COMMON] unsigned char 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  2    8[COMMON] unsigned int 
  1653 ;; Registers used:
  1654 ;;		wreg, status,2, status,0
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1660 ;;      Params:         4       0       0       0       0
  1661 ;;      Locals:         1       0       0       0       0
  1662 ;;      Temps:          1       0       0       0       0
  1663 ;;      Totals:         6       0       0       0       0
  1664 ;;Total ram usage:        6 bytes
  1665 ;; Hardware stack levels used:    1
  1666 ;; This function calls:
  1667 ;;		Nothing
  1668 ;; This function is called by:
  1669 ;;		_sprintf
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673                           
  1674                           ;psect for function ___lwmod
  1675  0391                     ___lwmod:
  1676  0391                     l1269:	
  1677                           ;incstack = 0
  1678                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1679                           
  1680  0391  0878               	movf	___lwmod@divisor,w
  1681  0392  0479               	iorwf	___lwmod@divisor+1,w
  1682  0393  1903               	btfsc	3,2
  1683  0394  2B96               	goto	u731
  1684  0395  2B97               	goto	u730
  1685  0396                     u731:
  1686  0396  2BC6               	goto	l1287
  1687  0397                     u730:
  1688  0397                     l1271:
  1689  0397  01FD               	clrf	___lwmod@counter
  1690  0398  0AFD               	incf	___lwmod@counter,f
  1691  0399  2BA5               	goto	l1277
  1692  039A                     l1273:
  1693  039A  3001               	movlw	1
  1694  039B                     u745:
  1695  039B  1003               	clrc
  1696  039C  0DF8               	rlf	___lwmod@divisor,f
  1697  039D  0DF9               	rlf	___lwmod@divisor+1,f
  1698  039E  3EFF               	addlw	-1
  1699  039F  1D03               	skipz
  1700  03A0  2B9B               	goto	u745
  1701  03A1                     l1275:
  1702  03A1  3001               	movlw	1
  1703  03A2  00FC               	movwf	??___lwmod
  1704  03A3  087C               	movf	??___lwmod,w
  1705  03A4  07FD               	addwf	___lwmod@counter,f
  1706  03A5                     l1277:
  1707  03A5  1FF9               	btfss	___lwmod@divisor+1,7
  1708  03A6  2BA8               	goto	u751
  1709  03A7  2BA9               	goto	u750
  1710  03A8                     u751:
  1711  03A8  2B9A               	goto	l1273
  1712  03A9                     u750:
  1713  03A9                     l1279:
  1714  03A9  0879               	movf	___lwmod@divisor+1,w
  1715  03AA  027B               	subwf	___lwmod@dividend+1,w
  1716  03AB  1D03               	skipz
  1717  03AC  2BAF               	goto	u765
  1718  03AD  0878               	movf	___lwmod@divisor,w
  1719  03AE  027A               	subwf	___lwmod@dividend,w
  1720  03AF                     u765:
  1721  03AF  1C03               	skipc
  1722  03B0  2BB2               	goto	u761
  1723  03B1  2BB3               	goto	u760
  1724  03B2                     u761:
  1725  03B2  2BB9               	goto	l1283
  1726  03B3                     u760:
  1727  03B3                     l1281:
  1728  03B3  0878               	movf	___lwmod@divisor,w
  1729  03B4  02FA               	subwf	___lwmod@dividend,f
  1730  03B5  0879               	movf	___lwmod@divisor+1,w
  1731  03B6  1C03               	skipc
  1732  03B7  03FB               	decf	___lwmod@dividend+1,f
  1733  03B8  02FB               	subwf	___lwmod@dividend+1,f
  1734  03B9                     l1283:
  1735  03B9  3001               	movlw	1
  1736  03BA                     u775:
  1737  03BA  1003               	clrc
  1738  03BB  0CF9               	rrf	___lwmod@divisor+1,f
  1739  03BC  0CF8               	rrf	___lwmod@divisor,f
  1740  03BD  3EFF               	addlw	-1
  1741  03BE  1D03               	skipz
  1742  03BF  2BBA               	goto	u775
  1743  03C0                     l1285:
  1744  03C0  3001               	movlw	1
  1745  03C1  02FD               	subwf	___lwmod@counter,f
  1746  03C2  1D03               	btfss	3,2
  1747  03C3  2BC5               	goto	u781
  1748  03C4  2BC6               	goto	u780
  1749  03C5                     u781:
  1750  03C5  2BA9               	goto	l1279
  1751  03C6                     u780:
  1752  03C6                     l1287:
  1753  03C6  087B               	movf	___lwmod@dividend+1,w
  1754  03C7  00F9               	movwf	?___lwmod+1
  1755  03C8  087A               	movf	___lwmod@dividend,w
  1756  03C9  00F8               	movwf	?___lwmod
  1757  03CA                     l603:
  1758  03CA  0008               	return
  1759  03CB                     __end_of___lwmod:
  1760                           
  1761                           	psect	text3
  1762  03CB                     __ptext3:	
  1763 ;; *************** function ___lwdiv *****************
  1764 ;; Defined at:
  1765 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  divisor         2    0[COMMON] unsigned int 
  1768 ;;  dividend        2    2[COMMON] unsigned int 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  quotient        2    5[COMMON] unsigned int 
  1771 ;;  counter         1    7[COMMON] unsigned char 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  2    0[COMMON] unsigned int 
  1774 ;; Registers used:
  1775 ;;		wreg, status,2, status,0
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1781 ;;      Params:         4       0       0       0       0
  1782 ;;      Locals:         3       0       0       0       0
  1783 ;;      Temps:          1       0       0       0       0
  1784 ;;      Totals:         8       0       0       0       0
  1785 ;;Total ram usage:        8 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; This function calls:
  1788 ;;		Nothing
  1789 ;; This function is called by:
  1790 ;;		_sprintf
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           
  1795                           ;psect for function ___lwdiv
  1796  03CB                     ___lwdiv:
  1797  03CB                     l1243:	
  1798                           ;incstack = 0
  1799                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1800                           
  1801  03CB  01F5               	clrf	___lwdiv@quotient
  1802  03CC  01F6               	clrf	___lwdiv@quotient+1
  1803  03CD                     l1245:
  1804  03CD  0870               	movf	___lwdiv@divisor,w
  1805  03CE  0471               	iorwf	___lwdiv@divisor+1,w
  1806  03CF  1903               	btfsc	3,2
  1807  03D0  2BD2               	goto	u661
  1808  03D1  2BD3               	goto	u660
  1809  03D2                     u661:
  1810  03D2  2C0A               	goto	l1265
  1811  03D3                     u660:
  1812  03D3                     l1247:
  1813  03D3  01F7               	clrf	___lwdiv@counter
  1814  03D4  0AF7               	incf	___lwdiv@counter,f
  1815  03D5  2BE1               	goto	l1253
  1816  03D6                     l1249:
  1817  03D6  3001               	movlw	1
  1818  03D7                     u675:
  1819  03D7  1003               	clrc
  1820  03D8  0DF0               	rlf	___lwdiv@divisor,f
  1821  03D9  0DF1               	rlf	___lwdiv@divisor+1,f
  1822  03DA  3EFF               	addlw	-1
  1823  03DB  1D03               	skipz
  1824  03DC  2BD7               	goto	u675
  1825  03DD                     l1251:
  1826  03DD  3001               	movlw	1
  1827  03DE  00F4               	movwf	??___lwdiv
  1828  03DF  0874               	movf	??___lwdiv,w
  1829  03E0  07F7               	addwf	___lwdiv@counter,f
  1830  03E1                     l1253:
  1831  03E1  1FF1               	btfss	___lwdiv@divisor+1,7
  1832  03E2  2BE4               	goto	u681
  1833  03E3  2BE5               	goto	u680
  1834  03E4                     u681:
  1835  03E4  2BD6               	goto	l1249
  1836  03E5                     u680:
  1837  03E5                     l1255:
  1838  03E5  3001               	movlw	1
  1839  03E6                     u695:
  1840  03E6  1003               	clrc
  1841  03E7  0DF5               	rlf	___lwdiv@quotient,f
  1842  03E8  0DF6               	rlf	___lwdiv@quotient+1,f
  1843  03E9  3EFF               	addlw	-1
  1844  03EA  1D03               	skipz
  1845  03EB  2BE6               	goto	u695
  1846  03EC  0871               	movf	___lwdiv@divisor+1,w
  1847  03ED  0273               	subwf	___lwdiv@dividend+1,w
  1848  03EE  1D03               	skipz
  1849  03EF  2BF2               	goto	u705
  1850  03F0  0870               	movf	___lwdiv@divisor,w
  1851  03F1  0272               	subwf	___lwdiv@dividend,w
  1852  03F2                     u705:
  1853  03F2  1C03               	skipc
  1854  03F3  2BF5               	goto	u701
  1855  03F4  2BF6               	goto	u700
  1856  03F5                     u701:
  1857  03F5  2BFD               	goto	l1261
  1858  03F6                     u700:
  1859  03F6                     l1257:
  1860  03F6  0870               	movf	___lwdiv@divisor,w
  1861  03F7  02F2               	subwf	___lwdiv@dividend,f
  1862  03F8  0871               	movf	___lwdiv@divisor+1,w
  1863  03F9  1C03               	skipc
  1864  03FA  03F3               	decf	___lwdiv@dividend+1,f
  1865  03FB  02F3               	subwf	___lwdiv@dividend+1,f
  1866  03FC                     l1259:
  1867  03FC  1475               	bsf	___lwdiv@quotient,0
  1868  03FD                     l1261:
  1869  03FD  3001               	movlw	1
  1870  03FE                     u715:
  1871  03FE  1003               	clrc
  1872  03FF  0CF1               	rrf	___lwdiv@divisor+1,f
  1873  0400  0CF0               	rrf	___lwdiv@divisor,f
  1874  0401  3EFF               	addlw	-1
  1875  0402  1D03               	skipz
  1876  0403  2BFE               	goto	u715
  1877  0404                     l1263:
  1878  0404  3001               	movlw	1
  1879  0405  02F7               	subwf	___lwdiv@counter,f
  1880  0406  1D03               	btfss	3,2
  1881  0407  2C09               	goto	u721
  1882  0408  2C0A               	goto	u720
  1883  0409                     u721:
  1884  0409  2BE5               	goto	l1255
  1885  040A                     u720:
  1886  040A                     l1265:
  1887  040A  0876               	movf	___lwdiv@quotient+1,w
  1888  040B  00F1               	movwf	?___lwdiv+1
  1889  040C  0875               	movf	___lwdiv@quotient,w
  1890  040D  00F0               	movwf	?___lwdiv
  1891  040E                     l593:
  1892  040E  0008               	return
  1893  040F                     __end_of___lwdiv:
  1894                           
  1895                           	psect	text4
  1896  04E4                     __ptext4:	
  1897 ;; *************** function _confMPU *****************
  1898 ;; Defined at:
  1899 ;;		line 58 in file "MPU6050.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;		None
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      void 
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, status,0, pclath, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1913 ;;      Params:         0       0       0       0       0
  1914 ;;      Locals:         0       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0
  1916 ;;      Totals:         0       0       0       0       0
  1917 ;;Total ram usage:        0 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:    2
  1920 ;; This function calls:
  1921 ;;		_I2C_Master_Start
  1922 ;;		_I2C_Master_Stop
  1923 ;;		_I2C_Master_Write
  1924 ;; This function is called by:
  1925 ;;		_main
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           
  1930                           ;psect for function _confMPU
  1931  04E4                     _confMPU:
  1932  04E4                     l1355:	
  1933                           ;incstack = 0
  1934                           ; Regs used in _confMPU: [wreg+status,2+status,0+pclath+cstack]
  1935                           
  1936                           
  1937                           ;MPU6050.c: 60:     I2C_Master_Start();
  1938  04E4  120A  118A  22DD  120A  118A  	fcall	_I2C_Master_Start
  1939                           
  1940                           ;MPU6050.c: 61:     I2C_Master_Write(0xD0);
  1941  04E9  30D0               	movlw	208
  1942  04EA  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
  1943                           
  1944                           ;MPU6050.c: 62:     I2C_Master_Write(0x6B);
  1945  04EF  306B               	movlw	107
  1946  04F0  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
  1947                           
  1948                           ;MPU6050.c: 63:     I2C_Master_Write(0x01);
  1949  04F5  3001               	movlw	1
  1950  04F6  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
  1951                           
  1952                           ;MPU6050.c: 64:     I2C_Master_Stop();
  1953  04FB  120A  118A  22E6  120A  118A  	fcall	_I2C_Master_Stop
  1954                           
  1955                           ;MPU6050.c: 66:     I2C_Master_Start();
  1956  0500  120A  118A  22DD  120A  118A  	fcall	_I2C_Master_Start
  1957                           
  1958                           ;MPU6050.c: 67:     I2C_Master_Write(0xD0);
  1959  0505  30D0               	movlw	208
  1960  0506  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
  1961                           
  1962                           ;MPU6050.c: 68:     I2C_Master_Write(0x00);
  1963  050B  3000               	movlw	0
  1964  050C  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
  1965                           
  1966                           ;MPU6050.c: 69:     I2C_Master_Stop();
  1967  0511  120A  118A  22E6  120A  118A  	fcall	_I2C_Master_Stop
  1968                           
  1969                           ;MPU6050.c: 72:     I2C_Master_Start();
  1970  0516  120A  118A  22DD  120A  118A  	fcall	_I2C_Master_Start
  1971                           
  1972                           ;MPU6050.c: 73:     I2C_Master_Write(0xD0);
  1973  051B  30D0               	movlw	208
  1974  051C  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
  1975                           
  1976                           ;MPU6050.c: 74:     I2C_Master_Write(0x19);
  1977  0521  3019               	movlw	25
  1978  0522  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
  1979                           
  1980                           ;MPU6050.c: 75:     I2C_Master_Write(0x08);
  1981  0527  3008               	movlw	8
  1982  0528  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
  1983                           
  1984                           ;MPU6050.c: 76:     I2C_Master_Stop();
  1985  052D  120A  118A  22E6  120A  118A  	fcall	_I2C_Master_Stop
  1986                           
  1987                           ;MPU6050.c: 78:     I2C_Master_Start();
  1988  0532  120A  118A  22DD  120A  118A  	fcall	_I2C_Master_Start
  1989                           
  1990                           ;MPU6050.c: 79:     I2C_Master_Write(0xD0);
  1991  0537  30D0               	movlw	208
  1992  0538  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
  1993                           
  1994                           ;MPU6050.c: 80:     I2C_Master_Write(0x1A);
  1995  053D  301A               	movlw	26
  1996  053E  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
  1997                           
  1998                           ;MPU6050.c: 81:     I2C_Master_Write(0x00);
  1999  0543  3000               	movlw	0
  2000  0544  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
  2001                           
  2002                           ;MPU6050.c: 82:     I2C_Master_Stop();
  2003  0549  120A  118A  22E6  120A  118A  	fcall	_I2C_Master_Stop
  2004                           
  2005                           ;MPU6050.c: 84:     I2C_Master_Start();
  2006  054E  120A  118A  22DD  120A  118A  	fcall	_I2C_Master_Start
  2007                           
  2008                           ;MPU6050.c: 85:     I2C_Master_Write(0xD0);
  2009  0553  30D0               	movlw	208
  2010  0554  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
  2011                           
  2012                           ;MPU6050.c: 86:     I2C_Master_Write(0x1B);
  2013  0559  301B               	movlw	27
  2014  055A  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
  2015                           
  2016                           ;MPU6050.c: 87:     I2C_Master_Write(0x00);
  2017  055F  3000               	movlw	0
  2018  0560  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
  2019                           
  2020                           ;MPU6050.c: 88:     I2C_Master_Stop();
  2021  0565  120A  118A  22E6  120A  118A  	fcall	_I2C_Master_Stop
  2022                           
  2023                           ;MPU6050.c: 90:     I2C_Master_Start();
  2024  056A  120A  118A  22DD  120A  118A  	fcall	_I2C_Master_Start
  2025                           
  2026                           ;MPU6050.c: 91:     I2C_Master_Write(0xD0);
  2027  056F  30D0               	movlw	208
  2028  0570  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
  2029                           
  2030                           ;MPU6050.c: 92:     I2C_Master_Write(0x1C);
  2031  0575  301C               	movlw	28
  2032  0576  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
  2033                           
  2034                           ;MPU6050.c: 93:     I2C_Master_Write(0x00);
  2035  057B  3000               	movlw	0
  2036  057C  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
  2037                           
  2038                           ;MPU6050.c: 94:     I2C_Master_Stop();
  2039  0581  120A  118A  22E6  120A  118A  	fcall	_I2C_Master_Stop
  2040                           
  2041                           ;MPU6050.c: 98:     I2C_Master_Start();
  2042  0586  120A  118A  22DD  120A  118A  	fcall	_I2C_Master_Start
  2043                           
  2044                           ;MPU6050.c: 99:     I2C_Master_Write(0x68);
  2045  058B  3068               	movlw	104
  2046  058C  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
  2047                           
  2048                           ;MPU6050.c: 100:     I2C_Master_Write(0x6C);
  2049  0591  306C               	movlw	108
  2050  0592  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
  2051                           
  2052                           ;MPU6050.c: 101:     I2C_Master_Write(0x00);
  2053  0597  3000               	movlw	0
  2054  0598  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
  2055                           
  2056                           ;MPU6050.c: 102:     I2C_Master_Stop();
  2057  059D  120A  118A  22E6  120A  118A  	fcall	_I2C_Master_Stop
  2058  05A2                     l207:
  2059  05A2  0008               	return
  2060  05A3                     __end_of_confMPU:
  2061                           
  2062                           	psect	text5
  2063  02E6                     __ptext5:	
  2064 ;; *************** function _I2C_Master_Stop *****************
  2065 ;; Defined at:
  2066 ;;		line 43 in file "I2C.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;		None
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;		None
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		wreg, status,2, status,0, pclath, cstack
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2080 ;;      Params:         0       0       0       0       0
  2081 ;;      Locals:         0       0       0       0       0
  2082 ;;      Temps:          0       0       0       0       0
  2083 ;;      Totals:         0       0       0       0       0
  2084 ;;Total ram usage:        0 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:    1
  2087 ;; This function calls:
  2088 ;;		_I2C_Master_Wait
  2089 ;; This function is called by:
  2090 ;;		_main
  2091 ;;		_confMPU
  2092 ;;		_readMPU
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           
  2097                           ;psect for function _I2C_Master_Stop
  2098  02E6                     _I2C_Master_Stop:
  2099  02E6                     l1207:	
  2100                           ;incstack = 0
  2101                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2102                           
  2103                           
  2104                           ;I2C.c: 45:     I2C_Master_Wait();
  2105  02E6  120A  118A  2308  120A  118A  	fcall	_I2C_Master_Wait
  2106  02EB                     l1209:
  2107                           
  2108                           ;I2C.c: 46:     PEN = 1;
  2109  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2110  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  2111  02ED  1511               	bsf	17,2	;volatile
  2112  02EE                     l55:
  2113  02EE  0008               	return
  2114  02EF                     __end_of_I2C_Master_Stop:
  2115                           
  2116                           	psect	text6
  2117  02DD                     __ptext6:	
  2118 ;; *************** function _I2C_Master_Start *****************
  2119 ;; Defined at:
  2120 ;;		line 24 in file "I2C.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;		None
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, status,2, status,0, pclath, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2134 ;;      Params:         0       0       0       0       0
  2135 ;;      Locals:         0       0       0       0       0
  2136 ;;      Temps:          0       0       0       0       0
  2137 ;;      Totals:         0       0       0       0       0
  2138 ;;Total ram usage:        0 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; Hardware stack levels required when called:    1
  2141 ;; This function calls:
  2142 ;;		_I2C_Master_Wait
  2143 ;; This function is called by:
  2144 ;;		_confMPU
  2145 ;;		_readMPU
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           
  2150                           ;psect for function _I2C_Master_Start
  2151  02DD                     _I2C_Master_Start:
  2152  02DD                     l1199:	
  2153                           ;incstack = 0
  2154                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2155                           
  2156                           
  2157                           ;I2C.c: 26:     I2C_Master_Wait();
  2158  02DD  120A  118A  2308  120A  118A  	fcall	_I2C_Master_Wait
  2159  02E2                     l1201:
  2160                           
  2161                           ;I2C.c: 27:     SEN = 1;
  2162  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  2163  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  2164  02E4  1411               	bsf	17,0	;volatile
  2165  02E5                     l46:
  2166  02E5  0008               	return
  2167  02E6                     __end_of_I2C_Master_Start:
  2168                           
  2169                           	psect	text7
  2170  0361                     __ptext7:	
  2171 ;; *************** function _UARTSendString *****************
  2172 ;; Defined at:
  2173 ;;		line 49 in file "UART.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;  str             1    wreg     PTR const unsigned char 
  2176 ;;		 -> main@buffer(25), 
  2177 ;;  max_length      1    1[COMMON] const unsigned char 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  str             1    5[COMMON] PTR const unsigned char 
  2180 ;;		 -> main@buffer(25), 
  2181 ;;  i               2    3[COMMON] int 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      void 
  2184 ;; Registers used:
  2185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2191 ;;      Params:         1       0       0       0       0
  2192 ;;      Locals:         3       0       0       0       0
  2193 ;;      Temps:          1       0       0       0       0
  2194 ;;      Totals:         5       0       0       0       0
  2195 ;;Total ram usage:        5 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; Hardware stack levels required when called:    1
  2198 ;; This function calls:
  2199 ;;		_UARTSendChar
  2200 ;; This function is called by:
  2201 ;;		_main
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           
  2206                           ;psect for function _UARTSendString
  2207  0361                     _UARTSendString:
  2208                           
  2209                           ;incstack = 0
  2210                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2211                           ;UARTSendString@str stored from wreg
  2212  0361  00F5               	movwf	UARTSendString@str
  2213  0362                     l1421:
  2214                           
  2215                           ;UART.c: 50:     int i = 0;
  2216  0362  01F3               	clrf	UARTSendString@i
  2217  0363  01F4               	clrf	UARTSendString@i+1
  2218                           
  2219                           ;UART.c: 51:     for (i=0 ; i<max_length && str[i]!='\0' ; i++) {
  2220  0364  01F3               	clrf	UARTSendString@i
  2221  0365  01F4               	clrf	UARTSendString@i+1
  2222  0366  2B78               	goto	l1427
  2223  0367                     l1423:
  2224                           
  2225                           ;UART.c: 52:         UARTSendChar(str[i]);
  2226  0367  0873               	movf	UARTSendString@i,w
  2227  0368  0775               	addwf	UARTSendString@str,w
  2228  0369  00F2               	movwf	??_UARTSendString
  2229  036A  0872               	movf	??_UARTSendString,w
  2230  036B  0084               	movwf	4
  2231  036C  0800               	movf	0,w
  2232  036D  120A  118A  22EF  120A  118A  	fcall	_UARTSendChar
  2233  0372                     l1425:
  2234                           
  2235                           ;UART.c: 53:     }
  2236  0372  3001               	movlw	1
  2237  0373  07F3               	addwf	UARTSendString@i,f
  2238  0374  1803               	skipnc
  2239  0375  0AF4               	incf	UARTSendString@i+1,f
  2240  0376  3000               	movlw	0
  2241  0377  07F4               	addwf	UARTSendString@i+1,f
  2242  0378                     l1427:
  2243  0378  0874               	movf	UARTSendString@i+1,w
  2244  0379  3A80               	xorlw	128
  2245  037A  00F2               	movwf	??_UARTSendString
  2246  037B  3080               	movlw	128
  2247  037C  0272               	subwf	??_UARTSendString,w
  2248  037D  1D03               	skipz
  2249  037E  2B81               	goto	u925
  2250  037F  0871               	movf	UARTSendString@max_length,w
  2251  0380  0273               	subwf	UARTSendString@i,w
  2252  0381                     u925:
  2253  0381  1803               	skipnc
  2254  0382  2B84               	goto	u921
  2255  0383  2B85               	goto	u920
  2256  0384                     u921:
  2257  0384  2B90               	goto	l177
  2258  0385                     u920:
  2259  0385                     l1429:
  2260  0385  0873               	movf	UARTSendString@i,w
  2261  0386  0775               	addwf	UARTSendString@str,w
  2262  0387  00F2               	movwf	??_UARTSendString
  2263  0388  0872               	movf	??_UARTSendString,w
  2264  0389  0084               	movwf	4
  2265  038A  1383               	bcf	3,7	;select IRP bank0
  2266  038B  0800               	movf	0,w
  2267  038C  1D03               	btfss	3,2
  2268  038D  2B8F               	goto	u931
  2269  038E  2B90               	goto	u930
  2270  038F                     u931:
  2271  038F  2B67               	goto	l1423
  2272  0390                     u930:
  2273  0390                     l177:
  2274  0390  0008               	return
  2275  0391                     __end_of_UARTSendString:
  2276                           
  2277                           	psect	text8
  2278  02EF                     __ptext8:	
  2279 ;; *************** function _UARTSendChar *****************
  2280 ;; Defined at:
  2281 ;;		line 39 in file "UART.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;  c               1    wreg     const unsigned char 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  c               1    0[COMMON] const unsigned char 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2295 ;;      Params:         0       0       0       0       0
  2296 ;;      Locals:         1       0       0       0       0
  2297 ;;      Temps:          0       0       0       0       0
  2298 ;;      Totals:         1       0       0       0       0
  2299 ;;Total ram usage:        1 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; This function calls:
  2302 ;;		Nothing
  2303 ;; This function is called by:
  2304 ;;		_main
  2305 ;;		_UARTSendString
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           
  2310                           ;psect for function _UARTSendChar
  2311  02EF                     _UARTSendChar:
  2312                           
  2313                           ;incstack = 0
  2314                           ; Regs used in _UARTSendChar: [wreg]
  2315                           ;UARTSendChar@c stored from wreg
  2316  02EF  00F0               	movwf	UARTSendChar@c
  2317  02F0                     l1215:
  2318  02F0                     l166:	
  2319                           ;UART.c: 40:     while (TXSTAbits.TRMT == 0);
  2320                           
  2321  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  2322  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  2323  02F2  1C98               	btfss	24,1	;volatile
  2324  02F3  2AF5               	goto	u581
  2325  02F4  2AF6               	goto	u580
  2326  02F5                     u581:
  2327  02F5  2AF0               	goto	l166
  2328  02F6                     u580:
  2329  02F6                     l1217:
  2330                           
  2331                           ;UART.c: 41:     TXREG = c;
  2332  02F6  0870               	movf	UARTSendChar@c,w
  2333  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  2334  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  2335  02F9  0099               	movwf	25	;volatile
  2336  02FA                     l169:
  2337  02FA  0008               	return
  2338  02FB                     __end_of_UARTSendChar:
  2339                           
  2340                           	psect	text9
  2341  0475                     __ptext9:	
  2342 ;; *************** function _UARTInit *****************
  2343 ;; Defined at:
  2344 ;;		line 8 in file "UART.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  baud_rate       4    0[BANK0 ] const unsigned long 
  2347 ;;  BRGH            1    4[BANK0 ] const unsigned char 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;		None
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		wreg, status,2, status,0, pclath, cstack
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2359 ;;      Params:         0       5       0       0       0
  2360 ;;      Locals:         0       0       0       0       0
  2361 ;;      Temps:          0       4       0       0       0
  2362 ;;      Totals:         0       9       0       0       0
  2363 ;;Total ram usage:        9 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    1
  2366 ;; This function calls:
  2367 ;;		___lldiv
  2368 ;; This function is called by:
  2369 ;;		_main
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           
  2374                           ;psect for function _UARTInit
  2375  0475                     _UARTInit:
  2376  0475                     l1325:	
  2377                           ;incstack = 0
  2378                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  2379                           
  2380                           
  2381                           ;UART.c: 10:     if (BRGH == 0) {
  2382  0475  1283               	bcf	3,5	;RP0=0, select bank0
  2383  0476  1303               	bcf	3,6	;RP1=0, select bank0
  2384  0477  0824               	movf	UARTInit@BRGH,w
  2385  0478  1D03               	btfss	3,2
  2386  0479  2C7B               	goto	u821
  2387  047A  2C7C               	goto	u820
  2388  047B                     u821:
  2389  047B  2CA9               	goto	l1331
  2390  047C                     u820:
  2391  047C                     l1327:
  2392                           
  2393                           ;UART.c: 11:         SPBRG = 4000000/(64*baud_rate) - 1;
  2394  047C  0820               	movf	UARTInit@baud_rate,w
  2395  047D  00A5               	movwf	??_UARTInit
  2396  047E  0821               	movf	UARTInit@baud_rate+1,w
  2397  047F  00A6               	movwf	??_UARTInit+1
  2398  0480  0822               	movf	UARTInit@baud_rate+2,w
  2399  0481  00A7               	movwf	??_UARTInit+2
  2400  0482  0823               	movf	UARTInit@baud_rate+3,w
  2401  0483  00A8               	movwf	??_UARTInit+3
  2402  0484  3006               	movlw	6
  2403  0485                     u835:
  2404  0485  1003               	clrc
  2405  0486  0DA5               	rlf	??_UARTInit,f
  2406  0487  0DA6               	rlf	??_UARTInit+1,f
  2407  0488  0DA7               	rlf	??_UARTInit+2,f
  2408  0489  0DA8               	rlf	??_UARTInit+3,f
  2409  048A                     u830:
  2410  048A  3EFF               	addlw	-1
  2411  048B  1D03               	skipz
  2412  048C  2C85               	goto	u835
  2413  048D  0828               	movf	??_UARTInit+3,w
  2414  048E  00F3               	movwf	___lldiv@divisor+3
  2415  048F  0827               	movf	??_UARTInit+2,w
  2416  0490  00F2               	movwf	___lldiv@divisor+2
  2417  0491  0826               	movf	??_UARTInit+1,w
  2418  0492  00F1               	movwf	___lldiv@divisor+1
  2419  0493  0825               	movf	??_UARTInit,w
  2420  0494  00F0               	movwf	___lldiv@divisor
  2421  0495  3000               	movlw	0
  2422  0496  00F7               	movwf	___lldiv@dividend+3
  2423  0497  303D               	movlw	61
  2424  0498  00F6               	movwf	___lldiv@dividend+2
  2425  0499  3009               	movlw	9
  2426  049A  00F5               	movwf	___lldiv@dividend+1
  2427  049B  3000               	movlw	0
  2428  049C  00F4               	movwf	___lldiv@dividend
  2429  049D  120A  118A  240F  120A  118A  	fcall	___lldiv
  2430  04A2  0870               	movf	?___lldiv,w
  2431  04A3  3EFF               	addlw	255
  2432  04A4  1683               	bsf	3,5	;RP0=1, select bank1
  2433  04A5  1303               	bcf	3,6	;RP1=0, select bank1
  2434  04A6  0099               	movwf	25	;volatile
  2435  04A7                     l1329:
  2436                           
  2437                           ;UART.c: 12:         TXSTAbits.BRGH = 0;
  2438  04A7  1118               	bcf	24,2	;volatile
  2439                           
  2440                           ;UART.c: 13:     } else {
  2441  04A8  2CD5               	goto	l1335
  2442  04A9                     l1331:
  2443                           
  2444                           ;UART.c: 14:         SPBRG = 4000000/(16*baud_rate) - 1;
  2445  04A9  0820               	movf	UARTInit@baud_rate,w
  2446  04AA  00A5               	movwf	??_UARTInit
  2447  04AB  0821               	movf	UARTInit@baud_rate+1,w
  2448  04AC  00A6               	movwf	??_UARTInit+1
  2449  04AD  0822               	movf	UARTInit@baud_rate+2,w
  2450  04AE  00A7               	movwf	??_UARTInit+2
  2451  04AF  0823               	movf	UARTInit@baud_rate+3,w
  2452  04B0  00A8               	movwf	??_UARTInit+3
  2453  04B1  3004               	movlw	4
  2454  04B2                     u845:
  2455  04B2  1003               	clrc
  2456  04B3  0DA5               	rlf	??_UARTInit,f
  2457  04B4  0DA6               	rlf	??_UARTInit+1,f
  2458  04B5  0DA7               	rlf	??_UARTInit+2,f
  2459  04B6  0DA8               	rlf	??_UARTInit+3,f
  2460  04B7                     u840:
  2461  04B7  3EFF               	addlw	-1
  2462  04B8  1D03               	skipz
  2463  04B9  2CB2               	goto	u845
  2464  04BA  0828               	movf	??_UARTInit+3,w
  2465  04BB  00F3               	movwf	___lldiv@divisor+3
  2466  04BC  0827               	movf	??_UARTInit+2,w
  2467  04BD  00F2               	movwf	___lldiv@divisor+2
  2468  04BE  0826               	movf	??_UARTInit+1,w
  2469  04BF  00F1               	movwf	___lldiv@divisor+1
  2470  04C0  0825               	movf	??_UARTInit,w
  2471  04C1  00F0               	movwf	___lldiv@divisor
  2472  04C2  3000               	movlw	0
  2473  04C3  00F7               	movwf	___lldiv@dividend+3
  2474  04C4  303D               	movlw	61
  2475  04C5  00F6               	movwf	___lldiv@dividend+2
  2476  04C6  3009               	movlw	9
  2477  04C7  00F5               	movwf	___lldiv@dividend+1
  2478  04C8  3000               	movlw	0
  2479  04C9  00F4               	movwf	___lldiv@dividend
  2480  04CA  120A  118A  240F  120A  118A  	fcall	___lldiv
  2481  04CF  0870               	movf	?___lldiv,w
  2482  04D0  3EFF               	addlw	255
  2483  04D1  1683               	bsf	3,5	;RP0=1, select bank1
  2484  04D2  1303               	bcf	3,6	;RP1=0, select bank1
  2485  04D3  0099               	movwf	25	;volatile
  2486  04D4                     l1333:
  2487                           
  2488                           ;UART.c: 15:         TXSTAbits.BRGH = 1;
  2489  04D4  1518               	bsf	24,2	;volatile
  2490  04D5                     l1335:
  2491                           
  2492                           ;UART.c: 19:     TXSTAbits.TX9 = 0;
  2493  04D5  1318               	bcf	24,6	;volatile
  2494  04D6                     l1337:
  2495                           
  2496                           ;UART.c: 20:     TXSTAbits.TXEN = 1;
  2497  04D6  1698               	bsf	24,5	;volatile
  2498  04D7                     l1339:
  2499                           
  2500                           ;UART.c: 21:     TXSTAbits.SYNC = 0;
  2501  04D7  1218               	bcf	24,4	;volatile
  2502  04D8                     l1341:
  2503                           
  2504                           ;UART.c: 24:     RCSTAbits.SPEN = 1;
  2505  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  2506  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  2507  04DA  1798               	bsf	24,7	;volatile
  2508  04DB                     l1343:
  2509                           
  2510                           ;UART.c: 25:     RCSTAbits.RX9 = 0;
  2511  04DB  1318               	bcf	24,6	;volatile
  2512  04DC                     l1345:
  2513                           
  2514                           ;UART.c: 26:     RCSTAbits.CREN = 1;
  2515  04DC  1618               	bsf	24,4	;volatile
  2516  04DD                     l1347:
  2517                           
  2518                           ;UART.c: 27:     RCSTAbits.FERR = 0;
  2519  04DD  1118               	bcf	24,2	;volatile
  2520  04DE                     l1349:
  2521                           
  2522                           ;UART.c: 28:     RCSTAbits.OERR = 0;
  2523  04DE  1098               	bcf	24,1	;volatile
  2524  04DF                     l1351:
  2525                           
  2526                           ;UART.c: 31:     TRISCbits.TRISC7 = 1;
  2527  04DF  1683               	bsf	3,5	;RP0=1, select bank1
  2528  04E0  1303               	bcf	3,6	;RP1=0, select bank1
  2529  04E1  1787               	bsf	7,7	;volatile
  2530  04E2                     l1353:
  2531                           
  2532                           ;UART.c: 32:     TRISCbits.TRISC6 = 0;
  2533  04E2  1307               	bcf	7,6	;volatile
  2534  04E3                     l163:
  2535  04E3  0008               	return
  2536  04E4                     __end_of_UARTInit:
  2537                           
  2538                           	psect	text10
  2539  040F                     __ptext10:	
  2540 ;; *************** function ___lldiv *****************
  2541 ;; Defined at:
  2542 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  divisor         4    0[COMMON] unsigned long 
  2545 ;;  dividend        4    4[COMMON] unsigned long 
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;  quotient        4    9[COMMON] unsigned long 
  2548 ;;  counter         1   13[COMMON] unsigned char 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  4    0[COMMON] unsigned long 
  2551 ;; Registers used:
  2552 ;;		wreg, status,2, status,0
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2558 ;;      Params:         8       0       0       0       0
  2559 ;;      Locals:         5       0       0       0       0
  2560 ;;      Temps:          1       0       0       0       0
  2561 ;;      Totals:        14       0       0       0       0
  2562 ;;Total ram usage:       14 bytes
  2563 ;; Hardware stack levels used:    1
  2564 ;; This function calls:
  2565 ;;		Nothing
  2566 ;; This function is called by:
  2567 ;;		_UARTInit
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           
  2572                           ;psect for function ___lldiv
  2573  040F                     ___lldiv:
  2574  040F                     l1219:	
  2575                           ;incstack = 0
  2576                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2577                           
  2578  040F  3000               	movlw	0
  2579  0410  00FC               	movwf	___lldiv@quotient+3
  2580  0411  3000               	movlw	0
  2581  0412  00FB               	movwf	___lldiv@quotient+2
  2582  0413  3000               	movlw	0
  2583  0414  00FA               	movwf	___lldiv@quotient+1
  2584  0415  3000               	movlw	0
  2585  0416  00F9               	movwf	___lldiv@quotient
  2586  0417  0873               	movf	___lldiv@divisor+3,w
  2587  0418  0472               	iorwf	___lldiv@divisor+2,w
  2588  0419  0471               	iorwf	___lldiv@divisor+1,w
  2589  041A  0470               	iorwf	___lldiv@divisor,w
  2590  041B  1903               	skipnz
  2591  041C  2C1E               	goto	u591
  2592  041D  2C1F               	goto	u590
  2593  041E                     u591:
  2594  041E  2C6C               	goto	l1239
  2595  041F                     u590:
  2596  041F                     l1221:
  2597  041F  01FD               	clrf	___lldiv@counter
  2598  0420  0AFD               	incf	___lldiv@counter,f
  2599  0421  2C2F               	goto	l1225
  2600  0422                     l1223:
  2601  0422  3001               	movlw	1
  2602  0423  00F8               	movwf	??___lldiv
  2603  0424                     u605:
  2604  0424  1003               	clrc
  2605  0425  0DF0               	rlf	___lldiv@divisor,f
  2606  0426  0DF1               	rlf	___lldiv@divisor+1,f
  2607  0427  0DF2               	rlf	___lldiv@divisor+2,f
  2608  0428  0DF3               	rlf	___lldiv@divisor+3,f
  2609  0429  0BF8               	decfsz	??___lldiv,f
  2610  042A  2C24               	goto	u605
  2611  042B  3001               	movlw	1
  2612  042C  00F8               	movwf	??___lldiv
  2613  042D  0878               	movf	??___lldiv,w
  2614  042E  07FD               	addwf	___lldiv@counter,f
  2615  042F                     l1225:
  2616  042F  1FF3               	btfss	___lldiv@divisor+3,7
  2617  0430  2C32               	goto	u611
  2618  0431  2C33               	goto	u610
  2619  0432                     u611:
  2620  0432  2C22               	goto	l1223
  2621  0433                     u610:
  2622  0433                     l1227:
  2623  0433  3001               	movlw	1
  2624  0434  00F8               	movwf	??___lldiv
  2625  0435                     u625:
  2626  0435  1003               	clrc
  2627  0436  0DF9               	rlf	___lldiv@quotient,f
  2628  0437  0DFA               	rlf	___lldiv@quotient+1,f
  2629  0438  0DFB               	rlf	___lldiv@quotient+2,f
  2630  0439  0DFC               	rlf	___lldiv@quotient+3,f
  2631  043A  0BF8               	decfsz	??___lldiv,f
  2632  043B  2C35               	goto	u625
  2633  043C                     l1229:
  2634  043C  0873               	movf	___lldiv@divisor+3,w
  2635  043D  0277               	subwf	___lldiv@dividend+3,w
  2636  043E  1D03               	skipz
  2637  043F  2C4A               	goto	u635
  2638  0440  0872               	movf	___lldiv@divisor+2,w
  2639  0441  0276               	subwf	___lldiv@dividend+2,w
  2640  0442  1D03               	skipz
  2641  0443  2C4A               	goto	u635
  2642  0444  0871               	movf	___lldiv@divisor+1,w
  2643  0445  0275               	subwf	___lldiv@dividend+1,w
  2644  0446  1D03               	skipz
  2645  0447  2C4A               	goto	u635
  2646  0448  0870               	movf	___lldiv@divisor,w
  2647  0449  0274               	subwf	___lldiv@dividend,w
  2648  044A                     u635:
  2649  044A  1C03               	skipc
  2650  044B  2C4D               	goto	u631
  2651  044C  2C4E               	goto	u630
  2652  044D                     u631:
  2653  044D  2C5D               	goto	l1235
  2654  044E                     u630:
  2655  044E                     l1231:
  2656  044E  0870               	movf	___lldiv@divisor,w
  2657  044F  02F4               	subwf	___lldiv@dividend,f
  2658  0450  0871               	movf	___lldiv@divisor+1,w
  2659  0451  1C03               	skipc
  2660  0452  0F71               	incfsz	___lldiv@divisor+1,w
  2661  0453  02F5               	subwf	___lldiv@dividend+1,f
  2662  0454  0872               	movf	___lldiv@divisor+2,w
  2663  0455  1C03               	skipc
  2664  0456  0F72               	incfsz	___lldiv@divisor+2,w
  2665  0457  02F6               	subwf	___lldiv@dividend+2,f
  2666  0458  0873               	movf	___lldiv@divisor+3,w
  2667  0459  1C03               	skipc
  2668  045A  0F73               	incfsz	___lldiv@divisor+3,w
  2669  045B  02F7               	subwf	___lldiv@dividend+3,f
  2670  045C                     l1233:
  2671  045C  1479               	bsf	___lldiv@quotient,0
  2672  045D                     l1235:
  2673  045D  3001               	movlw	1
  2674  045E                     u645:
  2675  045E  1003               	clrc
  2676  045F  0CF3               	rrf	___lldiv@divisor+3,f
  2677  0460  0CF2               	rrf	___lldiv@divisor+2,f
  2678  0461  0CF1               	rrf	___lldiv@divisor+1,f
  2679  0462  0CF0               	rrf	___lldiv@divisor,f
  2680  0463  3EFF               	addlw	-1
  2681  0464  1D03               	skipz
  2682  0465  2C5E               	goto	u645
  2683  0466                     l1237:
  2684  0466  3001               	movlw	1
  2685  0467  02FD               	subwf	___lldiv@counter,f
  2686  0468  1D03               	btfss	3,2
  2687  0469  2C6B               	goto	u651
  2688  046A  2C6C               	goto	u650
  2689  046B                     u651:
  2690  046B  2C33               	goto	l1227
  2691  046C                     u650:
  2692  046C                     l1239:
  2693  046C  087C               	movf	___lldiv@quotient+3,w
  2694  046D  00F3               	movwf	?___lldiv+3
  2695  046E  087B               	movf	___lldiv@quotient+2,w
  2696  046F  00F2               	movwf	?___lldiv+2
  2697  0470  087A               	movf	___lldiv@quotient+1,w
  2698  0471  00F1               	movwf	?___lldiv+1
  2699  0472  0879               	movf	___lldiv@quotient,w
  2700  0473  00F0               	movwf	?___lldiv
  2701  0474                     l357:
  2702  0474  0008               	return
  2703  0475                     __end_of___lldiv:
  2704                           
  2705                           	psect	text11
  2706  0325                     __ptext11:	
  2707 ;; *************** function _I2C_Start *****************
  2708 ;; Defined at:
  2709 ;;		line 30 in file "I2C.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;  add             1    wreg     unsigned char 
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;  add             1    1[COMMON] unsigned char 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  1    wreg      void 
  2716 ;; Registers used:
  2717 ;;		wreg, status,2, status,0, pclath, cstack
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2723 ;;      Params:         0       0       0       0       0
  2724 ;;      Locals:         1       0       0       0       0
  2725 ;;      Temps:          0       0       0       0       0
  2726 ;;      Totals:         1       0       0       0       0
  2727 ;;Total ram usage:        1 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; Hardware stack levels required when called:    2
  2730 ;; This function calls:
  2731 ;;		_I2C_Master_Wait
  2732 ;;		_I2C_Master_Write
  2733 ;; This function is called by:
  2734 ;;		_main
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           
  2739                           ;psect for function _I2C_Start
  2740  0325                     _I2C_Start:
  2741                           
  2742                           ;incstack = 0
  2743                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  2744                           ;I2C_Start@add stored from wreg
  2745  0325  00F1               	movwf	I2C_Start@add
  2746  0326                     l1301:
  2747                           
  2748                           ;I2C.c: 30: void I2C_Start(char add);I2C.c: 31: {;I2C.c: 32:     I2C_Master_Wait();
  2749  0326  120A  118A  2308  120A  118A  	fcall	_I2C_Master_Wait
  2750  032B                     l1303:
  2751                           
  2752                           ;I2C.c: 33:     SEN = 1;
  2753  032B  1683               	bsf	3,5	;RP0=1, select bank1
  2754  032C  1303               	bcf	3,6	;RP1=0, select bank1
  2755  032D  1411               	bsf	17,0	;volatile
  2756                           
  2757                           ;I2C.c: 34:     I2C_Master_Write(add);
  2758  032E  0871               	movf	I2C_Start@add,w
  2759  032F  120A  118A  2315  120A  118A  	fcall	_I2C_Master_Write
  2760  0334                     l49:
  2761  0334  0008               	return
  2762  0335                     __end_of_I2C_Start:
  2763                           
  2764                           	psect	text12
  2765  0315                     __ptext12:	
  2766 ;; *************** function _I2C_Master_Write *****************
  2767 ;; Defined at:
  2768 ;;		line 63 in file "I2C.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  data            1    wreg     unsigned char 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  data            1    0[COMMON] unsigned char 
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  1    wreg      unsigned char 
  2775 ;; Registers used:
  2776 ;;		wreg, status,2, status,0, pclath, cstack
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2782 ;;      Params:         0       0       0       0       0
  2783 ;;      Locals:         1       0       0       0       0
  2784 ;;      Temps:          0       0       0       0       0
  2785 ;;      Totals:         1       0       0       0       0
  2786 ;;Total ram usage:        1 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    1
  2789 ;; This function calls:
  2790 ;;		_I2C_Master_Wait
  2791 ;; This function is called by:
  2792 ;;		_I2C_Start
  2793 ;;		_main
  2794 ;;		_confMPU
  2795 ;;		_readMPU
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           
  2800                           ;psect for function _I2C_Master_Write
  2801  0315                     _I2C_Master_Write:
  2802                           
  2803                           ;incstack = 0
  2804                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2805                           ;I2C_Master_Write@data stored from wreg
  2806  0315  00F0               	movwf	I2C_Master_Write@data
  2807  0316                     l1203:
  2808                           
  2809                           ;I2C.c: 63: unsigned char I2C_Master_Write(unsigned char data);I2C.c: 64: {;I2C.c: 65:  
      +                             I2C_Master_Wait();
  2810  0316  120A  118A  2308  120A  118A  	fcall	_I2C_Master_Wait
  2811  031B                     l1205:
  2812                           
  2813                           ;I2C.c: 66:     SSPBUF = data;
  2814  031B  0870               	movf	I2C_Master_Write@data,w
  2815  031C  1283               	bcf	3,5	;RP0=0, select bank0
  2816  031D  1303               	bcf	3,6	;RP1=0, select bank0
  2817  031E  0093               	movwf	19	;volatile
  2818  031F                     l70:	
  2819                           ;I2C.c: 67:     while(!SSPIF);
  2820                           
  2821  031F  1D8C               	btfss	12,3	;volatile
  2822  0320  2B22               	goto	u551
  2823  0321  2B23               	goto	u550
  2824  0322                     u551:
  2825  0322  2B1F               	goto	l70
  2826  0323                     u550:
  2827  0323                     l72:
  2828                           
  2829                           ;I2C.c: 68:  SSPIF = 0;
  2830  0323  118C               	bcf	12,3	;volatile
  2831  0324                     l73:	
  2832                           ;I2C.c: 69:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  2833                           
  2834  0324  0008               	return
  2835  0325                     __end_of_I2C_Master_Write:
  2836                           
  2837                           	psect	text13
  2838  0335                     __ptext13:	
  2839 ;; *************** function _I2C_Read *****************
  2840 ;; Defined at:
  2841 ;;		line 83 in file "I2C.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  ACK_NACK        1    wreg     unsigned char 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  ACK_NACK        1    1[COMMON] unsigned char 
  2846 ;;  Data            1    2[COMMON] unsigned char 
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      unsigned char 
  2849 ;; Registers used:
  2850 ;;		wreg, status,2, status,0, pclath, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2856 ;;      Params:         0       0       0       0       0
  2857 ;;      Locals:         2       0       0       0       0
  2858 ;;      Temps:          1       0       0       0       0
  2859 ;;      Totals:         3       0       0       0       0
  2860 ;;Total ram usage:        3 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; Hardware stack levels required when called:    1
  2863 ;; This function calls:
  2864 ;;		_I2C_ACK
  2865 ;;		_I2C_Master_Wait
  2866 ;;		_I2C_NACK
  2867 ;; This function is called by:
  2868 ;;		_main
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           
  2873                           ;psect for function _I2C_Read
  2874  0335                     _I2C_Read:
  2875                           
  2876                           ;incstack = 0
  2877                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  2878                           ;I2C_Read@ACK_NACK stored from wreg
  2879  0335  00F1               	movwf	I2C_Read@ACK_NACK
  2880  0336                     l1309:
  2881                           
  2882                           ;I2C.c: 83: unsigned char I2C_Read(unsigned char ACK_NACK);I2C.c: 84: { I2C_Master_Wait(
      +                          );
  2883  0336  120A  118A  2308  120A  118A  	fcall	_I2C_Master_Wait
  2884  033B                     l1311:
  2885                           
  2886                           ;I2C.c: 86:     unsigned char Data;;I2C.c: 87:     RCEN = 1;
  2887  033B  1683               	bsf	3,5	;RP0=1, select bank1
  2888  033C  1303               	bcf	3,6	;RP1=0, select bank1
  2889  033D  1591               	bsf	17,3	;volatile
  2890  033E                     l82:	
  2891                           ;I2C.c: 88:     while(!BF);
  2892                           
  2893  033E  1C14               	btfss	20,0	;volatile
  2894  033F  2B41               	goto	u791
  2895  0340  2B42               	goto	u790
  2896  0341                     u791:
  2897  0341  2B3E               	goto	l82
  2898  0342                     u790:
  2899  0342                     l1313:
  2900                           
  2901                           ;I2C.c: 89:     Data = SSPBUF;
  2902  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2903  0343  1303               	bcf	3,6	;RP1=0, select bank0
  2904  0344  0813               	movf	19,w	;volatile
  2905  0345  00F0               	movwf	??_I2C_Read
  2906  0346  0870               	movf	??_I2C_Read,w
  2907  0347  00F2               	movwf	I2C_Read@Data
  2908  0348                     l1315:
  2909                           
  2910                           ;I2C.c: 90:     if(ACK_NACK==0)
  2911  0348  0871               	movf	I2C_Read@ACK_NACK,w
  2912  0349  1D03               	btfss	3,2
  2913  034A  2B4C               	goto	u801
  2914  034B  2B4D               	goto	u800
  2915  034C                     u801:
  2916  034C  2B53               	goto	l1319
  2917  034D                     u800:
  2918  034D                     l1317:
  2919                           
  2920                           ;I2C.c: 91:         I2C_ACK();
  2921  034D  120A  118A  22CB  120A  118A  	fcall	_I2C_ACK
  2922  0352  2B58               	goto	l87
  2923  0353                     l1319:
  2924                           
  2925                           ;I2C.c: 93:         I2C_NACK();
  2926  0353  120A  118A  22D4  120A  118A  	fcall	_I2C_NACK
  2927  0358                     l87:
  2928  0358  1283               	bcf	3,5	;RP0=0, select bank0
  2929  0359  1303               	bcf	3,6	;RP1=0, select bank0
  2930  035A  1D8C               	btfss	12,3	;volatile
  2931  035B  2B5D               	goto	u811
  2932  035C  2B5E               	goto	u810
  2933  035D                     u811:
  2934  035D  2B58               	goto	l87
  2935  035E                     u810:
  2936  035E                     l89:
  2937                           
  2938                           ;I2C.c: 95:     SSPIF=0;
  2939  035E  118C               	bcf	12,3	;volatile
  2940  035F                     l1321:
  2941                           
  2942                           ;I2C.c: 96:     return Data;
  2943  035F  0872               	movf	I2C_Read@Data,w
  2944  0360                     l90:
  2945  0360  0008               	return
  2946  0361                     __end_of_I2C_Read:
  2947                           
  2948                           	psect	text14
  2949  02D4                     __ptext14:	
  2950 ;; *************** function _I2C_NACK *****************
  2951 ;; Defined at:
  2952 ;;		line 56 in file "I2C.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;		None
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;		None
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      void 
  2959 ;; Registers used:
  2960 ;;		None
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2966 ;;      Params:         0       0       0       0       0
  2967 ;;      Locals:         0       0       0       0       0
  2968 ;;      Temps:          0       0       0       0       0
  2969 ;;      Totals:         0       0       0       0       0
  2970 ;;Total ram usage:        0 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; This function calls:
  2973 ;;		Nothing
  2974 ;; This function is called by:
  2975 ;;		_I2C_Read
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           
  2980                           ;psect for function _I2C_NACK
  2981  02D4                     _I2C_NACK:
  2982  02D4                     l1213:	
  2983                           ;incstack = 0
  2984                           ; Regs used in _I2C_NACK: []
  2985                           
  2986                           
  2987                           ;I2C.c: 58:  ACKDT = 1;
  2988  02D4  1683               	bsf	3,5	;RP0=1, select bank1
  2989  02D5  1303               	bcf	3,6	;RP1=0, select bank1
  2990  02D6  1691               	bsf	17,5	;volatile
  2991                           
  2992                           ;I2C.c: 59:  ACKEN = 1;
  2993  02D7  1611               	bsf	17,4	;volatile
  2994  02D8                     l64:	
  2995                           ;I2C.c: 60:     while(ACKEN);
  2996                           
  2997  02D8  1A11               	btfsc	17,4	;volatile
  2998  02D9  2ADB               	goto	u571
  2999  02DA  2ADC               	goto	u570
  3000  02DB                     u571:
  3001  02DB  2AD8               	goto	l64
  3002  02DC                     u570:
  3003  02DC                     l67:
  3004  02DC  0008               	return
  3005  02DD                     __end_of_I2C_NACK:
  3006                           
  3007                           	psect	text15
  3008  02CB                     __ptext15:	
  3009 ;; *************** function _I2C_ACK *****************
  3010 ;; Defined at:
  3011 ;;		line 49 in file "I2C.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;		None
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		None
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3025 ;;      Params:         0       0       0       0       0
  3026 ;;      Locals:         0       0       0       0       0
  3027 ;;      Temps:          0       0       0       0       0
  3028 ;;      Totals:         0       0       0       0       0
  3029 ;;Total ram usage:        0 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; This function calls:
  3032 ;;		Nothing
  3033 ;; This function is called by:
  3034 ;;		_I2C_Read
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           
  3039                           ;psect for function _I2C_ACK
  3040  02CB                     _I2C_ACK:
  3041  02CB                     l1211:	
  3042                           ;incstack = 0
  3043                           ; Regs used in _I2C_ACK: []
  3044                           
  3045                           
  3046                           ;I2C.c: 51:  ACKDT = 0;
  3047  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  3048  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  3049  02CD  1291               	bcf	17,5	;volatile
  3050                           
  3051                           ;I2C.c: 52:     ACKEN = 1;
  3052  02CE  1611               	bsf	17,4	;volatile
  3053  02CF                     l58:	
  3054                           ;I2C.c: 53:     while(ACKEN);
  3055                           
  3056  02CF  1A11               	btfsc	17,4	;volatile
  3057  02D0  2AD2               	goto	u561
  3058  02D1  2AD3               	goto	u560
  3059  02D2                     u561:
  3060  02D2  2ACF               	goto	l58
  3061  02D3                     u560:
  3062  02D3                     l61:
  3063  02D3  0008               	return
  3064  02D4                     __end_of_I2C_ACK:
  3065                           
  3066                           	psect	text16
  3067  02C2                     __ptext16:	
  3068 ;; *************** function _I2C_Master_RepeatedStart *****************
  3069 ;; Defined at:
  3070 ;;		line 37 in file "I2C.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;		None
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;		None
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      void 
  3077 ;; Registers used:
  3078 ;;		wreg, status,2, status,0, pclath, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3084 ;;      Params:         0       0       0       0       0
  3085 ;;      Locals:         0       0       0       0       0
  3086 ;;      Temps:          0       0       0       0       0
  3087 ;;      Totals:         0       0       0       0       0
  3088 ;;Total ram usage:        0 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; Hardware stack levels required when called:    1
  3091 ;; This function calls:
  3092 ;;		_I2C_Master_Wait
  3093 ;; This function is called by:
  3094 ;;		_main
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           
  3099                           ;psect for function _I2C_Master_RepeatedStart
  3100  02C2                     _I2C_Master_RepeatedStart:
  3101  02C2                     l1305:	
  3102                           ;incstack = 0
  3103                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3104                           
  3105                           
  3106                           ;I2C.c: 39:     I2C_Master_Wait();
  3107  02C2  120A  118A  2308  120A  118A  	fcall	_I2C_Master_Wait
  3108  02C7                     l1307:
  3109                           
  3110                           ;I2C.c: 40:     RSEN = 1;
  3111  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  3112  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  3113  02C9  1491               	bsf	17,1	;volatile
  3114  02CA                     l52:
  3115  02CA  0008               	return
  3116  02CB                     __end_of_I2C_Master_RepeatedStart:
  3117                           
  3118                           	psect	text17
  3119  0308                     __ptext17:	
  3120 ;; *************** function _I2C_Master_Wait *****************
  3121 ;; Defined at:
  3122 ;;		line 19 in file "I2C.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;		None
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;		None
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		wreg, status,2
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3136 ;;      Params:         0       0       0       0       0
  3137 ;;      Locals:         0       0       0       0       0
  3138 ;;      Temps:          0       0       0       0       0
  3139 ;;      Totals:         0       0       0       0       0
  3140 ;;Total ram usage:        0 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; This function calls:
  3143 ;;		Nothing
  3144 ;; This function is called by:
  3145 ;;		_I2C_Master_Start
  3146 ;;		_I2C_Start
  3147 ;;		_I2C_Master_RepeatedStart
  3148 ;;		_I2C_Master_Stop
  3149 ;;		_I2C_Master_Write
  3150 ;;		_I2C_Read
  3151 ;;		_I2C_Read_Byte
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           
  3156                           ;psect for function _I2C_Master_Wait
  3157  0308                     _I2C_Master_Wait:
  3158  0308                     l1195:	
  3159                           ;incstack = 0
  3160                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3161                           
  3162  0308                     l40:	
  3163                           ;I2C.c: 21:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3164                           
  3165  0308  1683               	bsf	3,5	;RP0=1, select bank1
  3166  0309  1303               	bcf	3,6	;RP1=0, select bank1
  3167  030A  1914               	btfsc	20,2	;volatile
  3168  030B  2B0D               	goto	u531
  3169  030C  2B0E               	goto	u530
  3170  030D                     u531:
  3171  030D  2B08               	goto	l40
  3172  030E                     u530:
  3173  030E                     l1197:
  3174  030E  0811               	movf	17,w	;volatile
  3175  030F  391F               	andlw	31
  3176  0310  1D03               	btfss	3,2
  3177  0311  2B13               	goto	u541
  3178  0312  2B14               	goto	u540
  3179  0313                     u541:
  3180  0313  2B08               	goto	l40
  3181  0314                     u540:
  3182  0314                     l43:
  3183  0314  0008               	return
  3184  0315                     __end_of_I2C_Master_Wait:
  3185                           
  3186                           	psect	text18
  3187  02FB                     __ptext18:	
  3188 ;; *************** function _I2C_Master_Init *****************
  3189 ;; Defined at:
  3190 ;;		line 9 in file "I2C.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;		None
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;		None
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      void 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3204 ;;      Params:         0       0       0       0       0
  3205 ;;      Locals:         0       0       0       0       0
  3206 ;;      Temps:          0       0       0       0       0
  3207 ;;      Totals:         0       0       0       0       0
  3208 ;;Total ram usage:        0 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; This function calls:
  3211 ;;		Nothing
  3212 ;; This function is called by:
  3213 ;;		_main
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           
  3218                           ;psect for function _I2C_Master_Init
  3219  02FB                     _I2C_Master_Init:
  3220  02FB                     l1291:	
  3221                           ;incstack = 0
  3222                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  3223                           
  3224                           
  3225                           ;I2C.c: 11:   SSPCON = 0x28;
  3226  02FB  3028               	movlw	40
  3227  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  3228  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  3229  02FE  0094               	movwf	20	;volatile
  3230  02FF                     l1293:
  3231                           
  3232                           ;I2C.c: 12:   SSPCON2 = 0x00;
  3233  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  3234  0300  1303               	bcf	3,6	;RP1=0, select bank1
  3235  0301  0191               	clrf	17	;volatile
  3236  0302                     l1295:
  3237                           
  3238                           ;I2C.c: 13:   SSPSTAT = 0x00;
  3239  0302  0194               	clrf	20	;volatile
  3240                           
  3241                           ;I2C.c: 14:   SSPADD = ((4000000/4)/100000) - 1;
  3242  0303  3009               	movlw	9
  3243  0304  0093               	movwf	19	;volatile
  3244  0305                     l1297:
  3245                           
  3246                           ;I2C.c: 15:   TRISC3 = 1;
  3247  0305  1587               	bsf	7,3	;volatile
  3248  0306                     l1299:
  3249                           
  3250                           ;I2C.c: 16:   TRISC4 = 1;
  3251  0306  1607               	bsf	7,4	;volatile
  3252  0307                     l37:
  3253  0307  0008               	return
  3254  0308                     __end_of_I2C_Master_Init:
  3255  007E                     btemp	set	126	;btemp
  3256  007E                     wtemp0	set	126
  3257                           
  3258                           	psect	config
  3259                           
  3260                           ;Config register CONFIG1 @ 0x2007
  3261                           ;	Oscillator Selection bits
  3262                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3263                           ;	Watchdog Timer Enable bit
  3264                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3265                           ;	Power-up Timer Enable bit
  3266                           ;	PWRTE = OFF, PWRT disabled
  3267                           ;	RE3/MCLR pin function select bit
  3268                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3269                           ;	Code Protection bit
  3270                           ;	CP = OFF, Program memory code protection is disabled
  3271                           ;	Data Code Protection bit
  3272                           ;	CPD = OFF, Data memory code protection is disabled
  3273                           ;	Brown Out Reset Selection bits
  3274                           ;	BOREN = OFF, BOR disabled
  3275                           ;	Internal External Switchover bit
  3276                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3277                           ;	Fail-Safe Clock Monitor Enabled bit
  3278                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3279                           ;	Low Voltage Programming Enable bit
  3280                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3281                           ;	In-Circuit Debugger Mode bit
  3282                           ;	DEBUG = 0x1, unprogrammed default
  3283  2007                     	org	8199
  3284  2007  20D4               	dw	8404
  3285                           
  3286                           ;Config register CONFIG2 @ 0x2008
  3287                           ;	Brown-out Reset Selection bit
  3288                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3289                           ;	Flash Program Memory Self Write Enable bits
  3290                           ;	WRT = OFF, Write protection off
  3291  2008                     	org	8200
  3292  2008  3FFF               	dw	16383

Data Sizes:
    Strings     34
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     61      61
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_4(CODE[10]), STR_3(CODE[8]), STR_2(CODE[8]), STR_1(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 25
		 -> main@buffer(BANK0[25]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UARTSendString@str	PTR const unsigned char  size(1) Largest target is 25
		 -> main@buffer(BANK0[25]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _confMPU->_I2C_Master_Write
    _UARTSendString->_UARTSendChar
    _UARTInit->___lldiv
    _I2C_Start->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                48    48      0    3549
                                             13 BANK0     48    48      0
                    _I2C_Master_Init
           _I2C_Master_RepeatedStart
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                           _UARTInit
                       _UARTSendChar
                     _UARTSendString
                            _confMPU
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1538
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _confMPU                                              0     0      0      22
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       5     4      1     593
                                              1 COMMON     5     4      1
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             9     4      5     684
                                              0 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            1     1      0      44
                                              1 COMMON     1     1      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             3     3      0      45
                                              0 COMMON     3     3      0
                            _I2C_ACK
                    _I2C_Master_Wait
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (2) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _I2C_Read
     _I2C_ACK
     _I2C_Master_Wait
     _I2C_NACK
   _I2C_Start
     _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _UARTInit
     ___lldiv
   _UARTSendChar
   _UARTSendString
     _UARTSendChar
   _confMPU
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3D      3D       5       76.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Mar 02 10:58:15 2021

                UARTInit@baud_rate 0020                                  pc 0002  
               __size_of_I2C_Start 0010                                 _BF 04A0  
                               l40 0308                                 l43 0314  
                               l52 02CA                                 l37 0307  
                               l61 02D3                                 l70 031F  
                               l46 02E5                                 l55 02EE  
                               l64 02D8                                 l72 0323  
                               l73 0324                                 l49 0334  
                               l58 02CF                                 l90 0360  
                               l82 033E                                 l67 02DC  
                               l87 0358                                 l89 035E  
                               fsr 0004                                l131 06D3  
                              l134 06DF                                l207 05A2  
                              l128 06C7                                l137 06EB  
                              l163 04E3                                l317 068A  
                              l166 02F0                                l169 02FA  
                              l177 0390                                l603 03CA  
                              l357 0474                                l593 040E  
                              _PEN 048A                                u530 030E  
                              u610 0433                                u531 030D  
                              u611 0432                                u540 0314  
                              u700 03F6                                u541 0313  
                              u605 0424                                u701 03F5  
                              u550 0323                                u630 044E  
                              u551 0322                                u631 044D  
                              u560 02D3                                u800 034D  
                              u720 040A                                u561 02D2  
                              u801 034C                                u625 0435  
                              u721 0409                                u705 03F2  
                              u570 02DC                                u810 035E  
                              u650 046C                                u730 0397  
                              u571 02DB                                u811 035D  
                              u651 046B                                u635 044A  
                              u715 03FE                                u731 0396  
                              u820 047C                                u580 02F6  
                              u660 03D3                                u900 0674  
                              _SEN 0488                                u645 045E  
                              u821 047B                                u581 02F5  
                              u661 03D2                                u901 0673  
                              u590 041F                                u830 048A  
                              u750 03A9                                u910 0686  
                              u591 041E                                u751 03A8  
                              u911 0685                                u840 04B7  
                              u920 0385                                u680 03E5  
                              u760 03B3                                u921 0384  
                              u681 03E4                                u761 03B2  
                              u745 039B                                u930 0390  
                              u850 05B1                                u835 0485  
                              u931 038F                                u675 03D7  
                              u851 05B0                                u780 03C6  
                              u860 05EB                                u845 04B2  
                              u925 0381                                u781 03C5  
                              u765 03AF                                u861 05EA  
                              u790 0342                                u870 0611  
                              u950 06CD                                u791 0341  
                              u695 03E6                                u775 03BA  
                              u871 0610                                u951 06CC  
                              u880 061C                                u960 06D9  
                              u881 061B                                u961 06D8  
                              u890 0622                                u970 06E5  
                              u891 0621                                u875 060D  
                              u971 06E4                                u980 06F1  
                              u981 06F0                                u990 0722  
                              u991 0721                                u995 071E  
                  __end_of_I2C_ACK 02D4                                fsr0 0004  
                              indf 0000                               l1201 02E2  
                             l1211 02CB                               l1203 0316  
                             l1213 02D4                               l1205 031B  
                             l1301 0326                               l1221 041F  
                             l1311 033B                               l1303 032B  
                             l1231 044E                               l1223 0422  
                             l1215 02F0                               l1207 02E6  
                             l1305 02C2                               l1321 035F  
                             l1313 0342                               l1233 045C  
                             l1225 042F                               l1217 02F6  
                             l1209 02EB                               l1401 062D  
                             l1307 02C7                               l1315 0348  
                             l1235 045D                               l1227 0433  
                             l1219 040F                               l1331 04A9  
                             l1251 03DD                               l1243 03CB  
                             l1403 0632                               l1411 0674  
                             l1317 034D                               l1309 0336  
                             l1237 0466                               l1229 043C  
                             l1341 04D8                               l1333 04D4  
                             l1325 0475                               l1421 0362  
                             l1261 03FD                               l1253 03E1  
                             l1245 03CD                               l1405 0660  
                             l1413 0686                               l1501 07C2  
                             l1319 0353                               l1239 046C  
                             l1351 04DF                               l1343 04DB  
                             l1335 04D5                               l1327 047C  
                             l1423 0367                               l1263 0404  
                             l1255 03E5                               l1247 03D3  
                             l1271 0397                               l1407 0667  
                             l1503 07D2                               l1353 04E2  
                             l1345 04DC                               l1337 04D6  
                             l1329 04A7                               l1425 0372  
                             l1257 03F6                               l1249 03D6  
                             l1265 040A                               l1281 03B3  
                             l1273 039A                               l1409 066B  
                             l1361 05AB                               l1505 07E4  
                             l1441 068B                               l1291 02FB  
                             l1195 0308                               l1347 04DD  
                             l1339 04D7                               l1427 0378  
                             l1355 04E4                               l1259 03FC  
                             l1283 03B9                               l1275 03A1  
                             l1371 05BE                               l1363 05B1  
                             l1507 07F2                               l1451 06A7  
                             l1443 0699                               l1293 02FF  
                             l1197 030E                               l1349 04DE  
                             l1429 0385                               l1285 03C0  
                             l1277 03A5                               l1269 0391  
                             l1381 05EF                               l1373 05DB  
                             l1365 05B8                               l1461 06D9  
                             l1453 06B8                               l1445 069C  
                             l1295 0302                               l1199 02DD  
                             l1279 03A9                               l1287 03C6  
                             l1383 05F4                               l1375 05E3  
                             l1535 05D0                               l1367 05BD  
                             l1359 05A6                               l1463 06E5  
                             l1455 06BC                               l1447 069F  
                             l1297 0305                               l1393 0612  
                             l1377 05E7                               l1481 0732  
                             l1473 0700                               l1465 06F1  
                             l1457 06C1                               l1449 06A2  
                             l1299 0306                               l1395 061C  
                             l1379 05EB                               l1491 077E  
                             l1483 0743                               l1475 070F  
                             l1467 06FC                               l1459 06CD  
                             l1397 0622                               l1389 05F6  
                             l1493 078A                               l1485 0752  
                             l1477 0715                               l1399 0629  
                             l1495 079A                               l1487 0761  
                             l1479 0722                               l1497 07A6  
                             l1489 0770                               l1499 07B6  
                             STR_1 001D                               STR_2 0025  
                             STR_3 002D                               STR_4 0013  
                             u1007 0693                               u1017 07EC  
                             _RCEN 048B                               _RSEN 0489  
                 __end_of_I2C_NACK 02DD   __end_of_I2C_Master_RepeatedStart 02CB  
                             _main 068B                   __end_of_I2C_Read 0361  
                             btemp 007E                        main@valores 0053  
                             start 0000                   ?_I2C_Master_Init 0070  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                            ?_main 0070                              _ACKEN 048C  
                            _ACKDT 048D                              _ANSEL 0188  
                  __end_of___lldiv 0475                    __end_of___lwdiv 040F  
                  __end_of___lwmod 03CB                              _RCREG 001A  
                            _SPBRG 0099                              _PORTA 0005  
                            _TRISA 0085                              _SSPIF 0063  
                            _TXREG 0019                    __end_of_confMPU 05A3  
                 __end_of_UARTInit 04E4                    __end_of_dpowers 0013  
                            main@i 005B                  __end_of_I2C_Start 0335  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 068B  
                  __initialization 07FC                       __end_of_main 07FC  
                        ??_I2C_ACK 0070                             ??_main 002D  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0070  
               ??_I2C_Master_Start 0070                 ??_I2C_Master_Write 0070  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013           _I2C_Master_RepeatedStart 02C2  
                 I2C_Read@ACK_NACK 0071                          ??___lldiv 0078  
                        ??___lwdiv 0074                          ??___lwmod 007C  
          __size_of_UARTSendString 0030                          ??_confMPU 0071  
                        ?_I2C_NACK 0070                          ?_I2C_Read 0070  
                        ??_sprintf 0023            __end_of__initialization 07FC  
                   __pcstackCOMMON 0070                          ?_UARTInit 0020  
                       ??_I2C_NACK 0070                         ??_I2C_Read 0070  
         UARTSendString@max_length 0071                       I2C_Read@Data 0072  
                       __pmaintext 068B                         ??_UARTInit 0025  
                          _I2C_ACK 02CB                            _ACKSTAT 048E  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                       __stringtab 0003                      ?_UARTSendChar 0070  
                     I2C_Start@add 0071                          _I2C_Start 0325  
                          ___lldiv 040F                            ___lwdiv 03CB  
                          ___lwmod 0391                     _UARTSendString 0361  
                          _confMPU 04E4                            __ptext1 05A3  
                          __ptext2 0391                            __ptext3 03CB  
                          __ptext4 04E4                            __ptext5 02E6  
                          __ptext6 02DD                            __ptext7 0361  
                          __ptext8 02EF                            __ptext9 0475  
                          _dpowers 0009           __size_of_I2C_Master_Init 000D  
         __size_of_I2C_Master_Wait 000D           __size_of_I2C_Master_Stop 0009  
                          _sprintf 05A3                            main@val 004A  
             end_of_initialization 07FC                     ??_UARTSendChar 0070  
       ??_I2C_Master_RepeatedStart 0070                         ?_I2C_Start 0070  
        __size_of_I2C_Master_Start 0009          __size_of_I2C_Master_Write 0010  
                  ___lldiv@divisor 0070                    ___lldiv@counter 007D  
                        _RCSTAbits 0018             __end_of_UARTSendString 0391  
                __size_of_I2C_NACK 0009                          _TRISCbits 0087  
                __size_of_I2C_Read 002C                         main@buffer 0031  
                        _TXSTAbits 0098                         main@valorx 004B  
                       main@valory 004D                         main@valorz 004F  
                  ?_UARTSendString 0071                  __size_of_UARTInit 006F  
              start_initialization 07FC                  ??_I2C_Master_Init 0070  
                ??_I2C_Master_Wait 0070                  ??_I2C_Master_Stop 0070  
                      ??_I2C_Start 0071                           ?_I2C_ACK 0070  
             __end_of_UARTSendChar 02FB                          ___latbits 0002  
                    __pcstackBANK0 0020                        sprintf@flag 0027  
                      sprintf@prec 0028                   _I2C_Master_Start 02DD  
                 _I2C_Master_Write 0315                   ___lwdiv@dividend 0072  
                    UARTSendChar@c 0070                           ?___lldiv 0070  
                         ?___lwdiv 0070                           ?___lwmod 0078  
             I2C_Master_Write@data 0070                          __pstrings 0003  
                         ?_confMPU 0070                           _I2C_NACK 02D4  
                         _I2C_Read 0335                   ___lwdiv@quotient 0075  
                         ?_sprintf 0020                    UARTSendString@i 0073  
                         _PIR1bits 000C                           _UARTInit 0475  
                 __size_of_I2C_ACK 0009                        __stringbase 0008  
                 ??_UARTSendString 0072              __size_of_UARTSendChar 000C  
                     UARTInit@BRGH 0024  __size_of_I2C_Master_RepeatedStart 0009  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 0066  
                 __size_of___lwdiv 0044                   __size_of___lwmod 003A  
               __end_of__stringtab 0009                   __size_of_confMPU 00BF  
                       sprintf@val 0029                    _I2C_Master_Init 02FB  
                  _I2C_Master_Wait 0308                    _I2C_Master_Stop 02E6  
                  ___lwdiv@divisor 0070                    ___lwdiv@counter 0077  
                         __ptext10 040F                           __ptext11 0325  
                         __ptext12 0315                           __ptext13 0335  
                         __ptext14 02D4                           __ptext15 02CB  
                         __ptext16 02C2                           __ptext17 0308  
                         __ptext18 02FB                   __size_of_sprintf 00E8  
                     _UARTSendChar 02EF                      __size_of_main 0171  
                         main@temp 0051           __end_of_I2C_Master_Start 02E6  
         __end_of_I2C_Master_Write 0325                  UARTSendString@str 0075  
                        sprintf@ap 0026                          sprintf@sp 002B  
                 ___lwmod@dividend 007A                   ___lldiv@dividend 0074  
                        stringcode 0003            __end_of_I2C_Master_Init 0308  
          __end_of_I2C_Master_Wait 0315            __end_of_I2C_Master_Stop 02EF  
                         sprintf@c 002C                           sprintf@f 0020  
                 ___lldiv@quotient 0079                    ___lwmod@divisor 0078  
                  ___lwmod@counter 007D                           stringdir 0003  
                         stringtab 0003                        _SSPCON2bits 0091  
