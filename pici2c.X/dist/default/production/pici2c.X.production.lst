

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Mar 01 21:15:53 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0107                     	;# 
   357  0108                     	;# 
   358  0109                     	;# 
   359  010C                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010E                     	;# 
   363  010F                     	;# 
   364  0185                     	;# 
   365  0187                     	;# 
   366  0188                     	;# 
   367  0189                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370  0000                     	;# 
   371  0001                     	;# 
   372  0002                     	;# 
   373  0003                     	;# 
   374  0004                     	;# 
   375  0005                     	;# 
   376  0006                     	;# 
   377  0007                     	;# 
   378  0008                     	;# 
   379  0009                     	;# 
   380  000A                     	;# 
   381  000B                     	;# 
   382  000C                     	;# 
   383  000D                     	;# 
   384  000E                     	;# 
   385  000E                     	;# 
   386  000F                     	;# 
   387  0010                     	;# 
   388  0011                     	;# 
   389  0012                     	;# 
   390  0013                     	;# 
   391  0014                     	;# 
   392  0015                     	;# 
   393  0015                     	;# 
   394  0016                     	;# 
   395  0017                     	;# 
   396  0018                     	;# 
   397  0019                     	;# 
   398  001A                     	;# 
   399  001B                     	;# 
   400  001B                     	;# 
   401  001C                     	;# 
   402  001D                     	;# 
   403  001E                     	;# 
   404  001F                     	;# 
   405  0081                     	;# 
   406  0085                     	;# 
   407  0086                     	;# 
   408  0087                     	;# 
   409  0088                     	;# 
   410  0089                     	;# 
   411  008C                     	;# 
   412  008D                     	;# 
   413  008E                     	;# 
   414  008F                     	;# 
   415  0090                     	;# 
   416  0091                     	;# 
   417  0092                     	;# 
   418  0093                     	;# 
   419  0093                     	;# 
   420  0093                     	;# 
   421  0094                     	;# 
   422  0095                     	;# 
   423  0096                     	;# 
   424  0097                     	;# 
   425  0098                     	;# 
   426  0099                     	;# 
   427  009A                     	;# 
   428  009B                     	;# 
   429  009C                     	;# 
   430  009D                     	;# 
   431  009E                     	;# 
   432  009F                     	;# 
   433  0105                     	;# 
   434  0107                     	;# 
   435  0108                     	;# 
   436  0109                     	;# 
   437  010C                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  010E                     	;# 
   441  010F                     	;# 
   442  0185                     	;# 
   443  0187                     	;# 
   444  0188                     	;# 
   445  0189                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  001A                     _RCREG	set	26
   449  000C                     _PIR1bits	set	12
   450  0019                     _TXREG	set	25
   451  0018                     _RCSTAbits	set	24
   452  0005                     _PORTA	set	5
   453  0013                     _SSPBUF	set	19
   454  0014                     _SSPCON	set	20
   455  0063                     _SSPIF	set	99
   456  005E                     _PEIE	set	94
   457  005F                     _GIE	set	95
   458  0098                     _TXSTAbits	set	152
   459  0099                     _SPBRG	set	153
   460  0085                     _TRISA	set	133
   461  0091                     _SSPCON2bits	set	145
   462  0094                     _SSPSTAT	set	148
   463  0087                     _TRISCbits	set	135
   464  0091                     _SSPCON2	set	145
   465  0094                     _SSPSTATbits	set	148
   466  0093                     _SSPADD	set	147
   467  0463                     _SSPIE	set	1123
   468  043C                     _TRISC4	set	1084
   469  043B                     _TRISC3	set	1083
   470  0188                     _ANSEL	set	392
   471                           
   472                           	psect	strings
   473  0003                     __pstrings:
   474  0003                     stringtab:
   475  0003                     __stringtab:
   476  0003                     stringcode:	
   477                           ;	String table - string pointers are 1 byte each
   478                           
   479  0003                     stringdir:
   480  0003  3000               	movlw	high stringdir
   481  0004  008A               	movwf	10
   482  0005  0804               	movf	4,w
   483  0006  0A84               	incf	4,f
   484  0007  0782               	addwf	2,f
   485  0008                     __stringbase:
   486  0008  3400               	retlw	0
   487  0009                     __end_of__stringtab:
   488  0009                     STR_1:
   489  0009  3444               	retlw	68	;'D'
   490  000A  3469               	retlw	105	;'i'
   491  000B  3472               	retlw	114	;'r'
   492  000C  343A               	retlw	58	;':'
   493  000D  3420               	retlw	32	;' '
   494  000E  3425               	retlw	37	;'%'
   495  000F  3462               	retlw	98	;'b'
   496  0010  3400               	retlw	0
   497                           
   498                           	psect	cinit
   499  07FC                     start_initialization:	
   500                           ; #config settings
   501                           
   502  07FC                     __initialization:
   503  07FC                     end_of_initialization:	
   504                           ;End of C runtime variable initialization code
   505                           
   506  07FC                     __end_of__initialization:
   507  07FC  0183               	clrf	3
   508  07FD  120A  118A  2E69   	ljmp	_main	;jump to C main() function
   509                           
   510                           	psect	cstackCOMMON
   511  0070                     __pcstackCOMMON:
   512  0070                     ?_confMPU:
   513  0070                     ?_UARTSendChar:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ??_UARTSendChar:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_I2C_Master_Wait:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ??_I2C_Master_Wait:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_I2C_Master_Start:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ??_I2C_Master_Start:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_I2C_Master_Stop:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ??_I2C_Master_Stop:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_I2C_Master_Write:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_main:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_sprintf:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_I2C_Master_Read:	
   547                           ; 2 bytes @ 0x0
   548                           
   549  0070                     ?___lldiv:	
   550                           ; 2 bytes @ 0x0
   551                           
   552  0070                     UARTSendChar@c:	
   553                           ; 4 bytes @ 0x0
   554                           
   555  0070                     sprintf@f:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     I2C_Master_Write@d:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     I2C_Master_Read@a:	
   562                           ; 2 bytes @ 0x0
   563                           
   564  0070                     ___lldiv@divisor:	
   565                           ; 2 bytes @ 0x0
   566                           
   567                           
   568                           ; 4 bytes @ 0x0
   569  0070                     	ds	1
   570  0071                     ?_UARTSendString:
   571  0071                     UARTSendString@max_length:	
   572                           ; 1 bytes @ 0x1
   573                           
   574                           
   575                           ; 1 bytes @ 0x1
   576  0071                     	ds	1
   577  0072                     ??_confMPU:
   578  0072                     ??_UARTSendString:	
   579                           ; 1 bytes @ 0x2
   580                           
   581  0072                     ??_I2C_Master_Write:	
   582                           ; 1 bytes @ 0x2
   583                           
   584  0072                     ??_I2C_Master_Read:	
   585                           ; 1 bytes @ 0x2
   586                           
   587                           
   588                           ; 1 bytes @ 0x2
   589  0072                     	ds	1
   590  0073                     ??_sprintf:
   591  0073                     UARTSendString@str:	
   592                           ; 1 bytes @ 0x3
   593                           
   594                           
   595                           ; 1 bytes @ 0x3
   596  0073                     	ds	1
   597  0074                     sprintf@ap:
   598  0074                     I2C_Master_Read@temp:	
   599                           ; 1 bytes @ 0x4
   600                           
   601  0074                     UARTSendString@i:	
   602                           ; 2 bytes @ 0x4
   603                           
   604  0074                     ___lldiv@dividend:	
   605                           ; 2 bytes @ 0x4
   606                           
   607                           
   608                           ; 4 bytes @ 0x4
   609  0074                     	ds	1
   610  0075                     sprintf@c:
   611                           
   612                           ; 1 bytes @ 0x5
   613  0075                     	ds	1
   614  0076                     sprintf@sp:
   615                           
   616                           ; 1 bytes @ 0x6
   617  0076                     	ds	2
   618  0078                     ??___lldiv:
   619                           
   620                           ; 1 bytes @ 0x8
   621  0078                     	ds	1
   622  0079                     ___lldiv@quotient:
   623                           
   624                           ; 4 bytes @ 0x9
   625  0079                     	ds	4
   626  007D                     ___lldiv@counter:
   627                           
   628                           ; 1 bytes @ 0xD
   629  007D                     	ds	1
   630                           
   631                           	psect	cstackBANK0
   632  0020                     __pcstackBANK0:
   633  0020                     ?_UARTInit:
   634  0020                     ?_I2C_Master_Init:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0020                     I2C_Master_Init@c:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0020                     UARTInit@baud_rate:	
   641                           ; 4 bytes @ 0x0
   642                           
   643                           
   644                           ; 4 bytes @ 0x0
   645  0020                     	ds	4
   646  0024                     ??_I2C_Master_Init:
   647  0024                     UARTInit@BRGH:	
   648                           ; 1 bytes @ 0x4
   649                           
   650                           
   651                           ; 1 bytes @ 0x4
   652  0024                     	ds	1
   653  0025                     ??_UARTInit:
   654                           
   655                           ; 1 bytes @ 0x5
   656  0025                     	ds	4
   657  0029                     ??_main:
   658                           
   659                           ; 1 bytes @ 0x9
   660  0029                     	ds	2
   661  002B                     main@buffer:
   662                           
   663                           ; 15 bytes @ 0xB
   664  002B                     	ds	15
   665  003A                     main@valor:
   666                           
   667                           ; 2 bytes @ 0x1A
   668  003A                     	ds	2
   669                           
   670                           	psect	maintext
   671  0669                     __pmaintext:	
   672 ;;
   673 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   674 ;;
   675 ;; *************** function _main *****************
   676 ;; Defined at:
   677 ;;		line 34 in file "main.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;		None
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  valor           2   26[BANK0 ] int 
   682 ;;  buffer         15   11[BANK0 ] unsigned char [15]
   683 ;;  datos          14    0        int [7]
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   688 ;; Tracked objects:
   689 ;;		On entry : B00/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   693 ;;      Params:         0       0       0       0       0
   694 ;;      Locals:         0      17       0       0       0
   695 ;;      Temps:          0       2       0       0       0
   696 ;;      Totals:         0      19       0       0       0
   697 ;;Total ram usage:       19 bytes
   698 ;; Hardware stack levels required when called:    3
   699 ;; This function calls:
   700 ;;		_I2C_Master_Init
   701 ;;		_I2C_Master_Read
   702 ;;		_I2C_Master_Start
   703 ;;		_I2C_Master_Stop
   704 ;;		_I2C_Master_Write
   705 ;;		_UARTInit
   706 ;;		_UARTSendChar
   707 ;;		_UARTSendString
   708 ;;		_confMPU
   709 ;;		_sprintf
   710 ;; This function is called by:
   711 ;;		Startup code after reset
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           
   716                           ;psect for function _main
   717  0669                     _main:
   718  0669                     l1120:	
   719                           ;incstack = 0
   720                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   721                           
   722                           
   723                           ;main.c: 35:     ANSEL = 0;
   724  0669  1683               	bsf	3,5	;RP0=1, select bank3
   725  066A  1703               	bsf	3,6	;RP1=1, select bank3
   726  066B  0188               	clrf	8	;volatile
   727                           
   728                           ;main.c: 36:     TRISA = 0;
   729  066C  1683               	bsf	3,5	;RP0=1, select bank1
   730  066D  1303               	bcf	3,6	;RP1=0, select bank1
   731  066E  0185               	clrf	5	;volatile
   732                           
   733                           ;main.c: 37:     PORTA = 0;
   734  066F  1283               	bcf	3,5	;RP0=0, select bank0
   735  0670  1303               	bcf	3,6	;RP1=0, select bank0
   736  0671  0185               	clrf	5	;volatile
   737  0672                     l1122:
   738                           
   739                           ;main.c: 38:     int datos[7];;main.c: 39:     char buffer[15];;main.c: 41:     I2C_Mast
      +                          er_Init(100000L);
   740  0672  3000               	movlw	0
   741  0673  00A3               	movwf	I2C_Master_Init@c+3
   742  0674  3001               	movlw	1
   743  0675  00A2               	movwf	I2C_Master_Init@c+2
   744  0676  3086               	movlw	134
   745  0677  00A1               	movwf	I2C_Master_Init@c+1
   746  0678  30A0               	movlw	160
   747  0679  00A0               	movwf	I2C_Master_Init@c
   748  067A  120A  118A  255C  120A  118A  	fcall	_I2C_Master_Init
   749  067F                     l1124:
   750                           
   751                           ;main.c: 42:     UARTInit(9600, 1);
   752  067F  3000               	movlw	0
   753  0680  1283               	bcf	3,5	;RP0=0, select bank0
   754  0681  1303               	bcf	3,6	;RP1=0, select bank0
   755  0682  00A3               	movwf	UARTInit@baud_rate+3
   756  0683  3000               	movlw	0
   757  0684  00A2               	movwf	UARTInit@baud_rate+2
   758  0685  3025               	movlw	37
   759  0686  00A1               	movwf	UARTInit@baud_rate+1
   760  0687  3080               	movlw	128
   761  0688  00A0               	movwf	UARTInit@baud_rate
   762  0689  01A4               	clrf	UARTInit@BRGH
   763  068A  0AA4               	incf	UARTInit@BRGH,f
   764  068B  120A  118A  25FA  120A  118A  	fcall	_UARTInit
   765  0690                     l1126:
   766                           
   767                           ;main.c: 43:     confMPU();
   768  0690  120A  118A  2706  120A  118A  	fcall	_confMPU
   769  0695                     l1128:
   770                           
   771                           ;main.c: 46:         PORTA = ~PORTA;
   772  0695  1283               	bcf	3,5	;RP0=0, select bank0
   773  0696  1303               	bcf	3,6	;RP1=0, select bank0
   774  0697  0985               	comf	5,f	;volatile
   775  0698                     l1130:
   776                           
   777                           ;main.c: 47:         I2C_Master_Start();
   778  0698  120A  118A  24A1  120A  118A  	fcall	_I2C_Master_Start
   779  069D                     l1132:
   780                           
   781                           ;main.c: 48:         I2C_Master_Write(0xD1);
   782  069D  30D1               	movlw	209
   783  069E  00F0               	movwf	I2C_Master_Write@d
   784  069F  3000               	movlw	0
   785  06A0  00F1               	movwf	I2C_Master_Write@d+1
   786  06A1  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
   787  06A6                     l1134:
   788                           
   789                           ;main.c: 49:         I2C_Master_Write(0x75);
   790  06A6  3075               	movlw	117
   791  06A7  00F0               	movwf	I2C_Master_Write@d
   792  06A8  3000               	movlw	0
   793  06A9  00F1               	movwf	I2C_Master_Write@d+1
   794  06AA  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
   795  06AF                     l1136:
   796                           
   797                           ;main.c: 50:         I2C_Master_Stop();
   798  06AF  120A  118A  24AA  120A  118A  	fcall	_I2C_Master_Stop
   799  06B4                     l1138:
   800                           
   801                           ;main.c: 52:         I2C_Master_Start();
   802  06B4  120A  118A  24A1  120A  118A  	fcall	_I2C_Master_Start
   803  06B9                     l1140:
   804                           
   805                           ;main.c: 53:         I2C_Master_Write(0xD0);
   806  06B9  30D0               	movlw	208
   807  06BA  00F0               	movwf	I2C_Master_Write@d
   808  06BB  3000               	movlw	0
   809  06BC  00F1               	movwf	I2C_Master_Write@d+1
   810  06BD  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
   811  06C2                     l1142:
   812                           
   813                           ;main.c: 54:         int valor = I2C_Master_Read(1);
   814  06C2  3001               	movlw	1
   815  06C3  00F0               	movwf	I2C_Master_Read@a
   816  06C4  3000               	movlw	0
   817  06C5  00F1               	movwf	I2C_Master_Read@a+1
   818  06C6  120A  118A  24FE  120A  118A  	fcall	_I2C_Master_Read
   819  06CB  0871               	movf	?_I2C_Master_Read+1,w
   820  06CC  1283               	bcf	3,5	;RP0=0, select bank0
   821  06CD  1303               	bcf	3,6	;RP1=0, select bank0
   822  06CE  00BB               	movwf	main@valor+1
   823  06CF  0870               	movf	?_I2C_Master_Read,w
   824  06D0  00BA               	movwf	main@valor
   825  06D1                     l1144:
   826                           
   827                           ;main.c: 55:         I2C_Master_Stop();
   828  06D1  120A  118A  24AA  120A  118A  	fcall	_I2C_Master_Stop
   829  06D6                     l1146:
   830                           
   831                           ;main.c: 57:         sprintf(buffer,"Dir: %b",valor);
   832  06D6  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   833  06D7  1283               	bcf	3,5	;RP0=0, select bank0
   834  06D8  1303               	bcf	3,6	;RP1=0, select bank0
   835  06D9  00A9               	movwf	??_main
   836  06DA  0829               	movf	??_main,w
   837  06DB  00F0               	movwf	sprintf@f
   838  06DC  083B               	movf	main@valor+1,w
   839  06DD  00F2               	movwf	?_sprintf+2
   840  06DE  083A               	movf	main@valor,w
   841  06DF  00F1               	movwf	?_sprintf+1
   842  06E0  302B               	movlw	(low (main@buffer| 0))& (0+255)
   843  06E1  120A  118A  24D6  120A  118A  	fcall	_sprintf
   844  06E6                     l1148:
   845                           
   846                           ;main.c: 59:         UARTSendString(buffer, 15);
   847  06E6  300F               	movlw	15
   848  06E7  1283               	bcf	3,5	;RP0=0, select bank0
   849  06E8  1303               	bcf	3,6	;RP1=0, select bank0
   850  06E9  00A9               	movwf	??_main
   851  06EA  0829               	movf	??_main,w
   852  06EB  00F1               	movwf	UARTSendString@max_length
   853  06EC  302B               	movlw	(low (main@buffer| 0))& (0+255)
   854  06ED  120A  118A  252C  120A  118A  	fcall	_UARTSendString
   855  06F2                     l1150:
   856                           
   857                           ;main.c: 60:         UARTSendChar('\n');
   858  06F2  300A               	movlw	10
   859  06F3  120A  118A  24BD  120A  118A  	fcall	_UARTSendChar
   860  06F8                     l1152:
   861                           
   862                           ;main.c: 61:         _delay((unsigned long)((100)*(4000000/4000.0)));
   863  06F8  3082               	movlw	130
   864  06F9  1283               	bcf	3,5	;RP0=0, select bank0
   865  06FA  1303               	bcf	3,6	;RP1=0, select bank0
   866  06FB  00AA               	movwf	??_main+1
   867  06FC  30DD               	movlw	221
   868  06FD  00A9               	movwf	??_main
   869  06FE                     u427:
   870  06FE  0BA9               	decfsz	??_main,f
   871  06FF  2EFE               	goto	u427
   872  0700  0BAA               	decfsz	??_main+1,f
   873  0701  2EFE               	goto	u427
   874  0702  2E95               	goto	l1128
   875  0703  120A  118A  2800   	ljmp	start
   876  0706                     __end_of_main:
   877                           
   878                           	psect	text1
   879  04D6                     __ptext1:	
   880 ;; *************** function _sprintf *****************
   881 ;; Defined at:
   882 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  sp              1    wreg     PTR unsigned char 
   885 ;;		 -> main@buffer(15), 
   886 ;;  f               1    0[COMMON] PTR const unsigned char 
   887 ;;		 -> STR_1(8), 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  sp              1    6[COMMON] PTR unsigned char 
   890 ;;		 -> main@buffer(15), 
   891 ;;  tmpval          4    0        struct .
   892 ;;  cp              2    0        PTR const unsigned char 
   893 ;;  len             2    0        unsigned int 
   894 ;;  val             2    0        unsigned int 
   895 ;;  c               1    5[COMMON] unsigned char 
   896 ;;  ap              1    4[COMMON] PTR void [1]
   897 ;;		 -> ?_sprintf(2), 
   898 ;;  flag            1    0        unsigned char 
   899 ;;  prec            1    0        char 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  2    0[COMMON] int 
   902 ;; Registers used:
   903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   909 ;;      Params:         3       0       0       0       0
   910 ;;      Locals:         3       0       0       0       0
   911 ;;      Temps:          1       0       0       0       0
   912 ;;      Totals:         7       0       0       0       0
   913 ;;Total ram usage:        7 bytes
   914 ;; Hardware stack levels used:    2
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           
   923                           ;psect for function _sprintf
   924  04D6                     _sprintf:
   925                           
   926                           ;incstack = 0
   927                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+pclath]
   928                           ;sprintf@sp stored from wreg
   929  04D6  00F6               	movwf	sprintf@sp
   930  04D7                     l1094:
   931                           
   932                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   933  04D7  3071               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   934  04D8  00F3               	movwf	??_sprintf
   935  04D9  0873               	movf	??_sprintf,w
   936  04DA  00F4               	movwf	sprintf@ap
   937                           
   938                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   939  04DB  2CE7               	goto	l1100
   940  04DC                     l1096:
   941                           
   942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   943  04DC  0875               	movf	sprintf@c,w
   944  04DD  00F3               	movwf	??_sprintf
   945  04DE  0876               	movf	sprintf@sp,w
   946  04DF  0084               	movwf	4
   947  04E0  0873               	movf	??_sprintf,w
   948  04E1  1383               	bcf	3,7	;select IRP bank0
   949  04E2  0080               	movwf	0
   950  04E3                     l1098:
   951  04E3  3001               	movlw	1
   952  04E4  00F3               	movwf	??_sprintf
   953  04E5  0873               	movf	??_sprintf,w
   954  04E6  07F6               	addwf	sprintf@sp,f
   955  04E7                     l1100:	
   956                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
   957                           
   958                           
   959                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   960  04E7  3001               	movlw	1
   961  04E8  07F0               	addwf	sprintf@f,f
   962  04E9  30FF               	movlw	-1
   963  04EA  0770               	addwf	sprintf@f,w
   964  04EB  0084               	movwf	4
   965  04EC  120A  118A  2003  120A  118A  	fcall	stringdir
   966  04F1  00F3               	movwf	??_sprintf
   967  04F2  0873               	movf	??_sprintf,w
   968  04F3  00F5               	movwf	sprintf@c
   969  04F4  0875               	movf	sprintf@c,w
   970  04F5  1D03               	btfss	3,2
   971  04F6  2CF8               	goto	u391
   972  04F7  2CF9               	goto	u390
   973  04F8                     u391:
   974  04F8  2CDC               	goto	l1096
   975  04F9                     u390:
   976  04F9                     l1102:
   977                           
   978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
   979  04F9  0876               	movf	sprintf@sp,w
   980  04FA  0084               	movwf	4
   981  04FB  1383               	bcf	3,7	;select IRP bank0
   982  04FC  0180               	clrf	0
   983  04FD                     l248:
   984  04FD  0008               	return
   985  04FE                     __end_of_sprintf:
   986                           
   987                           	psect	text2
   988  0706                     __ptext2:	
   989 ;; *************** function _confMPU *****************
   990 ;; Defined at:
   991 ;;		line 58 in file "MPU6050.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;		None
   994 ;; Auto vars:     Size  Location     Type
   995 ;;		None
   996 ;; Return value:  Size  Location     Type
   997 ;;                  1    wreg      void 
   998 ;; Registers used:
   999 ;;		wreg, status,2, status,0, pclath, cstack
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1005 ;;      Params:         0       0       0       0       0
  1006 ;;      Locals:         0       0       0       0       0
  1007 ;;      Temps:          0       0       0       0       0
  1008 ;;      Totals:         0       0       0       0       0
  1009 ;;Total ram usage:        0 bytes
  1010 ;; Hardware stack levels used:    1
  1011 ;; Hardware stack levels required when called:    2
  1012 ;; This function calls:
  1013 ;;		_I2C_Master_Start
  1014 ;;		_I2C_Master_Stop
  1015 ;;		_I2C_Master_Write
  1016 ;; This function is called by:
  1017 ;;		_main
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           
  1022                           ;psect for function _confMPU
  1023  0706                     _confMPU:
  1024  0706                     l1090:	
  1025                           ;incstack = 0
  1026                           ; Regs used in _confMPU: [wreg+status,2+status,0+pclath+cstack]
  1027                           
  1028                           
  1029                           ;MPU6050.c: 60:     I2C_Master_Start();
  1030  0706  120A  118A  24A1  120A  118A  	fcall	_I2C_Master_Start
  1031                           
  1032                           ;MPU6050.c: 61:     I2C_Master_Write(0x68);
  1033  070B  3068               	movlw	104
  1034  070C  00F0               	movwf	I2C_Master_Write@d
  1035  070D  3000               	movlw	0
  1036  070E  00F1               	movwf	I2C_Master_Write@d+1
  1037  070F  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
  1038                           
  1039                           ;MPU6050.c: 62:     I2C_Master_Write(0x00);
  1040  0714  3000               	movlw	0
  1041  0715  00F0               	movwf	I2C_Master_Write@d
  1042  0716  00F1               	movwf	I2C_Master_Write@d+1
  1043  0717  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
  1044                           
  1045                           ;MPU6050.c: 63:     I2C_Master_Stop();
  1046  071C  120A  118A  24AA  120A  118A  	fcall	_I2C_Master_Stop
  1047                           
  1048                           ;MPU6050.c: 66:     I2C_Master_Start();
  1049  0721  120A  118A  24A1  120A  118A  	fcall	_I2C_Master_Start
  1050                           
  1051                           ;MPU6050.c: 67:     I2C_Master_Write(0x68);
  1052  0726  3068               	movlw	104
  1053  0727  00F0               	movwf	I2C_Master_Write@d
  1054  0728  3000               	movlw	0
  1055  0729  00F1               	movwf	I2C_Master_Write@d+1
  1056  072A  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
  1057                           
  1058                           ;MPU6050.c: 68:     I2C_Master_Write(0x19);
  1059  072F  3019               	movlw	25
  1060  0730  00F0               	movwf	I2C_Master_Write@d
  1061  0731  3000               	movlw	0
  1062  0732  00F1               	movwf	I2C_Master_Write@d+1
  1063  0733  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
  1064                           
  1065                           ;MPU6050.c: 69:     I2C_Master_Write(0x08);
  1066  0738  3008               	movlw	8
  1067  0739  00F0               	movwf	I2C_Master_Write@d
  1068  073A  3000               	movlw	0
  1069  073B  00F1               	movwf	I2C_Master_Write@d+1
  1070  073C  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
  1071                           
  1072                           ;MPU6050.c: 70:     I2C_Master_Stop();
  1073  0741  120A  118A  24AA  120A  118A  	fcall	_I2C_Master_Stop
  1074                           
  1075                           ;MPU6050.c: 72:     I2C_Master_Start();
  1076  0746  120A  118A  24A1  120A  118A  	fcall	_I2C_Master_Start
  1077                           
  1078                           ;MPU6050.c: 73:     I2C_Master_Write(0x68);
  1079  074B  3068               	movlw	104
  1080  074C  00F0               	movwf	I2C_Master_Write@d
  1081  074D  3000               	movlw	0
  1082  074E  00F1               	movwf	I2C_Master_Write@d+1
  1083  074F  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
  1084                           
  1085                           ;MPU6050.c: 74:     I2C_Master_Write(0x1A);
  1086  0754  301A               	movlw	26
  1087  0755  00F0               	movwf	I2C_Master_Write@d
  1088  0756  3000               	movlw	0
  1089  0757  00F1               	movwf	I2C_Master_Write@d+1
  1090  0758  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
  1091                           
  1092                           ;MPU6050.c: 75:     I2C_Master_Write(0x00);
  1093  075D  3000               	movlw	0
  1094  075E  00F0               	movwf	I2C_Master_Write@d
  1095  075F  00F1               	movwf	I2C_Master_Write@d+1
  1096  0760  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
  1097                           
  1098                           ;MPU6050.c: 76:     I2C_Master_Stop();
  1099  0765  120A  118A  24AA  120A  118A  	fcall	_I2C_Master_Stop
  1100                           
  1101                           ;MPU6050.c: 78:     I2C_Master_Start();
  1102  076A  120A  118A  24A1  120A  118A  	fcall	_I2C_Master_Start
  1103                           
  1104                           ;MPU6050.c: 79:     I2C_Master_Write(0x68);
  1105  076F  3068               	movlw	104
  1106  0770  00F0               	movwf	I2C_Master_Write@d
  1107  0771  3000               	movlw	0
  1108  0772  00F1               	movwf	I2C_Master_Write@d+1
  1109  0773  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
  1110                           
  1111                           ;MPU6050.c: 80:     I2C_Master_Write(0x1B);
  1112  0778  301B               	movlw	27
  1113  0779  00F0               	movwf	I2C_Master_Write@d
  1114  077A  3000               	movlw	0
  1115  077B  00F1               	movwf	I2C_Master_Write@d+1
  1116  077C  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
  1117                           
  1118                           ;MPU6050.c: 81:     I2C_Master_Write(0x00);
  1119  0781  3000               	movlw	0
  1120  0782  00F0               	movwf	I2C_Master_Write@d
  1121  0783  00F1               	movwf	I2C_Master_Write@d+1
  1122  0784  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
  1123                           
  1124                           ;MPU6050.c: 82:     I2C_Master_Stop();
  1125  0789  120A  118A  24AA  120A  118A  	fcall	_I2C_Master_Stop
  1126                           
  1127                           ;MPU6050.c: 84:     I2C_Master_Start();
  1128  078E  120A  118A  24A1  120A  118A  	fcall	_I2C_Master_Start
  1129                           
  1130                           ;MPU6050.c: 85:     I2C_Master_Write(0x68);
  1131  0793  3068               	movlw	104
  1132  0794  00F0               	movwf	I2C_Master_Write@d
  1133  0795  3000               	movlw	0
  1134  0796  00F1               	movwf	I2C_Master_Write@d+1
  1135  0797  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
  1136                           
  1137                           ;MPU6050.c: 86:     I2C_Master_Write(0x1C);
  1138  079C  301C               	movlw	28
  1139  079D  00F0               	movwf	I2C_Master_Write@d
  1140  079E  3000               	movlw	0
  1141  079F  00F1               	movwf	I2C_Master_Write@d+1
  1142  07A0  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
  1143                           
  1144                           ;MPU6050.c: 87:     I2C_Master_Write(0x00);
  1145  07A5  3000               	movlw	0
  1146  07A6  00F0               	movwf	I2C_Master_Write@d
  1147  07A7  00F1               	movwf	I2C_Master_Write@d+1
  1148  07A8  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
  1149                           
  1150                           ;MPU6050.c: 88:     I2C_Master_Stop();
  1151  07AD  120A  118A  24AA  120A  118A  	fcall	_I2C_Master_Stop
  1152                           
  1153                           ;MPU6050.c: 90:     I2C_Master_Start();
  1154  07B2  120A  118A  24A1  120A  118A  	fcall	_I2C_Master_Start
  1155                           
  1156                           ;MPU6050.c: 91:     I2C_Master_Write(0x68);
  1157  07B7  3068               	movlw	104
  1158  07B8  00F0               	movwf	I2C_Master_Write@d
  1159  07B9  3000               	movlw	0
  1160  07BA  00F1               	movwf	I2C_Master_Write@d+1
  1161  07BB  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
  1162                           
  1163                           ;MPU6050.c: 92:     I2C_Master_Write(0x6B);
  1164  07C0  306B               	movlw	107
  1165  07C1  00F0               	movwf	I2C_Master_Write@d
  1166  07C2  3000               	movlw	0
  1167  07C3  00F1               	movwf	I2C_Master_Write@d+1
  1168  07C4  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
  1169                           
  1170                           ;MPU6050.c: 93:     I2C_Master_Write(0x01);
  1171  07C9  3001               	movlw	1
  1172  07CA  00F0               	movwf	I2C_Master_Write@d
  1173  07CB  3000               	movlw	0
  1174  07CC  00F1               	movwf	I2C_Master_Write@d+1
  1175  07CD  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
  1176                           
  1177                           ;MPU6050.c: 94:     I2C_Master_Stop();
  1178  07D2  120A  118A  24AA  120A  118A  	fcall	_I2C_Master_Stop
  1179                           
  1180                           ;MPU6050.c: 96:     I2C_Master_Start();
  1181  07D7  120A  118A  24A1  120A  118A  	fcall	_I2C_Master_Start
  1182                           
  1183                           ;MPU6050.c: 97:     I2C_Master_Write(0x68);
  1184  07DC  3068               	movlw	104
  1185  07DD  00F0               	movwf	I2C_Master_Write@d
  1186  07DE  3000               	movlw	0
  1187  07DF  00F1               	movwf	I2C_Master_Write@d+1
  1188  07E0  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
  1189                           
  1190                           ;MPU6050.c: 98:     I2C_Master_Write(0x6C);
  1191  07E5  306C               	movlw	108
  1192  07E6  00F0               	movwf	I2C_Master_Write@d
  1193  07E7  3000               	movlw	0
  1194  07E8  00F1               	movwf	I2C_Master_Write@d+1
  1195  07E9  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
  1196                           
  1197                           ;MPU6050.c: 99:     I2C_Master_Write(0x00);
  1198  07EE  3000               	movlw	0
  1199  07EF  00F0               	movwf	I2C_Master_Write@d
  1200  07F0  00F1               	movwf	I2C_Master_Write@d+1
  1201  07F1  120A  118A  24B3  120A  118A  	fcall	_I2C_Master_Write
  1202                           
  1203                           ;MPU6050.c: 100:     I2C_Master_Stop();
  1204  07F6  120A  118A  24AA  120A  118A  	fcall	_I2C_Master_Stop
  1205  07FB                     l158:
  1206  07FB  0008               	return
  1207  07FC                     __end_of_confMPU:
  1208                           
  1209                           	psect	text3
  1210  04B3                     __ptext3:	
  1211 ;; *************** function _I2C_Master_Write *****************
  1212 ;; Defined at:
  1213 ;;		line 62 in file "I2C.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  d               2    0[COMMON] unsigned int 
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;		None
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  1    wreg      void 
  1220 ;; Registers used:
  1221 ;;		wreg, status,2, status,0, pclath, cstack
  1222 ;; Tracked objects:
  1223 ;;		On entry : 0/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1227 ;;      Params:         2       0       0       0       0
  1228 ;;      Locals:         0       0       0       0       0
  1229 ;;      Temps:          0       0       0       0       0
  1230 ;;      Totals:         2       0       0       0       0
  1231 ;;Total ram usage:        2 bytes
  1232 ;; Hardware stack levels used:    1
  1233 ;; Hardware stack levels required when called:    1
  1234 ;; This function calls:
  1235 ;;		_I2C_Master_Wait
  1236 ;; This function is called by:
  1237 ;;		_main
  1238 ;;		_confMPU
  1239 ;;		_readMPU
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           
  1244                           ;psect for function _I2C_Master_Write
  1245  04B3                     _I2C_Master_Write:
  1246  04B3                     l1000:	
  1247                           ;incstack = 0
  1248                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1249                           
  1250                           
  1251                           ;I2C.c: 63:     I2C_Master_Wait();
  1252  04B3  120A  118A  24C9  120A  118A  	fcall	_I2C_Master_Wait
  1253  04B8                     l1002:
  1254                           
  1255                           ;I2C.c: 64:     SSPBUF = d;
  1256  04B8  0870               	movf	I2C_Master_Write@d,w
  1257  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  1258  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  1259  04BB  0093               	movwf	19	;volatile
  1260  04BC                     l49:
  1261  04BC  0008               	return
  1262  04BD                     __end_of_I2C_Master_Write:
  1263                           
  1264                           	psect	text4
  1265  04AA                     __ptext4:	
  1266 ;; *************** function _I2C_Master_Stop *****************
  1267 ;; Defined at:
  1268 ;;		line 53 in file "I2C.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;		None
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      void 
  1275 ;; Registers used:
  1276 ;;		wreg, status,2, status,0, pclath, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1282 ;;      Params:         0       0       0       0       0
  1283 ;;      Locals:         0       0       0       0       0
  1284 ;;      Temps:          0       0       0       0       0
  1285 ;;      Totals:         0       0       0       0       0
  1286 ;;Total ram usage:        0 bytes
  1287 ;; Hardware stack levels used:    1
  1288 ;; Hardware stack levels required when called:    1
  1289 ;; This function calls:
  1290 ;;		_I2C_Master_Wait
  1291 ;; This function is called by:
  1292 ;;		_main
  1293 ;;		_confMPU
  1294 ;;		_readMPU
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           
  1299                           ;psect for function _I2C_Master_Stop
  1300  04AA                     _I2C_Master_Stop:
  1301  04AA                     l996:	
  1302                           ;incstack = 0
  1303                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1304                           
  1305                           
  1306                           ;I2C.c: 54:     I2C_Master_Wait();
  1307  04AA  120A  118A  24C9  120A  118A  	fcall	_I2C_Master_Wait
  1308  04AF                     l998:
  1309                           
  1310                           ;I2C.c: 55:     SSPCON2bits.PEN = 1;
  1311  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  1312  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  1313  04B1  1511               	bsf	17,2	;volatile
  1314  04B2                     l46:
  1315  04B2  0008               	return
  1316  04B3                     __end_of_I2C_Master_Stop:
  1317                           
  1318                           	psect	text5
  1319  04A1                     __ptext5:	
  1320 ;; *************** function _I2C_Master_Start *****************
  1321 ;; Defined at:
  1322 ;;		line 39 in file "I2C.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;		None
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;		None
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		wreg, status,2, status,0, pclath, cstack
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1336 ;;      Params:         0       0       0       0       0
  1337 ;;      Locals:         0       0       0       0       0
  1338 ;;      Temps:          0       0       0       0       0
  1339 ;;      Totals:         0       0       0       0       0
  1340 ;;Total ram usage:        0 bytes
  1341 ;; Hardware stack levels used:    1
  1342 ;; Hardware stack levels required when called:    1
  1343 ;; This function calls:
  1344 ;;		_I2C_Master_Wait
  1345 ;; This function is called by:
  1346 ;;		_main
  1347 ;;		_confMPU
  1348 ;;		_readMPU
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           
  1353                           ;psect for function _I2C_Master_Start
  1354  04A1                     _I2C_Master_Start:
  1355  04A1                     l992:	
  1356                           ;incstack = 0
  1357                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1358                           
  1359                           
  1360                           ;I2C.c: 40:     I2C_Master_Wait();
  1361  04A1  120A  118A  24C9  120A  118A  	fcall	_I2C_Master_Wait
  1362  04A6                     l994:
  1363                           
  1364                           ;I2C.c: 41:     SSPCON2bits.SEN = 1;
  1365  04A6  1683               	bsf	3,5	;RP0=1, select bank1
  1366  04A7  1303               	bcf	3,6	;RP1=0, select bank1
  1367  04A8  1411               	bsf	17,0	;volatile
  1368  04A9                     l40:
  1369  04A9  0008               	return
  1370  04AA                     __end_of_I2C_Master_Start:
  1371                           
  1372                           	psect	text6
  1373  052C                     __ptext6:	
  1374 ;; *************** function _UARTSendString *****************
  1375 ;; Defined at:
  1376 ;;		line 49 in file "UART.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;  str             1    wreg     PTR const unsigned char 
  1379 ;;		 -> main@buffer(15), 
  1380 ;;  max_length      1    1[COMMON] const unsigned char 
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;  str             1    3[COMMON] PTR const unsigned char 
  1383 ;;		 -> main@buffer(15), 
  1384 ;;  i               2    4[COMMON] int 
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1394 ;;      Params:         1       0       0       0       0
  1395 ;;      Locals:         3       0       0       0       0
  1396 ;;      Temps:          1       0       0       0       0
  1397 ;;      Totals:         5       0       0       0       0
  1398 ;;Total ram usage:        5 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; Hardware stack levels required when called:    1
  1401 ;; This function calls:
  1402 ;;		_UARTSendChar
  1403 ;; This function is called by:
  1404 ;;		_main
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           
  1409                           ;psect for function _UARTSendString
  1410  052C                     _UARTSendString:
  1411                           
  1412                           ;incstack = 0
  1413                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1414                           ;UARTSendString@str stored from wreg
  1415  052C  00F3               	movwf	UARTSendString@str
  1416  052D                     l1106:
  1417                           
  1418                           ;UART.c: 50:     int i = 0;
  1419  052D  01F4               	clrf	UARTSendString@i
  1420  052E  01F5               	clrf	UARTSendString@i+1
  1421                           
  1422                           ;UART.c: 51:     for (i=0 ; i<max_length && str[i]!='\0' ; i++) {
  1423  052F  01F4               	clrf	UARTSendString@i
  1424  0530  01F5               	clrf	UARTSendString@i+1
  1425  0531  2D43               	goto	l1112
  1426  0532                     l1108:
  1427                           
  1428                           ;UART.c: 52:         UARTSendChar(str[i]);
  1429  0532  0874               	movf	UARTSendString@i,w
  1430  0533  0773               	addwf	UARTSendString@str,w
  1431  0534  00F2               	movwf	??_UARTSendString
  1432  0535  0872               	movf	??_UARTSendString,w
  1433  0536  0084               	movwf	4
  1434  0537  0800               	movf	0,w
  1435  0538  120A  118A  24BD  120A  118A  	fcall	_UARTSendChar
  1436  053D                     l1110:
  1437                           
  1438                           ;UART.c: 53:     }
  1439  053D  3001               	movlw	1
  1440  053E  07F4               	addwf	UARTSendString@i,f
  1441  053F  1803               	skipnc
  1442  0540  0AF5               	incf	UARTSendString@i+1,f
  1443  0541  3000               	movlw	0
  1444  0542  07F5               	addwf	UARTSendString@i+1,f
  1445  0543                     l1112:
  1446  0543  0875               	movf	UARTSendString@i+1,w
  1447  0544  3A80               	xorlw	128
  1448  0545  00F2               	movwf	??_UARTSendString
  1449  0546  3080               	movlw	128
  1450  0547  0272               	subwf	??_UARTSendString,w
  1451  0548  1D03               	skipz
  1452  0549  2D4C               	goto	u405
  1453  054A  0871               	movf	UARTSendString@max_length,w
  1454  054B  0274               	subwf	UARTSendString@i,w
  1455  054C                     u405:
  1456  054C  1803               	skipnc
  1457  054D  2D4F               	goto	u401
  1458  054E  2D50               	goto	u400
  1459  054F                     u401:
  1460  054F  2D5B               	goto	l126
  1461  0550                     u400:
  1462  0550                     l1114:
  1463  0550  0874               	movf	UARTSendString@i,w
  1464  0551  0773               	addwf	UARTSendString@str,w
  1465  0552  00F2               	movwf	??_UARTSendString
  1466  0553  0872               	movf	??_UARTSendString,w
  1467  0554  0084               	movwf	4
  1468  0555  1383               	bcf	3,7	;select IRP bank0
  1469  0556  0800               	movf	0,w
  1470  0557  1D03               	btfss	3,2
  1471  0558  2D5A               	goto	u411
  1472  0559  2D5B               	goto	u410
  1473  055A                     u411:
  1474  055A  2D32               	goto	l1108
  1475  055B                     u410:
  1476  055B                     l126:
  1477  055B  0008               	return
  1478  055C                     __end_of_UARTSendString:
  1479                           
  1480                           	psect	text7
  1481  04BD                     __ptext7:	
  1482 ;; *************** function _UARTSendChar *****************
  1483 ;; Defined at:
  1484 ;;		line 39 in file "UART.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;  c               1    wreg     const unsigned char 
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;  c               1    0[COMMON] const unsigned char 
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  1    wreg      void 
  1491 ;; Registers used:
  1492 ;;		wreg
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1498 ;;      Params:         0       0       0       0       0
  1499 ;;      Locals:         1       0       0       0       0
  1500 ;;      Temps:          0       0       0       0       0
  1501 ;;      Totals:         1       0       0       0       0
  1502 ;;Total ram usage:        1 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; This function calls:
  1505 ;;		Nothing
  1506 ;; This function is called by:
  1507 ;;		_main
  1508 ;;		_UARTSendString
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           
  1513                           ;psect for function _UARTSendChar
  1514  04BD                     _UARTSendChar:
  1515                           
  1516                           ;incstack = 0
  1517                           ; Regs used in _UARTSendChar: [wreg]
  1518                           ;UARTSendChar@c stored from wreg
  1519  04BD  00F0               	movwf	UARTSendChar@c
  1520  04BE                     l1004:
  1521  04BE                     l115:	
  1522                           ;UART.c: 40:     while (TXSTAbits.TRMT == 0);
  1523                           
  1524  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  1525  04BF  1303               	bcf	3,6	;RP1=0, select bank1
  1526  04C0  1C98               	btfss	24,1	;volatile
  1527  04C1  2CC3               	goto	u261
  1528  04C2  2CC4               	goto	u260
  1529  04C3                     u261:
  1530  04C3  2CBE               	goto	l115
  1531  04C4                     u260:
  1532  04C4                     l1006:
  1533                           
  1534                           ;UART.c: 41:     TXREG = c;
  1535  04C4  0870               	movf	UARTSendChar@c,w
  1536  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  1537  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  1538  04C7  0099               	movwf	25	;volatile
  1539  04C8                     l118:
  1540  04C8  0008               	return
  1541  04C9                     __end_of_UARTSendChar:
  1542                           
  1543                           	psect	text8
  1544  05FA                     __ptext8:	
  1545 ;; *************** function _UARTInit *****************
  1546 ;; Defined at:
  1547 ;;		line 8 in file "UART.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  baud_rate       4    0[BANK0 ] const unsigned long 
  1550 ;;  BRGH            1    4[BANK0 ] const unsigned char 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;		None
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0, pclath, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1562 ;;      Params:         0       5       0       0       0
  1563 ;;      Locals:         0       0       0       0       0
  1564 ;;      Temps:          0       4       0       0       0
  1565 ;;      Totals:         0       9       0       0       0
  1566 ;;Total ram usage:        9 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    1
  1569 ;; This function calls:
  1570 ;;		___lldiv
  1571 ;; This function is called by:
  1572 ;;		_main
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           
  1577                           ;psect for function _UARTInit
  1578  05FA                     _UARTInit:
  1579  05FA                     l1060:	
  1580                           ;incstack = 0
  1581                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  1582                           
  1583                           
  1584                           ;UART.c: 10:     if (BRGH == 0) {
  1585  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  1586  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  1587  05FC  0824               	movf	UARTInit@BRGH,w
  1588  05FD  1D03               	btfss	3,2
  1589  05FE  2E00               	goto	u361
  1590  05FF  2E01               	goto	u360
  1591  0600                     u361:
  1592  0600  2E2E               	goto	l1066
  1593  0601                     u360:
  1594  0601                     l1062:
  1595                           
  1596                           ;UART.c: 11:         SPBRG = 4000000/(64*baud_rate) - 1;
  1597  0601  0820               	movf	UARTInit@baud_rate,w
  1598  0602  00A5               	movwf	??_UARTInit
  1599  0603  0821               	movf	UARTInit@baud_rate+1,w
  1600  0604  00A6               	movwf	??_UARTInit+1
  1601  0605  0822               	movf	UARTInit@baud_rate+2,w
  1602  0606  00A7               	movwf	??_UARTInit+2
  1603  0607  0823               	movf	UARTInit@baud_rate+3,w
  1604  0608  00A8               	movwf	??_UARTInit+3
  1605  0609  3006               	movlw	6
  1606  060A                     u375:
  1607  060A  1003               	clrc
  1608  060B  0DA5               	rlf	??_UARTInit,f
  1609  060C  0DA6               	rlf	??_UARTInit+1,f
  1610  060D  0DA7               	rlf	??_UARTInit+2,f
  1611  060E  0DA8               	rlf	??_UARTInit+3,f
  1612  060F                     u370:
  1613  060F  3EFF               	addlw	-1
  1614  0610  1D03               	skipz
  1615  0611  2E0A               	goto	u375
  1616  0612  0828               	movf	??_UARTInit+3,w
  1617  0613  00F3               	movwf	___lldiv@divisor+3
  1618  0614  0827               	movf	??_UARTInit+2,w
  1619  0615  00F2               	movwf	___lldiv@divisor+2
  1620  0616  0826               	movf	??_UARTInit+1,w
  1621  0617  00F1               	movwf	___lldiv@divisor+1
  1622  0618  0825               	movf	??_UARTInit,w
  1623  0619  00F0               	movwf	___lldiv@divisor
  1624  061A  3000               	movlw	0
  1625  061B  00F7               	movwf	___lldiv@dividend+3
  1626  061C  303D               	movlw	61
  1627  061D  00F6               	movwf	___lldiv@dividend+2
  1628  061E  3009               	movlw	9
  1629  061F  00F5               	movwf	___lldiv@dividend+1
  1630  0620  3000               	movlw	0
  1631  0621  00F4               	movwf	___lldiv@dividend
  1632  0622  120A  118A  2594  120A  118A  	fcall	___lldiv
  1633  0627  0870               	movf	?___lldiv,w
  1634  0628  3EFF               	addlw	255
  1635  0629  1683               	bsf	3,5	;RP0=1, select bank1
  1636  062A  1303               	bcf	3,6	;RP1=0, select bank1
  1637  062B  0099               	movwf	25	;volatile
  1638  062C                     l1064:
  1639                           
  1640                           ;UART.c: 12:         TXSTAbits.BRGH = 0;
  1641  062C  1118               	bcf	24,2	;volatile
  1642                           
  1643                           ;UART.c: 13:     } else {
  1644  062D  2E5A               	goto	l1070
  1645  062E                     l1066:
  1646                           
  1647                           ;UART.c: 14:         SPBRG = 4000000/(16*baud_rate) - 1;
  1648  062E  0820               	movf	UARTInit@baud_rate,w
  1649  062F  00A5               	movwf	??_UARTInit
  1650  0630  0821               	movf	UARTInit@baud_rate+1,w
  1651  0631  00A6               	movwf	??_UARTInit+1
  1652  0632  0822               	movf	UARTInit@baud_rate+2,w
  1653  0633  00A7               	movwf	??_UARTInit+2
  1654  0634  0823               	movf	UARTInit@baud_rate+3,w
  1655  0635  00A8               	movwf	??_UARTInit+3
  1656  0636  3004               	movlw	4
  1657  0637                     u385:
  1658  0637  1003               	clrc
  1659  0638  0DA5               	rlf	??_UARTInit,f
  1660  0639  0DA6               	rlf	??_UARTInit+1,f
  1661  063A  0DA7               	rlf	??_UARTInit+2,f
  1662  063B  0DA8               	rlf	??_UARTInit+3,f
  1663  063C                     u380:
  1664  063C  3EFF               	addlw	-1
  1665  063D  1D03               	skipz
  1666  063E  2E37               	goto	u385
  1667  063F  0828               	movf	??_UARTInit+3,w
  1668  0640  00F3               	movwf	___lldiv@divisor+3
  1669  0641  0827               	movf	??_UARTInit+2,w
  1670  0642  00F2               	movwf	___lldiv@divisor+2
  1671  0643  0826               	movf	??_UARTInit+1,w
  1672  0644  00F1               	movwf	___lldiv@divisor+1
  1673  0645  0825               	movf	??_UARTInit,w
  1674  0646  00F0               	movwf	___lldiv@divisor
  1675  0647  3000               	movlw	0
  1676  0648  00F7               	movwf	___lldiv@dividend+3
  1677  0649  303D               	movlw	61
  1678  064A  00F6               	movwf	___lldiv@dividend+2
  1679  064B  3009               	movlw	9
  1680  064C  00F5               	movwf	___lldiv@dividend+1
  1681  064D  3000               	movlw	0
  1682  064E  00F4               	movwf	___lldiv@dividend
  1683  064F  120A  118A  2594  120A  118A  	fcall	___lldiv
  1684  0654  0870               	movf	?___lldiv,w
  1685  0655  3EFF               	addlw	255
  1686  0656  1683               	bsf	3,5	;RP0=1, select bank1
  1687  0657  1303               	bcf	3,6	;RP1=0, select bank1
  1688  0658  0099               	movwf	25	;volatile
  1689  0659                     l1068:
  1690                           
  1691                           ;UART.c: 15:         TXSTAbits.BRGH = 1;
  1692  0659  1518               	bsf	24,2	;volatile
  1693  065A                     l1070:
  1694                           
  1695                           ;UART.c: 19:     TXSTAbits.TX9 = 0;
  1696  065A  1318               	bcf	24,6	;volatile
  1697  065B                     l1072:
  1698                           
  1699                           ;UART.c: 20:     TXSTAbits.TXEN = 1;
  1700  065B  1698               	bsf	24,5	;volatile
  1701  065C                     l1074:
  1702                           
  1703                           ;UART.c: 21:     TXSTAbits.SYNC = 0;
  1704  065C  1218               	bcf	24,4	;volatile
  1705  065D                     l1076:
  1706                           
  1707                           ;UART.c: 24:     RCSTAbits.SPEN = 1;
  1708  065D  1283               	bcf	3,5	;RP0=0, select bank0
  1709  065E  1303               	bcf	3,6	;RP1=0, select bank0
  1710  065F  1798               	bsf	24,7	;volatile
  1711  0660                     l1078:
  1712                           
  1713                           ;UART.c: 25:     RCSTAbits.RX9 = 0;
  1714  0660  1318               	bcf	24,6	;volatile
  1715  0661                     l1080:
  1716                           
  1717                           ;UART.c: 26:     RCSTAbits.CREN = 1;
  1718  0661  1618               	bsf	24,4	;volatile
  1719  0662                     l1082:
  1720                           
  1721                           ;UART.c: 27:     RCSTAbits.FERR = 0;
  1722  0662  1118               	bcf	24,2	;volatile
  1723  0663                     l1084:
  1724                           
  1725                           ;UART.c: 28:     RCSTAbits.OERR = 0;
  1726  0663  1098               	bcf	24,1	;volatile
  1727  0664                     l1086:
  1728                           
  1729                           ;UART.c: 31:     TRISCbits.TRISC7 = 1;
  1730  0664  1683               	bsf	3,5	;RP0=1, select bank1
  1731  0665  1303               	bcf	3,6	;RP1=0, select bank1
  1732  0666  1787               	bsf	7,7	;volatile
  1733  0667                     l1088:
  1734                           
  1735                           ;UART.c: 32:     TRISCbits.TRISC6 = 0;
  1736  0667  1307               	bcf	7,6	;volatile
  1737  0668                     l112:
  1738  0668  0008               	return
  1739  0669                     __end_of_UARTInit:
  1740                           
  1741                           	psect	text9
  1742  04FE                     __ptext9:	
  1743 ;; *************** function _I2C_Master_Read *****************
  1744 ;; Defined at:
  1745 ;;		line 70 in file "I2C.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;  a               2    0[COMMON] unsigned short 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  temp            2    4[COMMON] unsigned short 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  2    0[COMMON] unsigned short 
  1752 ;; Registers used:
  1753 ;;		wreg, status,2, status,0, pclath, cstack
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1759 ;;      Params:         2       0       0       0       0
  1760 ;;      Locals:         2       0       0       0       0
  1761 ;;      Temps:          2       0       0       0       0
  1762 ;;      Totals:         6       0       0       0       0
  1763 ;;Total ram usage:        6 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; Hardware stack levels required when called:    1
  1766 ;; This function calls:
  1767 ;;		_I2C_Master_Wait
  1768 ;; This function is called by:
  1769 ;;		_main
  1770 ;;		_readMPU
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           
  1775                           ;psect for function _I2C_Master_Read
  1776  04FE                     _I2C_Master_Read:
  1777  04FE                     l1044:	
  1778                           ;incstack = 0
  1779                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  1780                           
  1781                           
  1782                           ;I2C.c: 71:     unsigned short temp;;I2C.c: 72:     I2C_Master_Wait();
  1783  04FE  120A  118A  24C9  120A  118A  	fcall	_I2C_Master_Wait
  1784  0503                     l1046:
  1785                           
  1786                           ;I2C.c: 73:     SSPCON2bits.RCEN = 1;
  1787  0503  1683               	bsf	3,5	;RP0=1, select bank1
  1788  0504  1303               	bcf	3,6	;RP1=0, select bank1
  1789  0505  1591               	bsf	17,3	;volatile
  1790                           
  1791                           ;I2C.c: 74:     I2C_Master_Wait();
  1792  0506  120A  118A  24C9  120A  118A  	fcall	_I2C_Master_Wait
  1793  050B                     l1048:
  1794                           
  1795                           ;I2C.c: 75:     temp = SSPBUF;
  1796  050B  1283               	bcf	3,5	;RP0=0, select bank0
  1797  050C  1303               	bcf	3,6	;RP1=0, select bank0
  1798  050D  0813               	movf	19,w	;volatile
  1799  050E  00F2               	movwf	??_I2C_Master_Read
  1800  050F  01F3               	clrf	??_I2C_Master_Read+1
  1801  0510  0872               	movf	??_I2C_Master_Read,w
  1802  0511  00F4               	movwf	I2C_Master_Read@temp
  1803  0512  0873               	movf	??_I2C_Master_Read+1,w
  1804  0513  00F5               	movwf	I2C_Master_Read@temp+1
  1805  0514                     l1050:
  1806                           
  1807                           ;I2C.c: 76:     I2C_Master_Wait();
  1808  0514  120A  118A  24C9  120A  118A  	fcall	_I2C_Master_Wait
  1809  0519                     l1052:
  1810                           
  1811                           ;I2C.c: 77:     if(a==1) SSPCON2bits.ACKDT = 1;
  1812  0519  0370               	decf	I2C_Master_Read@a,w
  1813  051A  0471               	iorwf	I2C_Master_Read@a+1,w
  1814  051B  1D03               	btfss	3,2
  1815  051C  2D1E               	goto	u351
  1816  051D  2D1F               	goto	u350
  1817  051E                     u351:
  1818  051E  2D23               	goto	l52
  1819  051F                     u350:
  1820  051F                     l1054:
  1821  051F  1683               	bsf	3,5	;RP0=1, select bank1
  1822  0520  1303               	bcf	3,6	;RP1=0, select bank1
  1823  0521  1691               	bsf	17,5	;volatile
  1824  0522  2D26               	goto	l53
  1825  0523                     l52:	
  1826                           ;I2C.c: 78:     else SSPCON2bits.ACKDT = 0;
  1827                           
  1828  0523  1683               	bsf	3,5	;RP0=1, select bank1
  1829  0524  1303               	bcf	3,6	;RP1=0, select bank1
  1830  0525  1291               	bcf	17,5	;volatile
  1831  0526                     l53:
  1832                           
  1833                           ;I2C.c: 79:     SSPCON2bits.ACKEN = 1;
  1834  0526  1611               	bsf	17,4	;volatile
  1835  0527                     l1056:
  1836                           
  1837                           ;I2C.c: 80:     return temp;
  1838  0527  0875               	movf	I2C_Master_Read@temp+1,w
  1839  0528  00F1               	movwf	?_I2C_Master_Read+1
  1840  0529  0874               	movf	I2C_Master_Read@temp,w
  1841  052A  00F0               	movwf	?_I2C_Master_Read
  1842  052B                     l54:
  1843  052B  0008               	return
  1844  052C                     __end_of_I2C_Master_Read:
  1845                           
  1846                           	psect	text10
  1847  04C9                     __ptext10:	
  1848 ;; *************** function _I2C_Master_Wait *****************
  1849 ;; Defined at:
  1850 ;;		line 33 in file "I2C.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;		None
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;		None
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		wreg, status,2
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1864 ;;      Params:         0       0       0       0       0
  1865 ;;      Locals:         0       0       0       0       0
  1866 ;;      Temps:          0       0       0       0       0
  1867 ;;      Totals:         0       0       0       0       0
  1868 ;;Total ram usage:        0 bytes
  1869 ;; Hardware stack levels used:    1
  1870 ;; This function calls:
  1871 ;;		Nothing
  1872 ;; This function is called by:
  1873 ;;		_I2C_Master_Start
  1874 ;;		_I2C_Master_Stop
  1875 ;;		_I2C_Master_Write
  1876 ;;		_I2C_Master_Read
  1877 ;;		_I2C_Master_RepeatedStart
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           
  1882                           ;psect for function _I2C_Master_Wait
  1883  04C9                     _I2C_Master_Wait:
  1884  04C9                     l988:	
  1885                           ;incstack = 0
  1886                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1887                           
  1888  04C9                     l34:	
  1889                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1890                           
  1891  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  1892  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  1893  04CB  1914               	btfsc	20,2	;volatile
  1894  04CC  2CCE               	goto	u241
  1895  04CD  2CCF               	goto	u240
  1896  04CE                     u241:
  1897  04CE  2CC9               	goto	l34
  1898  04CF                     u240:
  1899  04CF                     l990:
  1900  04CF  0811               	movf	17,w	;volatile
  1901  04D0  391F               	andlw	31
  1902  04D1  1D03               	btfss	3,2
  1903  04D2  2CD4               	goto	u251
  1904  04D3  2CD5               	goto	u250
  1905  04D4                     u251:
  1906  04D4  2CC9               	goto	l34
  1907  04D5                     u250:
  1908  04D5                     l37:
  1909  04D5  0008               	return
  1910  04D6                     __end_of_I2C_Master_Wait:
  1911                           
  1912                           	psect	text11
  1913  055C                     __ptext11:	
  1914 ;; *************** function _I2C_Master_Init *****************
  1915 ;; Defined at:
  1916 ;;		line 18 in file "I2C.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  c               4    0[BANK0 ] const unsigned long 
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;		None
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, status,2, status,0, pclath, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1930 ;;      Params:         0       4       0       0       0
  1931 ;;      Locals:         0       0       0       0       0
  1932 ;;      Temps:          0       4       0       0       0
  1933 ;;      Totals:         0       8       0       0       0
  1934 ;;Total ram usage:        8 bytes
  1935 ;; Hardware stack levels used:    1
  1936 ;; Hardware stack levels required when called:    1
  1937 ;; This function calls:
  1938 ;;		___lldiv
  1939 ;; This function is called by:
  1940 ;;		_main
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           
  1945                           ;psect for function _I2C_Master_Init
  1946  055C                     _I2C_Master_Init:
  1947  055C                     l1032:	
  1948                           ;incstack = 0
  1949                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1950                           
  1951                           
  1952                           ;I2C.c: 19:     SSPADD = (4000000/(4*c))-1;
  1953  055C  1283               	bcf	3,5	;RP0=0, select bank0
  1954  055D  1303               	bcf	3,6	;RP1=0, select bank0
  1955  055E  0820               	movf	I2C_Master_Init@c,w
  1956  055F  00A4               	movwf	??_I2C_Master_Init
  1957  0560  0821               	movf	I2C_Master_Init@c+1,w
  1958  0561  00A5               	movwf	??_I2C_Master_Init+1
  1959  0562  0822               	movf	I2C_Master_Init@c+2,w
  1960  0563  00A6               	movwf	??_I2C_Master_Init+2
  1961  0564  0823               	movf	I2C_Master_Init@c+3,w
  1962  0565  00A7               	movwf	??_I2C_Master_Init+3
  1963  0566  3002               	movlw	2
  1964  0567                     u345:
  1965  0567  1003               	clrc
  1966  0568  0DA4               	rlf	??_I2C_Master_Init,f
  1967  0569  0DA5               	rlf	??_I2C_Master_Init+1,f
  1968  056A  0DA6               	rlf	??_I2C_Master_Init+2,f
  1969  056B  0DA7               	rlf	??_I2C_Master_Init+3,f
  1970  056C                     u340:
  1971  056C  3EFF               	addlw	-1
  1972  056D  1D03               	skipz
  1973  056E  2D67               	goto	u345
  1974  056F  0827               	movf	??_I2C_Master_Init+3,w
  1975  0570  00F3               	movwf	___lldiv@divisor+3
  1976  0571  0826               	movf	??_I2C_Master_Init+2,w
  1977  0572  00F2               	movwf	___lldiv@divisor+2
  1978  0573  0825               	movf	??_I2C_Master_Init+1,w
  1979  0574  00F1               	movwf	___lldiv@divisor+1
  1980  0575  0824               	movf	??_I2C_Master_Init,w
  1981  0576  00F0               	movwf	___lldiv@divisor
  1982  0577  3000               	movlw	0
  1983  0578  00F7               	movwf	___lldiv@dividend+3
  1984  0579  303D               	movlw	61
  1985  057A  00F6               	movwf	___lldiv@dividend+2
  1986  057B  3009               	movlw	9
  1987  057C  00F5               	movwf	___lldiv@dividend+1
  1988  057D  3000               	movlw	0
  1989  057E  00F4               	movwf	___lldiv@dividend
  1990  057F  120A  118A  2594  120A  118A  	fcall	___lldiv
  1991  0584  0870               	movf	?___lldiv,w
  1992  0585  3EFF               	addlw	255
  1993  0586  1683               	bsf	3,5	;RP0=1, select bank1
  1994  0587  1303               	bcf	3,6	;RP1=0, select bank1
  1995  0588  0093               	movwf	19	;volatile
  1996  0589                     l1034:
  1997                           
  1998                           ;I2C.c: 20:     SSPSTATbits.SMP = 1;
  1999  0589  1794               	bsf	20,7	;volatile
  2000  058A                     l1036:
  2001                           
  2002                           ;I2C.c: 21:     SSPCON = 0b00101000;
  2003  058A  3028               	movlw	40
  2004  058B  1283               	bcf	3,5	;RP0=0, select bank0
  2005  058C  1303               	bcf	3,6	;RP1=0, select bank0
  2006  058D  0094               	movwf	20	;volatile
  2007  058E                     l1038:
  2008                           
  2009                           ;I2C.c: 22:     SSPCON2 = 0;
  2010  058E  1683               	bsf	3,5	;RP0=1, select bank1
  2011  058F  1303               	bcf	3,6	;RP1=0, select bank1
  2012  0590  0191               	clrf	17	;volatile
  2013  0591                     l1040:
  2014                           
  2015                           ;I2C.c: 23:     TRISCbits.TRISC3 = 1;
  2016  0591  1587               	bsf	7,3	;volatile
  2017  0592                     l1042:
  2018                           
  2019                           ;I2C.c: 24:     TRISCbits.TRISC4 = 1;
  2020  0592  1607               	bsf	7,4	;volatile
  2021  0593                     l31:
  2022  0593  0008               	return
  2023  0594                     __end_of_I2C_Master_Init:
  2024                           
  2025                           	psect	text12
  2026  0594                     __ptext12:	
  2027 ;; *************** function ___lldiv *****************
  2028 ;; Defined at:
  2029 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  divisor         4    0[COMMON] unsigned long 
  2032 ;;  dividend        4    4[COMMON] unsigned long 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  quotient        4    9[COMMON] unsigned long 
  2035 ;;  counter         1   13[COMMON] unsigned char 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  4    0[COMMON] unsigned long 
  2038 ;; Registers used:
  2039 ;;		wreg, status,2, status,0
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2045 ;;      Params:         8       0       0       0       0
  2046 ;;      Locals:         5       0       0       0       0
  2047 ;;      Temps:          1       0       0       0       0
  2048 ;;      Totals:        14       0       0       0       0
  2049 ;;Total ram usage:       14 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		_I2C_Master_Init
  2055 ;;		_UARTInit
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           
  2060                           ;psect for function ___lldiv
  2061  0594                     ___lldiv:
  2062  0594                     l1008:	
  2063                           ;incstack = 0
  2064                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2065                           
  2066  0594  3000               	movlw	0
  2067  0595  00FC               	movwf	___lldiv@quotient+3
  2068  0596  3000               	movlw	0
  2069  0597  00FB               	movwf	___lldiv@quotient+2
  2070  0598  3000               	movlw	0
  2071  0599  00FA               	movwf	___lldiv@quotient+1
  2072  059A  3000               	movlw	0
  2073  059B  00F9               	movwf	___lldiv@quotient
  2074  059C  0873               	movf	___lldiv@divisor+3,w
  2075  059D  0472               	iorwf	___lldiv@divisor+2,w
  2076  059E  0471               	iorwf	___lldiv@divisor+1,w
  2077  059F  0470               	iorwf	___lldiv@divisor,w
  2078  05A0  1903               	skipnz
  2079  05A1  2DA3               	goto	u271
  2080  05A2  2DA4               	goto	u270
  2081  05A3                     u271:
  2082  05A3  2DF1               	goto	l1028
  2083  05A4                     u270:
  2084  05A4                     l1010:
  2085  05A4  01FD               	clrf	___lldiv@counter
  2086  05A5  0AFD               	incf	___lldiv@counter,f
  2087  05A6  2DB4               	goto	l1014
  2088  05A7                     l1012:
  2089  05A7  3001               	movlw	1
  2090  05A8  00F8               	movwf	??___lldiv
  2091  05A9                     u285:
  2092  05A9  1003               	clrc
  2093  05AA  0DF0               	rlf	___lldiv@divisor,f
  2094  05AB  0DF1               	rlf	___lldiv@divisor+1,f
  2095  05AC  0DF2               	rlf	___lldiv@divisor+2,f
  2096  05AD  0DF3               	rlf	___lldiv@divisor+3,f
  2097  05AE  0BF8               	decfsz	??___lldiv,f
  2098  05AF  2DA9               	goto	u285
  2099  05B0  3001               	movlw	1
  2100  05B1  00F8               	movwf	??___lldiv
  2101  05B2  0878               	movf	??___lldiv,w
  2102  05B3  07FD               	addwf	___lldiv@counter,f
  2103  05B4                     l1014:
  2104  05B4  1FF3               	btfss	___lldiv@divisor+3,7
  2105  05B5  2DB7               	goto	u291
  2106  05B6  2DB8               	goto	u290
  2107  05B7                     u291:
  2108  05B7  2DA7               	goto	l1012
  2109  05B8                     u290:
  2110  05B8                     l1016:
  2111  05B8  3001               	movlw	1
  2112  05B9  00F8               	movwf	??___lldiv
  2113  05BA                     u305:
  2114  05BA  1003               	clrc
  2115  05BB  0DF9               	rlf	___lldiv@quotient,f
  2116  05BC  0DFA               	rlf	___lldiv@quotient+1,f
  2117  05BD  0DFB               	rlf	___lldiv@quotient+2,f
  2118  05BE  0DFC               	rlf	___lldiv@quotient+3,f
  2119  05BF  0BF8               	decfsz	??___lldiv,f
  2120  05C0  2DBA               	goto	u305
  2121  05C1                     l1018:
  2122  05C1  0873               	movf	___lldiv@divisor+3,w
  2123  05C2  0277               	subwf	___lldiv@dividend+3,w
  2124  05C3  1D03               	skipz
  2125  05C4  2DCF               	goto	u315
  2126  05C5  0872               	movf	___lldiv@divisor+2,w
  2127  05C6  0276               	subwf	___lldiv@dividend+2,w
  2128  05C7  1D03               	skipz
  2129  05C8  2DCF               	goto	u315
  2130  05C9  0871               	movf	___lldiv@divisor+1,w
  2131  05CA  0275               	subwf	___lldiv@dividend+1,w
  2132  05CB  1D03               	skipz
  2133  05CC  2DCF               	goto	u315
  2134  05CD  0870               	movf	___lldiv@divisor,w
  2135  05CE  0274               	subwf	___lldiv@dividend,w
  2136  05CF                     u315:
  2137  05CF  1C03               	skipc
  2138  05D0  2DD2               	goto	u311
  2139  05D1  2DD3               	goto	u310
  2140  05D2                     u311:
  2141  05D2  2DE2               	goto	l1024
  2142  05D3                     u310:
  2143  05D3                     l1020:
  2144  05D3  0870               	movf	___lldiv@divisor,w
  2145  05D4  02F4               	subwf	___lldiv@dividend,f
  2146  05D5  0871               	movf	___lldiv@divisor+1,w
  2147  05D6  1C03               	skipc
  2148  05D7  0F71               	incfsz	___lldiv@divisor+1,w
  2149  05D8  02F5               	subwf	___lldiv@dividend+1,f
  2150  05D9  0872               	movf	___lldiv@divisor+2,w
  2151  05DA  1C03               	skipc
  2152  05DB  0F72               	incfsz	___lldiv@divisor+2,w
  2153  05DC  02F6               	subwf	___lldiv@dividend+2,f
  2154  05DD  0873               	movf	___lldiv@divisor+3,w
  2155  05DE  1C03               	skipc
  2156  05DF  0F73               	incfsz	___lldiv@divisor+3,w
  2157  05E0  02F7               	subwf	___lldiv@dividend+3,f
  2158  05E1                     l1022:
  2159  05E1  1479               	bsf	___lldiv@quotient,0
  2160  05E2                     l1024:
  2161  05E2  3001               	movlw	1
  2162  05E3                     u325:
  2163  05E3  1003               	clrc
  2164  05E4  0CF3               	rrf	___lldiv@divisor+3,f
  2165  05E5  0CF2               	rrf	___lldiv@divisor+2,f
  2166  05E6  0CF1               	rrf	___lldiv@divisor+1,f
  2167  05E7  0CF0               	rrf	___lldiv@divisor,f
  2168  05E8  3EFF               	addlw	-1
  2169  05E9  1D03               	skipz
  2170  05EA  2DE3               	goto	u325
  2171  05EB                     l1026:
  2172  05EB  3001               	movlw	1
  2173  05EC  02FD               	subwf	___lldiv@counter,f
  2174  05ED  1D03               	btfss	3,2
  2175  05EE  2DF0               	goto	u331
  2176  05EF  2DF1               	goto	u330
  2177  05F0                     u331:
  2178  05F0  2DB8               	goto	l1016
  2179  05F1                     u330:
  2180  05F1                     l1028:
  2181  05F1  087C               	movf	___lldiv@quotient+3,w
  2182  05F2  00F3               	movwf	?___lldiv+3
  2183  05F3  087B               	movf	___lldiv@quotient+2,w
  2184  05F4  00F2               	movwf	?___lldiv+2
  2185  05F5  087A               	movf	___lldiv@quotient+1,w
  2186  05F6  00F1               	movwf	?___lldiv+1
  2187  05F7  0879               	movf	___lldiv@quotient,w
  2188  05F8  00F0               	movwf	?___lldiv
  2189  05F9                     l288:
  2190  05F9  0008               	return
  2191  05FA                     __end_of___lldiv:
  2192  007E                     btemp	set	126	;btemp
  2193  007E                     wtemp0	set	126
  2194                           
  2195                           	psect	config
  2196                           
  2197                           ;Config register CONFIG1 @ 0x2007
  2198                           ;	Oscillator Selection bits
  2199                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2200                           ;	Watchdog Timer Enable bit
  2201                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2202                           ;	Power-up Timer Enable bit
  2203                           ;	PWRTE = OFF, PWRT disabled
  2204                           ;	RE3/MCLR pin function select bit
  2205                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2206                           ;	Code Protection bit
  2207                           ;	CP = OFF, Program memory code protection is disabled
  2208                           ;	Data Code Protection bit
  2209                           ;	CPD = OFF, Data memory code protection is disabled
  2210                           ;	Brown Out Reset Selection bits
  2211                           ;	BOREN = OFF, BOR disabled
  2212                           ;	Internal External Switchover bit
  2213                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2214                           ;	Fail-Safe Clock Monitor Enabled bit
  2215                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2216                           ;	Low Voltage Programming Enable bit
  2217                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2218                           ;	In-Circuit Debugger Mode bit
  2219                           ;	DEBUG = 0x1, unprogrammed default
  2220  2007                     	org	8199
  2221  2007  20D4               	dw	8404
  2222                           
  2223                           ;Config register CONFIG2 @ 0x2008
  2224                           ;	Brown-out Reset Selection bit
  2225                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2226                           ;	Flash Program Memory Self Write Enable bits
  2227                           ;	WRT = OFF, Write protection off
  2228  2008                     	org	8200
  2229  2008  3FFF               	dw	16383

Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     28      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 15
		 -> main@buffer(BANK0[15]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMMON[2]), 

    UARTSendString@str	PTR const unsigned char  size(1) Largest target is 15
		 -> main@buffer(BANK0[15]), 


Critical Paths under _main in COMMON

    _confMPU->_I2C_Master_Write
    _UARTSendString->_UARTSendChar
    _UARTInit->___lldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_UARTInit

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0    7294
                                              9 BANK0     19    19      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _UARTInit
                       _UARTSendChar
                     _UARTSendString
                            _confMPU
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    16      3     200
                                              0 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (1) _confMPU                                              0     0      0    1998
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1998
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       5     4      1     266
                                              1 COMMON     5     4      1
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             9     4      5     836
                                              0 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2    1185
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     716
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _UARTInit
     ___lldiv
   _UARTSendChar
   _UARTSendString
     _UARTSendChar
   _confMPU
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      1C       5       35.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Mar 01 21:15:53 2021

        UARTInit@baud_rate 0020                          pc 0002                _SSPSTATbits 0094  
                       l31 0593                         l40 04A9                         l34 04C9  
                       l52 0523                         l37 04D5                         l53 0526  
                       l54 052B                         l46 04B2                         l49 04BC  
                       fsr 0004                        l112 0668                        l115 04BE  
                      l118 04C8                        l126 055B                        l158 07FB  
                      l248 04FD                        l288 05F9                        l990 04CF  
                      l992 04A1                        l994 04A6                        _GIE 005F  
                      l988 04C9                        l996 04AA                        l998 04AF  
                      u310 05D3                        u311 05D2                        u240 04CF  
                      u400 0550                        u305 05BA                        u241 04CE  
                      u401 054F                        u330 05F1                        u250 04D5  
                      u410 055B                        u331 05F0                        u315 05CF  
                      u251 04D4                        u411 055A                        u340 056C  
                      u260 04C4                        u325 05E3                        u261 04C3  
                      u405 054C                        u270 05A4                        u350 051F  
                      u271 05A3                        u351 051E                        u360 0601  
                      u345 0567                        u361 0600                        u290 05B8  
                      u370 060F                        u291 05B7                        u427 06FE  
                      u380 063C                        u285 05A9                        u390 04F9  
                      u375 060A                        u391 04F8                        u385 0637  
                      fsr0 0004                        indf 0000                       l1000 04B3  
                     l1010 05A4                       l1002 04B8                       l1020 05D3  
                     l1012 05A7                       l1004 04BE                       l1100 04E7  
                     l1022 05E1                       l1014 05B4                       l1006 04C4  
                     l1110 053D                       l1102 04F9                       l1024 05E2  
                     l1016 05B8                       l1008 0594                       l1040 0591  
                     l1032 055C                       l1112 0543                       l1120 0669  
                     l1026 05EB                       l1018 05C1                       l1042 0592  
                     l1034 0589                       l1050 0514                       l1114 0550  
                     l1106 052D                       l1130 0698                       l1122 0672  
                     l1028 05F1                       l1036 058A                       l1052 0519  
                     l1044 04FE                       l1060 05FA                       l1108 0532  
                     l1140 06B9                       l1132 069D                       l1124 067F  
                     l1038 058E                       l1054 051F                       l1046 0503  
                     l1070 065A                       l1062 0601                       l1150 06F2  
                     l1142 06C2                       l1134 06A6                       l1126 0690  
                     l1056 0527                       l1048 050B                       l1080 0661  
                     l1072 065B                       l1064 062C                       l1152 06F8  
                     l1144 06D1                       l1136 06AF                       l1128 0695  
                     l1082 0662                       l1074 065C                       l1066 062E  
                     l1090 0706                       l1146 06D6                       l1138 06B4  
                     l1084 0663                       l1076 065D                       l1068 0659  
                     l1148 06E6                       l1086 0664                       l1078 0660  
                     l1094 04D7                       l1088 0667                       l1096 04DC  
                     l1098 04E3                       STR_1 0009                       _PEIE 005E  
                     _main 0669                       btemp 007E                       start 0000  
         ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      ?_main 0070                      _ANSEL 0188  
          __end_of___lldiv 05FA                      _RCREG 001A                      _SPBRG 0099  
                    _PORTA 0005                      _TRISA 0085                      _SSPIE 0463  
                    _SSPIF 0063                      _TXREG 0019            __end_of_confMPU 07FC  
         __end_of_UARTInit 0669                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 04FE            __initialization 07FC  
             __end_of_main 0706                     ??_main 0029          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013                  ??___lldiv 0078  
  __size_of_UARTSendString 0030                  ??_confMPU 0072                  ??_sprintf 0073  
  __end_of__initialization 07FC             __pcstackCOMMON 0070                  ?_UARTInit 0020  
 UARTSendString@max_length 0071                 __pmaintext 0669                 ??_UARTInit 0025  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 0003  
            ?_UARTSendChar 0070                    ___lldiv 0594             _UARTSendString 052C  
                  _confMPU 0706                    __ptext1 04D6                    __ptext2 0706  
                  __ptext3 04B3                    __ptext4 04AA                    __ptext5 04A1  
                  __ptext6 052C                    __ptext7 04BD                    __ptext8 05FA  
                  __ptext9 04FE   __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E  
 __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009                    _sprintf 04D6  
     end_of_initialization 07FC             ??_UARTSendChar 0070  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070            ___lldiv@counter 007D  
                _RCSTAbits 0018     __end_of_UARTSendString 055C           I2C_Master_Init@c 0020  
         I2C_Master_Read@a 0070                  _TRISCbits 0087                 main@buffer 002B  
                _TXSTAbits 0098            ?_UARTSendString 0071          __size_of_UARTInit 006F  
      start_initialization 07FC          ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072  
        ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070       __end_of_UARTSendChar 04C9  
                ___latbits 0002              __pcstackBANK0 0020           _I2C_Master_Start 04A1  
         _I2C_Master_Write 04B3              UARTSendChar@c 0070                   ?___lldiv 0070  
                __pstrings 0003                   ?_confMPU 0070                   ?_sprintf 0070  
          UARTSendString@i 0074                   _PIR1bits 000C                   _UARTInit 05FA  
              __stringbase 0008                  main@valor 003A        I2C_Master_Read@temp 0074  
         ??_UARTSendString 0072      __size_of_UARTSendChar 000C               UARTInit@BRGH 0024  
         __size_of___lldiv 0066         __end_of__stringtab 0009           __size_of_confMPU 00F6  
          _I2C_Master_Init 055C            _I2C_Master_Read 04FE            _I2C_Master_Wait 04C9  
          _I2C_Master_Stop 04AA                   __ptext10 04C9                   __ptext11 055C  
                 __ptext12 0594           __size_of_sprintf 0028               _UARTSendChar 04BD  
            __size_of_main 009D   __end_of_I2C_Master_Start 04AA   __end_of_I2C_Master_Write 04BD  
        UARTSendString@str 0073                  sprintf@ap 0074                  sprintf@sp 0076  
         ___lldiv@dividend 0074                  stringcode 0003    __end_of_I2C_Master_Init 0594  
  __end_of_I2C_Master_Read 052C    __end_of_I2C_Master_Wait 04D6    __end_of_I2C_Master_Stop 04B3  
                 sprintf@c 0075                   sprintf@f 0070           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0070                   stringdir 0003                   stringtab 0003  
              _SSPCON2bits 0091  
