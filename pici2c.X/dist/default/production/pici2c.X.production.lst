

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 03 18:24:49 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 12/02/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F887 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001B                     	;# 
   114  001C                     	;# 
   115  001D                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  0081                     	;# 
   119  0085                     	;# 
   120  0086                     	;# 
   121  0087                     	;# 
   122  0088                     	;# 
   123  0089                     	;# 
   124  008C                     	;# 
   125  008D                     	;# 
   126  008E                     	;# 
   127  008F                     	;# 
   128  0090                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0093                     	;# 
   133  0093                     	;# 
   134  0094                     	;# 
   135  0095                     	;# 
   136  0096                     	;# 
   137  0097                     	;# 
   138  0098                     	;# 
   139  0099                     	;# 
   140  009A                     	;# 
   141  009B                     	;# 
   142  009C                     	;# 
   143  009D                     	;# 
   144  009E                     	;# 
   145  009F                     	;# 
   146  0105                     	;# 
   147  0107                     	;# 
   148  0108                     	;# 
   149  0109                     	;# 
   150  010C                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  010F                     	;# 
   155  0185                     	;# 
   156  0187                     	;# 
   157  0188                     	;# 
   158  0189                     	;# 
   159  018C                     	;# 
   160  018D                     	;# 
   161  0000                     	;# 
   162  0001                     	;# 
   163  0002                     	;# 
   164  0003                     	;# 
   165  0004                     	;# 
   166  0005                     	;# 
   167  0006                     	;# 
   168  0007                     	;# 
   169  0008                     	;# 
   170  0009                     	;# 
   171  000A                     	;# 
   172  000B                     	;# 
   173  000C                     	;# 
   174  000D                     	;# 
   175  000E                     	;# 
   176  000E                     	;# 
   177  000F                     	;# 
   178  0010                     	;# 
   179  0011                     	;# 
   180  0012                     	;# 
   181  0013                     	;# 
   182  0014                     	;# 
   183  0015                     	;# 
   184  0015                     	;# 
   185  0016                     	;# 
   186  0017                     	;# 
   187  0018                     	;# 
   188  0019                     	;# 
   189  001A                     	;# 
   190  001B                     	;# 
   191  001B                     	;# 
   192  001C                     	;# 
   193  001D                     	;# 
   194  001E                     	;# 
   195  001F                     	;# 
   196  0081                     	;# 
   197  0085                     	;# 
   198  0086                     	;# 
   199  0087                     	;# 
   200  0088                     	;# 
   201  0089                     	;# 
   202  008C                     	;# 
   203  008D                     	;# 
   204  008E                     	;# 
   205  008F                     	;# 
   206  0090                     	;# 
   207  0091                     	;# 
   208  0092                     	;# 
   209  0093                     	;# 
   210  0093                     	;# 
   211  0093                     	;# 
   212  0094                     	;# 
   213  0095                     	;# 
   214  0096                     	;# 
   215  0097                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009A                     	;# 
   219  009B                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  009F                     	;# 
   224  0105                     	;# 
   225  0107                     	;# 
   226  0108                     	;# 
   227  0109                     	;# 
   228  010C                     	;# 
   229  010C                     	;# 
   230  010D                     	;# 
   231  010E                     	;# 
   232  010F                     	;# 
   233  0185                     	;# 
   234  0187                     	;# 
   235  0188                     	;# 
   236  0189                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  000E                     	;# 
   254  000E                     	;# 
   255  000F                     	;# 
   256  0010                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0014                     	;# 
   261  0015                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001D                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  0081                     	;# 
   275  0085                     	;# 
   276  0086                     	;# 
   277  0087                     	;# 
   278  0088                     	;# 
   279  0089                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  008F                     	;# 
   284  0090                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0093                     	;# 
   289  0093                     	;# 
   290  0094                     	;# 
   291  0095                     	;# 
   292  0096                     	;# 
   293  0097                     	;# 
   294  0098                     	;# 
   295  0099                     	;# 
   296  009A                     	;# 
   297  009B                     	;# 
   298  009C                     	;# 
   299  009D                     	;# 
   300  009E                     	;# 
   301  009F                     	;# 
   302  0105                     	;# 
   303  0107                     	;# 
   304  0108                     	;# 
   305  0109                     	;# 
   306  010C                     	;# 
   307  010C                     	;# 
   308  010D                     	;# 
   309  010E                     	;# 
   310  010F                     	;# 
   311  0185                     	;# 
   312  0187                     	;# 
   313  0188                     	;# 
   314  0189                     	;# 
   315  018C                     	;# 
   316  018D                     	;# 
   317  0000                     	;# 
   318  0001                     	;# 
   319  0002                     	;# 
   320  0003                     	;# 
   321  0004                     	;# 
   322  0005                     	;# 
   323  0006                     	;# 
   324  0007                     	;# 
   325  0008                     	;# 
   326  0009                     	;# 
   327  000A                     	;# 
   328  000B                     	;# 
   329  000C                     	;# 
   330  000D                     	;# 
   331  000E                     	;# 
   332  000E                     	;# 
   333  000F                     	;# 
   334  0010                     	;# 
   335  0011                     	;# 
   336  0012                     	;# 
   337  0013                     	;# 
   338  0014                     	;# 
   339  0015                     	;# 
   340  0015                     	;# 
   341  0016                     	;# 
   342  0017                     	;# 
   343  0018                     	;# 
   344  0019                     	;# 
   345  001A                     	;# 
   346  001B                     	;# 
   347  001B                     	;# 
   348  001C                     	;# 
   349  001D                     	;# 
   350  001E                     	;# 
   351  001F                     	;# 
   352  0081                     	;# 
   353  0085                     	;# 
   354  0086                     	;# 
   355  0087                     	;# 
   356  0088                     	;# 
   357  0089                     	;# 
   358  008C                     	;# 
   359  008D                     	;# 
   360  008E                     	;# 
   361  008F                     	;# 
   362  0090                     	;# 
   363  0091                     	;# 
   364  0092                     	;# 
   365  0093                     	;# 
   366  0093                     	;# 
   367  0093                     	;# 
   368  0094                     	;# 
   369  0095                     	;# 
   370  0096                     	;# 
   371  0097                     	;# 
   372  0098                     	;# 
   373  0099                     	;# 
   374  009A                     	;# 
   375  009B                     	;# 
   376  009C                     	;# 
   377  009D                     	;# 
   378  009E                     	;# 
   379  009F                     	;# 
   380  0105                     	;# 
   381  0107                     	;# 
   382  0108                     	;# 
   383  0109                     	;# 
   384  010C                     	;# 
   385  010C                     	;# 
   386  010D                     	;# 
   387  010E                     	;# 
   388  010F                     	;# 
   389  0185                     	;# 
   390  0187                     	;# 
   391  0188                     	;# 
   392  0189                     	;# 
   393  018C                     	;# 
   394  018D                     	;# 
   395  0000                     	;# 
   396  0001                     	;# 
   397  0002                     	;# 
   398  0003                     	;# 
   399  0004                     	;# 
   400  0005                     	;# 
   401  0006                     	;# 
   402  0007                     	;# 
   403  0008                     	;# 
   404  0009                     	;# 
   405  000A                     	;# 
   406  000B                     	;# 
   407  000C                     	;# 
   408  000D                     	;# 
   409  000E                     	;# 
   410  000E                     	;# 
   411  000F                     	;# 
   412  0010                     	;# 
   413  0011                     	;# 
   414  0012                     	;# 
   415  0013                     	;# 
   416  0014                     	;# 
   417  0015                     	;# 
   418  0015                     	;# 
   419  0016                     	;# 
   420  0017                     	;# 
   421  0018                     	;# 
   422  0019                     	;# 
   423  001A                     	;# 
   424  001B                     	;# 
   425  001B                     	;# 
   426  001C                     	;# 
   427  001D                     	;# 
   428  001E                     	;# 
   429  001F                     	;# 
   430  0081                     	;# 
   431  0085                     	;# 
   432  0086                     	;# 
   433  0087                     	;# 
   434  0088                     	;# 
   435  0089                     	;# 
   436  008C                     	;# 
   437  008D                     	;# 
   438  008E                     	;# 
   439  008F                     	;# 
   440  0090                     	;# 
   441  0091                     	;# 
   442  0092                     	;# 
   443  0093                     	;# 
   444  0093                     	;# 
   445  0093                     	;# 
   446  0094                     	;# 
   447  0095                     	;# 
   448  0096                     	;# 
   449  0097                     	;# 
   450  0098                     	;# 
   451  0099                     	;# 
   452  009A                     	;# 
   453  009B                     	;# 
   454  009C                     	;# 
   455  009D                     	;# 
   456  009E                     	;# 
   457  009F                     	;# 
   458  0105                     	;# 
   459  0107                     	;# 
   460  0108                     	;# 
   461  0109                     	;# 
   462  010C                     	;# 
   463  010C                     	;# 
   464  010D                     	;# 
   465  010E                     	;# 
   466  010F                     	;# 
   467  0185                     	;# 
   468  0187                     	;# 
   469  0188                     	;# 
   470  0189                     	;# 
   471  018C                     	;# 
   472  018D                     	;# 
   473                           
   474                           	psect	strings
   475  07B2                     __pstrings:
   476  07B2                     stringtab:
   477  07B2                     __stringtab:
   478                           
   479                           ;	String table - string pointers are 1 byte each
   480  07B2  1BFF               	btfsc	btemp+1,7
   481  07B3  2FBC               	ljmp	stringcode
   482  07B4  1383               	bcf	3,7
   483  07B5  187F               	btfsc	btemp+1,0
   484  07B6  1783               	bsf	3,7
   485  07B7  0800               	movf	0,w
   486  07B8  0A84               	incf	4,f
   487  07B9  1903               	skipnz
   488  07BA  0AFF               	incf	btemp+1,f
   489  07BB  0008               	return
   490  07BC                     stringcode:
   491  07BC                     stringdir:
   492  07BC  3007               	movlw	high stringdir
   493  07BD  008A               	movwf	10
   494  07BE  0804               	movf	4,w
   495  07BF  0A84               	incf	4,f
   496  07C0  0782               	addwf	2,f
   497  07C1                     __stringbase:
   498  07C1  3400               	retlw	0
   499  07C2                     __end_of__stringtab:
   500  07C2                     _dpowers:
   501  07C2  3401               	retlw	1
   502  07C3  3400               	retlw	0
   503  07C4  3400               	retlw	0
   504  07C5  3400               	retlw	0
   505  07C6  340A               	retlw	10
   506  07C7  3400               	retlw	0
   507  07C8  3400               	retlw	0
   508  07C9  3400               	retlw	0
   509  07CA  3464               	retlw	100
   510  07CB  3400               	retlw	0
   511  07CC  3400               	retlw	0
   512  07CD  3400               	retlw	0
   513  07CE  34E8               	retlw	232
   514  07CF  3403               	retlw	3
   515  07D0  3400               	retlw	0
   516  07D1  3400               	retlw	0
   517  07D2  3410               	retlw	16
   518  07D3  3427               	retlw	39
   519  07D4  3400               	retlw	0
   520  07D5  3400               	retlw	0
   521  07D6  34A0               	retlw	160
   522  07D7  3486               	retlw	134
   523  07D8  3401               	retlw	1
   524  07D9  3400               	retlw	0
   525  07DA  3440               	retlw	64
   526  07DB  3442               	retlw	66
   527  07DC  340F               	retlw	15
   528  07DD  3400               	retlw	0
   529  07DE  3480               	retlw	128
   530  07DF  3496               	retlw	150
   531  07E0  3498               	retlw	152
   532  07E1  3400               	retlw	0
   533  07E2  3400               	retlw	0
   534  07E3  34E1               	retlw	225
   535  07E4  34F5               	retlw	245
   536  07E5  3405               	retlw	5
   537  07E6  3400               	retlw	0
   538  07E7  34CA               	retlw	202
   539  07E8  349A               	retlw	154
   540  07E9  343B               	retlw	59
   541  07EA                     __end_of_dpowers:
   542  0019                     _TXREG	set	25
   543  0018                     _RCSTAbits	set	24
   544  001A                     _RCREG	set	26
   545  000C                     _PIR1bits	set	12
   546  0005                     _PORTA	set	5
   547  0013                     _SSPBUF	set	19
   548  0014                     _SSPCON	set	20
   549  0063                     _SSPIF	set	99
   550  0091                     _SSPCON2bits	set	145
   551  0087                     _TRISCbits	set	135
   552  0098                     _TXSTAbits	set	152
   553  0099                     _SPBRG	set	153
   554  0085                     _TRISA	set	133
   555  0093                     _SSPADD	set	147
   556  0094                     _SSPSTAT	set	148
   557  0091                     _SSPCON2	set	145
   558  04A0                     _BF	set	1184
   559  048B                     _RCEN	set	1163
   560  048E                     _ACKSTAT	set	1166
   561  048C                     _ACKEN	set	1164
   562  048D                     _ACKDT	set	1165
   563  048A                     _PEN	set	1162
   564  0489                     _RSEN	set	1161
   565  0488                     _SEN	set	1160
   566  043C                     _TRISC4	set	1084
   567  043B                     _TRISC3	set	1083
   568  0188                     _ANSEL	set	392
   569  07EA                     STR_7:
   570  07EA  3425               	retlw	37	;'%'
   571  07EB  346C               	retlw	108	;'l'
   572  07EC  3475               	retlw	117	;'u'
   573  07ED  342E               	retlw	46	;'.'
   574  07EE  3425               	retlw	37	;'%'
   575  07EF  3436               	retlw	54	;'6'
   576  07F0  342E               	retlw	46	;'.'
   577  07F1  3436               	retlw	54	;'6'
   578  07F2  346C               	retlw	108	;'l'
   579  07F3  3475               	retlw	117	;'u'
   580  07F4  3400               	retlw	0
   581  07F5                     STR_1:
   582  07F5  3420               	retlw	32	;' '
   583  07F6  3400               	retlw	0
   584  07F5                     
   585                           	psect	cinit
   586  0011                     start_initialization:	
   587                           ; #config settings
   588                           
   589  0011                     __initialization:
   590                           
   591                           ; Clear objects allocated to COMMON
   592  0011  01F7               	clrf	__pbssCOMMON& (0+127)
   593                           
   594                           ; Clear objects allocated to BANK1
   595  0012  1383               	bcf	3,7	;select IRP bank0
   596  0013  30A0               	movlw	low __pbssBANK1
   597  0014  0084               	movwf	4
   598  0015  30CD               	movlw	low (__pbssBANK1+45)
   599  0016  160A  118A  21F3  120A  118A  	fcall	clear_ram0
   600  001B                     end_of_initialization:	
   601                           ;End of C runtime variable initialization code
   602                           
   603  001B                     __end_of__initialization:
   604  001B  0183               	clrf	3
   605  001C  160A  118A  2B3F   	ljmp	_main	;jump to C main() function
   606                           
   607                           	psect	bssCOMMON
   608  0077                     __pbssCOMMON:
   609  0077                     _banderas:
   610  0077                     	ds	1
   611                           
   612                           	psect	bssBANK1
   613  00A0                     __pbssBANK1:
   614  00A0                     _datos:
   615  00A0                     	ds	28
   616  00BC                     ftoa@buf:
   617  00BC                     	ds	17
   618                           
   619                           	psect	clrtext
   620  11F3                     clear_ram0:	
   621                           ;	Called with FSR containing the base address, and
   622                           ;	W with the last address+1
   623                           
   624  11F3  0064               	clrwdt	;clear the watchdog before getting into this loop
   625  11F4                     clrloop0:
   626  11F4  0180               	clrf	0	;clear RAM location pointed to by FSR
   627  11F5  0A84               	incf	4,f	;increment pointer
   628  11F6  0604               	xorwf	4,w	;XOR with final address
   629  11F7  1903               	btfsc	3,2	;have we reached the end yet?
   630  11F8  3400               	retlw	0	;all done for this memory range, return
   631  11F9  0604               	xorwf	4,w	;XOR again to restore value
   632  11FA  29F4               	goto	clrloop0	;do the next byte
   633                           
   634                           	psect	cstackBANK1
   635  00CD                     __pcstackBANK1:
   636  00CD                     ftoa@rem:
   637  00CD                     readMPU@valores:	
   638                           ; 4 bytes @ 0x0
   639                           
   640                           
   641                           ; 14 bytes @ 0x0
   642  00CD                     	ds	4
   643  00D1                     ftoa@l:
   644                           
   645                           ; 4 bytes @ 0x4
   646  00D1                     	ds	4
   647  00D5                     ftoa@cp:
   648                           
   649                           ; 1 bytes @ 0x8
   650  00D5                     	ds	6
   651  00DB                     readMPU@guardar:
   652                           
   653                           ; 14 bytes @ 0xE
   654  00DB                     	ds	14
   655  00E9                     readMPU@i:
   656                           
   657                           ; 2 bytes @ 0x1C
   658  00E9                     	ds	2
   659  00EB                     readMPU@datos:
   660                           
   661                           ; 1 bytes @ 0x1E
   662  00EB                     	ds	1
   663  00EC                     ??_main:
   664                           
   665                           ; 1 bytes @ 0x1F
   666  00EC                     	ds	2
   667                           
   668                           	psect	cstackCOMMON
   669  0070                     __pcstackCOMMON:
   670  0070                     ?_isdigit:
   671  0070                     ?_I2C_Master_Write:	
   672                           ; 1 bit 
   673                           
   674  0070                     ?_confMPU:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_readMPU:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_sendMPU:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_UARTSendChar:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_I2C_Master_Init:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_I2C_Master_Wait:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ?_I2C_Master_Start:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_I2C_Start:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_I2C_Master_RepeatedStart:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_I2C_Master_Stop:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_I2C_ACK:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_I2C_NACK:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_I2C_Read:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_main:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_isr:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ??_isr:	
   720                           ; 1 bytes @ 0x0
   721                           
   722                           
   723                           ; 1 bytes @ 0x0
   724  0070                     	ds	5
   725  0075                     isr@entrante:
   726                           
   727                           ; 1 bytes @ 0x5
   728  0075                     	ds	1
   729  0076                     ??_I2C_Master_Write:
   730  0076                     ??_UARTSendChar:	
   731                           ; 1 bytes @ 0x6
   732                           
   733  0076                     ??_isdigit:	
   734                           ; 1 bytes @ 0x6
   735                           
   736  0076                     ??_I2C_Master_Init:	
   737                           ; 1 bytes @ 0x6
   738                           
   739  0076                     ??_I2C_Master_Wait:	
   740                           ; 1 bytes @ 0x6
   741                           
   742  0076                     ??_I2C_Master_Start:	
   743                           ; 1 bytes @ 0x6
   744                           
   745  0076                     ??_I2C_Master_RepeatedStart:	
   746                           ; 1 bytes @ 0x6
   747                           
   748  0076                     ??_I2C_Master_Stop:	
   749                           ; 1 bytes @ 0x6
   750                           
   751  0076                     ??_I2C_ACK:	
   752                           ; 1 bytes @ 0x6
   753                           
   754  0076                     ??_I2C_NACK:	
   755                           ; 1 bytes @ 0x6
   756                           
   757  0076                     ??_I2C_Read:	
   758                           ; 1 bytes @ 0x6
   759                           
   760  0076                     ??___wmul:	
   761                           ; 1 bytes @ 0x6
   762                           
   763  0076                     ??___lldiv:	
   764                           ; 1 bytes @ 0x6
   765                           
   766  0076                     ??___flneg:	
   767                           ; 1 bytes @ 0x6
   768                           
   769  0076                     ??___flsub:	
   770                           ; 1 bytes @ 0x6
   771                           
   772  0076                     I2C_Master_Write@data:	
   773                           ; 1 bytes @ 0x6
   774                           
   775  0076                     UARTSendChar@c:	
   776                           ; 1 bytes @ 0x6
   777                           
   778                           
   779                           ; 1 bytes @ 0x6
   780  0076                     	ds	1
   781  0077                     ??_confMPU:
   782  0077                     ??_I2C_Start:	
   783                           ; 1 bytes @ 0x7
   784                           
   785                           
   786                           	psect	cstackBANK0
   787  0020                     __pcstackBANK0:	
   788                           ; 1 bytes @ 0x7
   789                           
   790  0020                     ?___flge:
   791  0020                     ?_UARTSendString:	
   792                           ; 1 bit 
   793                           
   794  0020                     ?__Umul8_16:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0020                     ?___wmul:	
   798                           ; 2 bytes @ 0x0
   799                           
   800  0020                     ?___lldiv:	
   801                           ; 2 bytes @ 0x0
   802                           
   803  0020                     ?___flneg:	
   804                           ; 4 bytes @ 0x0
   805                           
   806  0020                     ?___xxtofl:	
   807                           ; 4 bytes @ 0x0
   808                           
   809  0020                     I2C_Start@add:	
   810                           ; 4 bytes @ 0x0
   811                           
   812  0020                     I2C_Read@ACK_NACK:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0020                     __Umul8_16@multiplicand:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0020                     _isdigit$851:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0020                     UARTSendString@str:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0020                     ___wmul@multiplier:	
   825                           ; 2 bytes @ 0x0
   826                           
   827  0020                     ___lldiv@divisor:	
   828                           ; 2 bytes @ 0x0
   829                           
   830  0020                     ___flge@ff1:	
   831                           ; 4 bytes @ 0x0
   832                           
   833  0020                     ___flneg@f1:	
   834                           ; 4 bytes @ 0x0
   835                           
   836  0020                     ___xxtofl@val:	
   837                           ; 4 bytes @ 0x0
   838                           
   839                           
   840                           ; 4 bytes @ 0x0
   841  0020                     	ds	1
   842  0021                     I2C_Read@Data:
   843  0021                     isdigit@c:	
   844                           ; 1 bytes @ 0x1
   845                           
   846                           
   847                           ; 1 bytes @ 0x1
   848  0021                     	ds	1
   849  0022                     ??__Umul8_16:
   850  0022                     UARTSendString@max_length:	
   851                           ; 1 bytes @ 0x2
   852                           
   853  0022                     ___wmul@multiplicand:	
   854                           ; 1 bytes @ 0x2
   855                           
   856                           
   857                           ; 2 bytes @ 0x2
   858  0022                     	ds	1
   859  0023                     ??_UARTSendString:
   860                           
   861                           ; 1 bytes @ 0x3
   862  0023                     	ds	1
   863  0024                     ??___xxtofl:
   864  0024                     ___wmul@product:	
   865                           ; 1 bytes @ 0x4
   866                           
   867  0024                     __Umul8_16@product:	
   868                           ; 2 bytes @ 0x4
   869                           
   870  0024                     ___lldiv@dividend:	
   871                           ; 2 bytes @ 0x4
   872                           
   873  0024                     ___flge@ff2:	
   874                           ; 4 bytes @ 0x4
   875                           
   876                           
   877                           ; 4 bytes @ 0x4
   878  0024                     	ds	2
   879  0026                     UARTSendString@i:
   880  0026                     __Umul8_16@word_mpld:	
   881                           ; 2 bytes @ 0x6
   882                           
   883                           
   884                           ; 2 bytes @ 0x6
   885  0026                     	ds	2
   886  0028                     ??___flge:
   887  0028                     __Umul8_16@multiplier:	
   888                           ; 1 bytes @ 0x8
   889                           
   890  0028                     ___xxtofl@sign:	
   891                           ; 1 bytes @ 0x8
   892                           
   893  0028                     ___lldiv@quotient:	
   894                           ; 1 bytes @ 0x8
   895                           
   896                           
   897                           ; 4 bytes @ 0x8
   898  0028                     	ds	1
   899  0029                     ___xxtofl@exp:
   900                           
   901                           ; 1 bytes @ 0x9
   902  0029                     	ds	1
   903  002A                     ___xxtofl@arg:
   904                           
   905                           ; 4 bytes @ 0xA
   906  002A                     	ds	2
   907  002C                     ___lldiv@counter:
   908                           
   909                           ; 1 bytes @ 0xC
   910  002C                     	ds	1
   911  002D                     ?_UARTInit:
   912  002D                     ?___llmod:	
   913                           ; 1 bytes @ 0xD
   914                           
   915  002D                     UARTInit@baud_rate:	
   916                           ; 4 bytes @ 0xD
   917                           
   918  002D                     ___llmod@divisor:	
   919                           ; 4 bytes @ 0xD
   920                           
   921                           
   922                           ; 4 bytes @ 0xD
   923  002D                     	ds	1
   924  002E                     ?___fldiv:
   925  002E                     ?___flmul:	
   926                           ; 4 bytes @ 0xE
   927                           
   928  002E                     ___fldiv@a:	
   929                           ; 4 bytes @ 0xE
   930                           
   931  002E                     ___flmul@b:	
   932                           ; 4 bytes @ 0xE
   933                           
   934                           
   935                           ; 4 bytes @ 0xE
   936  002E                     	ds	3
   937  0031                     UARTInit@BRGH:
   938  0031                     ___llmod@dividend:	
   939                           ; 1 bytes @ 0x11
   940                           
   941                           
   942                           ; 4 bytes @ 0x11
   943  0031                     	ds	1
   944  0032                     ??_UARTInit:
   945  0032                     ___fldiv@b:	
   946                           ; 1 bytes @ 0x12
   947                           
   948  0032                     ___flmul@a:	
   949                           ; 4 bytes @ 0x12
   950                           
   951                           
   952                           ; 4 bytes @ 0x12
   953  0032                     	ds	3
   954  0035                     ??___llmod:
   955                           
   956                           ; 1 bytes @ 0x15
   957  0035                     	ds	1
   958  0036                     ??___fldiv:
   959  0036                     ??___flmul:	
   960                           ; 1 bytes @ 0x16
   961                           
   962  0036                     ___llmod@counter:	
   963                           ; 1 bytes @ 0x16
   964                           
   965                           
   966                           ; 1 bytes @ 0x16
   967  0036                     	ds	1
   968  0037                     ?_sprintf:
   969  0037                     sprintf@f:	
   970                           ; 2 bytes @ 0x17
   971                           
   972                           
   973                           ; 1 bytes @ 0x17
   974  0037                     	ds	4
   975  003B                     ___flmul@sign:
   976  003B                     ___fldiv@rem:	
   977                           ; 1 bytes @ 0x1B
   978                           
   979                           
   980                           ; 4 bytes @ 0x1B
   981  003B                     	ds	1
   982  003C                     ___flmul@aexp:
   983                           
   984                           ; 1 bytes @ 0x1C
   985  003C                     	ds	1
   986  003D                     ___flmul@grs:
   987                           
   988                           ; 4 bytes @ 0x1D
   989  003D                     	ds	2
   990  003F                     ___fldiv@sign:
   991                           
   992                           ; 1 bytes @ 0x1F
   993  003F                     	ds	1
   994  0040                     ??_sprintf:
   995  0040                     ___fldiv@new_exp:	
   996                           ; 1 bytes @ 0x20
   997                           
   998                           
   999                           ; 2 bytes @ 0x20
  1000  0040                     	ds	1
  1001  0041                     ___flmul@bexp:
  1002                           
  1003                           ; 1 bytes @ 0x21
  1004  0041                     	ds	1
  1005  0042                     ___fldiv@grs:
  1006  0042                     ___flmul@prod:	
  1007                           ; 4 bytes @ 0x22
  1008                           
  1009                           
  1010                           ; 4 bytes @ 0x22
  1011  0042                     	ds	3
  1012  0045                     sprintf@flag:
  1013                           
  1014                           ; 1 bytes @ 0x25
  1015  0045                     	ds	1
  1016  0046                     ___fldiv@bexp:
  1017  0046                     sprintf@ap:	
  1018                           ; 1 bytes @ 0x26
  1019                           
  1020  0046                     ___flmul@temp:	
  1021                           ; 1 bytes @ 0x26
  1022                           
  1023                           
  1024                           ; 2 bytes @ 0x26
  1025  0046                     	ds	1
  1026  0047                     ___fldiv@aexp:
  1027  0047                     sprintf@val:	
  1028                           ; 1 bytes @ 0x27
  1029                           
  1030                           
  1031                           ; 4 bytes @ 0x27
  1032  0047                     	ds	1
  1033  0048                     ?___fltol:
  1034  0048                     ?___fladd:	
  1035                           ; 4 bytes @ 0x28
  1036                           
  1037  0048                     ___fltol@f1:	
  1038                           ; 4 bytes @ 0x28
  1039                           
  1040  0048                     ___fladd@b:	
  1041                           ; 4 bytes @ 0x28
  1042                           
  1043                           
  1044                           ; 4 bytes @ 0x28
  1045  0048                     	ds	3
  1046  004B                     sprintf@sp:
  1047                           
  1048                           ; 1 bytes @ 0x2B
  1049  004B                     	ds	1
  1050  004C                     ??___fltol:
  1051  004C                     sprintf@width:	
  1052                           ; 1 bytes @ 0x2C
  1053                           
  1054  004C                     ___fladd@a:	
  1055                           ; 2 bytes @ 0x2C
  1056                           
  1057                           
  1058                           ; 4 bytes @ 0x2C
  1059  004C                     	ds	2
  1060  004E                     sprintf@prec:
  1061                           
  1062                           ; 2 bytes @ 0x2E
  1063  004E                     	ds	2
  1064  0050                     ??___fladd:
  1065  0050                     sprintf@c:	
  1066                           ; 1 bytes @ 0x30
  1067                           
  1068                           
  1069                           ; 1 bytes @ 0x30
  1070  0050                     	ds	1
  1071  0051                     ___fltol@sign1:
  1072                           
  1073                           ; 1 bytes @ 0x31
  1074  0051                     	ds	1
  1075  0052                     ___fltol@exp1:
  1076                           
  1077                           ; 1 bytes @ 0x32
  1078  0052                     	ds	6
  1079  0058                     ___fladd@signs:
  1080                           
  1081                           ; 1 bytes @ 0x38
  1082  0058                     	ds	1
  1083  0059                     ___fladd@aexp:
  1084                           
  1085                           ; 1 bytes @ 0x39
  1086  0059                     	ds	1
  1087  005A                     ___fladd@bexp:
  1088                           
  1089                           ; 1 bytes @ 0x3A
  1090  005A                     	ds	1
  1091  005B                     ___fladd@grs:
  1092                           
  1093                           ; 1 bytes @ 0x3B
  1094  005B                     	ds	1
  1095  005C                     ??_readMPU:
  1096  005C                     ?___flsub:	
  1097                           ; 1 bytes @ 0x3C
  1098                           
  1099  005C                     ___flsub@a:	
  1100                           ; 4 bytes @ 0x3C
  1101                           
  1102                           
  1103                           ; 4 bytes @ 0x3C
  1104  005C                     	ds	4
  1105  0060                     ___flsub@b:
  1106                           
  1107                           ; 4 bytes @ 0x40
  1108  0060                     	ds	4
  1109  0064                     ?_ftoa:
  1110  0064                     ftoa@f:	
  1111                           ; 1 bytes @ 0x44
  1112                           
  1113                           
  1114                           ; 4 bytes @ 0x44
  1115  0064                     	ds	4
  1116  0068                     ftoa@status:
  1117                           
  1118                           ; 2 bytes @ 0x48
  1119  0068                     	ds	2
  1120  006A                     ??_ftoa:
  1121                           
  1122                           ; 1 bytes @ 0x4A
  1123  006A                     	ds	1
  1124  006B                     ??_sendMPU:
  1125                           
  1126                           ; 1 bytes @ 0x4B
  1127  006B                     	ds	1
  1128  006C                     sendMPU@status:
  1129                           
  1130                           ; 2 bytes @ 0x4C
  1131  006C                     	ds	2
  1132  006E                     sendMPU@buffer:
  1133                           
  1134                           ; 1 bytes @ 0x4E
  1135  006E                     	ds	1
  1136                           
  1137                           	psect	maintext
  1138  133F                     __pmaintext:	
  1139 ;;
  1140 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1141 ;;
  1142 ;; *************** function _main *****************
  1143 ;; Defined at:
  1144 ;;		line 42 in file "main.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : B00/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1158 ;;      Params:         0       0       0       0       0
  1159 ;;      Locals:         0       0       0       0       0
  1160 ;;      Temps:          0       0       2       0       0
  1161 ;;      Totals:         0       0       2       0       0
  1162 ;;Total ram usage:        2 bytes
  1163 ;; Hardware stack levels required when called:    5
  1164 ;; This function calls:
  1165 ;;		_I2C_Master_Init
  1166 ;;		_UARTInit
  1167 ;;		_confMPU
  1168 ;;		_readMPU
  1169 ;;		_sendMPU
  1170 ;; This function is called by:
  1171 ;;		Startup code after reset
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           
  1176                           ;psect for function _main
  1177  133F                     _main:
  1178  133F                     l3449:	
  1179                           ;incstack = 0
  1180                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1181                           
  1182                           
  1183                           ;main.c: 43:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1184  133F  3082               	movlw	130
  1185  1340  1683               	bsf	3,5	;RP0=1, select bank1
  1186  1341  1303               	bcf	3,6	;RP1=0, select bank1
  1187  1342  00ED               	movwf	(??_main^(0+128)+1)
  1188  1343  30DD               	movlw	221
  1189  1344  00EC               	movwf	??_main^(0+128)
  1190  1345                     u5017:
  1191  1345  0BEC               	decfsz	??_main^(0+128),f
  1192  1346  2B45               	goto	u5017
  1193  1347  0BED               	decfsz	(??_main^(0+128)+1),f
  1194  1348  2B45               	goto	u5017
  1195  1349                     l3451:
  1196                           
  1197                           ;main.c: 44:     ANSEL = 0;
  1198  1349  1683               	bsf	3,5	;RP0=1, select bank3
  1199  134A  1703               	bsf	3,6	;RP1=1, select bank3
  1200  134B  0188               	clrf	8	;volatile
  1201  134C                     l3453:
  1202                           
  1203                           ;main.c: 45:     TRISA = 0;
  1204  134C  1683               	bsf	3,5	;RP0=1, select bank1
  1205  134D  1303               	bcf	3,6	;RP1=0, select bank1
  1206  134E  0185               	clrf	5	;volatile
  1207  134F                     l3455:
  1208                           
  1209                           ;main.c: 46:     PORTA = 0;
  1210  134F  1283               	bcf	3,5	;RP0=0, select bank0
  1211  1350  1303               	bcf	3,6	;RP1=0, select bank0
  1212  1351  0185               	clrf	5	;volatile
  1213  1352                     l3457:
  1214                           
  1215                           ;main.c: 49:     I2C_Master_Init();
  1216  1352  160A  118A  222B  160A  118A  	fcall	_I2C_Master_Init
  1217  1357                     l3459:
  1218                           
  1219                           ;main.c: 50:     UARTInit(19200, 1);
  1220  1357  3000               	movlw	0
  1221  1358  1283               	bcf	3,5	;RP0=0, select bank0
  1222  1359  1303               	bcf	3,6	;RP1=0, select bank0
  1223  135A  00B0               	movwf	UARTInit@baud_rate+3
  1224  135B  3000               	movlw	0
  1225  135C  00AF               	movwf	UARTInit@baud_rate+2
  1226  135D  304B               	movlw	75
  1227  135E  00AE               	movwf	UARTInit@baud_rate+1
  1228  135F  3000               	movlw	0
  1229  1360  00AD               	movwf	UARTInit@baud_rate
  1230  1361  01B1               	clrf	UARTInit@BRGH
  1231  1362  0AB1               	incf	UARTInit@BRGH,f
  1232  1363  160A  118A  2491  160A  118A  	fcall	_UARTInit
  1233  1368                     l3461:
  1234                           
  1235                           ;main.c: 51:     confMPU();
  1236  1368  120A  158A  2090  160A  118A  	fcall	_confMPU
  1237  136D                     l3463:
  1238                           
  1239                           ;main.c: 59:         readMPU(datos);
  1240  136D  30A0               	movlw	(low (_datos| 0))& (0+255)
  1241  136E  120A  118A  2380  160A  118A  	fcall	_readMPU
  1242  1373                     l3465:
  1243                           
  1244                           ;main.c: 60:         sendMPU();
  1245  1373  160A  118A  2664  160A  118A  	fcall	_sendMPU
  1246  1378  2B6D               	goto	l3463
  1247  1379  120A  118A  280E   	ljmp	start
  1248  137C                     __end_of_main:
  1249                           
  1250                           	psect	text1
  1251  1664                     __ptext1:	
  1252 ;; *************** function _sendMPU *****************
  1253 ;; Defined at:
  1254 ;;		line 68 in file "main.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;		None
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;  status          2   76[BANK0 ] int 
  1259 ;;  buffer          1   78[BANK0 ] PTR unsigned char 
  1260 ;;		 -> ftoa@buf(17), 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1270 ;;      Params:         0       0       0       0       0
  1271 ;;      Locals:         0       3       0       0       0
  1272 ;;      Temps:          0       1       0       0       0
  1273 ;;      Totals:         0       4       0       0       0
  1274 ;;Total ram usage:        4 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; Hardware stack levels required when called:    4
  1277 ;; This function calls:
  1278 ;;		_UARTSendChar
  1279 ;;		_UARTSendString
  1280 ;;		_ftoa
  1281 ;; This function is called by:
  1282 ;;		_main
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           
  1287                           ;psect for function _sendMPU
  1288  1664                     _sendMPU:
  1289  1664                     l3435:	
  1290                           ;incstack = 0
  1291                           ; Regs used in _sendMPU: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1292                           
  1293                           
  1294                           ;main.c: 69:     char* buffer;;main.c: 70:     int status;;main.c: 71:     buffer = ftoa
      +                          (datos[0], status);
  1295  1664  1683               	bsf	3,5	;RP0=1, select bank1
  1296  1665  1303               	bcf	3,6	;RP1=0, select bank1
  1297  1666  0823               	movf	(_datos+3)^(0+128),w
  1298  1667  1283               	bcf	3,5	;RP0=0, select bank0
  1299  1668  1303               	bcf	3,6	;RP1=0, select bank0
  1300  1669  00E7               	movwf	ftoa@f+3
  1301  166A  1683               	bsf	3,5	;RP0=1, select bank1
  1302  166B  1303               	bcf	3,6	;RP1=0, select bank1
  1303  166C  0822               	movf	(_datos+2)^(0+128),w
  1304  166D  1283               	bcf	3,5	;RP0=0, select bank0
  1305  166E  1303               	bcf	3,6	;RP1=0, select bank0
  1306  166F  00E6               	movwf	ftoa@f+2
  1307  1670  1683               	bsf	3,5	;RP0=1, select bank1
  1308  1671  1303               	bcf	3,6	;RP1=0, select bank1
  1309  1672  0821               	movf	(_datos+1)^(0+128),w
  1310  1673  1283               	bcf	3,5	;RP0=0, select bank0
  1311  1674  1303               	bcf	3,6	;RP1=0, select bank0
  1312  1675  00E5               	movwf	ftoa@f+1
  1313  1676  1683               	bsf	3,5	;RP0=1, select bank1
  1314  1677  1303               	bcf	3,6	;RP1=0, select bank1
  1315  1678  0820               	movf	_datos^(0+128),w
  1316  1679  1283               	bcf	3,5	;RP0=0, select bank0
  1317  167A  1303               	bcf	3,6	;RP1=0, select bank0
  1318  167B  00E4               	movwf	ftoa@f
  1319  167C  086C               	movf	sendMPU@status,w
  1320  167D  00E8               	movwf	ftoa@status
  1321  167E  086D               	movf	sendMPU@status+1,w
  1322  167F  00E9               	movwf	ftoa@status+1
  1323  1680  120A  118A  2683  160A  118A  	fcall	_ftoa
  1324  1685  1283               	bcf	3,5	;RP0=0, select bank0
  1325  1686  1303               	bcf	3,6	;RP1=0, select bank0
  1326  1687  00EB               	movwf	??_sendMPU
  1327  1688  086B               	movf	??_sendMPU,w
  1328  1689  00EE               	movwf	sendMPU@buffer
  1329                           
  1330                           ;main.c: 72:     UARTSendString(buffer, 6);
  1331  168A  086E               	movf	sendMPU@buffer,w
  1332  168B  00A0               	movwf	UARTSendString@str
  1333  168C  3000               	movlw	0
  1334  168D  00A1               	movwf	UARTSendString@str+1
  1335  168E  3006               	movlw	6
  1336  168F  00EB               	movwf	??_sendMPU
  1337  1690  086B               	movf	??_sendMPU,w
  1338  1691  00A2               	movwf	UARTSendString@max_length
  1339  1692  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1340                           
  1341                           ;main.c: 74:     buffer = ftoa(datos[1], status);
  1342  1697  3004               	movlw	4
  1343  1698  3EA0               	addlw	(low (_datos| 0))& (0+255)
  1344  1699  0084               	movwf	4
  1345  169A  1383               	bcf	3,7	;select IRP bank1
  1346  169B  0800               	movf	0,w
  1347  169C  1283               	bcf	3,5	;RP0=0, select bank0
  1348  169D  1303               	bcf	3,6	;RP1=0, select bank0
  1349  169E  00E4               	movwf	ftoa@f
  1350  169F  0A84               	incf	4,f
  1351  16A0  0800               	movf	0,w
  1352  16A1  00E5               	movwf	ftoa@f+1
  1353  16A2  0A84               	incf	4,f
  1354  16A3  0800               	movf	0,w
  1355  16A4  00E6               	movwf	ftoa@f+2
  1356  16A5  0A84               	incf	4,f
  1357  16A6  0800               	movf	0,w
  1358  16A7  00E7               	movwf	ftoa@f+3
  1359  16A8  086C               	movf	sendMPU@status,w
  1360  16A9  00E8               	movwf	ftoa@status
  1361  16AA  086D               	movf	sendMPU@status+1,w
  1362  16AB  00E9               	movwf	ftoa@status+1
  1363  16AC  120A  118A  2683  160A  118A  	fcall	_ftoa
  1364  16B1  1283               	bcf	3,5	;RP0=0, select bank0
  1365  16B2  1303               	bcf	3,6	;RP1=0, select bank0
  1366  16B3  00EB               	movwf	??_sendMPU
  1367  16B4  086B               	movf	??_sendMPU,w
  1368  16B5  00EE               	movwf	sendMPU@buffer
  1369                           
  1370                           ;main.c: 75:     UARTSendString(" ", 10);
  1371  16B6  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1372  16B7  00A0               	movwf	UARTSendString@str
  1373  16B8  3080               	movlw	128
  1374  16B9  00A1               	movwf	UARTSendString@str+1
  1375  16BA  300A               	movlw	10
  1376  16BB  00EB               	movwf	??_sendMPU
  1377  16BC  086B               	movf	??_sendMPU,w
  1378  16BD  00A2               	movwf	UARTSendString@max_length
  1379  16BE  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1380                           
  1381                           ;main.c: 76:     UARTSendString(buffer, 6);
  1382  16C3  1283               	bcf	3,5	;RP0=0, select bank0
  1383  16C4  1303               	bcf	3,6	;RP1=0, select bank0
  1384  16C5  086E               	movf	sendMPU@buffer,w
  1385  16C6  00A0               	movwf	UARTSendString@str
  1386  16C7  3000               	movlw	0
  1387  16C8  00A1               	movwf	UARTSendString@str+1
  1388  16C9  3006               	movlw	6
  1389  16CA  00EB               	movwf	??_sendMPU
  1390  16CB  086B               	movf	??_sendMPU,w
  1391  16CC  00A2               	movwf	UARTSendString@max_length
  1392  16CD  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1393                           
  1394                           ;main.c: 78:     buffer = ftoa(datos[2], status);
  1395  16D2  3008               	movlw	8
  1396  16D3  3EA0               	addlw	(low (_datos| 0))& (0+255)
  1397  16D4  0084               	movwf	4
  1398  16D5  1383               	bcf	3,7	;select IRP bank1
  1399  16D6  0800               	movf	0,w
  1400  16D7  1283               	bcf	3,5	;RP0=0, select bank0
  1401  16D8  1303               	bcf	3,6	;RP1=0, select bank0
  1402  16D9  00E4               	movwf	ftoa@f
  1403  16DA  0A84               	incf	4,f
  1404  16DB  0800               	movf	0,w
  1405  16DC  00E5               	movwf	ftoa@f+1
  1406  16DD  0A84               	incf	4,f
  1407  16DE  0800               	movf	0,w
  1408  16DF  00E6               	movwf	ftoa@f+2
  1409  16E0  0A84               	incf	4,f
  1410  16E1  0800               	movf	0,w
  1411  16E2  00E7               	movwf	ftoa@f+3
  1412  16E3  086C               	movf	sendMPU@status,w
  1413  16E4  00E8               	movwf	ftoa@status
  1414  16E5  086D               	movf	sendMPU@status+1,w
  1415  16E6  00E9               	movwf	ftoa@status+1
  1416  16E7  120A  118A  2683  160A  118A  	fcall	_ftoa
  1417  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  1418  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  1419  16EE  00EB               	movwf	??_sendMPU
  1420  16EF  086B               	movf	??_sendMPU,w
  1421  16F0  00EE               	movwf	sendMPU@buffer
  1422                           
  1423                           ;main.c: 79:     UARTSendString(" ", 10);
  1424  16F1  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1425  16F2  00A0               	movwf	UARTSendString@str
  1426  16F3  3080               	movlw	128
  1427  16F4  00A1               	movwf	UARTSendString@str+1
  1428  16F5  300A               	movlw	10
  1429  16F6  00EB               	movwf	??_sendMPU
  1430  16F7  086B               	movf	??_sendMPU,w
  1431  16F8  00A2               	movwf	UARTSendString@max_length
  1432  16F9  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1433                           
  1434                           ;main.c: 80:     UARTSendString(buffer, 6);
  1435  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  1436  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  1437  1700  086E               	movf	sendMPU@buffer,w
  1438  1701  00A0               	movwf	UARTSendString@str
  1439  1702  3000               	movlw	0
  1440  1703  00A1               	movwf	UARTSendString@str+1
  1441  1704  3006               	movlw	6
  1442  1705  00EB               	movwf	??_sendMPU
  1443  1706  086B               	movf	??_sendMPU,w
  1444  1707  00A2               	movwf	UARTSendString@max_length
  1445  1708  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1446                           
  1447                           ;main.c: 82:     buffer = ftoa(datos[3], status);
  1448  170D  300C               	movlw	12
  1449  170E  3EA0               	addlw	(low (_datos| 0))& (0+255)
  1450  170F  0084               	movwf	4
  1451  1710  1383               	bcf	3,7	;select IRP bank1
  1452  1711  0800               	movf	0,w
  1453  1712  1283               	bcf	3,5	;RP0=0, select bank0
  1454  1713  1303               	bcf	3,6	;RP1=0, select bank0
  1455  1714  00E4               	movwf	ftoa@f
  1456  1715  0A84               	incf	4,f
  1457  1716  0800               	movf	0,w
  1458  1717  00E5               	movwf	ftoa@f+1
  1459  1718  0A84               	incf	4,f
  1460  1719  0800               	movf	0,w
  1461  171A  00E6               	movwf	ftoa@f+2
  1462  171B  0A84               	incf	4,f
  1463  171C  0800               	movf	0,w
  1464  171D  00E7               	movwf	ftoa@f+3
  1465  171E  086C               	movf	sendMPU@status,w
  1466  171F  00E8               	movwf	ftoa@status
  1467  1720  086D               	movf	sendMPU@status+1,w
  1468  1721  00E9               	movwf	ftoa@status+1
  1469  1722  120A  118A  2683  160A  118A  	fcall	_ftoa
  1470  1727  1283               	bcf	3,5	;RP0=0, select bank0
  1471  1728  1303               	bcf	3,6	;RP1=0, select bank0
  1472  1729  00EB               	movwf	??_sendMPU
  1473  172A  086B               	movf	??_sendMPU,w
  1474  172B  00EE               	movwf	sendMPU@buffer
  1475                           
  1476                           ;main.c: 83:     UARTSendString(" ", 10);
  1477  172C  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1478  172D  00A0               	movwf	UARTSendString@str
  1479  172E  3080               	movlw	128
  1480  172F  00A1               	movwf	UARTSendString@str+1
  1481  1730  300A               	movlw	10
  1482  1731  00EB               	movwf	??_sendMPU
  1483  1732  086B               	movf	??_sendMPU,w
  1484  1733  00A2               	movwf	UARTSendString@max_length
  1485  1734  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1486                           
  1487                           ;main.c: 84:     UARTSendString(buffer, 6);
  1488  1739  1283               	bcf	3,5	;RP0=0, select bank0
  1489  173A  1303               	bcf	3,6	;RP1=0, select bank0
  1490  173B  086E               	movf	sendMPU@buffer,w
  1491  173C  00A0               	movwf	UARTSendString@str
  1492  173D  3000               	movlw	0
  1493  173E  00A1               	movwf	UARTSendString@str+1
  1494  173F  3006               	movlw	6
  1495  1740  00EB               	movwf	??_sendMPU
  1496  1741  086B               	movf	??_sendMPU,w
  1497  1742  00A2               	movwf	UARTSendString@max_length
  1498  1743  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1499                           
  1500                           ;main.c: 86:     buffer = ftoa(datos[4], status);
  1501  1748  3010               	movlw	16
  1502  1749  3EA0               	addlw	(low (_datos| 0))& (0+255)
  1503  174A  0084               	movwf	4
  1504  174B  1383               	bcf	3,7	;select IRP bank1
  1505  174C  0800               	movf	0,w
  1506  174D  1283               	bcf	3,5	;RP0=0, select bank0
  1507  174E  1303               	bcf	3,6	;RP1=0, select bank0
  1508  174F  00E4               	movwf	ftoa@f
  1509  1750  0A84               	incf	4,f
  1510  1751  0800               	movf	0,w
  1511  1752  00E5               	movwf	ftoa@f+1
  1512  1753  0A84               	incf	4,f
  1513  1754  0800               	movf	0,w
  1514  1755  00E6               	movwf	ftoa@f+2
  1515  1756  0A84               	incf	4,f
  1516  1757  0800               	movf	0,w
  1517  1758  00E7               	movwf	ftoa@f+3
  1518  1759  086C               	movf	sendMPU@status,w
  1519  175A  00E8               	movwf	ftoa@status
  1520  175B  086D               	movf	sendMPU@status+1,w
  1521  175C  00E9               	movwf	ftoa@status+1
  1522  175D  120A  118A  2683  160A  118A  	fcall	_ftoa
  1523  1762  1283               	bcf	3,5	;RP0=0, select bank0
  1524  1763  1303               	bcf	3,6	;RP1=0, select bank0
  1525  1764  00EB               	movwf	??_sendMPU
  1526  1765  086B               	movf	??_sendMPU,w
  1527  1766  00EE               	movwf	sendMPU@buffer
  1528                           
  1529                           ;main.c: 87:     UARTSendString(" ", 10);
  1530  1767  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1531  1768  00A0               	movwf	UARTSendString@str
  1532  1769  3080               	movlw	128
  1533  176A  00A1               	movwf	UARTSendString@str+1
  1534  176B  300A               	movlw	10
  1535  176C  00EB               	movwf	??_sendMPU
  1536  176D  086B               	movf	??_sendMPU,w
  1537  176E  00A2               	movwf	UARTSendString@max_length
  1538  176F  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1539                           
  1540                           ;main.c: 88:     UARTSendString(buffer, 6);
  1541  1774  1283               	bcf	3,5	;RP0=0, select bank0
  1542  1775  1303               	bcf	3,6	;RP1=0, select bank0
  1543  1776  086E               	movf	sendMPU@buffer,w
  1544  1777  00A0               	movwf	UARTSendString@str
  1545  1778  3000               	movlw	0
  1546  1779  00A1               	movwf	UARTSendString@str+1
  1547  177A  3006               	movlw	6
  1548  177B  00EB               	movwf	??_sendMPU
  1549  177C  086B               	movf	??_sendMPU,w
  1550  177D  00A2               	movwf	UARTSendString@max_length
  1551  177E  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1552                           
  1553                           ;main.c: 89:     buffer = ftoa(datos[5], status);
  1554  1783  3014               	movlw	20
  1555  1784  3EA0               	addlw	(low (_datos| 0))& (0+255)
  1556  1785  0084               	movwf	4
  1557  1786  1383               	bcf	3,7	;select IRP bank1
  1558  1787  0800               	movf	0,w
  1559  1788  1283               	bcf	3,5	;RP0=0, select bank0
  1560  1789  1303               	bcf	3,6	;RP1=0, select bank0
  1561  178A  00E4               	movwf	ftoa@f
  1562  178B  0A84               	incf	4,f
  1563  178C  0800               	movf	0,w
  1564  178D  00E5               	movwf	ftoa@f+1
  1565  178E  0A84               	incf	4,f
  1566  178F  0800               	movf	0,w
  1567  1790  00E6               	movwf	ftoa@f+2
  1568  1791  0A84               	incf	4,f
  1569  1792  0800               	movf	0,w
  1570  1793  00E7               	movwf	ftoa@f+3
  1571  1794  086C               	movf	sendMPU@status,w
  1572  1795  00E8               	movwf	ftoa@status
  1573  1796  086D               	movf	sendMPU@status+1,w
  1574  1797  00E9               	movwf	ftoa@status+1
  1575  1798  120A  118A  2683  160A  118A  	fcall	_ftoa
  1576  179D  1283               	bcf	3,5	;RP0=0, select bank0
  1577  179E  1303               	bcf	3,6	;RP1=0, select bank0
  1578  179F  00EB               	movwf	??_sendMPU
  1579  17A0  086B               	movf	??_sendMPU,w
  1580  17A1  00EE               	movwf	sendMPU@buffer
  1581                           
  1582                           ;main.c: 90:     UARTSendString(" ", 10);
  1583  17A2  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1584  17A3  00A0               	movwf	UARTSendString@str
  1585  17A4  3080               	movlw	128
  1586  17A5  00A1               	movwf	UARTSendString@str+1
  1587  17A6  300A               	movlw	10
  1588  17A7  00EB               	movwf	??_sendMPU
  1589  17A8  086B               	movf	??_sendMPU,w
  1590  17A9  00A2               	movwf	UARTSendString@max_length
  1591  17AA  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1592                           
  1593                           ;main.c: 91:     UARTSendString(buffer, 6);
  1594  17AF  1283               	bcf	3,5	;RP0=0, select bank0
  1595  17B0  1303               	bcf	3,6	;RP1=0, select bank0
  1596  17B1  086E               	movf	sendMPU@buffer,w
  1597  17B2  00A0               	movwf	UARTSendString@str
  1598  17B3  3000               	movlw	0
  1599  17B4  00A1               	movwf	UARTSendString@str+1
  1600  17B5  3006               	movlw	6
  1601  17B6  00EB               	movwf	??_sendMPU
  1602  17B7  086B               	movf	??_sendMPU,w
  1603  17B8  00A2               	movwf	UARTSendString@max_length
  1604  17B9  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1605                           
  1606                           ;main.c: 93:     buffer = ftoa(datos[6], status);
  1607  17BE  3018               	movlw	24
  1608  17BF  3EA0               	addlw	(low (_datos| 0))& (0+255)
  1609  17C0  0084               	movwf	4
  1610  17C1  1383               	bcf	3,7	;select IRP bank1
  1611  17C2  0800               	movf	0,w
  1612  17C3  1283               	bcf	3,5	;RP0=0, select bank0
  1613  17C4  1303               	bcf	3,6	;RP1=0, select bank0
  1614  17C5  00E4               	movwf	ftoa@f
  1615  17C6  0A84               	incf	4,f
  1616  17C7  0800               	movf	0,w
  1617  17C8  00E5               	movwf	ftoa@f+1
  1618  17C9  0A84               	incf	4,f
  1619  17CA  0800               	movf	0,w
  1620  17CB  00E6               	movwf	ftoa@f+2
  1621  17CC  0A84               	incf	4,f
  1622  17CD  0800               	movf	0,w
  1623  17CE  00E7               	movwf	ftoa@f+3
  1624  17CF  086C               	movf	sendMPU@status,w
  1625  17D0  00E8               	movwf	ftoa@status
  1626  17D1  086D               	movf	sendMPU@status+1,w
  1627  17D2  00E9               	movwf	ftoa@status+1
  1628  17D3  120A  118A  2683  160A  118A  	fcall	_ftoa
  1629  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  1630  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  1631  17DA  00EB               	movwf	??_sendMPU
  1632  17DB  086B               	movf	??_sendMPU,w
  1633  17DC  00EE               	movwf	sendMPU@buffer
  1634                           
  1635                           ;main.c: 94:     UARTSendString(" ", 10);
  1636  17DD  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1637  17DE  00A0               	movwf	UARTSendString@str
  1638  17DF  3080               	movlw	128
  1639  17E0  00A1               	movwf	UARTSendString@str+1
  1640  17E1  300A               	movlw	10
  1641  17E2  00EB               	movwf	??_sendMPU
  1642  17E3  086B               	movf	??_sendMPU,w
  1643  17E4  00A2               	movwf	UARTSendString@max_length
  1644  17E5  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1645                           
  1646                           ;main.c: 95:     UARTSendString(buffer, 6);
  1647  17EA  1283               	bcf	3,5	;RP0=0, select bank0
  1648  17EB  1303               	bcf	3,6	;RP1=0, select bank0
  1649  17EC  086E               	movf	sendMPU@buffer,w
  1650  17ED  00A0               	movwf	UARTSendString@str
  1651  17EE  3000               	movlw	0
  1652  17EF  00A1               	movwf	UARTSendString@str+1
  1653  17F0  3006               	movlw	6
  1654  17F1  00EB               	movwf	??_sendMPU
  1655  17F2  086B               	movf	??_sendMPU,w
  1656  17F3  00A2               	movwf	UARTSendString@max_length
  1657  17F4  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1658  17F9                     l3437:
  1659                           
  1660                           ;main.c: 97:     UARTSendChar('\n');
  1661  17F9  300A               	movlw	10
  1662  17FA  160A  118A  221F  160A  118A  	fcall	_UARTSendChar
  1663  17FF                     l133:
  1664  17FF  0008               	return
  1665  1800                     __end_of_sendMPU:
  1666                           
  1667                           	psect	text2
  1668  0683                     __ptext2:	
  1669 ;; *************** function _ftoa *****************
  1670 ;; Defined at:
  1671 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftoa.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  f               4   68[BANK0 ] float 
  1674 ;;  status          2   72[BANK0 ] PTR int 
  1675 ;;		 -> RAM(512), 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  l               4    4[BANK1 ] unsigned long 
  1678 ;;  rem             4    0[BANK1 ] unsigned long 
  1679 ;;  cp              1    8[BANK1 ] PTR unsigned char 
  1680 ;;		 -> ftoa@buf(17), 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      PTR unsigned char 
  1683 ;; Registers used:
  1684 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1690 ;;      Params:         0       6       0       0       0
  1691 ;;      Locals:         0       0       9       0       0
  1692 ;;      Temps:          0       1       0       0       0
  1693 ;;      Totals:         0       7       9       0       0
  1694 ;;Total ram usage:       16 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:    3
  1697 ;; This function calls:
  1698 ;;		___flge
  1699 ;;		___flmul
  1700 ;;		___flneg
  1701 ;;		___flsub
  1702 ;;		___fltol
  1703 ;;		___xxtofl
  1704 ;;		_sprintf
  1705 ;; This function is called by:
  1706 ;;		_sendMPU
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           
  1711                           ;psect for function _ftoa
  1712  0683                     _ftoa:
  1713  0683                     l3359:	
  1714                           ;incstack = 0
  1715                           ; Regs used in _ftoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1716                           
  1717  0683  30BC               	movlw	(low (ftoa@buf| 0))& (0+255)
  1718  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1719  0685  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0686  00EA               	movwf	??_ftoa
  1721  0687  086A               	movf	??_ftoa,w
  1722  0688  1683               	bsf	3,5	;RP0=1, select bank1
  1723  0689  1303               	bcf	3,6	;RP1=0, select bank1
  1724  068A  00D5               	movwf	ftoa@cp^(0+128)
  1725  068B                     l3361:
  1726  068B  1283               	bcf	3,5	;RP0=0, select bank0
  1727  068C  1303               	bcf	3,6	;RP1=0, select bank0
  1728  068D  0867               	movf	ftoa@f+3,w
  1729  068E  00A3               	movwf	___flge@ff1+3
  1730  068F  0866               	movf	ftoa@f+2,w
  1731  0690  00A2               	movwf	___flge@ff1+2
  1732  0691  0865               	movf	ftoa@f+1,w
  1733  0692  00A1               	movwf	___flge@ff1+1
  1734  0693  0864               	movf	ftoa@f,w
  1735  0694  00A0               	movwf	___flge@ff1
  1736  0695  3000               	movlw	0
  1737  0696  00A7               	movwf	___flge@ff2+3
  1738  0697  3000               	movlw	0
  1739  0698  00A6               	movwf	___flge@ff2+2
  1740  0699  3000               	movlw	0
  1741  069A  00A5               	movwf	___flge@ff2+1
  1742  069B  3000               	movlw	0
  1743  069C  00A4               	movwf	___flge@ff2
  1744  069D  160A  118A  2504  120A  118A  	fcall	___flge
  1745  06A2  1803               	btfsc	3,0
  1746  06A3  2EA5               	goto	u4961
  1747  06A4  2EA6               	goto	u4960
  1748  06A5                     u4961:
  1749  06A5  2ED2               	goto	l3369
  1750  06A6                     u4960:
  1751  06A6                     l3363:
  1752  06A6  302D               	movlw	45
  1753  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  1754  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  1755  06A9  00EA               	movwf	??_ftoa
  1756  06AA  1683               	bsf	3,5	;RP0=1, select bank1
  1757  06AB  1303               	bcf	3,6	;RP1=0, select bank1
  1758  06AC  0855               	movf	ftoa@cp^(0+128),w
  1759  06AD  0084               	movwf	4
  1760  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  1761  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  1762  06B0  086A               	movf	??_ftoa,w
  1763  06B1  1383               	bcf	3,7	;select IRP bank0
  1764  06B2  0080               	movwf	0
  1765  06B3                     l3365:
  1766  06B3  3001               	movlw	1
  1767  06B4  00EA               	movwf	??_ftoa
  1768  06B5  086A               	movf	??_ftoa,w
  1769  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  1770  06B7  1303               	bcf	3,6	;RP1=0, select bank1
  1771  06B8  07D5               	addwf	ftoa@cp^(0+128),f
  1772  06B9                     l3367:
  1773  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  1774  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  1775  06BB  0867               	movf	ftoa@f+3,w
  1776  06BC  00A3               	movwf	___flneg@f1+3
  1777  06BD  0866               	movf	ftoa@f+2,w
  1778  06BE  00A2               	movwf	___flneg@f1+2
  1779  06BF  0865               	movf	ftoa@f+1,w
  1780  06C0  00A1               	movwf	___flneg@f1+1
  1781  06C1  0864               	movf	ftoa@f,w
  1782  06C2  00A0               	movwf	___flneg@f1
  1783  06C3  160A  118A  2245  120A  118A  	fcall	___flneg
  1784  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  1785  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  1786  06CA  0823               	movf	?___flneg+3,w
  1787  06CB  00E7               	movwf	ftoa@f+3
  1788  06CC  0822               	movf	?___flneg+2,w
  1789  06CD  00E6               	movwf	ftoa@f+2
  1790  06CE  0821               	movf	?___flneg+1,w
  1791  06CF  00E5               	movwf	ftoa@f+1
  1792  06D0  0820               	movf	?___flneg,w
  1793  06D1  00E4               	movwf	ftoa@f
  1794  06D2                     l3369:
  1795  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1796  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1797  06D4  0867               	movf	ftoa@f+3,w
  1798  06D5  00CB               	movwf	___fltol@f1+3
  1799  06D6  0866               	movf	ftoa@f+2,w
  1800  06D7  00CA               	movwf	___fltol@f1+2
  1801  06D8  0865               	movf	ftoa@f+1,w
  1802  06D9  00C9               	movwf	___fltol@f1+1
  1803  06DA  0864               	movf	ftoa@f,w
  1804  06DB  00C8               	movwf	___fltol@f1
  1805  06DC  120A  158A  2014  120A  118A  	fcall	___fltol
  1806  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  1807  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  1808  06E3  084B               	movf	?___fltol+3,w
  1809  06E4  1683               	bsf	3,5	;RP0=1, select bank1
  1810  06E5  1303               	bcf	3,6	;RP1=0, select bank1
  1811  06E6  00D4               	movwf	(ftoa@l+3)^(0+128)
  1812  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  1813  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  1814  06E9  084A               	movf	?___fltol+2,w
  1815  06EA  1683               	bsf	3,5	;RP0=1, select bank1
  1816  06EB  1303               	bcf	3,6	;RP1=0, select bank1
  1817  06EC  00D3               	movwf	(ftoa@l+2)^(0+128)
  1818  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  1819  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  1820  06EF  0849               	movf	?___fltol+1,w
  1821  06F0  1683               	bsf	3,5	;RP0=1, select bank1
  1822  06F1  1303               	bcf	3,6	;RP1=0, select bank1
  1823  06F2  00D2               	movwf	(ftoa@l+1)^(0+128)
  1824  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  1825  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  1826  06F5  0848               	movf	?___fltol,w
  1827  06F6  1683               	bsf	3,5	;RP0=1, select bank1
  1828  06F7  1303               	bcf	3,6	;RP1=0, select bank1
  1829  06F8  00D1               	movwf	ftoa@l^(0+128)
  1830  06F9                     l3371:
  1831  06F9  0854               	movf	(ftoa@l+3)^(0+128),w
  1832  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  1833  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  1834  06FC  00A3               	movwf	___xxtofl@val+3
  1835  06FD  1683               	bsf	3,5	;RP0=1, select bank1
  1836  06FE  1303               	bcf	3,6	;RP1=0, select bank1
  1837  06FF  0853               	movf	(ftoa@l+2)^(0+128),w
  1838  0700  1283               	bcf	3,5	;RP0=0, select bank0
  1839  0701  1303               	bcf	3,6	;RP1=0, select bank0
  1840  0702  00A2               	movwf	___xxtofl@val+2
  1841  0703  1683               	bsf	3,5	;RP0=1, select bank1
  1842  0704  1303               	bcf	3,6	;RP1=0, select bank1
  1843  0705  0852               	movf	(ftoa@l+1)^(0+128),w
  1844  0706  1283               	bcf	3,5	;RP0=0, select bank0
  1845  0707  1303               	bcf	3,6	;RP1=0, select bank0
  1846  0708  00A1               	movwf	___xxtofl@val+1
  1847  0709  1683               	bsf	3,5	;RP0=1, select bank1
  1848  070A  1303               	bcf	3,6	;RP1=0, select bank1
  1849  070B  0851               	movf	ftoa@l^(0+128),w
  1850  070C  1283               	bcf	3,5	;RP0=0, select bank0
  1851  070D  1303               	bcf	3,6	;RP1=0, select bank0
  1852  070E  00A0               	movwf	___xxtofl@val
  1853  070F  3000               	movlw	0
  1854  0710  160A  118A  25A8  120A  118A  	fcall	___xxtofl
  1855  0715  1283               	bcf	3,5	;RP0=0, select bank0
  1856  0716  1303               	bcf	3,6	;RP1=0, select bank0
  1857  0717  0823               	movf	?___xxtofl+3,w
  1858  0718  00DF               	movwf	___flsub@a+3
  1859  0719  0822               	movf	?___xxtofl+2,w
  1860  071A  00DE               	movwf	___flsub@a+2
  1861  071B  0821               	movf	?___xxtofl+1,w
  1862  071C  00DD               	movwf	___flsub@a+1
  1863  071D  0820               	movf	?___xxtofl,w
  1864  071E  00DC               	movwf	___flsub@a
  1865  071F  0867               	movf	ftoa@f+3,w
  1866  0720  00E3               	movwf	___flsub@b+3
  1867  0721  0866               	movf	ftoa@f+2,w
  1868  0722  00E2               	movwf	___flsub@b+2
  1869  0723  0865               	movf	ftoa@f+1,w
  1870  0724  00E1               	movwf	___flsub@b+1
  1871  0725  0864               	movf	ftoa@f,w
  1872  0726  00E0               	movwf	___flsub@b
  1873  0727  160A  118A  2276  120A  118A  	fcall	___flsub
  1874  072C  1283               	bcf	3,5	;RP0=0, select bank0
  1875  072D  1303               	bcf	3,6	;RP1=0, select bank0
  1876  072E  085F               	movf	?___flsub+3,w
  1877  072F  00E7               	movwf	ftoa@f+3
  1878  0730  085E               	movf	?___flsub+2,w
  1879  0731  00E6               	movwf	ftoa@f+2
  1880  0732  085D               	movf	?___flsub+1,w
  1881  0733  00E5               	movwf	ftoa@f+1
  1882  0734  085C               	movf	?___flsub,w
  1883  0735  00E4               	movwf	ftoa@f
  1884  0736                     l3373:
  1885  0736  0867               	movf	ftoa@f+3,w
  1886  0737  00B5               	movwf	___flmul@a+3
  1887  0738  0866               	movf	ftoa@f+2,w
  1888  0739  00B4               	movwf	___flmul@a+2
  1889  073A  0865               	movf	ftoa@f+1,w
  1890  073B  00B3               	movwf	___flmul@a+1
  1891  073C  0864               	movf	ftoa@f,w
  1892  073D  00B2               	movwf	___flmul@a
  1893  073E  3049               	movlw	73
  1894  073F  00B1               	movwf	___flmul@b+3
  1895  0740  3074               	movlw	116
  1896  0741  00B0               	movwf	___flmul@b+2
  1897  0742  3024               	movlw	36
  1898  0743  00AF               	movwf	___flmul@b+1
  1899  0744  3000               	movlw	0
  1900  0745  00AE               	movwf	___flmul@b
  1901  0746  120A  118A  201F  120A  118A  	fcall	___flmul
  1902  074B  1283               	bcf	3,5	;RP0=0, select bank0
  1903  074C  1303               	bcf	3,6	;RP1=0, select bank0
  1904  074D  0831               	movf	?___flmul+3,w
  1905  074E  00CB               	movwf	___fltol@f1+3
  1906  074F  0830               	movf	?___flmul+2,w
  1907  0750  00CA               	movwf	___fltol@f1+2
  1908  0751  082F               	movf	?___flmul+1,w
  1909  0752  00C9               	movwf	___fltol@f1+1
  1910  0753  082E               	movf	?___flmul,w
  1911  0754  00C8               	movwf	___fltol@f1
  1912  0755  120A  158A  2014  120A  118A  	fcall	___fltol
  1913  075A  1283               	bcf	3,5	;RP0=0, select bank0
  1914  075B  1303               	bcf	3,6	;RP1=0, select bank0
  1915  075C  084B               	movf	?___fltol+3,w
  1916  075D  1683               	bsf	3,5	;RP0=1, select bank1
  1917  075E  1303               	bcf	3,6	;RP1=0, select bank1
  1918  075F  00D0               	movwf	(ftoa@rem+3)^(0+128)
  1919  0760  1283               	bcf	3,5	;RP0=0, select bank0
  1920  0761  1303               	bcf	3,6	;RP1=0, select bank0
  1921  0762  084A               	movf	?___fltol+2,w
  1922  0763  1683               	bsf	3,5	;RP0=1, select bank1
  1923  0764  1303               	bcf	3,6	;RP1=0, select bank1
  1924  0765  00CF               	movwf	(ftoa@rem+2)^(0+128)
  1925  0766  1283               	bcf	3,5	;RP0=0, select bank0
  1926  0767  1303               	bcf	3,6	;RP1=0, select bank0
  1927  0768  0849               	movf	?___fltol+1,w
  1928  0769  1683               	bsf	3,5	;RP0=1, select bank1
  1929  076A  1303               	bcf	3,6	;RP1=0, select bank1
  1930  076B  00CE               	movwf	(ftoa@rem+1)^(0+128)
  1931  076C  1283               	bcf	3,5	;RP0=0, select bank0
  1932  076D  1303               	bcf	3,6	;RP1=0, select bank0
  1933  076E  0848               	movf	?___fltol,w
  1934  076F  1683               	bsf	3,5	;RP0=1, select bank1
  1935  0770  1303               	bcf	3,6	;RP1=0, select bank1
  1936  0771  00CD               	movwf	ftoa@rem^(0+128)
  1937  0772                     l3375:
  1938  0772  3029               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1939  0773  1283               	bcf	3,5	;RP0=0, select bank0
  1940  0774  1303               	bcf	3,6	;RP1=0, select bank0
  1941  0775  00EA               	movwf	??_ftoa
  1942  0776  086A               	movf	??_ftoa,w
  1943  0777  00B7               	movwf	sprintf@f
  1944  0778  1683               	bsf	3,5	;RP0=1, select bank1
  1945  0779  1303               	bcf	3,6	;RP1=0, select bank1
  1946  077A  0854               	movf	(ftoa@l+3)^(0+128),w
  1947  077B  1283               	bcf	3,5	;RP0=0, select bank0
  1948  077C  1303               	bcf	3,6	;RP1=0, select bank0
  1949  077D  00BB               	movwf	?_sprintf+4
  1950  077E  1683               	bsf	3,5	;RP0=1, select bank1
  1951  077F  1303               	bcf	3,6	;RP1=0, select bank1
  1952  0780  0853               	movf	(ftoa@l+2)^(0+128),w
  1953  0781  1283               	bcf	3,5	;RP0=0, select bank0
  1954  0782  1303               	bcf	3,6	;RP1=0, select bank0
  1955  0783  00BA               	movwf	?_sprintf+3
  1956  0784  1683               	bsf	3,5	;RP0=1, select bank1
  1957  0785  1303               	bcf	3,6	;RP1=0, select bank1
  1958  0786  0852               	movf	(ftoa@l+1)^(0+128),w
  1959  0787  1283               	bcf	3,5	;RP0=0, select bank0
  1960  0788  1303               	bcf	3,6	;RP1=0, select bank0
  1961  0789  00B9               	movwf	?_sprintf+2
  1962  078A  1683               	bsf	3,5	;RP0=1, select bank1
  1963  078B  1303               	bcf	3,6	;RP1=0, select bank1
  1964  078C  0851               	movf	ftoa@l^(0+128),w
  1965  078D  1283               	bcf	3,5	;RP0=0, select bank0
  1966  078E  1303               	bcf	3,6	;RP1=0, select bank0
  1967  078F  00B8               	movwf	?_sprintf+1
  1968  0790  1683               	bsf	3,5	;RP0=1, select bank1
  1969  0791  1303               	bcf	3,6	;RP1=0, select bank1
  1970  0792  0850               	movf	(ftoa@rem+3)^(0+128),w
  1971  0793  1283               	bcf	3,5	;RP0=0, select bank0
  1972  0794  1303               	bcf	3,6	;RP1=0, select bank0
  1973  0795  00BF               	movwf	?_sprintf+8
  1974  0796  1683               	bsf	3,5	;RP0=1, select bank1
  1975  0797  1303               	bcf	3,6	;RP1=0, select bank1
  1976  0798  084F               	movf	(ftoa@rem+2)^(0+128),w
  1977  0799  1283               	bcf	3,5	;RP0=0, select bank0
  1978  079A  1303               	bcf	3,6	;RP1=0, select bank0
  1979  079B  00BE               	movwf	?_sprintf+7
  1980  079C  1683               	bsf	3,5	;RP0=1, select bank1
  1981  079D  1303               	bcf	3,6	;RP1=0, select bank1
  1982  079E  084E               	movf	(ftoa@rem+1)^(0+128),w
  1983  079F  1283               	bcf	3,5	;RP0=0, select bank0
  1984  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  1985  07A1  00BD               	movwf	?_sprintf+6
  1986  07A2  1683               	bsf	3,5	;RP0=1, select bank1
  1987  07A3  1303               	bcf	3,6	;RP1=0, select bank1
  1988  07A4  084D               	movf	ftoa@rem^(0+128),w
  1989  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1990  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1991  07A7  00BC               	movwf	?_sprintf+5
  1992  07A8  1683               	bsf	3,5	;RP0=1, select bank1
  1993  07A9  1303               	bcf	3,6	;RP1=0, select bank1
  1994  07AA  0855               	movf	ftoa@cp^(0+128),w
  1995  07AB  120A  158A  232C  120A  118A  	fcall	_sprintf
  1996  07B0                     l3377:
  1997  07B0  30BC               	movlw	(low (ftoa@buf| 0))& (0+255)
  1998  07B1                     l764:
  1999  07B1  0008               	return
  2000  07B2                     __end_of_ftoa:
  2001                           
  2002                           	psect	text3
  2003  0B2C                     __ptext3:	
  2004 ;; *************** function _sprintf *****************
  2005 ;; Defined at:
  2006 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  sp              1    wreg     PTR unsigned char 
  2009 ;;		 -> ftoa@buf(17), 
  2010 ;;  f               1   23[BANK0 ] PTR const unsigned char 
  2011 ;;		 -> STR_7(11), 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  sp              1   43[BANK0 ] PTR unsigned char 
  2014 ;;		 -> ftoa@buf(17), 
  2015 ;;  val             4   39[BANK0 ] unsigned long 
  2016 ;;  tmpval          4    0        struct .
  2017 ;;  prec            2   46[BANK0 ] int 
  2018 ;;  width           2   44[BANK0 ] int 
  2019 ;;  cp              2    0        PTR const unsigned char 
  2020 ;;  len             2    0        unsigned int 
  2021 ;;  c               1   48[BANK0 ] unsigned char 
  2022 ;;  ap              1   38[BANK0 ] PTR void [1]
  2023 ;;		 -> ?_sprintf(2), 
  2024 ;;  flag            1   37[BANK0 ] unsigned char 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  2   23[BANK0 ] int 
  2027 ;; Registers used:
  2028 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2034 ;;      Params:         0       9       0       0       0
  2035 ;;      Locals:         0      12       0       0       0
  2036 ;;      Temps:          0       5       0       0       0
  2037 ;;      Totals:         0      26       0       0       0
  2038 ;;Total ram usage:       26 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    2
  2041 ;; This function calls:
  2042 ;;		___lldiv
  2043 ;;		___llmod
  2044 ;;		___wmul
  2045 ;;		_isdigit
  2046 ;; This function is called by:
  2047 ;;		_ftoa
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           
  2052                           ;psect for function _sprintf
  2053  0B2C                     _sprintf:
  2054                           
  2055                           ;incstack = 0
  2056                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2057                           ;sprintf@sp stored from wreg
  2058  0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  2059  0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  2060  0B2E  00CB               	movwf	sprintf@sp
  2061  0B2F                     l3219:
  2062                           
  2063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2064  0B2F  3038               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2065  0B30  00C0               	movwf	??_sprintf
  2066  0B31  0840               	movf	??_sprintf,w
  2067  0B32  00C6               	movwf	sprintf@ap
  2068                           
  2069                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2070  0B33  2D61               	goto	l3317
  2071  0B34                     l3221:
  2072                           
  2073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2074  0B34  3025               	movlw	37
  2075  0B35  0650               	xorwf	sprintf@c,w
  2076  0B36  1903               	btfsc	3,2
  2077  0B37  2B39               	goto	u4741
  2078  0B38  2B3A               	goto	u4740
  2079  0B39                     u4741:
  2080  0B39  2B46               	goto	l3227
  2081  0B3A                     u4740:
  2082  0B3A                     l3223:
  2083                           
  2084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2085  0B3A  0850               	movf	sprintf@c,w
  2086  0B3B  00C0               	movwf	??_sprintf
  2087  0B3C  084B               	movf	sprintf@sp,w
  2088  0B3D  0084               	movwf	4
  2089  0B3E  0840               	movf	??_sprintf,w
  2090  0B3F  1383               	bcf	3,7	;select IRP bank0
  2091  0B40  0080               	movwf	0
  2092  0B41                     l3225:
  2093  0B41  3001               	movlw	1
  2094  0B42  00C0               	movwf	??_sprintf
  2095  0B43  0840               	movf	??_sprintf,w
  2096  0B44  07CB               	addwf	sprintf@sp,f
  2097                           
  2098                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2099  0B45  2D61               	goto	l3317
  2100  0B46                     l3227:
  2101                           
  2102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2103  0B46  01CC               	clrf	sprintf@width
  2104  0B47  01CD               	clrf	sprintf@width+1
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2107  0B48  01C5               	clrf	sprintf@flag
  2108  0B49                     l3229:
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2111  0B49  0837               	movf	sprintf@f,w
  2112  0B4A  0084               	movwf	4
  2113  0B4B  120A  118A  27BC  120A  158A  	fcall	stringdir
  2114  0B50  120A  158A  2000  120A  158A  	fcall	_isdigit
  2115  0B55  1C03               	btfss	3,0
  2116  0B56  2B58               	goto	u4751
  2117  0B57  2B59               	goto	u4750
  2118  0B58                     u4751:
  2119  0B58  2B99               	goto	l3241
  2120  0B59                     u4750:
  2121  0B59                     l3231:
  2122                           
  2123                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2124  0B59  1283               	bcf	3,5	;RP0=0, select bank0
  2125  0B5A  1303               	bcf	3,6	;RP1=0, select bank0
  2126  0B5B  01CC               	clrf	sprintf@width
  2127  0B5C  01CD               	clrf	sprintf@width+1
  2128  0B5D                     l3233:
  2129                           
  2130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2131  0B5D  300A               	movlw	10
  2132  0B5E  1283               	bcf	3,5	;RP0=0, select bank0
  2133  0B5F  1303               	bcf	3,6	;RP1=0, select bank0
  2134  0B60  00A0               	movwf	___wmul@multiplier
  2135  0B61  3000               	movlw	0
  2136  0B62  00A1               	movwf	___wmul@multiplier+1
  2137  0B63  084D               	movf	sprintf@width+1,w
  2138  0B64  00A3               	movwf	___wmul@multiplicand+1
  2139  0B65  084C               	movf	sprintf@width,w
  2140  0B66  00A2               	movwf	___wmul@multiplicand
  2141  0B67  160A  118A  22C1  120A  158A  	fcall	___wmul
  2142  0B6C  1283               	bcf	3,5	;RP0=0, select bank0
  2143  0B6D  1303               	bcf	3,6	;RP1=0, select bank0
  2144  0B6E  0821               	movf	?___wmul+1,w
  2145  0B6F  00CD               	movwf	sprintf@width+1
  2146  0B70  0820               	movf	?___wmul,w
  2147  0B71  00CC               	movwf	sprintf@width
  2148  0B72                     l3235:
  2149                           
  2150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2151  0B72  0837               	movf	sprintf@f,w
  2152  0B73  0084               	movwf	4
  2153  0B74  120A  118A  27BC  120A  158A  	fcall	stringdir
  2154  0B79  3ED0               	addlw	208
  2155  0B7A  00C0               	movwf	??_sprintf
  2156  0B7B  30FF               	movlw	255
  2157  0B7C  1803               	skipnc
  2158  0B7D  3000               	movlw	0
  2159  0B7E  00C1               	movwf	??_sprintf+1
  2160  0B7F  0840               	movf	??_sprintf,w
  2161  0B80  07CC               	addwf	sprintf@width,f
  2162  0B81  1803               	skipnc
  2163  0B82  0ACD               	incf	sprintf@width+1,f
  2164  0B83  0841               	movf	??_sprintf+1,w
  2165  0B84  07CD               	addwf	sprintf@width+1,f
  2166  0B85                     l3237:
  2167  0B85  3001               	movlw	1
  2168  0B86  00C0               	movwf	??_sprintf
  2169  0B87  0840               	movf	??_sprintf,w
  2170  0B88  07B7               	addwf	sprintf@f,f
  2171  0B89                     l3239:
  2172                           
  2173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2174  0B89  0837               	movf	sprintf@f,w
  2175  0B8A  0084               	movwf	4
  2176  0B8B  120A  118A  27BC  120A  158A  	fcall	stringdir
  2177  0B90  120A  158A  2000  120A  158A  	fcall	_isdigit
  2178  0B95  1803               	btfsc	3,0
  2179  0B96  2B98               	goto	u4761
  2180  0B97  2B99               	goto	u4760
  2181  0B98                     u4761:
  2182  0B98  2B5D               	goto	l3233
  2183  0B99                     u4760:
  2184  0B99                     l3241:
  2185                           
  2186                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2187  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  2188  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  2189  0B9B  0837               	movf	sprintf@f,w
  2190  0B9C  0084               	movwf	4
  2191  0B9D  120A  118A  27BC  120A  158A  	fcall	stringdir
  2192  0BA2  3A2E               	xorlw	46
  2193  0BA3  1D03               	skipz
  2194  0BA4  2BA6               	goto	u4771
  2195  0BA5  2BA7               	goto	u4770
  2196  0BA6                     u4771:
  2197  0BA6  2BEB               	goto	l3255
  2198  0BA7                     u4770:
  2199  0BA7                     l3243:
  2200                           
  2201                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2202  0BA7  3001               	movlw	1
  2203  0BA8  00C0               	movwf	??_sprintf
  2204  0BA9  0840               	movf	??_sprintf,w
  2205  0BAA  07B7               	addwf	sprintf@f,f
  2206  0BAB                     l3245:
  2207                           
  2208                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2209  0BAB  01CE               	clrf	sprintf@prec
  2210  0BAC  01CF               	clrf	sprintf@prec+1
  2211                           
  2212                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2213  0BAD  2BDA               	goto	l3253
  2214  0BAE                     l3247:
  2215                           
  2216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2217  0BAE  300A               	movlw	10
  2218  0BAF  1283               	bcf	3,5	;RP0=0, select bank0
  2219  0BB0  1303               	bcf	3,6	;RP1=0, select bank0
  2220  0BB1  00A0               	movwf	___wmul@multiplier
  2221  0BB2  3000               	movlw	0
  2222  0BB3  00A1               	movwf	___wmul@multiplier+1
  2223  0BB4  084F               	movf	sprintf@prec+1,w
  2224  0BB5  00A3               	movwf	___wmul@multiplicand+1
  2225  0BB6  084E               	movf	sprintf@prec,w
  2226  0BB7  00A2               	movwf	___wmul@multiplicand
  2227  0BB8  160A  118A  22C1  120A  158A  	fcall	___wmul
  2228  0BBD  1283               	bcf	3,5	;RP0=0, select bank0
  2229  0BBE  1303               	bcf	3,6	;RP1=0, select bank0
  2230  0BBF  0821               	movf	?___wmul+1,w
  2231  0BC0  00CF               	movwf	sprintf@prec+1
  2232  0BC1  0820               	movf	?___wmul,w
  2233  0BC2  00CE               	movwf	sprintf@prec
  2234  0BC3                     l3249:
  2235                           
  2236                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2237  0BC3  0837               	movf	sprintf@f,w
  2238  0BC4  0084               	movwf	4
  2239  0BC5  120A  118A  27BC  120A  158A  	fcall	stringdir
  2240  0BCA  3ED0               	addlw	208
  2241  0BCB  00C0               	movwf	??_sprintf
  2242  0BCC  30FF               	movlw	255
  2243  0BCD  1803               	skipnc
  2244  0BCE  3000               	movlw	0
  2245  0BCF  00C1               	movwf	??_sprintf+1
  2246  0BD0  0840               	movf	??_sprintf,w
  2247  0BD1  07CE               	addwf	sprintf@prec,f
  2248  0BD2  1803               	skipnc
  2249  0BD3  0ACF               	incf	sprintf@prec+1,f
  2250  0BD4  0841               	movf	??_sprintf+1,w
  2251  0BD5  07CF               	addwf	sprintf@prec+1,f
  2252  0BD6                     l3251:
  2253  0BD6  3001               	movlw	1
  2254  0BD7  00C0               	movwf	??_sprintf
  2255  0BD8  0840               	movf	??_sprintf,w
  2256  0BD9  07B7               	addwf	sprintf@f,f
  2257  0BDA                     l3253:
  2258                           
  2259                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2260  0BDA  0837               	movf	sprintf@f,w
  2261  0BDB  0084               	movwf	4
  2262  0BDC  120A  118A  27BC  120A  158A  	fcall	stringdir
  2263  0BE1  120A  158A  2000  120A  158A  	fcall	_isdigit
  2264  0BE6  1803               	btfsc	3,0
  2265  0BE7  2BE9               	goto	u4781
  2266  0BE8  2BEA               	goto	u4780
  2267  0BE9                     u4781:
  2268  0BE9  2BAE               	goto	l3247
  2269  0BEA                     u4780:
  2270  0BEA  2BF5               	goto	l3261
  2271  0BEB                     l3255:
  2272                           
  2273                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2274  0BEB  01CE               	clrf	sprintf@prec
  2275  0BEC  01CF               	clrf	sprintf@prec+1
  2276  0BED  2BF5               	goto	l3261
  2277  0BEE                     l790:	
  2278                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 667:   case 'l':
  2279                           
  2280                           
  2281                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 669:    flag |= 0
      +                          x10;
  2282  0BEE  1645               	bsf	sprintf@flag,4
  2283                           
  2284                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 670:    goto loop
      +                          ;
  2285  0BEF  2BF5               	goto	l3261
  2286  0BF0                     l3257:
  2287                           
  2288                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  2289  0BF0  30C0               	movlw	192
  2290  0BF1  00C0               	movwf	??_sprintf
  2291  0BF2  0840               	movf	??_sprintf,w
  2292  0BF3  04C5               	iorwf	sprintf@flag,f
  2293                           
  2294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 845:    break;
  2295  0BF4  2C14               	goto	l793
  2296  0BF5                     l3261:
  2297  0BF5  3001               	movlw	1
  2298  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
  2299  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
  2300  0BF8  07B7               	addwf	sprintf@f,f
  2301  0BF9  30FF               	movlw	-1
  2302  0BFA  0737               	addwf	sprintf@f,w
  2303  0BFB  0084               	movwf	4
  2304  0BFC  120A  118A  27BC  120A  158A  	fcall	stringdir
  2305  0C01  00D0               	movwf	sprintf@c
  2306  0C02  00C0               	movwf	??_sprintf
  2307  0C03  01C1               	clrf	??_sprintf+1
  2308                           
  2309                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2310                           ; Switch size 1, requested type "simple"
  2311                           ; Number of cases is 1, Range of values is 0 to 0
  2312                           ; switch strategies available:
  2313                           ; Name         Instructions Cycles
  2314                           ; simple_byte            4     3 (average)
  2315                           ; direct_byte           11     8 (fixed)
  2316                           ; jumptable            260     6 (fixed)
  2317                           ;	Chosen strategy is simple_byte
  2318  0C04  0841               	movf	??_sprintf+1,w
  2319  0C05  3A00               	xorlw	0	; case 0
  2320  0C06  1903               	skipnz
  2321  0C07  2C09               	goto	l3517
  2322  0C08  2D61               	goto	l3317
  2323  0C09                     l3517:
  2324                           
  2325                           ; Switch size 1, requested type "simple"
  2326                           ; Number of cases is 3, Range of values is 0 to 117
  2327                           ; switch strategies available:
  2328                           ; Name         Instructions Cycles
  2329                           ; simple_byte           10     6 (average)
  2330                           ; jumptable            260     6 (fixed)
  2331                           ;	Chosen strategy is simple_byte
  2332  0C09  0840               	movf	??_sprintf,w
  2333  0C0A  3A00               	xorlw	0	; case 0
  2334  0C0B  1903               	skipnz
  2335  0C0C  2D73               	goto	l3319
  2336  0C0D  3A6C               	xorlw	108	; case 108
  2337  0C0E  1903               	skipnz
  2338  0C0F  2BEE               	goto	l790
  2339  0C10  3A19               	xorlw	25	; case 117
  2340  0C11  1903               	skipnz
  2341  0C12  2BF0               	goto	l3257
  2342  0C13  2D61               	goto	l3317
  2343  0C14                     l793:
  2344                           
  2345                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1307:     if(flag & 0x10)
  2346  0C14  1E45               	btfss	sprintf@flag,4
  2347  0C15  2C17               	goto	u4791
  2348  0C16  2C18               	goto	u4790
  2349  0C17                     u4791:
  2350  0C17  2C2B               	goto	l3267
  2351  0C18                     u4790:
  2352  0C18                     l3263:
  2353                           
  2354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1308:     val = (
      +                          *(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned long)0));
  2355  0C18  0846               	movf	sprintf@ap,w
  2356  0C19  0084               	movwf	4
  2357  0C1A  1383               	bcf	3,7	;select IRP bank0
  2358  0C1B  0800               	movf	0,w
  2359  0C1C  00C7               	movwf	sprintf@val
  2360  0C1D  0A84               	incf	4,f
  2361  0C1E  0800               	movf	0,w
  2362  0C1F  00C8               	movwf	sprintf@val+1
  2363  0C20  0A84               	incf	4,f
  2364  0C21  0800               	movf	0,w
  2365  0C22  00C9               	movwf	sprintf@val+2
  2366  0C23  0A84               	incf	4,f
  2367  0C24  0800               	movf	0,w
  2368  0C25  00CA               	movwf	sprintf@val+3
  2369  0C26                     l3265:
  2370  0C26  3004               	movlw	4
  2371  0C27  00C0               	movwf	??_sprintf
  2372  0C28  0840               	movf	??_sprintf,w
  2373  0C29  07C6               	addwf	sprintf@ap,f
  2374  0C2A  2C3D               	goto	l3271
  2375  0C2B                     l3267:
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1312:     val = (
      +                          *(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2378  0C2B  0846               	movf	sprintf@ap,w
  2379  0C2C  0084               	movwf	4
  2380  0C2D  1383               	bcf	3,7	;select IRP bank0
  2381  0C2E  0800               	movf	0,w
  2382  0C2F  00C0               	movwf	??_sprintf
  2383  0C30  0A84               	incf	4,f
  2384  0C31  0800               	movf	0,w
  2385  0C32  00C1               	movwf	??_sprintf+1
  2386  0C33  0840               	movf	??_sprintf,w
  2387  0C34  00C7               	movwf	sprintf@val
  2388  0C35  0841               	movf	??_sprintf+1,w
  2389  0C36  00C8               	movwf	sprintf@val+1
  2390  0C37  01C9               	clrf	sprintf@val+2
  2391  0C38  01CA               	clrf	sprintf@val+3
  2392  0C39                     l3269:
  2393  0C39  3002               	movlw	2
  2394  0C3A  00C0               	movwf	??_sprintf
  2395  0C3B  0840               	movf	??_sprintf,w
  2396  0C3C  07C6               	addwf	sprintf@ap,f
  2397  0C3D                     l3271:
  2398                           
  2399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  2400  0C3D  084E               	movf	sprintf@prec,w
  2401  0C3E  044F               	iorwf	sprintf@prec+1,w
  2402  0C3F  1D03               	btfss	3,2
  2403  0C40  2C42               	goto	u4801
  2404  0C41  2C43               	goto	u4800
  2405  0C42                     u4801:
  2406  0C42  2C51               	goto	l3277
  2407  0C43                     u4800:
  2408  0C43                     l3273:
  2409  0C43  084A               	movf	sprintf@val+3,w
  2410  0C44  0449               	iorwf	sprintf@val+2,w
  2411  0C45  0448               	iorwf	sprintf@val+1,w
  2412  0C46  0447               	iorwf	sprintf@val,w
  2413  0C47  1D03               	skipz
  2414  0C48  2C4A               	goto	u4811
  2415  0C49  2C4B               	goto	u4810
  2416  0C4A                     u4811:
  2417  0C4A  2C51               	goto	l3277
  2418  0C4B                     u4810:
  2419  0C4B                     l3275:
  2420                           
  2421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  2422  0C4B  3001               	movlw	1
  2423  0C4C  07CE               	addwf	sprintf@prec,f
  2424  0C4D  1803               	skipnc
  2425  0C4E  0ACF               	incf	sprintf@prec+1,f
  2426  0C4F  3000               	movlw	0
  2427  0C50  07CF               	addwf	sprintf@prec+1,f
  2428  0C51                     l3277:
  2429                           
  2430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2431  0C51  01D0               	clrf	sprintf@c
  2432  0C52  0AD0               	incf	sprintf@c,f
  2433  0C53                     l3283:
  2434                           
  2435                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2436  0C53  0850               	movf	sprintf@c,w
  2437  0C54  00C0               	movwf	??_sprintf
  2438  0C55  3001               	movlw	1
  2439  0C56                     u4825:
  2440  0C56  1003               	clrc
  2441  0C57  0DC0               	rlf	??_sprintf,f
  2442  0C58  3EFF               	addlw	-1
  2443  0C59  1D03               	skipz
  2444  0C5A  2C56               	goto	u4825
  2445  0C5B  1003               	clrc
  2446  0C5C  0D40               	rlf	??_sprintf,w
  2447  0C5D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2448  0C5E  0084               	movwf	4
  2449  0C5F  120A  118A  27BC  120A  158A  	fcall	stringdir
  2450  0C64  00C1               	movwf	??_sprintf+1
  2451  0C65  120A  118A  27BC  120A  158A  	fcall	stringdir
  2452  0C6A  00C2               	movwf	??_sprintf+2
  2453  0C6B  120A  118A  27BC  120A  158A  	fcall	stringdir
  2454  0C70  00C3               	movwf	??_sprintf+3
  2455  0C71  120A  118A  27BC  120A  158A  	fcall	stringdir
  2456  0C76  00C4               	movwf	??_sprintf+4
  2457  0C77  0844               	movf	??_sprintf+4,w
  2458  0C78  024A               	subwf	sprintf@val+3,w
  2459  0C79  1D03               	skipz
  2460  0C7A  2C85               	goto	u4835
  2461  0C7B  0843               	movf	??_sprintf+3,w
  2462  0C7C  0249               	subwf	sprintf@val+2,w
  2463  0C7D  1D03               	skipz
  2464  0C7E  2C85               	goto	u4835
  2465  0C7F  0842               	movf	??_sprintf+2,w
  2466  0C80  0248               	subwf	sprintf@val+1,w
  2467  0C81  1D03               	skipz
  2468  0C82  2C85               	goto	u4835
  2469  0C83  0841               	movf	??_sprintf+1,w
  2470  0C84  0247               	subwf	sprintf@val,w
  2471  0C85                     u4835:
  2472  0C85  1803               	skipnc
  2473  0C86  2C88               	goto	u4831
  2474  0C87  2C89               	goto	u4830
  2475  0C88                     u4831:
  2476  0C88  2C8A               	goto	l3287
  2477  0C89                     u4830:
  2478  0C89  2C94               	goto	l3289
  2479  0C8A                     l3287:
  2480  0C8A  3001               	movlw	1
  2481  0C8B  00C0               	movwf	??_sprintf
  2482  0C8C  0840               	movf	??_sprintf,w
  2483  0C8D  07D0               	addwf	sprintf@c,f
  2484  0C8E  300A               	movlw	10
  2485  0C8F  0650               	xorwf	sprintf@c,w
  2486  0C90  1D03               	btfss	3,2
  2487  0C91  2C93               	goto	u4841
  2488  0C92  2C94               	goto	u4840
  2489  0C93                     u4841:
  2490  0C93  2C53               	goto	l3283
  2491  0C94                     u4840:
  2492  0C94                     l3289:
  2493                           
  2494                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  2495  0C94  084F               	movf	sprintf@prec+1,w
  2496  0C95  3A80               	xorlw	128
  2497  0C96  3C80               	sublw	128
  2498  0C97  1D03               	skipz
  2499  0C98  2C9B               	goto	u4855
  2500  0C99  084E               	movf	sprintf@prec,w
  2501  0C9A  0250               	subwf	sprintf@c,w
  2502  0C9B                     u4855:
  2503  0C9B  1803               	skipnc
  2504  0C9C  2C9E               	goto	u4851
  2505  0C9D  2C9F               	goto	u4850
  2506  0C9E                     u4851:
  2507  0C9E  2CA6               	goto	l3293
  2508  0C9F                     u4850:
  2509  0C9F                     l3291:
  2510                           
  2511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  2512  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  2513  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  2514  0CA1  084E               	movf	sprintf@prec,w
  2515  0CA2  00C0               	movwf	??_sprintf
  2516  0CA3  0840               	movf	??_sprintf,w
  2517  0CA4  00D0               	movwf	sprintf@c
  2518  0CA5  2CBE               	goto	l801
  2519  0CA6                     l3293:
  2520  0CA6  1283               	bcf	3,5	;RP0=0, select bank0
  2521  0CA7  1303               	bcf	3,6	;RP1=0, select bank0
  2522  0CA8  084F               	movf	sprintf@prec+1,w
  2523  0CA9  3A80               	xorlw	128
  2524  0CAA  00C0               	movwf	??_sprintf
  2525  0CAB  3080               	movlw	128
  2526  0CAC  0240               	subwf	??_sprintf,w
  2527  0CAD  1D03               	skipz
  2528  0CAE  2CB1               	goto	u4865
  2529  0CAF  0850               	movf	sprintf@c,w
  2530  0CB0  024E               	subwf	sprintf@prec,w
  2531  0CB1                     u4865:
  2532  0CB1  1803               	skipnc
  2533  0CB2  2CB4               	goto	u4861
  2534  0CB3  2CB5               	goto	u4860
  2535  0CB4                     u4861:
  2536  0CB4  2CBE               	goto	l801
  2537  0CB5                     u4860:
  2538  0CB5                     l3295:
  2539                           
  2540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  2541  0CB5  1283               	bcf	3,5	;RP0=0, select bank0
  2542  0CB6  1303               	bcf	3,6	;RP1=0, select bank0
  2543  0CB7  0850               	movf	sprintf@c,w
  2544  0CB8  00C0               	movwf	??_sprintf
  2545  0CB9  01C1               	clrf	??_sprintf+1
  2546  0CBA  0840               	movf	??_sprintf,w
  2547  0CBB  00CE               	movwf	sprintf@prec
  2548  0CBC  0841               	movf	??_sprintf+1,w
  2549  0CBD  00CF               	movwf	sprintf@prec+1
  2550  0CBE                     l801:
  2551                           
  2552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2553  0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  2554  0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  2555  0CC0  084D               	movf	sprintf@width+1,w
  2556  0CC1  3A80               	xorlw	128
  2557  0CC2  3C80               	sublw	128
  2558  0CC3  1D03               	skipz
  2559  0CC4  2CC7               	goto	u4875
  2560  0CC5  084C               	movf	sprintf@width,w
  2561  0CC6  0250               	subwf	sprintf@c,w
  2562  0CC7                     u4875:
  2563  0CC7  1803               	skipnc
  2564  0CC8  2CCA               	goto	u4871
  2565  0CC9  2CCB               	goto	u4870
  2566  0CCA                     u4871:
  2567  0CCA  2CD7               	goto	l3299
  2568  0CCB                     u4870:
  2569  0CCB                     l3297:
  2570                           
  2571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2572  0CCB  1283               	bcf	3,5	;RP0=0, select bank0
  2573  0CCC  1303               	bcf	3,6	;RP1=0, select bank0
  2574  0CCD  0850               	movf	sprintf@c,w
  2575  0CCE  00C0               	movwf	??_sprintf
  2576  0CCF  01C1               	clrf	??_sprintf+1
  2577  0CD0  0840               	movf	??_sprintf,w
  2578  0CD1  02CC               	subwf	sprintf@width,f
  2579  0CD2  0841               	movf	??_sprintf+1,w
  2580  0CD3  1C03               	skipc
  2581  0CD4  03CD               	decf	sprintf@width+1,f
  2582  0CD5  02CD               	subwf	sprintf@width+1,f
  2583  0CD6  2CDB               	goto	l3301
  2584  0CD7                     l3299:
  2585                           
  2586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2587  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  2588  0CD8  1303               	bcf	3,6	;RP1=0, select bank0
  2589  0CD9  01CC               	clrf	sprintf@width
  2590  0CDA  01CD               	clrf	sprintf@width+1
  2591  0CDB                     l3301:
  2592                           
  2593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2594  0CDB  084C               	movf	sprintf@width,w
  2595  0CDC  044D               	iorwf	sprintf@width+1,w
  2596  0CDD  1903               	btfsc	3,2
  2597  0CDE  2CE0               	goto	u4881
  2598  0CDF  2CE1               	goto	u4880
  2599  0CE0                     u4881:
  2600  0CE0  2D53               	goto	l3315
  2601  0CE1                     u4880:
  2602  0CE1                     l3303:
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2605  0CE1  3020               	movlw	32
  2606  0CE2  00C0               	movwf	??_sprintf
  2607  0CE3  084B               	movf	sprintf@sp,w
  2608  0CE4  0084               	movwf	4
  2609  0CE5  0840               	movf	??_sprintf,w
  2610  0CE6  1383               	bcf	3,7	;select IRP bank0
  2611  0CE7  0080               	movwf	0
  2612  0CE8                     l3305:
  2613  0CE8  3001               	movlw	1
  2614  0CE9  00C0               	movwf	??_sprintf
  2615  0CEA  0840               	movf	??_sprintf,w
  2616  0CEB  07CB               	addwf	sprintf@sp,f
  2617  0CEC                     l3307:
  2618  0CEC  30FF               	movlw	255
  2619  0CED  07CC               	addwf	sprintf@width,f
  2620  0CEE  1803               	skipnc
  2621  0CEF  0ACD               	incf	sprintf@width+1,f
  2622  0CF0  30FF               	movlw	255
  2623  0CF1  07CD               	addwf	sprintf@width+1,f
  2624  0CF2  084C               	movf	sprintf@width,w
  2625  0CF3  044D               	iorwf	sprintf@width+1,w
  2626  0CF4  1D03               	btfss	3,2
  2627  0CF5  2CF7               	goto	u4891
  2628  0CF6  2CF8               	goto	u4890
  2629  0CF7                     u4891:
  2630  0CF7  2CE1               	goto	l3303
  2631  0CF8                     u4890:
  2632  0CF8  2D53               	goto	l3315
  2633  0CF9                     l3309:
  2634                           
  2635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  2636  0CF9  3000               	movlw	0
  2637  0CFA  00B0               	movwf	___llmod@divisor+3
  2638  0CFB  3000               	movlw	0
  2639  0CFC  00AF               	movwf	___llmod@divisor+2
  2640  0CFD  3000               	movlw	0
  2641  0CFE  00AE               	movwf	___llmod@divisor+1
  2642  0CFF  300A               	movlw	10
  2643  0D00  00AD               	movwf	___llmod@divisor
  2644  0D01  084E               	movf	sprintf@prec,w
  2645  0D02  00C0               	movwf	??_sprintf
  2646  0D03  3001               	movlw	1
  2647  0D04                     u4905:
  2648  0D04  1003               	clrc
  2649  0D05  0DC0               	rlf	??_sprintf,f
  2650  0D06  3EFF               	addlw	-1
  2651  0D07  1D03               	skipz
  2652  0D08  2D04               	goto	u4905
  2653  0D09  1003               	clrc
  2654  0D0A  0D40               	rlf	??_sprintf,w
  2655  0D0B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2656  0D0C  0084               	movwf	4
  2657  0D0D  120A  118A  27BC  120A  158A  	fcall	stringdir
  2658  0D12  00A0               	movwf	___lldiv@divisor
  2659  0D13  120A  118A  27BC  120A  158A  	fcall	stringdir
  2660  0D18  00A1               	movwf	___lldiv@divisor+1
  2661  0D19  120A  118A  27BC  120A  158A  	fcall	stringdir
  2662  0D1E  00A2               	movwf	___lldiv@divisor+2
  2663  0D1F  120A  118A  27BC  120A  158A  	fcall	stringdir
  2664  0D24  00A3               	movwf	___lldiv@divisor+3
  2665  0D25  084A               	movf	sprintf@val+3,w
  2666  0D26  00A7               	movwf	___lldiv@dividend+3
  2667  0D27  0849               	movf	sprintf@val+2,w
  2668  0D28  00A6               	movwf	___lldiv@dividend+2
  2669  0D29  0848               	movf	sprintf@val+1,w
  2670  0D2A  00A5               	movwf	___lldiv@dividend+1
  2671  0D2B  0847               	movf	sprintf@val,w
  2672  0D2C  00A4               	movwf	___lldiv@dividend
  2673  0D2D  160A  118A  2429  120A  158A  	fcall	___lldiv
  2674  0D32  1283               	bcf	3,5	;RP0=0, select bank0
  2675  0D33  1303               	bcf	3,6	;RP1=0, select bank0
  2676  0D34  0823               	movf	?___lldiv+3,w
  2677  0D35  00B4               	movwf	___llmod@dividend+3
  2678  0D36  0822               	movf	?___lldiv+2,w
  2679  0D37  00B3               	movwf	___llmod@dividend+2
  2680  0D38  0821               	movf	?___lldiv+1,w
  2681  0D39  00B2               	movwf	___llmod@dividend+1
  2682  0D3A  0820               	movf	?___lldiv,w
  2683  0D3B  00B1               	movwf	___llmod@dividend
  2684  0D3C  160A  118A  237C  120A  158A  	fcall	___llmod
  2685  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  2686  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  2687  0D43  082D               	movf	?___llmod,w
  2688  0D44  3E30               	addlw	48
  2689  0D45  00C1               	movwf	??_sprintf+1
  2690  0D46  0841               	movf	??_sprintf+1,w
  2691  0D47  00D0               	movwf	sprintf@c
  2692  0D48                     l3311:
  2693                           
  2694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2695  0D48  0850               	movf	sprintf@c,w
  2696  0D49  00C0               	movwf	??_sprintf
  2697  0D4A  084B               	movf	sprintf@sp,w
  2698  0D4B  0084               	movwf	4
  2699  0D4C  0840               	movf	??_sprintf,w
  2700  0D4D  1383               	bcf	3,7	;select IRP bank0
  2701  0D4E  0080               	movwf	0
  2702  0D4F                     l3313:
  2703  0D4F  3001               	movlw	1
  2704  0D50  00C0               	movwf	??_sprintf
  2705  0D51  0840               	movf	??_sprintf,w
  2706  0D52  07CB               	addwf	sprintf@sp,f
  2707  0D53                     l3315:
  2708                           
  2709                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2710  0D53  30FF               	movlw	255
  2711  0D54  07CE               	addwf	sprintf@prec,f
  2712  0D55  1803               	skipnc
  2713  0D56  0ACF               	incf	sprintf@prec+1,f
  2714  0D57  30FF               	movlw	255
  2715  0D58  07CF               	addwf	sprintf@prec+1,f
  2716  0D59  0A4E               	incf	sprintf@prec,w
  2717  0D5A  1D03               	skipz
  2718  0D5B  2D60               	goto	u4911
  2719  0D5C  0A4F               	incf	sprintf@prec+1,w
  2720  0D5D  1D03               	btfss	3,2
  2721  0D5E  2D60               	goto	u4911
  2722  0D5F  2D61               	goto	u4910
  2723  0D60                     u4911:
  2724  0D60  2CF9               	goto	l3309
  2725  0D61                     u4910:
  2726  0D61                     l3317:
  2727                           
  2728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2729  0D61  3001               	movlw	1
  2730  0D62  07B7               	addwf	sprintf@f,f
  2731  0D63  30FF               	movlw	-1
  2732  0D64  0737               	addwf	sprintf@f,w
  2733  0D65  0084               	movwf	4
  2734  0D66  120A  118A  27BC  120A  158A  	fcall	stringdir
  2735  0D6B  00C0               	movwf	??_sprintf
  2736  0D6C  0840               	movf	??_sprintf,w
  2737  0D6D  00D0               	movwf	sprintf@c
  2738  0D6E  0850               	movf	sprintf@c,w
  2739  0D6F  1D03               	btfss	3,2
  2740  0D70  2D72               	goto	u4921
  2741  0D71  2D73               	goto	u4920
  2742  0D72                     u4921:
  2743  0D72  2B34               	goto	l3221
  2744  0D73                     u4920:
  2745  0D73                     l3319:
  2746                           
  2747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2748  0D73  084B               	movf	sprintf@sp,w
  2749  0D74  0084               	movwf	4
  2750  0D75  1383               	bcf	3,7	;select IRP bank0
  2751  0D76  0180               	clrf	0
  2752  0D77                     l812:
  2753  0D77  0008               	return
  2754  0D78                     __end_of_sprintf:
  2755                           
  2756                           	psect	text4
  2757  0800                     __ptext4:	
  2758 ;; *************** function _isdigit *****************
  2759 ;; Defined at:
  2760 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;  c               1    wreg     unsigned char 
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;  c               1    1[BANK0 ] unsigned char 
  2765 ;; Return value:  Size  Location     Type
  2766 ;;		None               void
  2767 ;; Registers used:
  2768 ;;		wreg, status,2, status,0
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2774 ;;      Params:         0       0       0       0       0
  2775 ;;      Locals:         0       2       0       0       0
  2776 ;;      Temps:          0       0       0       0       0
  2777 ;;      Totals:         0       2       0       0       0
  2778 ;;Total ram usage:        2 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; Hardware stack levels required when called:    1
  2781 ;; This function calls:
  2782 ;;		Nothing
  2783 ;; This function is called by:
  2784 ;;		_sprintf
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           
  2789                           ;psect for function _isdigit
  2790  0800                     _isdigit:
  2791                           
  2792                           ;incstack = 0
  2793                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2794                           ;isdigit@c stored from wreg
  2795  0800  1283               	bcf	3,5	;RP0=0, select bank0
  2796  0801  1303               	bcf	3,6	;RP1=0, select bank0
  2797  0802  00A1               	movwf	isdigit@c
  2798  0803                     l3063:
  2799  0803  01A0               	clrf	_isdigit$851
  2800  0804                     l3065:
  2801  0804  303A               	movlw	58
  2802  0805  0221               	subwf	isdigit@c,w
  2803  0806  1803               	skipnc
  2804  0807  2809               	goto	u4341
  2805  0808  280A               	goto	u4340
  2806  0809                     u4341:
  2807  0809  2812               	goto	l3071
  2808  080A                     u4340:
  2809  080A                     l3067:
  2810  080A  3030               	movlw	48
  2811  080B  0221               	subwf	isdigit@c,w
  2812  080C  1C03               	skipc
  2813  080D  280F               	goto	u4351
  2814  080E  2810               	goto	u4350
  2815  080F                     u4351:
  2816  080F  2812               	goto	l3071
  2817  0810                     u4350:
  2818  0810                     l3069:
  2819  0810  01A0               	clrf	_isdigit$851
  2820  0811  0AA0               	incf	_isdigit$851,f
  2821  0812                     l3071:
  2822  0812  0C20               	rrf	_isdigit$851,w
  2823  0813                     l817:
  2824  0813  0008               	return
  2825  0814                     __end_of_isdigit:
  2826                           
  2827                           	psect	text5
  2828  12C1                     __ptext5:	
  2829 ;; *************** function ___wmul *****************
  2830 ;; Defined at:
  2831 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2834 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  product         2    4[BANK0 ] unsigned int 
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  2    0[BANK0 ] unsigned int 
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2846 ;;      Params:         0       4       0       0       0
  2847 ;;      Locals:         0       2       0       0       0
  2848 ;;      Temps:          0       0       0       0       0
  2849 ;;      Totals:         0       6       0       0       0
  2850 ;;Total ram usage:        6 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:    1
  2853 ;; This function calls:
  2854 ;;		Nothing
  2855 ;; This function is called by:
  2856 ;;		_sprintf
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           
  2861                           ;psect for function ___wmul
  2862  12C1                     ___wmul:
  2863  12C1                     l3015:	
  2864                           ;incstack = 0
  2865                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2866                           
  2867  12C1  1283               	bcf	3,5	;RP0=0, select bank0
  2868  12C2  1303               	bcf	3,6	;RP1=0, select bank0
  2869  12C3  01A4               	clrf	___wmul@product
  2870  12C4  01A5               	clrf	___wmul@product+1
  2871  12C5                     l3017:
  2872  12C5  1C20               	btfss	___wmul@multiplier,0
  2873  12C6  2AC8               	goto	u4211
  2874  12C7  2AC9               	goto	u4210
  2875  12C8                     u4211:
  2876  12C8  2ACF               	goto	l308
  2877  12C9                     u4210:
  2878  12C9                     l3019:
  2879  12C9  0822               	movf	___wmul@multiplicand,w
  2880  12CA  07A4               	addwf	___wmul@product,f
  2881  12CB  1803               	skipnc
  2882  12CC  0AA5               	incf	___wmul@product+1,f
  2883  12CD  0823               	movf	___wmul@multiplicand+1,w
  2884  12CE  07A5               	addwf	___wmul@product+1,f
  2885  12CF                     l308:
  2886  12CF  3001               	movlw	1
  2887  12D0                     u4225:
  2888  12D0  1003               	clrc
  2889  12D1  0DA2               	rlf	___wmul@multiplicand,f
  2890  12D2  0DA3               	rlf	___wmul@multiplicand+1,f
  2891  12D3  3EFF               	addlw	-1
  2892  12D4  1D03               	skipz
  2893  12D5  2AD0               	goto	u4225
  2894  12D6                     l3021:
  2895  12D6  3001               	movlw	1
  2896  12D7                     u4235:
  2897  12D7  1003               	clrc
  2898  12D8  0CA1               	rrf	___wmul@multiplier+1,f
  2899  12D9  0CA0               	rrf	___wmul@multiplier,f
  2900  12DA  3EFF               	addlw	-1
  2901  12DB  1D03               	skipz
  2902  12DC  2AD7               	goto	u4235
  2903  12DD                     l3023:
  2904  12DD  0820               	movf	___wmul@multiplier,w
  2905  12DE  0421               	iorwf	___wmul@multiplier+1,w
  2906  12DF  1D03               	btfss	3,2
  2907  12E0  2AE2               	goto	u4241
  2908  12E1  2AE3               	goto	u4240
  2909  12E2                     u4241:
  2910  12E2  2AC5               	goto	l3017
  2911  12E3                     u4240:
  2912  12E3                     l3025:
  2913  12E3  0825               	movf	___wmul@product+1,w
  2914  12E4  00A1               	movwf	?___wmul+1
  2915  12E5  0824               	movf	___wmul@product,w
  2916  12E6  00A0               	movwf	?___wmul
  2917  12E7                     l310:
  2918  12E7  0008               	return
  2919  12E8                     __end_of___wmul:
  2920                           
  2921                           	psect	text6
  2922  137C                     __ptext6:	
  2923 ;; *************** function ___llmod *****************
  2924 ;; Defined at:
  2925 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  divisor         4   13[BANK0 ] unsigned long 
  2928 ;;  dividend        4   17[BANK0 ] unsigned long 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;  counter         1   22[BANK0 ] unsigned char 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  4   13[BANK0 ] unsigned long 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2940 ;;      Params:         0       8       0       0       0
  2941 ;;      Locals:         0       1       0       0       0
  2942 ;;      Temps:          0       1       0       0       0
  2943 ;;      Totals:         0      10       0       0       0
  2944 ;;Total ram usage:       10 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    1
  2947 ;; This function calls:
  2948 ;;		Nothing
  2949 ;; This function is called by:
  2950 ;;		_sprintf
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           
  2955                           ;psect for function ___llmod
  2956  137C                     ___llmod:
  2957  137C                     l3029:	
  2958                           ;incstack = 0
  2959                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2960                           
  2961  137C  1283               	bcf	3,5	;RP0=0, select bank0
  2962  137D  1303               	bcf	3,6	;RP1=0, select bank0
  2963  137E  0830               	movf	___llmod@divisor+3,w
  2964  137F  042F               	iorwf	___llmod@divisor+2,w
  2965  1380  042E               	iorwf	___llmod@divisor+1,w
  2966  1381  042D               	iorwf	___llmod@divisor,w
  2967  1382  1903               	skipnz
  2968  1383  2B85               	goto	u4251
  2969  1384  2B86               	goto	u4250
  2970  1385                     u4251:
  2971  1385  2BC9               	goto	l3045
  2972  1386                     u4250:
  2973  1386                     l3031:
  2974  1386  01B6               	clrf	___llmod@counter
  2975  1387  0AB6               	incf	___llmod@counter,f
  2976  1388  2B96               	goto	l3035
  2977  1389                     l3033:
  2978  1389  3001               	movlw	1
  2979  138A  00B5               	movwf	??___llmod
  2980  138B                     u4265:
  2981  138B  1003               	clrc
  2982  138C  0DAD               	rlf	___llmod@divisor,f
  2983  138D  0DAE               	rlf	___llmod@divisor+1,f
  2984  138E  0DAF               	rlf	___llmod@divisor+2,f
  2985  138F  0DB0               	rlf	___llmod@divisor+3,f
  2986  1390  0BB5               	decfsz	??___llmod,f
  2987  1391  2B8B               	goto	u4265
  2988  1392  3001               	movlw	1
  2989  1393  00B5               	movwf	??___llmod
  2990  1394  0835               	movf	??___llmod,w
  2991  1395  07B6               	addwf	___llmod@counter,f
  2992  1396                     l3035:
  2993  1396  1FB0               	btfss	___llmod@divisor+3,7
  2994  1397  2B99               	goto	u4271
  2995  1398  2B9A               	goto	u4270
  2996  1399                     u4271:
  2997  1399  2B89               	goto	l3033
  2998  139A                     u4270:
  2999  139A                     l3037:
  3000  139A  0830               	movf	___llmod@divisor+3,w
  3001  139B  0234               	subwf	___llmod@dividend+3,w
  3002  139C  1D03               	skipz
  3003  139D  2BA8               	goto	u4285
  3004  139E  082F               	movf	___llmod@divisor+2,w
  3005  139F  0233               	subwf	___llmod@dividend+2,w
  3006  13A0  1D03               	skipz
  3007  13A1  2BA8               	goto	u4285
  3008  13A2  082E               	movf	___llmod@divisor+1,w
  3009  13A3  0232               	subwf	___llmod@dividend+1,w
  3010  13A4  1D03               	skipz
  3011  13A5  2BA8               	goto	u4285
  3012  13A6  082D               	movf	___llmod@divisor,w
  3013  13A7  0231               	subwf	___llmod@dividend,w
  3014  13A8                     u4285:
  3015  13A8  1C03               	skipc
  3016  13A9  2BAB               	goto	u4281
  3017  13AA  2BAC               	goto	u4280
  3018  13AB                     u4281:
  3019  13AB  2BBA               	goto	l3041
  3020  13AC                     u4280:
  3021  13AC                     l3039:
  3022  13AC  082D               	movf	___llmod@divisor,w
  3023  13AD  02B1               	subwf	___llmod@dividend,f
  3024  13AE  082E               	movf	___llmod@divisor+1,w
  3025  13AF  1C03               	skipc
  3026  13B0  0F2E               	incfsz	___llmod@divisor+1,w
  3027  13B1  02B2               	subwf	___llmod@dividend+1,f
  3028  13B2  082F               	movf	___llmod@divisor+2,w
  3029  13B3  1C03               	skipc
  3030  13B4  0F2F               	incfsz	___llmod@divisor+2,w
  3031  13B5  02B3               	subwf	___llmod@dividend+2,f
  3032  13B6  0830               	movf	___llmod@divisor+3,w
  3033  13B7  1C03               	skipc
  3034  13B8  0F30               	incfsz	___llmod@divisor+3,w
  3035  13B9  02B4               	subwf	___llmod@dividend+3,f
  3036  13BA                     l3041:
  3037  13BA  3001               	movlw	1
  3038  13BB                     u4295:
  3039  13BB  1003               	clrc
  3040  13BC  0CB0               	rrf	___llmod@divisor+3,f
  3041  13BD  0CAF               	rrf	___llmod@divisor+2,f
  3042  13BE  0CAE               	rrf	___llmod@divisor+1,f
  3043  13BF  0CAD               	rrf	___llmod@divisor,f
  3044  13C0  3EFF               	addlw	-1
  3045  13C1  1D03               	skipz
  3046  13C2  2BBB               	goto	u4295
  3047  13C3                     l3043:
  3048  13C3  3001               	movlw	1
  3049  13C4  02B6               	subwf	___llmod@counter,f
  3050  13C5  1D03               	btfss	3,2
  3051  13C6  2BC8               	goto	u4301
  3052  13C7  2BC9               	goto	u4300
  3053  13C8                     u4301:
  3054  13C8  2B9A               	goto	l3037
  3055  13C9                     u4300:
  3056  13C9                     l3045:
  3057  13C9  0834               	movf	___llmod@dividend+3,w
  3058  13CA  00B0               	movwf	?___llmod+3
  3059  13CB  0833               	movf	___llmod@dividend+2,w
  3060  13CC  00AF               	movwf	?___llmod+2
  3061  13CD  0832               	movf	___llmod@dividend+1,w
  3062  13CE  00AE               	movwf	?___llmod+1
  3063  13CF  0831               	movf	___llmod@dividend,w
  3064  13D0  00AD               	movwf	?___llmod
  3065  13D1                     l530:
  3066  13D1  0008               	return
  3067  13D2                     __end_of___llmod:
  3068                           
  3069                           	psect	text7
  3070  0814                     __ptext7:	
  3071 ;; *************** function ___fltol *****************
  3072 ;; Defined at:
  3073 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;  f1              4   40[BANK0 ] unsigned long 
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;  exp1            1   50[BANK0 ] unsigned char 
  3078 ;;  sign1           1   49[BANK0 ] unsigned char 
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  4   40[BANK0 ] long 
  3081 ;; Registers used:
  3082 ;;		wreg, status,2, status,0
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3088 ;;      Params:         0       4       0       0       0
  3089 ;;      Locals:         0       2       0       0       0
  3090 ;;      Temps:          0       5       0       0       0
  3091 ;;      Totals:         0      11       0       0       0
  3092 ;;Total ram usage:       11 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; Hardware stack levels required when called:    1
  3095 ;; This function calls:
  3096 ;;		Nothing
  3097 ;; This function is called by:
  3098 ;;		_ftoa
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           
  3103                           ;psect for function ___fltol
  3104  0814                     ___fltol:
  3105  0814                     l2295:	
  3106                           ;incstack = 0
  3107                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3108                           
  3109  0814  1003               	clrc
  3110  0815  1283               	bcf	3,5	;RP0=0, select bank0
  3111  0816  1303               	bcf	3,6	;RP1=0, select bank0
  3112  0817  0D4A               	rlf	___fltol@f1+2,w
  3113  0818  0D4B               	rlf	___fltol@f1+3,w
  3114  0819  00CC               	movwf	??___fltol
  3115  081A  084C               	movf	??___fltol,w
  3116  081B  00D2               	movwf	___fltol@exp1
  3117  081C  0852               	movf	___fltol@exp1,w
  3118  081D  1D03               	btfss	3,2
  3119  081E  2820               	goto	u2951
  3120  081F  2821               	goto	u2950
  3121  0820                     u2951:
  3122  0820  282A               	goto	l2301
  3123  0821                     u2950:
  3124  0821                     l2297:
  3125  0821  3000               	movlw	0
  3126  0822  00CB               	movwf	?___fltol+3
  3127  0823  3000               	movlw	0
  3128  0824  00CA               	movwf	?___fltol+2
  3129  0825  3000               	movlw	0
  3130  0826  00C9               	movwf	?___fltol+1
  3131  0827  3000               	movlw	0
  3132  0828  00C8               	movwf	?___fltol
  3133  0829  288F               	goto	l494
  3134  082A                     l2301:
  3135  082A  0848               	movf	___fltol@f1,w
  3136  082B  00CC               	movwf	??___fltol
  3137  082C  0849               	movf	___fltol@f1+1,w
  3138  082D  00CD               	movwf	??___fltol+1
  3139  082E  084A               	movf	___fltol@f1+2,w
  3140  082F  00CE               	movwf	??___fltol+2
  3141  0830  084B               	movf	___fltol@f1+3,w
  3142  0831  00CF               	movwf	??___fltol+3
  3143  0832  301F               	movlw	31
  3144  0833                     u2965:
  3145  0833  1003               	clrc
  3146  0834  0CCF               	rrf	??___fltol+3,f
  3147  0835  0CCE               	rrf	??___fltol+2,f
  3148  0836  0CCD               	rrf	??___fltol+1,f
  3149  0837  0CCC               	rrf	??___fltol,f
  3150  0838                     u2960:
  3151  0838  3EFF               	addlw	-1
  3152  0839  1D03               	skipz
  3153  083A  2833               	goto	u2965
  3154  083B  084C               	movf	??___fltol,w
  3155  083C  00D0               	movwf	??___fltol+4
  3156  083D  0850               	movf	??___fltol+4,w
  3157  083E  00D1               	movwf	___fltol@sign1
  3158  083F                     l2303:
  3159  083F  17CA               	bsf	___fltol@f1+2,7
  3160  0840                     l2305:
  3161  0840  30FF               	movlw	255
  3162  0841  05C8               	andwf	___fltol@f1,f
  3163  0842  30FF               	movlw	255
  3164  0843  05C9               	andwf	___fltol@f1+1,f
  3165  0844  30FF               	movlw	255
  3166  0845  05CA               	andwf	___fltol@f1+2,f
  3167  0846  3000               	movlw	0
  3168  0847  05CB               	andwf	___fltol@f1+3,f
  3169  0848                     l2307:
  3170  0848  3096               	movlw	150
  3171  0849  02D2               	subwf	___fltol@exp1,f
  3172  084A                     l2309:
  3173  084A  1FD2               	btfss	___fltol@exp1,7
  3174  084B  284D               	goto	u2971
  3175  084C  284E               	goto	u2970
  3176  084D                     u2971:
  3177  084D  2868               	goto	l2319
  3178  084E                     u2970:
  3179  084E                     l2311:
  3180  084E  0852               	movf	___fltol@exp1,w
  3181  084F  3A80               	xorlw	128
  3182  0850  3E97               	addlw	151
  3183  0851  1803               	skipnc
  3184  0852  2854               	goto	u2981
  3185  0853  2855               	goto	u2980
  3186  0854                     u2981:
  3187  0854  2856               	goto	l2317
  3188  0855                     u2980:
  3189  0855  2821               	goto	l2297
  3190  0856                     l2317:
  3191  0856  3001               	movlw	1
  3192  0857                     u2995:
  3193  0857  1003               	clrc
  3194  0858  0CCB               	rrf	___fltol@f1+3,f
  3195  0859  0CCA               	rrf	___fltol@f1+2,f
  3196  085A  0CC9               	rrf	___fltol@f1+1,f
  3197  085B  0CC8               	rrf	___fltol@f1,f
  3198  085C  3EFF               	addlw	-1
  3199  085D  1D03               	skipz
  3200  085E  2857               	goto	u2995
  3201  085F  3001               	movlw	1
  3202  0860  00CC               	movwf	??___fltol
  3203  0861  084C               	movf	??___fltol,w
  3204  0862  07D2               	addwf	___fltol@exp1,f
  3205  0863  1D03               	btfss	3,2
  3206  0864  2866               	goto	u3001
  3207  0865  2867               	goto	u3000
  3208  0866                     u3001:
  3209  0866  2856               	goto	l2317
  3210  0867                     u3000:
  3211  0867  287F               	goto	l2327
  3212  0868                     l2319:
  3213  0868  3020               	movlw	32
  3214  0869  0252               	subwf	___fltol@exp1,w
  3215  086A  1C03               	skipc
  3216  086B  286D               	goto	u3011
  3217  086C  286E               	goto	u3010
  3218  086D                     u3011:
  3219  086D  287A               	goto	l501
  3220  086E                     u3010:
  3221  086E  2821               	goto	l2297
  3222  086F                     l2325:
  3223  086F  3001               	movlw	1
  3224  0870  00CC               	movwf	??___fltol
  3225  0871                     u3025:
  3226  0871  1003               	clrc
  3227  0872  0DC8               	rlf	___fltol@f1,f
  3228  0873  0DC9               	rlf	___fltol@f1+1,f
  3229  0874  0DCA               	rlf	___fltol@f1+2,f
  3230  0875  0DCB               	rlf	___fltol@f1+3,f
  3231  0876  0BCC               	decfsz	??___fltol,f
  3232  0877  2871               	goto	u3025
  3233  0878  3001               	movlw	1
  3234  0879  02D2               	subwf	___fltol@exp1,f
  3235  087A                     l501:
  3236  087A  0852               	movf	___fltol@exp1,w
  3237  087B  1D03               	btfss	3,2
  3238  087C  287E               	goto	u3031
  3239  087D  287F               	goto	u3030
  3240  087E                     u3031:
  3241  087E  286F               	goto	l2325
  3242  087F                     u3030:
  3243  087F                     l2327:
  3244  087F  0851               	movf	___fltol@sign1,w
  3245  0880  1903               	btfsc	3,2
  3246  0881  2883               	goto	u3041
  3247  0882  2884               	goto	u3040
  3248  0883                     u3041:
  3249  0883  288F               	goto	l504
  3250  0884                     u3040:
  3251  0884                     l2329:
  3252  0884  09C8               	comf	___fltol@f1,f
  3253  0885  09C9               	comf	___fltol@f1+1,f
  3254  0886  09CA               	comf	___fltol@f1+2,f
  3255  0887  09CB               	comf	___fltol@f1+3,f
  3256  0888  0AC8               	incf	___fltol@f1,f
  3257  0889  1903               	skipnz
  3258  088A  0AC9               	incf	___fltol@f1+1,f
  3259  088B  1903               	skipnz
  3260  088C  0ACA               	incf	___fltol@f1+2,f
  3261  088D  1903               	skipnz
  3262  088E  0ACB               	incf	___fltol@f1+3,f
  3263  088F                     l504:
  3264  088F                     l494:
  3265  088F  0008               	return
  3266  0890                     __end_of___fltol:
  3267                           
  3268                           	psect	text8
  3269  1276                     __ptext8:	
  3270 ;; *************** function ___flsub *****************
  3271 ;; Defined at:
  3272 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;  a               4   60[BANK0 ] long 
  3275 ;;  b               4   64[BANK0 ] long 
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;		None
  3278 ;; Return value:  Size  Location     Type
  3279 ;;                  4   60[BANK0 ] long 
  3280 ;; Registers used:
  3281 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3287 ;;      Params:         0       8       0       0       0
  3288 ;;      Locals:         0       0       0       0       0
  3289 ;;      Temps:          0       0       0       0       0
  3290 ;;      Totals:         0       8       0       0       0
  3291 ;;Total ram usage:        8 bytes
  3292 ;; Hardware stack levels used:    1
  3293 ;; Hardware stack levels required when called:    2
  3294 ;; This function calls:
  3295 ;;		___fladd
  3296 ;; This function is called by:
  3297 ;;		_ftoa
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           
  3302                           ;psect for function ___flsub
  3303  1276                     ___flsub:
  3304  1276                     l2331:	
  3305                           ;incstack = 0
  3306                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3307                           
  3308  1276  3080               	movlw	128
  3309  1277  1283               	bcf	3,5	;RP0=0, select bank0
  3310  1278  1303               	bcf	3,6	;RP1=0, select bank0
  3311  1279  06DF               	xorwf	___flsub@a+3,f
  3312  127A                     l2333:
  3313  127A  0863               	movf	___flsub@b+3,w
  3314  127B  00CB               	movwf	___fladd@b+3
  3315  127C  0862               	movf	___flsub@b+2,w
  3316  127D  00CA               	movwf	___fladd@b+2
  3317  127E  0861               	movf	___flsub@b+1,w
  3318  127F  00C9               	movwf	___fladd@b+1
  3319  1280  0860               	movf	___flsub@b,w
  3320  1281  00C8               	movwf	___fladd@b
  3321  1282  085F               	movf	___flsub@a+3,w
  3322  1283  00CF               	movwf	___fladd@a+3
  3323  1284  085E               	movf	___flsub@a+2,w
  3324  1285  00CE               	movwf	___fladd@a+2
  3325  1286  085D               	movf	___flsub@a+1,w
  3326  1287  00CD               	movwf	___fladd@a+1
  3327  1288  085C               	movf	___flsub@a,w
  3328  1289  00CC               	movwf	___fladd@a
  3329  128A  120A  158A  2578  160A  118A  	fcall	___fladd
  3330  128F  1283               	bcf	3,5	;RP0=0, select bank0
  3331  1290  1303               	bcf	3,6	;RP1=0, select bank0
  3332  1291  084B               	movf	?___fladd+3,w
  3333  1292  00DF               	movwf	?___flsub+3
  3334  1293  084A               	movf	?___fladd+2,w
  3335  1294  00DE               	movwf	?___flsub+2
  3336  1295  0849               	movf	?___fladd+1,w
  3337  1296  00DD               	movwf	?___flsub+1
  3338  1297  0848               	movf	?___fladd,w
  3339  1298  00DC               	movwf	?___flsub
  3340  1299                     l647:
  3341  1299  0008               	return
  3342  129A                     __end_of___flsub:
  3343                           
  3344                           	psect	text9
  3345  1245                     __ptext9:	
  3346 ;; *************** function ___flneg *****************
  3347 ;; Defined at:
  3348 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;  f1              4    0[BANK0 ] long 
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;		None
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  4    0[BANK0 ] long 
  3355 ;; Registers used:
  3356 ;;		wreg
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3362 ;;      Params:         0       4       0       0       0
  3363 ;;      Locals:         0       0       0       0       0
  3364 ;;      Temps:          0       0       0       0       0
  3365 ;;      Totals:         0       4       0       0       0
  3366 ;;Total ram usage:        4 bytes
  3367 ;; Hardware stack levels used:    1
  3368 ;; Hardware stack levels required when called:    1
  3369 ;; This function calls:
  3370 ;;		Nothing
  3371 ;; This function is called by:
  3372 ;;		_ftoa
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376                           
  3377                           ;psect for function ___flneg
  3378  1245                     ___flneg:
  3379  1245                     l2287:	
  3380                           ;incstack = 0
  3381                           ; Regs used in ___flneg: [wreg]
  3382                           
  3383  1245  1283               	bcf	3,5	;RP0=0, select bank0
  3384  1246  1303               	bcf	3,6	;RP1=0, select bank0
  3385  1247  0823               	movf	___flneg@f1+3,w
  3386  1248  0422               	iorwf	___flneg@f1+2,w
  3387  1249  0421               	iorwf	___flneg@f1+1,w
  3388  124A  0420               	iorwf	___flneg@f1,w
  3389  124B  1903               	skipnz
  3390  124C  2A4E               	goto	u2941
  3391  124D  2A4F               	goto	u2940
  3392  124E                     u2941:
  3393  124E  2A51               	goto	l2291
  3394  124F                     u2940:
  3395  124F                     l2289:
  3396  124F  3080               	movlw	128
  3397  1250  06A3               	xorwf	___flneg@f1+3,f
  3398  1251                     l2291:
  3399  1251                     l490:
  3400  1251  0008               	return
  3401  1252                     __end_of___flneg:
  3402                           
  3403                           	psect	text10
  3404  1504                     __ptext10:	
  3405 ;; *************** function ___flge *****************
  3406 ;; Defined at:
  3407 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  ff1             4    0[BANK0 ] long 
  3410 ;;  ff2             4    4[BANK0 ] long 
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;		None               void
  3415 ;; Registers used:
  3416 ;;		wreg, status,2, status,0
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3422 ;;      Params:         0       8       0       0       0
  3423 ;;      Locals:         0       0       0       0       0
  3424 ;;      Temps:          0       4       0       0       0
  3425 ;;      Totals:         0      12       0       0       0
  3426 ;;Total ram usage:       12 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:    1
  3429 ;; This function calls:
  3430 ;;		Nothing
  3431 ;; This function is called by:
  3432 ;;		_ftoa
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436                           
  3437                           ;psect for function ___flge
  3438  1504                     ___flge:
  3439  1504                     l2267:	
  3440                           ;incstack = 0
  3441                           ; Regs used in ___flge: [wreg+status,2+status,0]
  3442                           
  3443  1504  3000               	movlw	0
  3444  1505  1283               	bcf	3,5	;RP0=0, select bank0
  3445  1506  1303               	bcf	3,6	;RP1=0, select bank0
  3446  1507  0520               	andwf	___flge@ff1,w
  3447  1508  00A8               	movwf	??___flge
  3448  1509  3000               	movlw	0
  3449  150A  0521               	andwf	___flge@ff1+1,w
  3450  150B  00A9               	movwf	??___flge+1
  3451  150C  3080               	movlw	128
  3452  150D  0522               	andwf	___flge@ff1+2,w
  3453  150E  00AA               	movwf	??___flge+2
  3454  150F  307F               	movlw	127
  3455  1510  0523               	andwf	___flge@ff1+3,w
  3456  1511  00AB               	movwf	??___flge+3
  3457  1512  082B               	movf	??___flge+3,w
  3458  1513  042A               	iorwf	??___flge+2,w
  3459  1514  0429               	iorwf	??___flge+1,w
  3460  1515  0428               	iorwf	??___flge,w
  3461  1516  1D03               	skipz
  3462  1517  2D19               	goto	u2871
  3463  1518  2D1A               	goto	u2870
  3464  1519                     u2871:
  3465  1519  2D22               	goto	l482
  3466  151A                     u2870:
  3467  151A                     l2269:
  3468  151A  3000               	movlw	0
  3469  151B  00A3               	movwf	___flge@ff1+3
  3470  151C  3000               	movlw	0
  3471  151D  00A2               	movwf	___flge@ff1+2
  3472  151E  3000               	movlw	0
  3473  151F  00A1               	movwf	___flge@ff1+1
  3474  1520  3000               	movlw	0
  3475  1521  00A0               	movwf	___flge@ff1
  3476  1522                     l482:
  3477  1522  3000               	movlw	0
  3478  1523  0524               	andwf	___flge@ff2,w
  3479  1524  00A8               	movwf	??___flge
  3480  1525  3000               	movlw	0
  3481  1526  0525               	andwf	___flge@ff2+1,w
  3482  1527  00A9               	movwf	??___flge+1
  3483  1528  3080               	movlw	128
  3484  1529  0526               	andwf	___flge@ff2+2,w
  3485  152A  00AA               	movwf	??___flge+2
  3486  152B  307F               	movlw	127
  3487  152C  0527               	andwf	___flge@ff2+3,w
  3488  152D  00AB               	movwf	??___flge+3
  3489  152E  082B               	movf	??___flge+3,w
  3490  152F  042A               	iorwf	??___flge+2,w
  3491  1530  0429               	iorwf	??___flge+1,w
  3492  1531  0428               	iorwf	??___flge,w
  3493  1532  1D03               	skipz
  3494  1533  2D35               	goto	u2881
  3495  1534  2D36               	goto	u2880
  3496  1535                     u2881:
  3497  1535  2D3E               	goto	l2273
  3498  1536                     u2880:
  3499  1536                     l2271:
  3500  1536  3000               	movlw	0
  3501  1537  00A7               	movwf	___flge@ff2+3
  3502  1538  3000               	movlw	0
  3503  1539  00A6               	movwf	___flge@ff2+2
  3504  153A  3000               	movlw	0
  3505  153B  00A5               	movwf	___flge@ff2+1
  3506  153C  3000               	movlw	0
  3507  153D  00A4               	movwf	___flge@ff2
  3508  153E                     l2273:
  3509  153E  1FA3               	btfss	___flge@ff1+3,7
  3510  153F  2D41               	goto	u2891
  3511  1540  2D42               	goto	u2890
  3512  1541                     u2891:
  3513  1541  2D66               	goto	l2277
  3514  1542                     u2890:
  3515  1542                     l2275:
  3516  1542  3000               	movlw	0
  3517  1543  00A8               	movwf	??___flge
  3518  1544  3000               	movlw	0
  3519  1545  00A9               	movwf	??___flge+1
  3520  1546  3000               	movlw	0
  3521  1547  00AA               	movwf	??___flge+2
  3522  1548  3080               	movlw	128
  3523  1549  00AB               	movwf	??___flge+3
  3524  154A  0820               	movf	___flge@ff1,w
  3525  154B  02A8               	subwf	??___flge,f
  3526  154C  0821               	movf	___flge@ff1+1,w
  3527  154D  1C03               	skipc
  3528  154E  0F21               	incfsz	___flge@ff1+1,w
  3529  154F  2D51               	goto	u2901
  3530  1550  2D52               	goto	u2902
  3531  1551                     u2901:
  3532  1551  02A9               	subwf	??___flge+1,f
  3533  1552                     u2902:
  3534  1552  0822               	movf	___flge@ff1+2,w
  3535  1553  1C03               	skipc
  3536  1554  0F22               	incfsz	___flge@ff1+2,w
  3537  1555  2D57               	goto	u2903
  3538  1556  2D58               	goto	u2904
  3539  1557                     u2903:
  3540  1557  02AA               	subwf	??___flge+2,f
  3541  1558                     u2904:
  3542  1558  0823               	movf	___flge@ff1+3,w
  3543  1559  1C03               	skipc
  3544  155A  0F23               	incfsz	___flge@ff1+3,w
  3545  155B  2D5D               	goto	u2905
  3546  155C  2D5E               	goto	u2906
  3547  155D                     u2905:
  3548  155D  02AB               	subwf	??___flge+3,f
  3549  155E                     u2906:
  3550  155E  082B               	movf	??___flge+3,w
  3551  155F  00A3               	movwf	___flge@ff1+3
  3552  1560  082A               	movf	??___flge+2,w
  3553  1561  00A2               	movwf	___flge@ff1+2
  3554  1562  0829               	movf	??___flge+1,w
  3555  1563  00A1               	movwf	___flge@ff1+1
  3556  1564  0828               	movf	??___flge,w
  3557  1565  00A0               	movwf	___flge@ff1
  3558  1566                     l2277:
  3559  1566  1FA7               	btfss	___flge@ff2+3,7
  3560  1567  2D69               	goto	u2911
  3561  1568  2D6A               	goto	u2910
  3562  1569                     u2911:
  3563  1569  2D8E               	goto	l485
  3564  156A                     u2910:
  3565  156A                     l2279:
  3566  156A  3000               	movlw	0
  3567  156B  00A8               	movwf	??___flge
  3568  156C  3000               	movlw	0
  3569  156D  00A9               	movwf	??___flge+1
  3570  156E  3000               	movlw	0
  3571  156F  00AA               	movwf	??___flge+2
  3572  1570  3080               	movlw	128
  3573  1571  00AB               	movwf	??___flge+3
  3574  1572  0824               	movf	___flge@ff2,w
  3575  1573  02A8               	subwf	??___flge,f
  3576  1574  0825               	movf	___flge@ff2+1,w
  3577  1575  1C03               	skipc
  3578  1576  0F25               	incfsz	___flge@ff2+1,w
  3579  1577  2D79               	goto	u2921
  3580  1578  2D7A               	goto	u2922
  3581  1579                     u2921:
  3582  1579  02A9               	subwf	??___flge+1,f
  3583  157A                     u2922:
  3584  157A  0826               	movf	___flge@ff2+2,w
  3585  157B  1C03               	skipc
  3586  157C  0F26               	incfsz	___flge@ff2+2,w
  3587  157D  2D7F               	goto	u2923
  3588  157E  2D80               	goto	u2924
  3589  157F                     u2923:
  3590  157F  02AA               	subwf	??___flge+2,f
  3591  1580                     u2924:
  3592  1580  0827               	movf	___flge@ff2+3,w
  3593  1581  1C03               	skipc
  3594  1582  0F27               	incfsz	___flge@ff2+3,w
  3595  1583  2D85               	goto	u2925
  3596  1584  2D86               	goto	u2926
  3597  1585                     u2925:
  3598  1585  02AB               	subwf	??___flge+3,f
  3599  1586                     u2926:
  3600  1586  082B               	movf	??___flge+3,w
  3601  1587  00A7               	movwf	___flge@ff2+3
  3602  1588  082A               	movf	??___flge+2,w
  3603  1589  00A6               	movwf	___flge@ff2+2
  3604  158A  0829               	movf	??___flge+1,w
  3605  158B  00A5               	movwf	___flge@ff2+1
  3606  158C  0828               	movf	??___flge,w
  3607  158D  00A4               	movwf	___flge@ff2
  3608  158E                     l485:
  3609  158E  3080               	movlw	128
  3610  158F  06A3               	xorwf	___flge@ff1+3,f
  3611  1590  3080               	movlw	128
  3612  1591  06A7               	xorwf	___flge@ff2+3,f
  3613  1592  0827               	movf	___flge@ff2+3,w
  3614  1593  0223               	subwf	___flge@ff1+3,w
  3615  1594  1D03               	skipz
  3616  1595  2DA0               	goto	u2935
  3617  1596  0826               	movf	___flge@ff2+2,w
  3618  1597  0222               	subwf	___flge@ff1+2,w
  3619  1598  1D03               	skipz
  3620  1599  2DA0               	goto	u2935
  3621  159A  0825               	movf	___flge@ff2+1,w
  3622  159B  0221               	subwf	___flge@ff1+1,w
  3623  159C  1D03               	skipz
  3624  159D  2DA0               	goto	u2935
  3625  159E  0824               	movf	___flge@ff2,w
  3626  159F  0220               	subwf	___flge@ff1,w
  3627  15A0                     u2935:
  3628  15A0  1803               	skipnc
  3629  15A1  2DA3               	goto	u2931
  3630  15A2  2DA4               	goto	u2930
  3631  15A3                     u2931:
  3632  15A3  2DA6               	goto	l2283
  3633  15A4                     u2930:
  3634  15A4                     l2281:
  3635  15A4  1003               	clrc
  3636  15A5  2DA7               	goto	l486
  3637  15A6                     l2283:
  3638  15A6  1403               	setc
  3639  15A7                     l486:
  3640  15A7  0008               	return
  3641  15A8                     __end_of___flge:
  3642                           
  3643                           	psect	text11
  3644  13D2                     __ptext11:	
  3645 ;; *************** function _UARTSendString *****************
  3646 ;; Defined at:
  3647 ;;		line 49 in file "UART.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  str             2    0[BANK0 ] PTR const unsigned char 
  3650 ;;		 -> ftoa@buf(17), STR_6(2), STR_5(2), STR_4(2), 
  3651 ;;		 -> STR_3(2), STR_2(2), STR_1(2), 
  3652 ;;  max_length      1    2[BANK0 ] const unsigned char 
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;  i               2    6[BANK0 ] int 
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  1    wreg      void 
  3657 ;; Registers used:
  3658 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3664 ;;      Params:         0       3       0       0       0
  3665 ;;      Locals:         0       2       0       0       0
  3666 ;;      Temps:          0       3       0       0       0
  3667 ;;      Totals:         0       8       0       0       0
  3668 ;;Total ram usage:        8 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; Hardware stack levels required when called:    2
  3671 ;; This function calls:
  3672 ;;		_UARTSendChar
  3673 ;; This function is called by:
  3674 ;;		_sendMPU
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           
  3679                           ;psect for function _UARTSendString
  3680  13D2                     _UARTSendString:
  3681  13D2                     l2683:	
  3682                           ;incstack = 0
  3683                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3684                           
  3685                           
  3686                           ;UART.c: 50:     int i = 0;
  3687  13D2  1283               	bcf	3,5	;RP0=0, select bank0
  3688  13D3  1303               	bcf	3,6	;RP1=0, select bank0
  3689  13D4  01A6               	clrf	UARTSendString@i
  3690  13D5  01A7               	clrf	UARTSendString@i+1
  3691                           
  3692                           ;UART.c: 51:     for (i=0 ; i<max_length && str[i]!='\0' ; i++) {
  3693  13D6  01A6               	clrf	UARTSendString@i
  3694  13D7  01A7               	clrf	UARTSendString@i+1
  3695  13D8  2BFD               	goto	l2689
  3696  13D9                     l2685:
  3697                           
  3698                           ;UART.c: 52:         UARTSendChar(str[i]);
  3699  13D9  0826               	movf	UARTSendString@i,w
  3700  13DA  0720               	addwf	UARTSendString@str,w
  3701  13DB  00A4               	movwf	??_UARTSendString+1
  3702  13DC  0821               	movf	UARTSendString@str+1,w
  3703  13DD  00A3               	movwf	??_UARTSendString
  3704  13DE  1803               	skipnc
  3705  13DF  0AA3               	incf	??_UARTSendString,f
  3706  13E0  1FA6               	btfss	UARTSendString@i,7
  3707  13E1  2BE3               	goto	u3790
  3708  13E2  03A3               	decf	??_UARTSendString,f
  3709  13E3                     u3790:
  3710  13E3  1283               	bcf	3,5	;RP0=0, select bank0
  3711  13E4  1303               	bcf	3,6	;RP1=0, select bank0
  3712  13E5  0823               	movf	??_UARTSendString,w
  3713  13E6  00A5               	movwf	??_UARTSendString+2
  3714  13E7  0825               	movf	??_UARTSendString+2,w
  3715  13E8  00FF               	movwf	btemp+1
  3716  13E9  0824               	movf	??_UARTSendString+1,w
  3717  13EA  0084               	movwf	4
  3718  13EB  120A  118A  27B2  160A  118A  	fcall	stringtab
  3719  13F0  160A  118A  221F  160A  118A  	fcall	_UARTSendChar
  3720  13F5                     l2687:
  3721                           
  3722                           ;UART.c: 53:     }
  3723  13F5  3001               	movlw	1
  3724  13F6  1283               	bcf	3,5	;RP0=0, select bank0
  3725  13F7  1303               	bcf	3,6	;RP1=0, select bank0
  3726  13F8  07A6               	addwf	UARTSendString@i,f
  3727  13F9  1803               	skipnc
  3728  13FA  0AA7               	incf	UARTSendString@i+1,f
  3729  13FB  3000               	movlw	0
  3730  13FC  07A7               	addwf	UARTSendString@i+1,f
  3731  13FD                     l2689:
  3732  13FD  0827               	movf	UARTSendString@i+1,w
  3733  13FE  3A80               	xorlw	128
  3734  13FF  00A3               	movwf	??_UARTSendString
  3735  1400  3080               	movlw	128
  3736  1401  0223               	subwf	??_UARTSendString,w
  3737  1402  1D03               	skipz
  3738  1403  2C06               	goto	u3805
  3739  1404  0822               	movf	UARTSendString@max_length,w
  3740  1405  0226               	subwf	UARTSendString@i,w
  3741  1406                     u3805:
  3742  1406  1803               	skipnc
  3743  1407  2C09               	goto	u3801
  3744  1408  2C0A               	goto	u3800
  3745  1409                     u3801:
  3746  1409  2C28               	goto	l176
  3747  140A                     u3800:
  3748  140A                     l2691:
  3749  140A  1283               	bcf	3,5	;RP0=0, select bank0
  3750  140B  1303               	bcf	3,6	;RP1=0, select bank0
  3751  140C  0826               	movf	UARTSendString@i,w
  3752  140D  0720               	addwf	UARTSendString@str,w
  3753  140E  00A4               	movwf	??_UARTSendString+1
  3754  140F  0821               	movf	UARTSendString@str+1,w
  3755  1410  00A3               	movwf	??_UARTSendString
  3756  1411  1803               	skipnc
  3757  1412  0AA3               	incf	??_UARTSendString,f
  3758  1413  1FA6               	btfss	UARTSendString@i,7
  3759  1414  2C16               	goto	u3810
  3760  1415  03A3               	decf	??_UARTSendString,f
  3761  1416                     u3810:
  3762  1416  1283               	bcf	3,5	;RP0=0, select bank0
  3763  1417  1303               	bcf	3,6	;RP1=0, select bank0
  3764  1418  0823               	movf	??_UARTSendString,w
  3765  1419  00A5               	movwf	??_UARTSendString+2
  3766  141A  0825               	movf	??_UARTSendString+2,w
  3767  141B  00FF               	movwf	btemp+1
  3768  141C  0824               	movf	??_UARTSendString+1,w
  3769  141D  0084               	movwf	4
  3770  141E  120A  118A  27B2  160A  118A  	fcall	stringtab
  3771  1423  3A00               	xorlw	0
  3772  1424  1D03               	skipz
  3773  1425  2C27               	goto	u3821
  3774  1426  2C28               	goto	u3820
  3775  1427                     u3821:
  3776  1427  2BD9               	goto	l2685
  3777  1428                     u3820:
  3778  1428                     l176:
  3779  1428  0008               	return
  3780  1429                     __end_of_UARTSendString:
  3781                           
  3782                           	psect	text12
  3783  121F                     __ptext12:	
  3784 ;; *************** function _UARTSendChar *****************
  3785 ;; Defined at:
  3786 ;;		line 39 in file "UART.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;  c               1    wreg     const unsigned char 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;  c               1    6[COMMON] const unsigned char 
  3791 ;; Return value:  Size  Location     Type
  3792 ;;                  1    wreg      void 
  3793 ;; Registers used:
  3794 ;;		wreg
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3800 ;;      Params:         0       0       0       0       0
  3801 ;;      Locals:         1       0       0       0       0
  3802 ;;      Temps:          0       0       0       0       0
  3803 ;;      Totals:         1       0       0       0       0
  3804 ;;Total ram usage:        1 bytes
  3805 ;; Hardware stack levels used:    1
  3806 ;; Hardware stack levels required when called:    1
  3807 ;; This function calls:
  3808 ;;		Nothing
  3809 ;; This function is called by:
  3810 ;;		_sendMPU
  3811 ;;		_UARTSendString
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815                           
  3816                           ;psect for function _UARTSendChar
  3817  121F                     _UARTSendChar:
  3818                           
  3819                           ;incstack = 0
  3820                           ; Regs used in _UARTSendChar: [wreg]
  3821                           ;UARTSendChar@c stored from wreg
  3822  121F  00F6               	movwf	UARTSendChar@c
  3823  1220                     l2263:
  3824  1220                     l165:	
  3825                           ;UART.c: 40:     while (TXSTAbits.TRMT == 0);
  3826                           
  3827  1220  1683               	bsf	3,5	;RP0=1, select bank1
  3828  1221  1303               	bcf	3,6	;RP1=0, select bank1
  3829  1222  1C98               	btfss	24,1	;volatile
  3830  1223  2A25               	goto	u2861
  3831  1224  2A26               	goto	u2860
  3832  1225                     u2861:
  3833  1225  2A20               	goto	l165
  3834  1226                     u2860:
  3835  1226                     l2265:
  3836                           
  3837                           ;UART.c: 41:     TXREG = c;
  3838  1226  0876               	movf	UARTSendChar@c,w
  3839  1227  1283               	bcf	3,5	;RP0=0, select bank0
  3840  1228  1303               	bcf	3,6	;RP1=0, select bank0
  3841  1229  0099               	movwf	25	;volatile
  3842  122A                     l168:
  3843  122A  0008               	return
  3844  122B                     __end_of_UARTSendChar:
  3845                           
  3846                           	psect	text13
  3847  0380                     __ptext13:	
  3848 ;; *************** function _readMPU *****************
  3849 ;; Defined at:
  3850 ;;		line 28 in file "MPU6050.c"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;  datos           1    wreg     PTR float 
  3853 ;;		 -> datos(28), 
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;  datos           1   30[BANK1 ] PTR float 
  3856 ;;		 -> datos(28), 
  3857 ;;  i               2   28[BANK1 ] int 
  3858 ;;  valores        14    0[BANK1 ] unsigned char [14]
  3859 ;;  guardar        14   14[BANK1 ] int [7]
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  1    wreg      void 
  3862 ;; Registers used:
  3863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3869 ;;      Params:         0       0       0       0       0
  3870 ;;      Locals:         0       0      31       0       0
  3871 ;;      Temps:          0       4       0       0       0
  3872 ;;      Totals:         0       4      31       0       0
  3873 ;;Total ram usage:       35 bytes
  3874 ;; Hardware stack levels used:    1
  3875 ;; Hardware stack levels required when called:    4
  3876 ;; This function calls:
  3877 ;;		_I2C_Master_RepeatedStart
  3878 ;;		_I2C_Master_Stop
  3879 ;;		_I2C_Master_Write
  3880 ;;		_I2C_Read
  3881 ;;		_I2C_Start
  3882 ;;		___fladd
  3883 ;;		___fldiv
  3884 ;;		___flmul
  3885 ;;		___xxtofl
  3886 ;; This function is called by:
  3887 ;;		_main
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           
  3892                           ;psect for function _readMPU
  3893  0380                     _readMPU:
  3894                           
  3895                           ;incstack = 0
  3896                           ; Regs used in _readMPU: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3897                           ;readMPU@datos stored from wreg
  3898  0380  1683               	bsf	3,5	;RP0=1, select bank1
  3899  0381  1303               	bcf	3,6	;RP1=0, select bank1
  3900  0382  00EB               	movwf	readMPU@datos^(0+128)
  3901  0383                     l3385:
  3902                           
  3903                           ;MPU6050.c: 29:     char valores[14];;MPU6050.c: 30:     int guardar[7];;MPU6050.c: 31: 
      +                              I2C_Start(0xD0);
  3904  0383  30D0               	movlw	208
  3905  0384  160A  118A  2262  120A  118A  	fcall	_I2C_Start
  3906  0389                     l211:	
  3907                           ;MPU6050.c: 32:     while (SSPCON2bits.ACKSTAT);
  3908                           
  3909  0389  1683               	bsf	3,5	;RP0=1, select bank1
  3910  038A  1303               	bcf	3,6	;RP1=0, select bank1
  3911  038B  1B11               	btfsc	17,6	;volatile
  3912  038C  2B8E               	goto	u4971
  3913  038D  2B8F               	goto	u4970
  3914  038E                     u4971:
  3915  038E  2B89               	goto	l211
  3916  038F                     u4970:
  3917  038F                     l3387:
  3918                           
  3919                           ;MPU6050.c: 33:     I2C_Master_Write(0x3B);
  3920  038F  303B               	movlw	59
  3921  0390  160A  118A  2252  120A  118A  	fcall	_I2C_Master_Write
  3922  0395                     l214:	
  3923                           ;MPU6050.c: 34:     while (SSPCON2bits.ACKSTAT);
  3924                           
  3925  0395  1683               	bsf	3,5	;RP0=1, select bank1
  3926  0396  1303               	bcf	3,6	;RP1=0, select bank1
  3927  0397  1B11               	btfsc	17,6	;volatile
  3928  0398  2B9A               	goto	u4981
  3929  0399  2B9B               	goto	u4980
  3930  039A                     u4981:
  3931  039A  2B95               	goto	l214
  3932  039B                     u4980:
  3933  039B                     l3389:
  3934                           
  3935                           ;MPU6050.c: 35:     I2C_Master_RepeatedStart();
  3936  039B  160A  118A  220D  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3937                           
  3938                           ;MPU6050.c: 36:     I2C_Master_Write(0xD1);
  3939  03A0  30D1               	movlw	209
  3940  03A1  160A  118A  2252  120A  118A  	fcall	_I2C_Master_Write
  3941  03A6                     l3391:
  3942                           
  3943                           ;MPU6050.c: 37:     for (int i = 0; i < 13; i++) valores[i] = I2C_Read(0);
  3944  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  3945  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  3946  03A8  01E9               	clrf	readMPU@i^(0+128)
  3947  03A9  01EA               	clrf	(readMPU@i+1)^(0+128)
  3948  03AA                     l3397:
  3949  03AA  3000               	movlw	0
  3950  03AB  160A  118A  2311  120A  118A  	fcall	_I2C_Read
  3951  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  3952  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  3953  03B2  00DC               	movwf	??_readMPU
  3954  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  3955  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  3956  03B5  0869               	movf	readMPU@i^(0+128),w
  3957  03B6  3ECD               	addlw	(low (readMPU@valores| 0))& (0+255)
  3958  03B7  0084               	movwf	4
  3959  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  3960  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  3961  03BA  085C               	movf	??_readMPU,w
  3962  03BB  1383               	bcf	3,7	;select IRP bank1
  3963  03BC  0080               	movwf	0
  3964  03BD                     l3399:
  3965  03BD  3001               	movlw	1
  3966  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  3967  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  3968  03C0  07E9               	addwf	readMPU@i^(0+128),f
  3969  03C1  1803               	skipnc
  3970  03C2  0AEA               	incf	(readMPU@i+1)^(0+128),f
  3971  03C3  3000               	movlw	0
  3972  03C4  07EA               	addwf	(readMPU@i+1)^(0+128),f
  3973  03C5                     l3401:
  3974  03C5  086A               	movf	(readMPU@i+1)^(0+128),w
  3975  03C6  3A80               	xorlw	128
  3976  03C7  00FF               	movwf	btemp+1
  3977  03C8  3080               	movlw	128
  3978  03C9  027F               	subwf	btemp+1,w
  3979  03CA  1D03               	skipz
  3980  03CB  2BCE               	goto	u4995
  3981  03CC  300D               	movlw	13
  3982  03CD  0269               	subwf	readMPU@i^(0+128),w
  3983  03CE                     u4995:
  3984  03CE  1C03               	skipc
  3985  03CF  2BD1               	goto	u4991
  3986  03D0  2BD2               	goto	u4990
  3987  03D1                     u4991:
  3988  03D1  2BAA               	goto	l3397
  3989  03D2                     u4990:
  3990  03D2                     l3403:
  3991                           
  3992                           ;MPU6050.c: 38:     valores[13] = I2C_Read(1);
  3993  03D2  3001               	movlw	1
  3994  03D3  160A  118A  2311  120A  118A  	fcall	_I2C_Read
  3995  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  3996  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  3997  03DA  00DC               	movwf	??_readMPU
  3998  03DB  085C               	movf	??_readMPU,w
  3999  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  4000  03DD  1303               	bcf	3,6	;RP1=0, select bank1
  4001  03DE  00DA               	movwf	(readMPU@valores^(0+128)+13)
  4002                           
  4003                           ;MPU6050.c: 39:     I2C_Master_Stop();
  4004  03DF  160A  118A  2204  120A  118A  	fcall	_I2C_Master_Stop
  4005  03E4                     l3405:
  4006                           
  4007                           ;MPU6050.c: 42:     guardar[0] = ((int) valores[0] << 8) | ((int) valores[1]);
  4008  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  4009  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  4010  03E6  084E               	movf	(readMPU@valores^(0+128)+1),w
  4011  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  4012  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  4013  03E9  00DC               	movwf	??_readMPU
  4014  03EA  01DD               	clrf	??_readMPU+1
  4015  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  4016  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  4017  03ED  084D               	movf	readMPU@valores^(0+128),w
  4018  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  4019  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  4020  03F0  00DE               	movwf	??_readMPU+2
  4021  03F1  01DF               	clrf	??_readMPU+3
  4022  03F2  085E               	movf	??_readMPU+2,w
  4023  03F3  00DF               	movwf	??_readMPU+3
  4024  03F4  01DE               	clrf	??_readMPU+2
  4025  03F5  085C               	movf	??_readMPU,w
  4026  03F6  045E               	iorwf	??_readMPU+2,w
  4027  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  4028  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  4029  03F9  00DB               	movwf	readMPU@guardar^(0+128)
  4030  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  4031  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  4032  03FC  085D               	movf	??_readMPU+1,w
  4033  03FD  045F               	iorwf	??_readMPU+3,w
  4034  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  4035  03FF  1303               	bcf	3,6	;RP1=0, select bank1
  4036  0400  00DC               	movwf	(readMPU@guardar+1)^(0+128)
  4037  0401                     l3407:
  4038                           
  4039                           ;MPU6050.c: 43:     guardar[1] = ((int) valores[2] << 8) | ((int) valores[3]);
  4040  0401  0850               	movf	(readMPU@valores^(0+128)+3),w
  4041  0402  1283               	bcf	3,5	;RP0=0, select bank0
  4042  0403  1303               	bcf	3,6	;RP1=0, select bank0
  4043  0404  00DC               	movwf	??_readMPU
  4044  0405  01DD               	clrf	??_readMPU+1
  4045  0406  1683               	bsf	3,5	;RP0=1, select bank1
  4046  0407  1303               	bcf	3,6	;RP1=0, select bank1
  4047  0408  084F               	movf	(readMPU@valores^(0+128)+2),w
  4048  0409  1283               	bcf	3,5	;RP0=0, select bank0
  4049  040A  1303               	bcf	3,6	;RP1=0, select bank0
  4050  040B  00DE               	movwf	??_readMPU+2
  4051  040C  01DF               	clrf	??_readMPU+3
  4052  040D  085E               	movf	??_readMPU+2,w
  4053  040E  00DF               	movwf	??_readMPU+3
  4054  040F  01DE               	clrf	??_readMPU+2
  4055  0410  085C               	movf	??_readMPU,w
  4056  0411  045E               	iorwf	??_readMPU+2,w
  4057  0412  1683               	bsf	3,5	;RP0=1, select bank1
  4058  0413  1303               	bcf	3,6	;RP1=0, select bank1
  4059  0414  00DD               	movwf	(readMPU@guardar^(0+128)+2)
  4060  0415  1283               	bcf	3,5	;RP0=0, select bank0
  4061  0416  1303               	bcf	3,6	;RP1=0, select bank0
  4062  0417  085D               	movf	??_readMPU+1,w
  4063  0418  045F               	iorwf	??_readMPU+3,w
  4064  0419  1683               	bsf	3,5	;RP0=1, select bank1
  4065  041A  1303               	bcf	3,6	;RP1=0, select bank1
  4066  041B  00DE               	movwf	((readMPU@guardar+1)^(0+128)+2)
  4067  041C                     l3409:
  4068                           
  4069                           ;MPU6050.c: 44:     guardar[2] = ((int) valores[4] << 8) | ((int) valores[5]);
  4070  041C  0852               	movf	(readMPU@valores^(0+128)+5),w
  4071  041D  1283               	bcf	3,5	;RP0=0, select bank0
  4072  041E  1303               	bcf	3,6	;RP1=0, select bank0
  4073  041F  00DC               	movwf	??_readMPU
  4074  0420  01DD               	clrf	??_readMPU+1
  4075  0421  1683               	bsf	3,5	;RP0=1, select bank1
  4076  0422  1303               	bcf	3,6	;RP1=0, select bank1
  4077  0423  0851               	movf	(readMPU@valores^(0+128)+4),w
  4078  0424  1283               	bcf	3,5	;RP0=0, select bank0
  4079  0425  1303               	bcf	3,6	;RP1=0, select bank0
  4080  0426  00DE               	movwf	??_readMPU+2
  4081  0427  01DF               	clrf	??_readMPU+3
  4082  0428  085E               	movf	??_readMPU+2,w
  4083  0429  00DF               	movwf	??_readMPU+3
  4084  042A  01DE               	clrf	??_readMPU+2
  4085  042B  085C               	movf	??_readMPU,w
  4086  042C  045E               	iorwf	??_readMPU+2,w
  4087  042D  1683               	bsf	3,5	;RP0=1, select bank1
  4088  042E  1303               	bcf	3,6	;RP1=0, select bank1
  4089  042F  00DF               	movwf	(readMPU@guardar^(0+128)+4)
  4090  0430  1283               	bcf	3,5	;RP0=0, select bank0
  4091  0431  1303               	bcf	3,6	;RP1=0, select bank0
  4092  0432  085D               	movf	??_readMPU+1,w
  4093  0433  045F               	iorwf	??_readMPU+3,w
  4094  0434  1683               	bsf	3,5	;RP0=1, select bank1
  4095  0435  1303               	bcf	3,6	;RP1=0, select bank1
  4096  0436  00E0               	movwf	((readMPU@guardar+1)^(0+128)+4)
  4097  0437                     l3411:
  4098                           
  4099                           ;MPU6050.c: 45:     guardar[3] = ((int) valores[6] << 8) | ((int) valores[7]);
  4100  0437  0854               	movf	(readMPU@valores^(0+128)+7),w
  4101  0438  1283               	bcf	3,5	;RP0=0, select bank0
  4102  0439  1303               	bcf	3,6	;RP1=0, select bank0
  4103  043A  00DC               	movwf	??_readMPU
  4104  043B  01DD               	clrf	??_readMPU+1
  4105  043C  1683               	bsf	3,5	;RP0=1, select bank1
  4106  043D  1303               	bcf	3,6	;RP1=0, select bank1
  4107  043E  0853               	movf	(readMPU@valores^(0+128)+6),w
  4108  043F  1283               	bcf	3,5	;RP0=0, select bank0
  4109  0440  1303               	bcf	3,6	;RP1=0, select bank0
  4110  0441  00DE               	movwf	??_readMPU+2
  4111  0442  01DF               	clrf	??_readMPU+3
  4112  0443  085E               	movf	??_readMPU+2,w
  4113  0444  00DF               	movwf	??_readMPU+3
  4114  0445  01DE               	clrf	??_readMPU+2
  4115  0446  085C               	movf	??_readMPU,w
  4116  0447  045E               	iorwf	??_readMPU+2,w
  4117  0448  1683               	bsf	3,5	;RP0=1, select bank1
  4118  0449  1303               	bcf	3,6	;RP1=0, select bank1
  4119  044A  00E1               	movwf	(readMPU@guardar^(0+128)+6)
  4120  044B  1283               	bcf	3,5	;RP0=0, select bank0
  4121  044C  1303               	bcf	3,6	;RP1=0, select bank0
  4122  044D  085D               	movf	??_readMPU+1,w
  4123  044E  045F               	iorwf	??_readMPU+3,w
  4124  044F  1683               	bsf	3,5	;RP0=1, select bank1
  4125  0450  1303               	bcf	3,6	;RP1=0, select bank1
  4126  0451  00E2               	movwf	((readMPU@guardar+1)^(0+128)+6)
  4127  0452                     l3413:
  4128                           
  4129                           ;MPU6050.c: 46:     guardar[4] = ((int) valores[8] << 8) | ((int) valores[9]);
  4130  0452  0856               	movf	(readMPU@valores^(0+128)+9),w
  4131  0453  1283               	bcf	3,5	;RP0=0, select bank0
  4132  0454  1303               	bcf	3,6	;RP1=0, select bank0
  4133  0455  00DC               	movwf	??_readMPU
  4134  0456  01DD               	clrf	??_readMPU+1
  4135  0457  1683               	bsf	3,5	;RP0=1, select bank1
  4136  0458  1303               	bcf	3,6	;RP1=0, select bank1
  4137  0459  0855               	movf	(readMPU@valores^(0+128)+8),w
  4138  045A  1283               	bcf	3,5	;RP0=0, select bank0
  4139  045B  1303               	bcf	3,6	;RP1=0, select bank0
  4140  045C  00DE               	movwf	??_readMPU+2
  4141  045D  01DF               	clrf	??_readMPU+3
  4142  045E  085E               	movf	??_readMPU+2,w
  4143  045F  00DF               	movwf	??_readMPU+3
  4144  0460  01DE               	clrf	??_readMPU+2
  4145  0461  085C               	movf	??_readMPU,w
  4146  0462  045E               	iorwf	??_readMPU+2,w
  4147  0463  1683               	bsf	3,5	;RP0=1, select bank1
  4148  0464  1303               	bcf	3,6	;RP1=0, select bank1
  4149  0465  00E3               	movwf	(readMPU@guardar^(0+128)+8)
  4150  0466  1283               	bcf	3,5	;RP0=0, select bank0
  4151  0467  1303               	bcf	3,6	;RP1=0, select bank0
  4152  0468  085D               	movf	??_readMPU+1,w
  4153  0469  045F               	iorwf	??_readMPU+3,w
  4154  046A  1683               	bsf	3,5	;RP0=1, select bank1
  4155  046B  1303               	bcf	3,6	;RP1=0, select bank1
  4156  046C  00E4               	movwf	((readMPU@guardar+1)^(0+128)+8)
  4157  046D                     l3415:
  4158                           
  4159                           ;MPU6050.c: 47:     guardar[5] = ((int) valores[10] << 8) | ((int) valores[11]);
  4160  046D  0858               	movf	(readMPU@valores^(0+128)+11),w
  4161  046E  1283               	bcf	3,5	;RP0=0, select bank0
  4162  046F  1303               	bcf	3,6	;RP1=0, select bank0
  4163  0470  00DC               	movwf	??_readMPU
  4164  0471  01DD               	clrf	??_readMPU+1
  4165  0472  1683               	bsf	3,5	;RP0=1, select bank1
  4166  0473  1303               	bcf	3,6	;RP1=0, select bank1
  4167  0474  0857               	movf	(readMPU@valores^(0+128)+10),w
  4168  0475  1283               	bcf	3,5	;RP0=0, select bank0
  4169  0476  1303               	bcf	3,6	;RP1=0, select bank0
  4170  0477  00DE               	movwf	??_readMPU+2
  4171  0478  01DF               	clrf	??_readMPU+3
  4172  0479  085E               	movf	??_readMPU+2,w
  4173  047A  00DF               	movwf	??_readMPU+3
  4174  047B  01DE               	clrf	??_readMPU+2
  4175  047C  085C               	movf	??_readMPU,w
  4176  047D  045E               	iorwf	??_readMPU+2,w
  4177  047E  1683               	bsf	3,5	;RP0=1, select bank1
  4178  047F  1303               	bcf	3,6	;RP1=0, select bank1
  4179  0480  00E5               	movwf	(readMPU@guardar^(0+128)+10)
  4180  0481  1283               	bcf	3,5	;RP0=0, select bank0
  4181  0482  1303               	bcf	3,6	;RP1=0, select bank0
  4182  0483  085D               	movf	??_readMPU+1,w
  4183  0484  045F               	iorwf	??_readMPU+3,w
  4184  0485  1683               	bsf	3,5	;RP0=1, select bank1
  4185  0486  1303               	bcf	3,6	;RP1=0, select bank1
  4186  0487  00E6               	movwf	((readMPU@guardar+1)^(0+128)+10)
  4187  0488                     l3417:
  4188                           
  4189                           ;MPU6050.c: 48:     guardar[6] = ((int) valores[12] << 8) | ((int) valores[13]);
  4190  0488  085A               	movf	(readMPU@valores^(0+128)+13),w
  4191  0489  1283               	bcf	3,5	;RP0=0, select bank0
  4192  048A  1303               	bcf	3,6	;RP1=0, select bank0
  4193  048B  00DC               	movwf	??_readMPU
  4194  048C  01DD               	clrf	??_readMPU+1
  4195  048D  1683               	bsf	3,5	;RP0=1, select bank1
  4196  048E  1303               	bcf	3,6	;RP1=0, select bank1
  4197  048F  0859               	movf	(readMPU@valores^(0+128)+12),w
  4198  0490  1283               	bcf	3,5	;RP0=0, select bank0
  4199  0491  1303               	bcf	3,6	;RP1=0, select bank0
  4200  0492  00DE               	movwf	??_readMPU+2
  4201  0493  01DF               	clrf	??_readMPU+3
  4202  0494  085E               	movf	??_readMPU+2,w
  4203  0495  00DF               	movwf	??_readMPU+3
  4204  0496  01DE               	clrf	??_readMPU+2
  4205  0497  085C               	movf	??_readMPU,w
  4206  0498  045E               	iorwf	??_readMPU+2,w
  4207  0499  1683               	bsf	3,5	;RP0=1, select bank1
  4208  049A  1303               	bcf	3,6	;RP1=0, select bank1
  4209  049B  00E7               	movwf	(readMPU@guardar^(0+128)+12)
  4210  049C  1283               	bcf	3,5	;RP0=0, select bank0
  4211  049D  1303               	bcf	3,6	;RP1=0, select bank0
  4212  049E  085D               	movf	??_readMPU+1,w
  4213  049F  045F               	iorwf	??_readMPU+3,w
  4214  04A0  1683               	bsf	3,5	;RP0=1, select bank1
  4215  04A1  1303               	bcf	3,6	;RP1=0, select bank1
  4216  04A2  00E8               	movwf	((readMPU@guardar+1)^(0+128)+12)
  4217  04A3                     l3419:
  4218                           
  4219                           ;MPU6050.c: 50:     datos[0] = ((float) guardar[0]) * 0.0005982;
  4220  04A3  303A               	movlw	58
  4221  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  4222  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  4223  04A6  00B1               	movwf	___flmul@b+3
  4224  04A7  301C               	movlw	28
  4225  04A8  00B0               	movwf	___flmul@b+2
  4226  04A9  30D0               	movlw	208
  4227  04AA  00AF               	movwf	___flmul@b+1
  4228  04AB  3086               	movlw	134
  4229  04AC  00AE               	movwf	___flmul@b
  4230  04AD  1683               	bsf	3,5	;RP0=1, select bank1
  4231  04AE  1303               	bcf	3,6	;RP1=0, select bank1
  4232  04AF  085B               	movf	readMPU@guardar^(0+128),w
  4233  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  4234  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  4235  04B2  00A0               	movwf	___xxtofl@val
  4236  04B3  1683               	bsf	3,5	;RP0=1, select bank1
  4237  04B4  1303               	bcf	3,6	;RP1=0, select bank1
  4238  04B5  085C               	movf	(readMPU@guardar+1)^(0+128),w
  4239  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  4240  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  4241  04B8  00A1               	movwf	___xxtofl@val+1
  4242  04B9  3000               	movlw	0
  4243  04BA  1BA1               	btfsc	___xxtofl@val+1,7
  4244  04BB  30FF               	movlw	255
  4245  04BC  00A2               	movwf	___xxtofl@val+2
  4246  04BD  00A3               	movwf	___xxtofl@val+3
  4247  04BE  3001               	movlw	1
  4248  04BF  160A  118A  25A8  120A  118A  	fcall	___xxtofl
  4249  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  4250  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  4251  04C6  0823               	movf	?___xxtofl+3,w
  4252  04C7  00B5               	movwf	___flmul@a+3
  4253  04C8  0822               	movf	?___xxtofl+2,w
  4254  04C9  00B4               	movwf	___flmul@a+2
  4255  04CA  0821               	movf	?___xxtofl+1,w
  4256  04CB  00B3               	movwf	___flmul@a+1
  4257  04CC  0820               	movf	?___xxtofl,w
  4258  04CD  00B2               	movwf	___flmul@a
  4259  04CE  120A  118A  201F  120A  118A  	fcall	___flmul
  4260  04D3  1683               	bsf	3,5	;RP0=1, select bank1
  4261  04D4  1303               	bcf	3,6	;RP1=0, select bank1
  4262  04D5  086B               	movf	readMPU@datos^(0+128),w
  4263  04D6  0084               	movwf	4
  4264  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  4265  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  4266  04D9  082E               	movf	?___flmul,w
  4267  04DA  1383               	bcf	3,7	;select IRP bank0
  4268  04DB  0080               	movwf	0
  4269  04DC  0A84               	incf	4,f
  4270  04DD  082F               	movf	?___flmul+1,w
  4271  04DE  0080               	movwf	0
  4272  04DF  0A84               	incf	4,f
  4273  04E0  0830               	movf	?___flmul+2,w
  4274  04E1  0080               	movwf	0
  4275  04E2  0A84               	incf	4,f
  4276  04E3  0831               	movf	?___flmul+3,w
  4277  04E4  0080               	movwf	0
  4278  04E5                     l3421:
  4279                           
  4280                           ;MPU6050.c: 51:     datos[1] = ((float) guardar[1]) * 0.0005982;
  4281  04E5  303A               	movlw	58
  4282  04E6  00B1               	movwf	___flmul@b+3
  4283  04E7  301C               	movlw	28
  4284  04E8  00B0               	movwf	___flmul@b+2
  4285  04E9  30D0               	movlw	208
  4286  04EA  00AF               	movwf	___flmul@b+1
  4287  04EB  3086               	movlw	134
  4288  04EC  00AE               	movwf	___flmul@b
  4289  04ED  1683               	bsf	3,5	;RP0=1, select bank1
  4290  04EE  1303               	bcf	3,6	;RP1=0, select bank1
  4291  04EF  085D               	movf	(readMPU@guardar^(0+128)+2),w
  4292  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  4293  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  4294  04F2  00A0               	movwf	___xxtofl@val
  4295  04F3  1683               	bsf	3,5	;RP0=1, select bank1
  4296  04F4  1303               	bcf	3,6	;RP1=0, select bank1
  4297  04F5  085E               	movf	((readMPU@guardar+1)^(0+128)+2),w
  4298  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  4299  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  4300  04F8  00A1               	movwf	___xxtofl@val+1
  4301  04F9  3000               	movlw	0
  4302  04FA  1BA1               	btfsc	___xxtofl@val+1,7
  4303  04FB  30FF               	movlw	255
  4304  04FC  00A2               	movwf	___xxtofl@val+2
  4305  04FD  00A3               	movwf	___xxtofl@val+3
  4306  04FE  3001               	movlw	1
  4307  04FF  160A  118A  25A8  120A  118A  	fcall	___xxtofl
  4308  0504  1283               	bcf	3,5	;RP0=0, select bank0
  4309  0505  1303               	bcf	3,6	;RP1=0, select bank0
  4310  0506  0823               	movf	?___xxtofl+3,w
  4311  0507  00B5               	movwf	___flmul@a+3
  4312  0508  0822               	movf	?___xxtofl+2,w
  4313  0509  00B4               	movwf	___flmul@a+2
  4314  050A  0821               	movf	?___xxtofl+1,w
  4315  050B  00B3               	movwf	___flmul@a+1
  4316  050C  0820               	movf	?___xxtofl,w
  4317  050D  00B2               	movwf	___flmul@a
  4318  050E  120A  118A  201F  120A  118A  	fcall	___flmul
  4319  0513  1683               	bsf	3,5	;RP0=1, select bank1
  4320  0514  1303               	bcf	3,6	;RP1=0, select bank1
  4321  0515  086B               	movf	readMPU@datos^(0+128),w
  4322  0516  3E04               	addlw	4
  4323  0517  0084               	movwf	4
  4324  0518  1283               	bcf	3,5	;RP0=0, select bank0
  4325  0519  1303               	bcf	3,6	;RP1=0, select bank0
  4326  051A  082E               	movf	?___flmul,w
  4327  051B  1383               	bcf	3,7	;select IRP bank0
  4328  051C  0080               	movwf	0
  4329  051D  0A84               	incf	4,f
  4330  051E  082F               	movf	?___flmul+1,w
  4331  051F  0080               	movwf	0
  4332  0520  0A84               	incf	4,f
  4333  0521  0830               	movf	?___flmul+2,w
  4334  0522  0080               	movwf	0
  4335  0523  0A84               	incf	4,f
  4336  0524  0831               	movf	?___flmul+3,w
  4337  0525  0080               	movwf	0
  4338  0526                     l3423:
  4339                           
  4340                           ;MPU6050.c: 52:     datos[2] = ((float) guardar[2]) * 0.0005982;
  4341  0526  303A               	movlw	58
  4342  0527  00B1               	movwf	___flmul@b+3
  4343  0528  301C               	movlw	28
  4344  0529  00B0               	movwf	___flmul@b+2
  4345  052A  30D0               	movlw	208
  4346  052B  00AF               	movwf	___flmul@b+1
  4347  052C  3086               	movlw	134
  4348  052D  00AE               	movwf	___flmul@b
  4349  052E  1683               	bsf	3,5	;RP0=1, select bank1
  4350  052F  1303               	bcf	3,6	;RP1=0, select bank1
  4351  0530  085F               	movf	(readMPU@guardar^(0+128)+4),w
  4352  0531  1283               	bcf	3,5	;RP0=0, select bank0
  4353  0532  1303               	bcf	3,6	;RP1=0, select bank0
  4354  0533  00A0               	movwf	___xxtofl@val
  4355  0534  1683               	bsf	3,5	;RP0=1, select bank1
  4356  0535  1303               	bcf	3,6	;RP1=0, select bank1
  4357  0536  0860               	movf	((readMPU@guardar+1)^(0+128)+4),w
  4358  0537  1283               	bcf	3,5	;RP0=0, select bank0
  4359  0538  1303               	bcf	3,6	;RP1=0, select bank0
  4360  0539  00A1               	movwf	___xxtofl@val+1
  4361  053A  3000               	movlw	0
  4362  053B  1BA1               	btfsc	___xxtofl@val+1,7
  4363  053C  30FF               	movlw	255
  4364  053D  00A2               	movwf	___xxtofl@val+2
  4365  053E  00A3               	movwf	___xxtofl@val+3
  4366  053F  3001               	movlw	1
  4367  0540  160A  118A  25A8  120A  118A  	fcall	___xxtofl
  4368  0545  1283               	bcf	3,5	;RP0=0, select bank0
  4369  0546  1303               	bcf	3,6	;RP1=0, select bank0
  4370  0547  0823               	movf	?___xxtofl+3,w
  4371  0548  00B5               	movwf	___flmul@a+3
  4372  0549  0822               	movf	?___xxtofl+2,w
  4373  054A  00B4               	movwf	___flmul@a+2
  4374  054B  0821               	movf	?___xxtofl+1,w
  4375  054C  00B3               	movwf	___flmul@a+1
  4376  054D  0820               	movf	?___xxtofl,w
  4377  054E  00B2               	movwf	___flmul@a
  4378  054F  120A  118A  201F  120A  118A  	fcall	___flmul
  4379  0554  1683               	bsf	3,5	;RP0=1, select bank1
  4380  0555  1303               	bcf	3,6	;RP1=0, select bank1
  4381  0556  086B               	movf	readMPU@datos^(0+128),w
  4382  0557  3E08               	addlw	8
  4383  0558  0084               	movwf	4
  4384  0559  1283               	bcf	3,5	;RP0=0, select bank0
  4385  055A  1303               	bcf	3,6	;RP1=0, select bank0
  4386  055B  082E               	movf	?___flmul,w
  4387  055C  1383               	bcf	3,7	;select IRP bank0
  4388  055D  0080               	movwf	0
  4389  055E  0A84               	incf	4,f
  4390  055F  082F               	movf	?___flmul+1,w
  4391  0560  0080               	movwf	0
  4392  0561  0A84               	incf	4,f
  4393  0562  0830               	movf	?___flmul+2,w
  4394  0563  0080               	movwf	0
  4395  0564  0A84               	incf	4,f
  4396  0565  0831               	movf	?___flmul+3,w
  4397  0566  0080               	movwf	0
  4398  0567                     l3425:
  4399                           
  4400                           ;MPU6050.c: 53:     datos[3] = ((float) guardar[3])/340 + 36.53;
  4401  0567  3042               	movlw	66
  4402  0568  00CB               	movwf	___fladd@b+3
  4403  0569  3012               	movlw	18
  4404  056A  00CA               	movwf	___fladd@b+2
  4405  056B  301E               	movlw	30
  4406  056C  00C9               	movwf	___fladd@b+1
  4407  056D  30B8               	movlw	184
  4408  056E  00C8               	movwf	___fladd@b
  4409  056F  3043               	movlw	67
  4410  0570  00B1               	movwf	___fldiv@a+3
  4411  0571  30AA               	movlw	170
  4412  0572  00B0               	movwf	___fldiv@a+2
  4413  0573  3000               	movlw	0
  4414  0574  00AF               	movwf	___fldiv@a+1
  4415  0575  3000               	movlw	0
  4416  0576  00AE               	movwf	___fldiv@a
  4417  0577  1683               	bsf	3,5	;RP0=1, select bank1
  4418  0578  1303               	bcf	3,6	;RP1=0, select bank1
  4419  0579  0861               	movf	(readMPU@guardar^(0+128)+6),w
  4420  057A  1283               	bcf	3,5	;RP0=0, select bank0
  4421  057B  1303               	bcf	3,6	;RP1=0, select bank0
  4422  057C  00A0               	movwf	___xxtofl@val
  4423  057D  1683               	bsf	3,5	;RP0=1, select bank1
  4424  057E  1303               	bcf	3,6	;RP1=0, select bank1
  4425  057F  0862               	movf	((readMPU@guardar+1)^(0+128)+6),w
  4426  0580  1283               	bcf	3,5	;RP0=0, select bank0
  4427  0581  1303               	bcf	3,6	;RP1=0, select bank0
  4428  0582  00A1               	movwf	___xxtofl@val+1
  4429  0583  3000               	movlw	0
  4430  0584  1BA1               	btfsc	___xxtofl@val+1,7
  4431  0585  30FF               	movlw	255
  4432  0586  00A2               	movwf	___xxtofl@val+2
  4433  0587  00A3               	movwf	___xxtofl@val+3
  4434  0588  3001               	movlw	1
  4435  0589  160A  118A  25A8  120A  118A  	fcall	___xxtofl
  4436  058E  1283               	bcf	3,5	;RP0=0, select bank0
  4437  058F  1303               	bcf	3,6	;RP1=0, select bank0
  4438  0590  0823               	movf	?___xxtofl+3,w
  4439  0591  00B5               	movwf	___fldiv@b+3
  4440  0592  0822               	movf	?___xxtofl+2,w
  4441  0593  00B4               	movwf	___fldiv@b+2
  4442  0594  0821               	movf	?___xxtofl+1,w
  4443  0595  00B3               	movwf	___fldiv@b+1
  4444  0596  0820               	movf	?___xxtofl,w
  4445  0597  00B2               	movwf	___fldiv@b
  4446  0598  120A  158A  214F  120A  118A  	fcall	___fldiv
  4447  059D  1283               	bcf	3,5	;RP0=0, select bank0
  4448  059E  1303               	bcf	3,6	;RP1=0, select bank0
  4449  059F  0831               	movf	?___fldiv+3,w
  4450  05A0  00CF               	movwf	___fladd@a+3
  4451  05A1  0830               	movf	?___fldiv+2,w
  4452  05A2  00CE               	movwf	___fladd@a+2
  4453  05A3  082F               	movf	?___fldiv+1,w
  4454  05A4  00CD               	movwf	___fladd@a+1
  4455  05A5  082E               	movf	?___fldiv,w
  4456  05A6  00CC               	movwf	___fladd@a
  4457  05A7  120A  158A  2578  120A  118A  	fcall	___fladd
  4458  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  4459  05AD  1303               	bcf	3,6	;RP1=0, select bank1
  4460  05AE  086B               	movf	readMPU@datos^(0+128),w
  4461  05AF  3E0C               	addlw	12
  4462  05B0  0084               	movwf	4
  4463  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  4464  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  4465  05B3  0848               	movf	?___fladd,w
  4466  05B4  1383               	bcf	3,7	;select IRP bank0
  4467  05B5  0080               	movwf	0
  4468  05B6  0A84               	incf	4,f
  4469  05B7  0849               	movf	?___fladd+1,w
  4470  05B8  0080               	movwf	0
  4471  05B9  0A84               	incf	4,f
  4472  05BA  084A               	movf	?___fladd+2,w
  4473  05BB  0080               	movwf	0
  4474  05BC  0A84               	incf	4,f
  4475  05BD  084B               	movf	?___fladd+3,w
  4476  05BE  0080               	movwf	0
  4477  05BF                     l3427:
  4478                           
  4479                           ;MPU6050.c: 54:     datos[4] = ((float) guardar[4]) * 0.00763;
  4480  05BF  303B               	movlw	59
  4481  05C0  00B1               	movwf	___flmul@b+3
  4482  05C1  30FA               	movlw	250
  4483  05C2  00B0               	movwf	___flmul@b+2
  4484  05C3  3005               	movlw	5
  4485  05C4  00AF               	movwf	___flmul@b+1
  4486  05C5  3014               	movlw	20
  4487  05C6  00AE               	movwf	___flmul@b
  4488  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  4489  05C8  1303               	bcf	3,6	;RP1=0, select bank1
  4490  05C9  0863               	movf	(readMPU@guardar^(0+128)+8),w
  4491  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  4492  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  4493  05CC  00A0               	movwf	___xxtofl@val
  4494  05CD  1683               	bsf	3,5	;RP0=1, select bank1
  4495  05CE  1303               	bcf	3,6	;RP1=0, select bank1
  4496  05CF  0864               	movf	((readMPU@guardar+1)^(0+128)+8),w
  4497  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  4498  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  4499  05D2  00A1               	movwf	___xxtofl@val+1
  4500  05D3  3000               	movlw	0
  4501  05D4  1BA1               	btfsc	___xxtofl@val+1,7
  4502  05D5  30FF               	movlw	255
  4503  05D6  00A2               	movwf	___xxtofl@val+2
  4504  05D7  00A3               	movwf	___xxtofl@val+3
  4505  05D8  3001               	movlw	1
  4506  05D9  160A  118A  25A8  120A  118A  	fcall	___xxtofl
  4507  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  4508  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  4509  05E0  0823               	movf	?___xxtofl+3,w
  4510  05E1  00B5               	movwf	___flmul@a+3
  4511  05E2  0822               	movf	?___xxtofl+2,w
  4512  05E3  00B4               	movwf	___flmul@a+2
  4513  05E4  0821               	movf	?___xxtofl+1,w
  4514  05E5  00B3               	movwf	___flmul@a+1
  4515  05E6  0820               	movf	?___xxtofl,w
  4516  05E7  00B2               	movwf	___flmul@a
  4517  05E8  120A  118A  201F  120A  118A  	fcall	___flmul
  4518  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  4519  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  4520  05EF  086B               	movf	readMPU@datos^(0+128),w
  4521  05F0  3E10               	addlw	16
  4522  05F1  0084               	movwf	4
  4523  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  4524  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  4525  05F4  082E               	movf	?___flmul,w
  4526  05F5  1383               	bcf	3,7	;select IRP bank0
  4527  05F6  0080               	movwf	0
  4528  05F7  0A84               	incf	4,f
  4529  05F8  082F               	movf	?___flmul+1,w
  4530  05F9  0080               	movwf	0
  4531  05FA  0A84               	incf	4,f
  4532  05FB  0830               	movf	?___flmul+2,w
  4533  05FC  0080               	movwf	0
  4534  05FD  0A84               	incf	4,f
  4535  05FE  0831               	movf	?___flmul+3,w
  4536  05FF  0080               	movwf	0
  4537  0600                     l3429:
  4538                           
  4539                           ;MPU6050.c: 55:     datos[5] = ((float) guardar[5]) * 0.00763;
  4540  0600  303B               	movlw	59
  4541  0601  00B1               	movwf	___flmul@b+3
  4542  0602  30FA               	movlw	250
  4543  0603  00B0               	movwf	___flmul@b+2
  4544  0604  3005               	movlw	5
  4545  0605  00AF               	movwf	___flmul@b+1
  4546  0606  3014               	movlw	20
  4547  0607  00AE               	movwf	___flmul@b
  4548  0608  1683               	bsf	3,5	;RP0=1, select bank1
  4549  0609  1303               	bcf	3,6	;RP1=0, select bank1
  4550  060A  0865               	movf	(readMPU@guardar^(0+128)+10),w
  4551  060B  1283               	bcf	3,5	;RP0=0, select bank0
  4552  060C  1303               	bcf	3,6	;RP1=0, select bank0
  4553  060D  00A0               	movwf	___xxtofl@val
  4554  060E  1683               	bsf	3,5	;RP0=1, select bank1
  4555  060F  1303               	bcf	3,6	;RP1=0, select bank1
  4556  0610  0866               	movf	((readMPU@guardar+1)^(0+128)+10),w
  4557  0611  1283               	bcf	3,5	;RP0=0, select bank0
  4558  0612  1303               	bcf	3,6	;RP1=0, select bank0
  4559  0613  00A1               	movwf	___xxtofl@val+1
  4560  0614  3000               	movlw	0
  4561  0615  1BA1               	btfsc	___xxtofl@val+1,7
  4562  0616  30FF               	movlw	255
  4563  0617  00A2               	movwf	___xxtofl@val+2
  4564  0618  00A3               	movwf	___xxtofl@val+3
  4565  0619  3001               	movlw	1
  4566  061A  160A  118A  25A8  120A  118A  	fcall	___xxtofl
  4567  061F  1283               	bcf	3,5	;RP0=0, select bank0
  4568  0620  1303               	bcf	3,6	;RP1=0, select bank0
  4569  0621  0823               	movf	?___xxtofl+3,w
  4570  0622  00B5               	movwf	___flmul@a+3
  4571  0623  0822               	movf	?___xxtofl+2,w
  4572  0624  00B4               	movwf	___flmul@a+2
  4573  0625  0821               	movf	?___xxtofl+1,w
  4574  0626  00B3               	movwf	___flmul@a+1
  4575  0627  0820               	movf	?___xxtofl,w
  4576  0628  00B2               	movwf	___flmul@a
  4577  0629  120A  118A  201F  120A  118A  	fcall	___flmul
  4578  062E  1683               	bsf	3,5	;RP0=1, select bank1
  4579  062F  1303               	bcf	3,6	;RP1=0, select bank1
  4580  0630  086B               	movf	readMPU@datos^(0+128),w
  4581  0631  3E14               	addlw	20
  4582  0632  0084               	movwf	4
  4583  0633  1283               	bcf	3,5	;RP0=0, select bank0
  4584  0634  1303               	bcf	3,6	;RP1=0, select bank0
  4585  0635  082E               	movf	?___flmul,w
  4586  0636  1383               	bcf	3,7	;select IRP bank0
  4587  0637  0080               	movwf	0
  4588  0638  0A84               	incf	4,f
  4589  0639  082F               	movf	?___flmul+1,w
  4590  063A  0080               	movwf	0
  4591  063B  0A84               	incf	4,f
  4592  063C  0830               	movf	?___flmul+2,w
  4593  063D  0080               	movwf	0
  4594  063E  0A84               	incf	4,f
  4595  063F  0831               	movf	?___flmul+3,w
  4596  0640  0080               	movwf	0
  4597  0641                     l3431:
  4598                           
  4599                           ;MPU6050.c: 56:     datos[6] = ((float) guardar[6]) * 0.00763;
  4600  0641  303B               	movlw	59
  4601  0642  00B1               	movwf	___flmul@b+3
  4602  0643  30FA               	movlw	250
  4603  0644  00B0               	movwf	___flmul@b+2
  4604  0645  3005               	movlw	5
  4605  0646  00AF               	movwf	___flmul@b+1
  4606  0647  3014               	movlw	20
  4607  0648  00AE               	movwf	___flmul@b
  4608  0649  1683               	bsf	3,5	;RP0=1, select bank1
  4609  064A  1303               	bcf	3,6	;RP1=0, select bank1
  4610  064B  0867               	movf	(readMPU@guardar^(0+128)+12),w
  4611  064C  1283               	bcf	3,5	;RP0=0, select bank0
  4612  064D  1303               	bcf	3,6	;RP1=0, select bank0
  4613  064E  00A0               	movwf	___xxtofl@val
  4614  064F  1683               	bsf	3,5	;RP0=1, select bank1
  4615  0650  1303               	bcf	3,6	;RP1=0, select bank1
  4616  0651  0868               	movf	((readMPU@guardar+1)^(0+128)+12),w
  4617  0652  1283               	bcf	3,5	;RP0=0, select bank0
  4618  0653  1303               	bcf	3,6	;RP1=0, select bank0
  4619  0654  00A1               	movwf	___xxtofl@val+1
  4620  0655  3000               	movlw	0
  4621  0656  1BA1               	btfsc	___xxtofl@val+1,7
  4622  0657  30FF               	movlw	255
  4623  0658  00A2               	movwf	___xxtofl@val+2
  4624  0659  00A3               	movwf	___xxtofl@val+3
  4625  065A  3001               	movlw	1
  4626  065B  160A  118A  25A8  120A  118A  	fcall	___xxtofl
  4627  0660  1283               	bcf	3,5	;RP0=0, select bank0
  4628  0661  1303               	bcf	3,6	;RP1=0, select bank0
  4629  0662  0823               	movf	?___xxtofl+3,w
  4630  0663  00B5               	movwf	___flmul@a+3
  4631  0664  0822               	movf	?___xxtofl+2,w
  4632  0665  00B4               	movwf	___flmul@a+2
  4633  0666  0821               	movf	?___xxtofl+1,w
  4634  0667  00B3               	movwf	___flmul@a+1
  4635  0668  0820               	movf	?___xxtofl,w
  4636  0669  00B2               	movwf	___flmul@a
  4637  066A  120A  118A  201F  120A  118A  	fcall	___flmul
  4638  066F  1683               	bsf	3,5	;RP0=1, select bank1
  4639  0670  1303               	bcf	3,6	;RP1=0, select bank1
  4640  0671  086B               	movf	readMPU@datos^(0+128),w
  4641  0672  3E18               	addlw	24
  4642  0673  0084               	movwf	4
  4643  0674  1283               	bcf	3,5	;RP0=0, select bank0
  4644  0675  1303               	bcf	3,6	;RP1=0, select bank0
  4645  0676  082E               	movf	?___flmul,w
  4646  0677  1383               	bcf	3,7	;select IRP bank0
  4647  0678  0080               	movwf	0
  4648  0679  0A84               	incf	4,f
  4649  067A  082F               	movf	?___flmul+1,w
  4650  067B  0080               	movwf	0
  4651  067C  0A84               	incf	4,f
  4652  067D  0830               	movf	?___flmul+2,w
  4653  067E  0080               	movwf	0
  4654  067F  0A84               	incf	4,f
  4655  0680  0831               	movf	?___flmul+3,w
  4656  0681  0080               	movwf	0
  4657  0682                     l219:
  4658  0682  0008               	return
  4659  0683                     __end_of_readMPU:
  4660                           
  4661                           	psect	text14
  4662  15A8                     __ptext14:	
  4663 ;; *************** function ___xxtofl *****************
  4664 ;; Defined at:
  4665 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  sign            1    wreg     unsigned char 
  4668 ;;  val             4    0[BANK0 ] long 
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;  sign            1    8[BANK0 ] unsigned char 
  4671 ;;  arg             4   10[BANK0 ] unsigned long 
  4672 ;;  exp             1    9[BANK0 ] unsigned char 
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  4    0[BANK0 ] unsigned char 
  4675 ;; Registers used:
  4676 ;;		wreg, status,2, status,0
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4682 ;;      Params:         0       4       0       0       0
  4683 ;;      Locals:         0       6       0       0       0
  4684 ;;      Temps:          0       4       0       0       0
  4685 ;;      Totals:         0      14       0       0       0
  4686 ;;Total ram usage:       14 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; Hardware stack levels required when called:    1
  4689 ;; This function calls:
  4690 ;;		Nothing
  4691 ;; This function is called by:
  4692 ;;		_readMPU
  4693 ;;		_ftoa
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           
  4698                           ;psect for function ___xxtofl
  4699  15A8                     ___xxtofl:
  4700                           
  4701                           ;incstack = 0
  4702                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4703                           ;___xxtofl@sign stored from wreg
  4704  15A8  1283               	bcf	3,5	;RP0=0, select bank0
  4705  15A9  1303               	bcf	3,6	;RP1=0, select bank0
  4706  15AA  00A8               	movwf	___xxtofl@sign
  4707  15AB                     l2477:
  4708  15AB  0828               	movf	___xxtofl@sign,w
  4709  15AC  1903               	btfsc	3,2
  4710  15AD  2DAF               	goto	u3421
  4711  15AE  2DB0               	goto	u3420
  4712  15AF                     u3421:
  4713  15AF  2DC4               	goto	l2483
  4714  15B0                     u3420:
  4715  15B0                     l2479:
  4716  15B0  1FA3               	btfss	___xxtofl@val+3,7
  4717  15B1  2DB3               	goto	u3431
  4718  15B2  2DB4               	goto	u3430
  4719  15B3                     u3431:
  4720  15B3  2DC4               	goto	l2483
  4721  15B4                     u3430:
  4722  15B4                     l2481:
  4723  15B4  0920               	comf	___xxtofl@val,w
  4724  15B5  00AA               	movwf	___xxtofl@arg
  4725  15B6  0921               	comf	___xxtofl@val+1,w
  4726  15B7  00AB               	movwf	___xxtofl@arg+1
  4727  15B8  0922               	comf	___xxtofl@val+2,w
  4728  15B9  00AC               	movwf	___xxtofl@arg+2
  4729  15BA  0923               	comf	___xxtofl@val+3,w
  4730  15BB  00AD               	movwf	___xxtofl@arg+3
  4731  15BC  0AAA               	incf	___xxtofl@arg,f
  4732  15BD  1903               	skipnz
  4733  15BE  0AAB               	incf	___xxtofl@arg+1,f
  4734  15BF  1903               	skipnz
  4735  15C0  0AAC               	incf	___xxtofl@arg+2,f
  4736  15C1  1903               	skipnz
  4737  15C2  0AAD               	incf	___xxtofl@arg+3,f
  4738  15C3  2DCC               	goto	l741
  4739  15C4                     l2483:
  4740  15C4  0823               	movf	___xxtofl@val+3,w
  4741  15C5  00AD               	movwf	___xxtofl@arg+3
  4742  15C6  0822               	movf	___xxtofl@val+2,w
  4743  15C7  00AC               	movwf	___xxtofl@arg+2
  4744  15C8  0821               	movf	___xxtofl@val+1,w
  4745  15C9  00AB               	movwf	___xxtofl@arg+1
  4746  15CA  0820               	movf	___xxtofl@val,w
  4747  15CB  00AA               	movwf	___xxtofl@arg
  4748  15CC                     l741:
  4749  15CC  0823               	movf	___xxtofl@val+3,w
  4750  15CD  0422               	iorwf	___xxtofl@val+2,w
  4751  15CE  0421               	iorwf	___xxtofl@val+1,w
  4752  15CF  0420               	iorwf	___xxtofl@val,w
  4753  15D0  1D03               	skipz
  4754  15D1  2DD3               	goto	u3441
  4755  15D2  2DD4               	goto	u3440
  4756  15D3                     u3441:
  4757  15D3  2DDD               	goto	l2489
  4758  15D4                     u3440:
  4759  15D4                     l2485:
  4760  15D4  3000               	movlw	0
  4761  15D5  00A3               	movwf	?___xxtofl+3
  4762  15D6  3000               	movlw	0
  4763  15D7  00A2               	movwf	?___xxtofl+2
  4764  15D8  3000               	movlw	0
  4765  15D9  00A1               	movwf	?___xxtofl+1
  4766  15DA  3000               	movlw	0
  4767  15DB  00A0               	movwf	?___xxtofl
  4768  15DC  2E63               	goto	l743
  4769  15DD                     l2489:
  4770  15DD  3096               	movlw	150
  4771  15DE  00A4               	movwf	??___xxtofl
  4772  15DF  0824               	movf	??___xxtofl,w
  4773  15E0  00A9               	movwf	___xxtofl@exp
  4774  15E1  2DEF               	goto	l2493
  4775  15E2                     l2491:
  4776  15E2  3001               	movlw	1
  4777  15E3  00A4               	movwf	??___xxtofl
  4778  15E4  0824               	movf	??___xxtofl,w
  4779  15E5  07A9               	addwf	___xxtofl@exp,f
  4780  15E6  3001               	movlw	1
  4781  15E7                     u3455:
  4782  15E7  1003               	clrc
  4783  15E8  0CAD               	rrf	___xxtofl@arg+3,f
  4784  15E9  0CAC               	rrf	___xxtofl@arg+2,f
  4785  15EA  0CAB               	rrf	___xxtofl@arg+1,f
  4786  15EB  0CAA               	rrf	___xxtofl@arg,f
  4787  15EC  3EFF               	addlw	-1
  4788  15ED  1D03               	skipz
  4789  15EE  2DE7               	goto	u3455
  4790  15EF                     l2493:
  4791  15EF  30FE               	movlw	254
  4792  15F0  052D               	andwf	___xxtofl@arg+3,w
  4793  15F1  1D03               	btfss	3,2
  4794  15F2  2DF4               	goto	u3461
  4795  15F3  2DF5               	goto	u3460
  4796  15F4                     u3461:
  4797  15F4  2DE2               	goto	l2491
  4798  15F5                     u3460:
  4799  15F5  2E11               	goto	l747
  4800  15F6                     l2495:
  4801  15F6  3001               	movlw	1
  4802  15F7  00A4               	movwf	??___xxtofl
  4803  15F8  0824               	movf	??___xxtofl,w
  4804  15F9  07A9               	addwf	___xxtofl@exp,f
  4805  15FA                     l2497:
  4806  15FA  3001               	movlw	1
  4807  15FB  07AA               	addwf	___xxtofl@arg,f
  4808  15FC  3000               	movlw	0
  4809  15FD  1803               	skipnc
  4810  15FE  3001               	movlw	1
  4811  15FF  07AB               	addwf	___xxtofl@arg+1,f
  4812  1600  3000               	movlw	0
  4813  1601  1803               	skipnc
  4814  1602  3001               	movlw	1
  4815  1603  07AC               	addwf	___xxtofl@arg+2,f
  4816  1604  3000               	movlw	0
  4817  1605  1803               	skipnc
  4818  1606  3001               	movlw	1
  4819  1607  07AD               	addwf	___xxtofl@arg+3,f
  4820  1608                     l2499:
  4821  1608  3001               	movlw	1
  4822  1609                     u3475:
  4823  1609  1003               	clrc
  4824  160A  0CAD               	rrf	___xxtofl@arg+3,f
  4825  160B  0CAC               	rrf	___xxtofl@arg+2,f
  4826  160C  0CAB               	rrf	___xxtofl@arg+1,f
  4827  160D  0CAA               	rrf	___xxtofl@arg,f
  4828  160E  3EFF               	addlw	-1
  4829  160F  1D03               	skipz
  4830  1610  2E09               	goto	u3475
  4831  1611                     l747:
  4832  1611  30FF               	movlw	255
  4833  1612  052D               	andwf	___xxtofl@arg+3,w
  4834  1613  1D03               	btfss	3,2
  4835  1614  2E16               	goto	u3481
  4836  1615  2E17               	goto	u3480
  4837  1616                     u3481:
  4838  1616  2DF6               	goto	l2495
  4839  1617                     u3480:
  4840  1617  2E23               	goto	l2503
  4841  1618                     l2501:
  4842  1618  3001               	movlw	1
  4843  1619  02A9               	subwf	___xxtofl@exp,f
  4844  161A  3001               	movlw	1
  4845  161B  00A4               	movwf	??___xxtofl
  4846  161C                     u3495:
  4847  161C  1003               	clrc
  4848  161D  0DAA               	rlf	___xxtofl@arg,f
  4849  161E  0DAB               	rlf	___xxtofl@arg+1,f
  4850  161F  0DAC               	rlf	___xxtofl@arg+2,f
  4851  1620  0DAD               	rlf	___xxtofl@arg+3,f
  4852  1621  0BA4               	decfsz	??___xxtofl,f
  4853  1622  2E1C               	goto	u3495
  4854  1623                     l2503:
  4855  1623  1BAC               	btfsc	___xxtofl@arg+2,7
  4856  1624  2E26               	goto	u3501
  4857  1625  2E27               	goto	u3500
  4858  1626                     u3501:
  4859  1626  2E2D               	goto	l754
  4860  1627                     u3500:
  4861  1627                     l2505:
  4862  1627  3002               	movlw	2
  4863  1628  0229               	subwf	___xxtofl@exp,w
  4864  1629  1803               	skipnc
  4865  162A  2E2C               	goto	u3511
  4866  162B  2E2D               	goto	u3510
  4867  162C                     u3511:
  4868  162C  2E18               	goto	l2501
  4869  162D                     u3510:
  4870  162D                     l754:
  4871  162D  1829               	btfsc	___xxtofl@exp,0
  4872  162E  2E30               	goto	u3521
  4873  162F  2E31               	goto	u3520
  4874  1630                     u3521:
  4875  1630  2E39               	goto	l755
  4876  1631                     u3520:
  4877  1631                     l2507:
  4878  1631  30FF               	movlw	255
  4879  1632  05AA               	andwf	___xxtofl@arg,f
  4880  1633  30FF               	movlw	255
  4881  1634  05AB               	andwf	___xxtofl@arg+1,f
  4882  1635  307F               	movlw	127
  4883  1636  05AC               	andwf	___xxtofl@arg+2,f
  4884  1637  30FF               	movlw	255
  4885  1638  05AD               	andwf	___xxtofl@arg+3,f
  4886  1639                     l755:
  4887  1639  1003               	clrc
  4888  163A  0CA9               	rrf	___xxtofl@exp,f
  4889  163B                     l2509:
  4890  163B  0829               	movf	___xxtofl@exp,w
  4891  163C  00A4               	movwf	??___xxtofl
  4892  163D  01A5               	clrf	??___xxtofl+1
  4893  163E  01A6               	clrf	??___xxtofl+2
  4894  163F  01A7               	clrf	??___xxtofl+3
  4895  1640  3018               	movlw	24
  4896  1641                     u3535:
  4897  1641  1003               	clrc
  4898  1642  0DA4               	rlf	??___xxtofl,f
  4899  1643  0DA5               	rlf	??___xxtofl+1,f
  4900  1644  0DA6               	rlf	??___xxtofl+2,f
  4901  1645  0DA7               	rlf	??___xxtofl+3,f
  4902  1646                     u3530:
  4903  1646  3EFF               	addlw	-1
  4904  1647  1D03               	skipz
  4905  1648  2E41               	goto	u3535
  4906  1649  0824               	movf	??___xxtofl,w
  4907  164A  04AA               	iorwf	___xxtofl@arg,f
  4908  164B  0825               	movf	??___xxtofl+1,w
  4909  164C  04AB               	iorwf	___xxtofl@arg+1,f
  4910  164D  0826               	movf	??___xxtofl+2,w
  4911  164E  04AC               	iorwf	___xxtofl@arg+2,f
  4912  164F  0827               	movf	??___xxtofl+3,w
  4913  1650  04AD               	iorwf	___xxtofl@arg+3,f
  4914  1651                     l2511:
  4915  1651  0828               	movf	___xxtofl@sign,w
  4916  1652  1903               	btfsc	3,2
  4917  1653  2E55               	goto	u3541
  4918  1654  2E56               	goto	u3540
  4919  1655                     u3541:
  4920  1655  2E5B               	goto	l2517
  4921  1656                     u3540:
  4922  1656                     l2513:
  4923  1656  1FA3               	btfss	___xxtofl@val+3,7
  4924  1657  2E59               	goto	u3551
  4925  1658  2E5A               	goto	u3550
  4926  1659                     u3551:
  4927  1659  2E5B               	goto	l2517
  4928  165A                     u3550:
  4929  165A                     l2515:
  4930  165A  17AD               	bsf	___xxtofl@arg+3,7
  4931  165B                     l2517:
  4932  165B  082D               	movf	___xxtofl@arg+3,w
  4933  165C  00A3               	movwf	?___xxtofl+3
  4934  165D  082C               	movf	___xxtofl@arg+2,w
  4935  165E  00A2               	movwf	?___xxtofl+2
  4936  165F  082B               	movf	___xxtofl@arg+1,w
  4937  1660  00A1               	movwf	?___xxtofl+1
  4938  1661  082A               	movf	___xxtofl@arg,w
  4939  1662  00A0               	movwf	?___xxtofl
  4940  1663                     l743:
  4941  1663  0008               	return
  4942  1664                     __end_of___xxtofl:
  4943                           
  4944                           	psect	text15
  4945  001F                     __ptext15:	
  4946 ;; *************** function ___flmul *****************
  4947 ;; Defined at:
  4948 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  b               4   14[BANK0 ] unsigned char 
  4951 ;;  a               4   18[BANK0 ] unsigned char 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  prod            4   34[BANK0 ] struct .
  4954 ;;  grs             4   29[BANK0 ] unsigned long 
  4955 ;;  temp            2   38[BANK0 ] struct .
  4956 ;;  bexp            1   33[BANK0 ] unsigned char 
  4957 ;;  aexp            1   28[BANK0 ] unsigned char 
  4958 ;;  sign            1   27[BANK0 ] unsigned char 
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  4   14[BANK0 ] unsigned char 
  4961 ;; Registers used:
  4962 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4968 ;;      Params:         0       8       0       0       0
  4969 ;;      Locals:         0      13       0       0       0
  4970 ;;      Temps:          0       5       0       0       0
  4971 ;;      Totals:         0      26       0       0       0
  4972 ;;Total ram usage:       26 bytes
  4973 ;; Hardware stack levels used:    1
  4974 ;; Hardware stack levels required when called:    2
  4975 ;; This function calls:
  4976 ;;		__Umul8_16
  4977 ;; This function is called by:
  4978 ;;		_readMPU
  4979 ;;		_ftoa
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           
  4984                           ;psect for function ___flmul
  4985  001F                     ___flmul:
  4986  001F                     l3079:	
  4987                           ;incstack = 0
  4988                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4989                           
  4990  001F  1283               	bcf	3,5	;RP0=0, select bank0
  4991  0020  1303               	bcf	3,6	;RP1=0, select bank0
  4992  0021  0831               	movf	___flmul@b+3,w
  4993  0022  3980               	andlw	128
  4994  0023  00B6               	movwf	??___flmul
  4995  0024  0836               	movf	??___flmul,w
  4996  0025  00BB               	movwf	___flmul@sign
  4997  0026                     l3081:
  4998  0026  0831               	movf	___flmul@b+3,w
  4999  0027  00B6               	movwf	??___flmul
  5000  0028  0736               	addwf	??___flmul,w
  5001  0029  00B7               	movwf	??___flmul+1
  5002  002A  0837               	movf	??___flmul+1,w
  5003  002B  00C1               	movwf	___flmul@bexp
  5004  002C                     l3083:
  5005  002C  1FB0               	btfss	___flmul@b+2,7
  5006  002D  282F               	goto	u4371
  5007  002E  2830               	goto	u4370
  5008  002F                     u4371:
  5009  002F  2831               	goto	l3087
  5010  0030                     u4370:
  5011  0030                     l3085:
  5012  0030  1441               	bsf	___flmul@bexp,0
  5013  0031                     l3087:
  5014  0031  0841               	movf	___flmul@bexp,w
  5015  0032  1903               	btfsc	3,2
  5016  0033  2835               	goto	u4381
  5017  0034  2836               	goto	u4380
  5018  0035                     u4381:
  5019  0035  2845               	goto	l3095
  5020  0036                     u4380:
  5021  0036                     l3089:
  5022  0036  0A41               	incf	___flmul@bexp,w
  5023  0037  1D03               	btfss	3,2
  5024  0038  283A               	goto	u4391
  5025  0039  283B               	goto	u4390
  5026  003A                     u4391:
  5027  003A  2843               	goto	l3093
  5028  003B                     u4390:
  5029  003B                     l3091:
  5030  003B  3000               	movlw	0
  5031  003C  00B1               	movwf	___flmul@b+3
  5032  003D  3000               	movlw	0
  5033  003E  00B0               	movwf	___flmul@b+2
  5034  003F  3000               	movlw	0
  5035  0040  00AF               	movwf	___flmul@b+1
  5036  0041  3000               	movlw	0
  5037  0042  00AE               	movwf	___flmul@b
  5038  0043                     l3093:
  5039  0043  17B0               	bsf	___flmul@b+2,7
  5040  0044  284D               	goto	l3097
  5041  0045                     l3095:
  5042  0045  3000               	movlw	0
  5043  0046  00B1               	movwf	___flmul@b+3
  5044  0047  3000               	movlw	0
  5045  0048  00B0               	movwf	___flmul@b+2
  5046  0049  3000               	movlw	0
  5047  004A  00AF               	movwf	___flmul@b+1
  5048  004B  3000               	movlw	0
  5049  004C  00AE               	movwf	___flmul@b
  5050  004D                     l3097:
  5051  004D  0835               	movf	___flmul@a+3,w
  5052  004E  3980               	andlw	128
  5053  004F  00B6               	movwf	??___flmul
  5054  0050  0836               	movf	??___flmul,w
  5055  0051  06BB               	xorwf	___flmul@sign,f
  5056  0052                     l3099:
  5057  0052  0835               	movf	___flmul@a+3,w
  5058  0053  00B6               	movwf	??___flmul
  5059  0054  0736               	addwf	??___flmul,w
  5060  0055  00B7               	movwf	??___flmul+1
  5061  0056  0837               	movf	??___flmul+1,w
  5062  0057  00BC               	movwf	___flmul@aexp
  5063  0058                     l3101:
  5064  0058  1FB4               	btfss	___flmul@a+2,7
  5065  0059  285B               	goto	u4401
  5066  005A  285C               	goto	u4400
  5067  005B                     u4401:
  5068  005B  285D               	goto	l3105
  5069  005C                     u4400:
  5070  005C                     l3103:
  5071  005C  143C               	bsf	___flmul@aexp,0
  5072  005D                     l3105:
  5073  005D  083C               	movf	___flmul@aexp,w
  5074  005E  1903               	btfsc	3,2
  5075  005F  2861               	goto	u4411
  5076  0060  2862               	goto	u4410
  5077  0061                     u4411:
  5078  0061  2871               	goto	l3113
  5079  0062                     u4410:
  5080  0062                     l3107:
  5081  0062  0A3C               	incf	___flmul@aexp,w
  5082  0063  1D03               	btfss	3,2
  5083  0064  2866               	goto	u4421
  5084  0065  2867               	goto	u4420
  5085  0066                     u4421:
  5086  0066  286F               	goto	l3111
  5087  0067                     u4420:
  5088  0067                     l3109:
  5089  0067  3000               	movlw	0
  5090  0068  00B5               	movwf	___flmul@a+3
  5091  0069  3000               	movlw	0
  5092  006A  00B4               	movwf	___flmul@a+2
  5093  006B  3000               	movlw	0
  5094  006C  00B3               	movwf	___flmul@a+1
  5095  006D  3000               	movlw	0
  5096  006E  00B2               	movwf	___flmul@a
  5097  006F                     l3111:
  5098  006F  17B4               	bsf	___flmul@a+2,7
  5099  0070  2879               	goto	l3115
  5100  0071                     l3113:
  5101  0071  3000               	movlw	0
  5102  0072  00B5               	movwf	___flmul@a+3
  5103  0073  3000               	movlw	0
  5104  0074  00B4               	movwf	___flmul@a+2
  5105  0075  3000               	movlw	0
  5106  0076  00B3               	movwf	___flmul@a+1
  5107  0077  3000               	movlw	0
  5108  0078  00B2               	movwf	___flmul@a
  5109  0079                     l3115:
  5110  0079  083C               	movf	___flmul@aexp,w
  5111  007A  1903               	btfsc	3,2
  5112  007B  287D               	goto	u4431
  5113  007C  287E               	goto	u4430
  5114  007D                     u4431:
  5115  007D  2883               	goto	l3119
  5116  007E                     u4430:
  5117  007E                     l3117:
  5118  007E  0841               	movf	___flmul@bexp,w
  5119  007F  1D03               	btfss	3,2
  5120  0080  2882               	goto	u4441
  5121  0081  2883               	goto	u4440
  5122  0082                     u4441:
  5123  0082  288C               	goto	l3123
  5124  0083                     u4440:
  5125  0083                     l3119:
  5126  0083  3000               	movlw	0
  5127  0084  00B1               	movwf	?___flmul+3
  5128  0085  3000               	movlw	0
  5129  0086  00B0               	movwf	?___flmul+2
  5130  0087  3000               	movlw	0
  5131  0088  00AF               	movwf	?___flmul+1
  5132  0089  3000               	movlw	0
  5133  008A  00AE               	movwf	?___flmul
  5134  008B  2B7F               	goto	l697
  5135  008C                     l3123:
  5136  008C  082E               	movf	___flmul@b,w
  5137  008D  00B6               	movwf	??___flmul
  5138  008E  0836               	movf	??___flmul,w
  5139  008F  00A0               	movwf	__Umul8_16@multiplicand
  5140  0090  0834               	movf	___flmul@a+2,w
  5141  0091  160A  118A  22E8  120A  118A  	fcall	__Umul8_16
  5142  0096  1283               	bcf	3,5	;RP0=0, select bank0
  5143  0097  1303               	bcf	3,6	;RP1=0, select bank0
  5144  0098  0821               	movf	?__Umul8_16+1,w
  5145  0099  00C7               	movwf	___flmul@temp+1
  5146  009A  0820               	movf	?__Umul8_16,w
  5147  009B  00C6               	movwf	___flmul@temp
  5148  009C                     l3125:
  5149  009C  0846               	movf	___flmul@temp,w
  5150  009D  00B6               	movwf	??___flmul
  5151  009E  01B7               	clrf	??___flmul+1
  5152  009F  01B8               	clrf	??___flmul+2
  5153  00A0  01B9               	clrf	??___flmul+3
  5154  00A1  0839               	movf	??___flmul+3,w
  5155  00A2  00C0               	movwf	___flmul@grs+3
  5156  00A3  0838               	movf	??___flmul+2,w
  5157  00A4  00BF               	movwf	___flmul@grs+2
  5158  00A5  0837               	movf	??___flmul+1,w
  5159  00A6  00BE               	movwf	___flmul@grs+1
  5160  00A7  0836               	movf	??___flmul,w
  5161  00A8  00BD               	movwf	___flmul@grs
  5162  00A9                     l3127:
  5163  00A9  0847               	movf	___flmul@temp+1,w
  5164  00AA  00B6               	movwf	??___flmul
  5165  00AB  01B7               	clrf	??___flmul+1
  5166  00AC  01B8               	clrf	??___flmul+2
  5167  00AD  01B9               	clrf	??___flmul+3
  5168  00AE  0839               	movf	??___flmul+3,w
  5169  00AF  00C5               	movwf	___flmul@prod+3
  5170  00B0  0838               	movf	??___flmul+2,w
  5171  00B1  00C4               	movwf	___flmul@prod+2
  5172  00B2  0837               	movf	??___flmul+1,w
  5173  00B3  00C3               	movwf	___flmul@prod+1
  5174  00B4  0836               	movf	??___flmul,w
  5175  00B5  00C2               	movwf	___flmul@prod
  5176  00B6  082F               	movf	___flmul@b+1,w
  5177  00B7  00B6               	movwf	??___flmul
  5178  00B8  0836               	movf	??___flmul,w
  5179  00B9  00A0               	movwf	__Umul8_16@multiplicand
  5180  00BA  0833               	movf	___flmul@a+1,w
  5181  00BB  160A  118A  22E8  120A  118A  	fcall	__Umul8_16
  5182  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  5183  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  5184  00C2  0821               	movf	?__Umul8_16+1,w
  5185  00C3  00C7               	movwf	___flmul@temp+1
  5186  00C4  0820               	movf	?__Umul8_16,w
  5187  00C5  00C6               	movwf	___flmul@temp
  5188  00C6                     l3129:
  5189  00C6  0846               	movf	___flmul@temp,w
  5190  00C7  00B6               	movwf	??___flmul
  5191  00C8  01B7               	clrf	??___flmul+1
  5192  00C9  01B8               	clrf	??___flmul+2
  5193  00CA  01B9               	clrf	??___flmul+3
  5194  00CB  0836               	movf	??___flmul,w
  5195  00CC  07BD               	addwf	___flmul@grs,f
  5196  00CD  0837               	movf	??___flmul+1,w
  5197  00CE  1103               	clrz
  5198  00CF  1803               	skipnc
  5199  00D0  3E01               	addlw	1
  5200  00D1  1903               	skipnz
  5201  00D2  28D4               	goto	u4451
  5202  00D3  07BE               	addwf	___flmul@grs+1,f
  5203  00D4                     u4451:
  5204  00D4  0838               	movf	??___flmul+2,w
  5205  00D5  1103               	clrz
  5206  00D6  1803               	skipnc
  5207  00D7  3E01               	addlw	1
  5208  00D8  1903               	skipnz
  5209  00D9  28DB               	goto	u4452
  5210  00DA  07BF               	addwf	___flmul@grs+2,f
  5211  00DB                     u4452:
  5212  00DB  0839               	movf	??___flmul+3,w
  5213  00DC  1103               	clrz
  5214  00DD  1803               	skipnc
  5215  00DE  3E01               	addlw	1
  5216  00DF  1903               	skipnz
  5217  00E0  28E2               	goto	u4453
  5218  00E1  07C0               	addwf	___flmul@grs+3,f
  5219  00E2                     u4453:
  5220  00E2                     l3131:
  5221  00E2  0847               	movf	___flmul@temp+1,w
  5222  00E3  00B6               	movwf	??___flmul
  5223  00E4  01B7               	clrf	??___flmul+1
  5224  00E5  01B8               	clrf	??___flmul+2
  5225  00E6  01B9               	clrf	??___flmul+3
  5226  00E7  0836               	movf	??___flmul,w
  5227  00E8  07C2               	addwf	___flmul@prod,f
  5228  00E9  0837               	movf	??___flmul+1,w
  5229  00EA  1103               	clrz
  5230  00EB  1803               	skipnc
  5231  00EC  3E01               	addlw	1
  5232  00ED  1903               	skipnz
  5233  00EE  28F0               	goto	u4461
  5234  00EF  07C3               	addwf	___flmul@prod+1,f
  5235  00F0                     u4461:
  5236  00F0  0838               	movf	??___flmul+2,w
  5237  00F1  1103               	clrz
  5238  00F2  1803               	skipnc
  5239  00F3  3E01               	addlw	1
  5240  00F4  1903               	skipnz
  5241  00F5  28F7               	goto	u4462
  5242  00F6  07C4               	addwf	___flmul@prod+2,f
  5243  00F7                     u4462:
  5244  00F7  0839               	movf	??___flmul+3,w
  5245  00F8  1103               	clrz
  5246  00F9  1803               	skipnc
  5247  00FA  3E01               	addlw	1
  5248  00FB  1903               	skipnz
  5249  00FC  28FE               	goto	u4463
  5250  00FD  07C5               	addwf	___flmul@prod+3,f
  5251  00FE                     u4463:
  5252  00FE  0830               	movf	___flmul@b+2,w
  5253  00FF  00B6               	movwf	??___flmul
  5254  0100  0836               	movf	??___flmul,w
  5255  0101  00A0               	movwf	__Umul8_16@multiplicand
  5256  0102  0832               	movf	___flmul@a,w
  5257  0103  160A  118A  22E8  120A  118A  	fcall	__Umul8_16
  5258  0108  1283               	bcf	3,5	;RP0=0, select bank0
  5259  0109  1303               	bcf	3,6	;RP1=0, select bank0
  5260  010A  0821               	movf	?__Umul8_16+1,w
  5261  010B  00C7               	movwf	___flmul@temp+1
  5262  010C  0820               	movf	?__Umul8_16,w
  5263  010D  00C6               	movwf	___flmul@temp
  5264  010E                     l3133:
  5265  010E  0846               	movf	___flmul@temp,w
  5266  010F  00B6               	movwf	??___flmul
  5267  0110  01B7               	clrf	??___flmul+1
  5268  0111  01B8               	clrf	??___flmul+2
  5269  0112  01B9               	clrf	??___flmul+3
  5270  0113  0836               	movf	??___flmul,w
  5271  0114  07BD               	addwf	___flmul@grs,f
  5272  0115  0837               	movf	??___flmul+1,w
  5273  0116  1103               	clrz
  5274  0117  1803               	skipnc
  5275  0118  3E01               	addlw	1
  5276  0119  1903               	skipnz
  5277  011A  291C               	goto	u4471
  5278  011B  07BE               	addwf	___flmul@grs+1,f
  5279  011C                     u4471:
  5280  011C  0838               	movf	??___flmul+2,w
  5281  011D  1103               	clrz
  5282  011E  1803               	skipnc
  5283  011F  3E01               	addlw	1
  5284  0120  1903               	skipnz
  5285  0121  2923               	goto	u4472
  5286  0122  07BF               	addwf	___flmul@grs+2,f
  5287  0123                     u4472:
  5288  0123  0839               	movf	??___flmul+3,w
  5289  0124  1103               	clrz
  5290  0125  1803               	skipnc
  5291  0126  3E01               	addlw	1
  5292  0127  1903               	skipnz
  5293  0128  292A               	goto	u4473
  5294  0129  07C0               	addwf	___flmul@grs+3,f
  5295  012A                     u4473:
  5296  012A                     l3135:
  5297  012A  0847               	movf	___flmul@temp+1,w
  5298  012B  00B6               	movwf	??___flmul
  5299  012C  01B7               	clrf	??___flmul+1
  5300  012D  01B8               	clrf	??___flmul+2
  5301  012E  01B9               	clrf	??___flmul+3
  5302  012F  0836               	movf	??___flmul,w
  5303  0130  07C2               	addwf	___flmul@prod,f
  5304  0131  0837               	movf	??___flmul+1,w
  5305  0132  1103               	clrz
  5306  0133  1803               	skipnc
  5307  0134  3E01               	addlw	1
  5308  0135  1903               	skipnz
  5309  0136  2938               	goto	u4481
  5310  0137  07C3               	addwf	___flmul@prod+1,f
  5311  0138                     u4481:
  5312  0138  0838               	movf	??___flmul+2,w
  5313  0139  1103               	clrz
  5314  013A  1803               	skipnc
  5315  013B  3E01               	addlw	1
  5316  013C  1903               	skipnz
  5317  013D  293F               	goto	u4482
  5318  013E  07C4               	addwf	___flmul@prod+2,f
  5319  013F                     u4482:
  5320  013F  0839               	movf	??___flmul+3,w
  5321  0140  1103               	clrz
  5322  0141  1803               	skipnc
  5323  0142  3E01               	addlw	1
  5324  0143  1903               	skipnz
  5325  0144  2946               	goto	u4483
  5326  0145  07C5               	addwf	___flmul@prod+3,f
  5327  0146                     u4483:
  5328  0146                     l3137:
  5329  0146  3008               	movlw	8
  5330  0147  00B6               	movwf	??___flmul
  5331  0148                     u4495:
  5332  0148  1003               	clrc
  5333  0149  0DBD               	rlf	___flmul@grs,f
  5334  014A  0DBE               	rlf	___flmul@grs+1,f
  5335  014B  0DBF               	rlf	___flmul@grs+2,f
  5336  014C  0DC0               	rlf	___flmul@grs+3,f
  5337  014D  0BB6               	decfsz	??___flmul,f
  5338  014E  2948               	goto	u4495
  5339  014F                     l3139:
  5340  014F  082F               	movf	___flmul@b+1,w
  5341  0150  00B6               	movwf	??___flmul
  5342  0151  0836               	movf	??___flmul,w
  5343  0152  00A0               	movwf	__Umul8_16@multiplicand
  5344  0153  0832               	movf	___flmul@a,w
  5345  0154  160A  118A  22E8  120A  118A  	fcall	__Umul8_16
  5346  0159  1283               	bcf	3,5	;RP0=0, select bank0
  5347  015A  1303               	bcf	3,6	;RP1=0, select bank0
  5348  015B  0821               	movf	?__Umul8_16+1,w
  5349  015C  00C7               	movwf	___flmul@temp+1
  5350  015D  0820               	movf	?__Umul8_16,w
  5351  015E  00C6               	movwf	___flmul@temp
  5352  015F                     l3141:
  5353  015F  0846               	movf	___flmul@temp,w
  5354  0160  00B6               	movwf	??___flmul
  5355  0161  0847               	movf	___flmul@temp+1,w
  5356  0162  00B7               	movwf	??___flmul+1
  5357  0163  01B8               	clrf	??___flmul+2
  5358  0164  01B9               	clrf	??___flmul+3
  5359  0165  0836               	movf	??___flmul,w
  5360  0166  07BD               	addwf	___flmul@grs,f
  5361  0167  0837               	movf	??___flmul+1,w
  5362  0168  1103               	clrz
  5363  0169  1803               	skipnc
  5364  016A  3E01               	addlw	1
  5365  016B  1903               	skipnz
  5366  016C  296E               	goto	u4501
  5367  016D  07BE               	addwf	___flmul@grs+1,f
  5368  016E                     u4501:
  5369  016E  0838               	movf	??___flmul+2,w
  5370  016F  1103               	clrz
  5371  0170  1803               	skipnc
  5372  0171  3E01               	addlw	1
  5373  0172  1903               	skipnz
  5374  0173  2975               	goto	u4502
  5375  0174  07BF               	addwf	___flmul@grs+2,f
  5376  0175                     u4502:
  5377  0175  0839               	movf	??___flmul+3,w
  5378  0176  1103               	clrz
  5379  0177  1803               	skipnc
  5380  0178  3E01               	addlw	1
  5381  0179  1903               	skipnz
  5382  017A  297C               	goto	u4503
  5383  017B  07C0               	addwf	___flmul@grs+3,f
  5384  017C                     u4503:
  5385  017C                     l3143:
  5386  017C  082E               	movf	___flmul@b,w
  5387  017D  00B6               	movwf	??___flmul
  5388  017E  0836               	movf	??___flmul,w
  5389  017F  00A0               	movwf	__Umul8_16@multiplicand
  5390  0180  0833               	movf	___flmul@a+1,w
  5391  0181  160A  118A  22E8  120A  118A  	fcall	__Umul8_16
  5392  0186  1283               	bcf	3,5	;RP0=0, select bank0
  5393  0187  1303               	bcf	3,6	;RP1=0, select bank0
  5394  0188  0821               	movf	?__Umul8_16+1,w
  5395  0189  00C7               	movwf	___flmul@temp+1
  5396  018A  0820               	movf	?__Umul8_16,w
  5397  018B  00C6               	movwf	___flmul@temp
  5398  018C                     l3145:
  5399  018C  0846               	movf	___flmul@temp,w
  5400  018D  00B6               	movwf	??___flmul
  5401  018E  0847               	movf	___flmul@temp+1,w
  5402  018F  00B7               	movwf	??___flmul+1
  5403  0190  01B8               	clrf	??___flmul+2
  5404  0191  01B9               	clrf	??___flmul+3
  5405  0192  0836               	movf	??___flmul,w
  5406  0193  07BD               	addwf	___flmul@grs,f
  5407  0194  0837               	movf	??___flmul+1,w
  5408  0195  1103               	clrz
  5409  0196  1803               	skipnc
  5410  0197  3E01               	addlw	1
  5411  0198  1903               	skipnz
  5412  0199  299B               	goto	u4511
  5413  019A  07BE               	addwf	___flmul@grs+1,f
  5414  019B                     u4511:
  5415  019B  0838               	movf	??___flmul+2,w
  5416  019C  1103               	clrz
  5417  019D  1803               	skipnc
  5418  019E  3E01               	addlw	1
  5419  019F  1903               	skipnz
  5420  01A0  29A2               	goto	u4512
  5421  01A1  07BF               	addwf	___flmul@grs+2,f
  5422  01A2                     u4512:
  5423  01A2  0839               	movf	??___flmul+3,w
  5424  01A3  1103               	clrz
  5425  01A4  1803               	skipnc
  5426  01A5  3E01               	addlw	1
  5427  01A6  1903               	skipnz
  5428  01A7  29A9               	goto	u4513
  5429  01A8  07C0               	addwf	___flmul@grs+3,f
  5430  01A9                     u4513:
  5431  01A9                     l3147:
  5432  01A9  3008               	movlw	8
  5433  01AA  00B6               	movwf	??___flmul
  5434  01AB                     u4525:
  5435  01AB  1003               	clrc
  5436  01AC  0DBD               	rlf	___flmul@grs,f
  5437  01AD  0DBE               	rlf	___flmul@grs+1,f
  5438  01AE  0DBF               	rlf	___flmul@grs+2,f
  5439  01AF  0DC0               	rlf	___flmul@grs+3,f
  5440  01B0  0BB6               	decfsz	??___flmul,f
  5441  01B1  29AB               	goto	u4525
  5442  01B2  082E               	movf	___flmul@b,w
  5443  01B3  00B6               	movwf	??___flmul
  5444  01B4  0836               	movf	??___flmul,w
  5445  01B5  00A0               	movwf	__Umul8_16@multiplicand
  5446  01B6  0832               	movf	___flmul@a,w
  5447  01B7  160A  118A  22E8  120A  118A  	fcall	__Umul8_16
  5448  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  5449  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  5450  01BE  0821               	movf	?__Umul8_16+1,w
  5451  01BF  00C7               	movwf	___flmul@temp+1
  5452  01C0  0820               	movf	?__Umul8_16,w
  5453  01C1  00C6               	movwf	___flmul@temp
  5454  01C2                     l3149:
  5455  01C2  0846               	movf	___flmul@temp,w
  5456  01C3  00B6               	movwf	??___flmul
  5457  01C4  0847               	movf	___flmul@temp+1,w
  5458  01C5  00B7               	movwf	??___flmul+1
  5459  01C6  01B8               	clrf	??___flmul+2
  5460  01C7  01B9               	clrf	??___flmul+3
  5461  01C8  0836               	movf	??___flmul,w
  5462  01C9  07BD               	addwf	___flmul@grs,f
  5463  01CA  0837               	movf	??___flmul+1,w
  5464  01CB  1103               	clrz
  5465  01CC  1803               	skipnc
  5466  01CD  3E01               	addlw	1
  5467  01CE  1903               	skipnz
  5468  01CF  29D1               	goto	u4531
  5469  01D0  07BE               	addwf	___flmul@grs+1,f
  5470  01D1                     u4531:
  5471  01D1  0838               	movf	??___flmul+2,w
  5472  01D2  1103               	clrz
  5473  01D3  1803               	skipnc
  5474  01D4  3E01               	addlw	1
  5475  01D5  1903               	skipnz
  5476  01D6  29D8               	goto	u4532
  5477  01D7  07BF               	addwf	___flmul@grs+2,f
  5478  01D8                     u4532:
  5479  01D8  0839               	movf	??___flmul+3,w
  5480  01D9  1103               	clrz
  5481  01DA  1803               	skipnc
  5482  01DB  3E01               	addlw	1
  5483  01DC  1903               	skipnz
  5484  01DD  29DF               	goto	u4533
  5485  01DE  07C0               	addwf	___flmul@grs+3,f
  5486  01DF                     u4533:
  5487  01DF                     l3151:
  5488  01DF  082F               	movf	___flmul@b+1,w
  5489  01E0  00B6               	movwf	??___flmul
  5490  01E1  0836               	movf	??___flmul,w
  5491  01E2  00A0               	movwf	__Umul8_16@multiplicand
  5492  01E3  0834               	movf	___flmul@a+2,w
  5493  01E4  160A  118A  22E8  120A  118A  	fcall	__Umul8_16
  5494  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  5495  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  5496  01EB  0821               	movf	?__Umul8_16+1,w
  5497  01EC  00C7               	movwf	___flmul@temp+1
  5498  01ED  0820               	movf	?__Umul8_16,w
  5499  01EE  00C6               	movwf	___flmul@temp
  5500  01EF  0846               	movf	___flmul@temp,w
  5501  01F0  00B6               	movwf	??___flmul
  5502  01F1  0847               	movf	___flmul@temp+1,w
  5503  01F2  00B7               	movwf	??___flmul+1
  5504  01F3  01B8               	clrf	??___flmul+2
  5505  01F4  01B9               	clrf	??___flmul+3
  5506  01F5  0836               	movf	??___flmul,w
  5507  01F6  07C2               	addwf	___flmul@prod,f
  5508  01F7  0837               	movf	??___flmul+1,w
  5509  01F8  1103               	clrz
  5510  01F9  1803               	skipnc
  5511  01FA  3E01               	addlw	1
  5512  01FB  1903               	skipnz
  5513  01FC  29FE               	goto	u4541
  5514  01FD  07C3               	addwf	___flmul@prod+1,f
  5515  01FE                     u4541:
  5516  01FE  0838               	movf	??___flmul+2,w
  5517  01FF  1103               	clrz
  5518  0200  1803               	skipnc
  5519  0201  3E01               	addlw	1
  5520  0202  1903               	skipnz
  5521  0203  2A05               	goto	u4542
  5522  0204  07C4               	addwf	___flmul@prod+2,f
  5523  0205                     u4542:
  5524  0205  0839               	movf	??___flmul+3,w
  5525  0206  1103               	clrz
  5526  0207  1803               	skipnc
  5527  0208  3E01               	addlw	1
  5528  0209  1903               	skipnz
  5529  020A  2A0C               	goto	u4543
  5530  020B  07C5               	addwf	___flmul@prod+3,f
  5531  020C                     u4543:
  5532  020C                     l3153:
  5533  020C  0830               	movf	___flmul@b+2,w
  5534  020D  00B6               	movwf	??___flmul
  5535  020E  0836               	movf	??___flmul,w
  5536  020F  00A0               	movwf	__Umul8_16@multiplicand
  5537  0210  0833               	movf	___flmul@a+1,w
  5538  0211  160A  118A  22E8  120A  118A  	fcall	__Umul8_16
  5539  0216  1283               	bcf	3,5	;RP0=0, select bank0
  5540  0217  1303               	bcf	3,6	;RP1=0, select bank0
  5541  0218  0821               	movf	?__Umul8_16+1,w
  5542  0219  00C7               	movwf	___flmul@temp+1
  5543  021A  0820               	movf	?__Umul8_16,w
  5544  021B  00C6               	movwf	___flmul@temp
  5545  021C                     l3155:
  5546  021C  0846               	movf	___flmul@temp,w
  5547  021D  00B6               	movwf	??___flmul
  5548  021E  0847               	movf	___flmul@temp+1,w
  5549  021F  00B7               	movwf	??___flmul+1
  5550  0220  01B8               	clrf	??___flmul+2
  5551  0221  01B9               	clrf	??___flmul+3
  5552  0222  0836               	movf	??___flmul,w
  5553  0223  07C2               	addwf	___flmul@prod,f
  5554  0224  0837               	movf	??___flmul+1,w
  5555  0225  1103               	clrz
  5556  0226  1803               	skipnc
  5557  0227  3E01               	addlw	1
  5558  0228  1903               	skipnz
  5559  0229  2A2B               	goto	u4551
  5560  022A  07C3               	addwf	___flmul@prod+1,f
  5561  022B                     u4551:
  5562  022B  0838               	movf	??___flmul+2,w
  5563  022C  1103               	clrz
  5564  022D  1803               	skipnc
  5565  022E  3E01               	addlw	1
  5566  022F  1903               	skipnz
  5567  0230  2A32               	goto	u4552
  5568  0231  07C4               	addwf	___flmul@prod+2,f
  5569  0232                     u4552:
  5570  0232  0839               	movf	??___flmul+3,w
  5571  0233  1103               	clrz
  5572  0234  1803               	skipnc
  5573  0235  3E01               	addlw	1
  5574  0236  1903               	skipnz
  5575  0237  2A39               	goto	u4553
  5576  0238  07C5               	addwf	___flmul@prod+3,f
  5577  0239                     u4553:
  5578  0239  0830               	movf	___flmul@b+2,w
  5579  023A  00B6               	movwf	??___flmul
  5580  023B  0836               	movf	??___flmul,w
  5581  023C  00A0               	movwf	__Umul8_16@multiplicand
  5582  023D  0834               	movf	___flmul@a+2,w
  5583  023E  160A  118A  22E8  120A  118A  	fcall	__Umul8_16
  5584  0243  1283               	bcf	3,5	;RP0=0, select bank0
  5585  0244  1303               	bcf	3,6	;RP1=0, select bank0
  5586  0245  0821               	movf	?__Umul8_16+1,w
  5587  0246  00C7               	movwf	___flmul@temp+1
  5588  0247  0820               	movf	?__Umul8_16,w
  5589  0248  00C6               	movwf	___flmul@temp
  5590  0249                     l3157:
  5591  0249  0846               	movf	___flmul@temp,w
  5592  024A  00B6               	movwf	??___flmul
  5593  024B  0847               	movf	___flmul@temp+1,w
  5594  024C  00B7               	movwf	??___flmul+1
  5595  024D  01B8               	clrf	??___flmul+2
  5596  024E  01B9               	clrf	??___flmul+3
  5597  024F  3008               	movlw	8
  5598  0250                     u4565:
  5599  0250  1003               	clrc
  5600  0251  0DB6               	rlf	??___flmul,f
  5601  0252  0DB7               	rlf	??___flmul+1,f
  5602  0253  0DB8               	rlf	??___flmul+2,f
  5603  0254  0DB9               	rlf	??___flmul+3,f
  5604  0255                     u4560:
  5605  0255  3EFF               	addlw	-1
  5606  0256  1D03               	skipz
  5607  0257  2A50               	goto	u4565
  5608  0258  0836               	movf	??___flmul,w
  5609  0259  07C2               	addwf	___flmul@prod,f
  5610  025A  0837               	movf	??___flmul+1,w
  5611  025B  1103               	clrz
  5612  025C  1803               	skipnc
  5613  025D  3E01               	addlw	1
  5614  025E  1903               	skipnz
  5615  025F  2A61               	goto	u4571
  5616  0260  07C3               	addwf	___flmul@prod+1,f
  5617  0261                     u4571:
  5618  0261  0838               	movf	??___flmul+2,w
  5619  0262  1103               	clrz
  5620  0263  1803               	skipnc
  5621  0264  3E01               	addlw	1
  5622  0265  1903               	skipnz
  5623  0266  2A68               	goto	u4572
  5624  0267  07C4               	addwf	___flmul@prod+2,f
  5625  0268                     u4572:
  5626  0268  0839               	movf	??___flmul+3,w
  5627  0269  1103               	clrz
  5628  026A  1803               	skipnc
  5629  026B  3E01               	addlw	1
  5630  026C  1903               	skipnz
  5631  026D  2A6F               	goto	u4573
  5632  026E  07C5               	addwf	___flmul@prod+3,f
  5633  026F                     u4573:
  5634  026F                     l3159:
  5635  026F  083D               	movf	___flmul@grs,w
  5636  0270  00B6               	movwf	??___flmul
  5637  0271  083E               	movf	___flmul@grs+1,w
  5638  0272  00B7               	movwf	??___flmul+1
  5639  0273  083F               	movf	___flmul@grs+2,w
  5640  0274  00B8               	movwf	??___flmul+2
  5641  0275  0840               	movf	___flmul@grs+3,w
  5642  0276  00B9               	movwf	??___flmul+3
  5643  0277  3018               	movlw	24
  5644  0278                     u4585:
  5645  0278  1003               	clrc
  5646  0279  0CB9               	rrf	??___flmul+3,f
  5647  027A  0CB8               	rrf	??___flmul+2,f
  5648  027B  0CB7               	rrf	??___flmul+1,f
  5649  027C  0CB6               	rrf	??___flmul,f
  5650  027D                     u4580:
  5651  027D  3EFF               	addlw	-1
  5652  027E  1D03               	skipz
  5653  027F  2A78               	goto	u4585
  5654  0280  0836               	movf	??___flmul,w
  5655  0281  07C2               	addwf	___flmul@prod,f
  5656  0282  0837               	movf	??___flmul+1,w
  5657  0283  1103               	clrz
  5658  0284  1803               	skipnc
  5659  0285  3E01               	addlw	1
  5660  0286  1903               	skipnz
  5661  0287  2A89               	goto	u4591
  5662  0288  07C3               	addwf	___flmul@prod+1,f
  5663  0289                     u4591:
  5664  0289  0838               	movf	??___flmul+2,w
  5665  028A  1103               	clrz
  5666  028B  1803               	skipnc
  5667  028C  3E01               	addlw	1
  5668  028D  1903               	skipnz
  5669  028E  2A90               	goto	u4592
  5670  028F  07C4               	addwf	___flmul@prod+2,f
  5671  0290                     u4592:
  5672  0290  0839               	movf	??___flmul+3,w
  5673  0291  1103               	clrz
  5674  0292  1803               	skipnc
  5675  0293  3E01               	addlw	1
  5676  0294  1903               	skipnz
  5677  0295  2A97               	goto	u4593
  5678  0296  07C5               	addwf	___flmul@prod+3,f
  5679  0297                     u4593:
  5680  0297                     l3161:
  5681  0297  3008               	movlw	8
  5682  0298  00B6               	movwf	??___flmul
  5683  0299                     u4605:
  5684  0299  1003               	clrc
  5685  029A  0DBD               	rlf	___flmul@grs,f
  5686  029B  0DBE               	rlf	___flmul@grs+1,f
  5687  029C  0DBF               	rlf	___flmul@grs+2,f
  5688  029D  0DC0               	rlf	___flmul@grs+3,f
  5689  029E  0BB6               	decfsz	??___flmul,f
  5690  029F  2A99               	goto	u4605
  5691  02A0                     l3163:
  5692  02A0  0841               	movf	___flmul@bexp,w
  5693  02A1  073C               	addwf	___flmul@aexp,w
  5694  02A2  00B6               	movwf	??___flmul
  5695  02A3  01B7               	clrf	??___flmul+1
  5696  02A4  0DB7               	rlf	??___flmul+1,f
  5697  02A5  0836               	movf	??___flmul,w
  5698  02A6  3E82               	addlw	130
  5699  02A7  00C6               	movwf	___flmul@temp
  5700  02A8  0837               	movf	??___flmul+1,w
  5701  02A9  1803               	skipnc
  5702  02AA  3E01               	addlw	1
  5703  02AB  3EFF               	addlw	255
  5704  02AC  00C7               	movwf	___flmul@temp+1
  5705  02AD  2ACB               	goto	l3175
  5706  02AE                     l3165:
  5707  02AE  3001               	movlw	1
  5708  02AF  00B6               	movwf	??___flmul
  5709  02B0                     u4615:
  5710  02B0  1003               	clrc
  5711  02B1  0DC2               	rlf	___flmul@prod,f
  5712  02B2  0DC3               	rlf	___flmul@prod+1,f
  5713  02B3  0DC4               	rlf	___flmul@prod+2,f
  5714  02B4  0DC5               	rlf	___flmul@prod+3,f
  5715  02B5  0BB6               	decfsz	??___flmul,f
  5716  02B6  2AB0               	goto	u4615
  5717  02B7                     l3167:
  5718  02B7  1FC0               	btfss	___flmul@grs+3,7
  5719  02B8  2ABA               	goto	u4621
  5720  02B9  2ABB               	goto	u4620
  5721  02BA                     u4621:
  5722  02BA  2ABC               	goto	l3171
  5723  02BB                     u4620:
  5724  02BB                     l3169:
  5725  02BB  1442               	bsf	___flmul@prod,0
  5726  02BC                     l3171:
  5727  02BC  3001               	movlw	1
  5728  02BD  00B6               	movwf	??___flmul
  5729  02BE                     u4635:
  5730  02BE  1003               	clrc
  5731  02BF  0DBD               	rlf	___flmul@grs,f
  5732  02C0  0DBE               	rlf	___flmul@grs+1,f
  5733  02C1  0DBF               	rlf	___flmul@grs+2,f
  5734  02C2  0DC0               	rlf	___flmul@grs+3,f
  5735  02C3  0BB6               	decfsz	??___flmul,f
  5736  02C4  2ABE               	goto	u4635
  5737  02C5                     l3173:
  5738  02C5  30FF               	movlw	255
  5739  02C6  07C6               	addwf	___flmul@temp,f
  5740  02C7  1803               	skipnc
  5741  02C8  0AC7               	incf	___flmul@temp+1,f
  5742  02C9  30FF               	movlw	255
  5743  02CA  07C7               	addwf	___flmul@temp+1,f
  5744  02CB                     l3175:
  5745  02CB  1FC4               	btfss	___flmul@prod+2,7
  5746  02CC  2ACE               	goto	u4641
  5747  02CD  2ACF               	goto	u4640
  5748  02CE                     u4641:
  5749  02CE  2AAE               	goto	l3165
  5750  02CF                     u4640:
  5751  02CF                     l3177:
  5752  02CF  01BC               	clrf	___flmul@aexp
  5753  02D0                     l3179:
  5754  02D0  1FC0               	btfss	___flmul@grs+3,7
  5755  02D1  2AD3               	goto	u4651
  5756  02D2  2AD4               	goto	u4650
  5757  02D3                     u4651:
  5758  02D3  2AF0               	goto	l3187
  5759  02D4                     u4650:
  5760  02D4                     l3181:
  5761  02D4  30FF               	movlw	255
  5762  02D5  053D               	andwf	___flmul@grs,w
  5763  02D6  00B6               	movwf	??___flmul
  5764  02D7  30FF               	movlw	255
  5765  02D8  053E               	andwf	___flmul@grs+1,w
  5766  02D9  00B7               	movwf	??___flmul+1
  5767  02DA  30FF               	movlw	255
  5768  02DB  053F               	andwf	___flmul@grs+2,w
  5769  02DC  00B8               	movwf	??___flmul+2
  5770  02DD  307F               	movlw	127
  5771  02DE  0540               	andwf	___flmul@grs+3,w
  5772  02DF  00B9               	movwf	??___flmul+3
  5773  02E0  0839               	movf	??___flmul+3,w
  5774  02E1  0438               	iorwf	??___flmul+2,w
  5775  02E2  0437               	iorwf	??___flmul+1,w
  5776  02E3  0436               	iorwf	??___flmul,w
  5777  02E4  1903               	skipnz
  5778  02E5  2AE7               	goto	u4661
  5779  02E6  2AE8               	goto	u4660
  5780  02E7                     u4661:
  5781  02E7  2AEB               	goto	l703
  5782  02E8                     u4660:
  5783  02E8                     l3183:
  5784  02E8  01BC               	clrf	___flmul@aexp
  5785  02E9  0ABC               	incf	___flmul@aexp,f
  5786  02EA  2AF0               	goto	l3187
  5787  02EB                     l703:
  5788  02EB  1C42               	btfss	___flmul@prod,0
  5789  02EC  2AEE               	goto	u4671
  5790  02ED  2AEF               	goto	u4670
  5791  02EE                     u4671:
  5792  02EE  2AF0               	goto	l3187
  5793  02EF                     u4670:
  5794  02EF  2AE8               	goto	l3183
  5795  02F0                     l3187:
  5796  02F0  083C               	movf	___flmul@aexp,w
  5797  02F1  1903               	btfsc	3,2
  5798  02F2  2AF4               	goto	u4681
  5799  02F3  2AF5               	goto	u4680
  5800  02F4                     u4681:
  5801  02F4  2B26               	goto	l3197
  5802  02F5                     u4680:
  5803  02F5                     l3189:
  5804  02F5  3001               	movlw	1
  5805  02F6  07C2               	addwf	___flmul@prod,f
  5806  02F7  3000               	movlw	0
  5807  02F8  1803               	skipnc
  5808  02F9  3001               	movlw	1
  5809  02FA  07C3               	addwf	___flmul@prod+1,f
  5810  02FB  3000               	movlw	0
  5811  02FC  1803               	skipnc
  5812  02FD  3001               	movlw	1
  5813  02FE  07C4               	addwf	___flmul@prod+2,f
  5814  02FF  3000               	movlw	0
  5815  0300  1803               	skipnc
  5816  0301  3001               	movlw	1
  5817  0302  07C5               	addwf	___flmul@prod+3,f
  5818  0303                     l3191:
  5819  0303  1C45               	btfss	___flmul@prod+3,0
  5820  0304  2B06               	goto	u4691
  5821  0305  2B07               	goto	u4690
  5822  0306                     u4691:
  5823  0306  2B26               	goto	l3197
  5824  0307                     u4690:
  5825  0307                     l3193:
  5826  0307  0842               	movf	___flmul@prod,w
  5827  0308  00B6               	movwf	??___flmul
  5828  0309  0843               	movf	___flmul@prod+1,w
  5829  030A  00B7               	movwf	??___flmul+1
  5830  030B  0844               	movf	___flmul@prod+2,w
  5831  030C  00B8               	movwf	??___flmul+2
  5832  030D  0845               	movf	___flmul@prod+3,w
  5833  030E  00B9               	movwf	??___flmul+3
  5834  030F  3001               	movlw	1
  5835  0310  00BA               	movwf	??___flmul+4
  5836  0311                     u4705:
  5837  0311  0D39               	rlf	??___flmul+3,w
  5838  0312  0CB9               	rrf	??___flmul+3,f
  5839  0313  0CB8               	rrf	??___flmul+2,f
  5840  0314  0CB7               	rrf	??___flmul+1,f
  5841  0315  0CB6               	rrf	??___flmul,f
  5842  0316                     u4700:
  5843  0316  0BBA               	decfsz	??___flmul+4,f
  5844  0317  2B11               	goto	u4705
  5845  0318  0839               	movf	??___flmul+3,w
  5846  0319  00C5               	movwf	___flmul@prod+3
  5847  031A  0838               	movf	??___flmul+2,w
  5848  031B  00C4               	movwf	___flmul@prod+2
  5849  031C  0837               	movf	??___flmul+1,w
  5850  031D  00C3               	movwf	___flmul@prod+1
  5851  031E  0836               	movf	??___flmul,w
  5852  031F  00C2               	movwf	___flmul@prod
  5853  0320                     l3195:
  5854  0320  3001               	movlw	1
  5855  0321  07C6               	addwf	___flmul@temp,f
  5856  0322  1803               	skipnc
  5857  0323  0AC7               	incf	___flmul@temp+1,f
  5858  0324  3000               	movlw	0
  5859  0325  07C7               	addwf	___flmul@temp+1,f
  5860  0326                     l3197:
  5861  0326  0847               	movf	___flmul@temp+1,w
  5862  0327  3A80               	xorlw	128
  5863  0328  00FF               	movwf	btemp+1
  5864  0329  3080               	movlw	128
  5865  032A  027F               	subwf	btemp+1,w
  5866  032B  1D03               	skipz
  5867  032C  2B2F               	goto	u4715
  5868  032D  30FF               	movlw	255
  5869  032E  0246               	subwf	___flmul@temp,w
  5870  032F                     u4715:
  5871  032F  1C03               	skipc
  5872  0330  2B32               	goto	u4711
  5873  0331  2B33               	goto	u4710
  5874  0332                     u4711:
  5875  0332  2B3E               	goto	l3201
  5876  0333                     u4710:
  5877  0333                     l3199:
  5878  0333  307F               	movlw	127
  5879  0334  1283               	bcf	3,5	;RP0=0, select bank0
  5880  0335  1303               	bcf	3,6	;RP1=0, select bank0
  5881  0336  00C5               	movwf	___flmul@prod+3
  5882  0337  3080               	movlw	128
  5883  0338  00C4               	movwf	___flmul@prod+2
  5884  0339  3000               	movlw	0
  5885  033A  00C3               	movwf	___flmul@prod+1
  5886  033B  3000               	movlw	0
  5887  033C  00C2               	movwf	___flmul@prod
  5888  033D  2B73               	goto	l709
  5889  033E                     l3201:
  5890  033E  1283               	bcf	3,5	;RP0=0, select bank0
  5891  033F  1303               	bcf	3,6	;RP1=0, select bank0
  5892  0340  0847               	movf	___flmul@temp+1,w
  5893  0341  3A80               	xorlw	128
  5894  0342  00FF               	movwf	btemp+1
  5895  0343  3080               	movlw	128
  5896  0344  027F               	subwf	btemp+1,w
  5897  0345  1D03               	skipz
  5898  0346  2B49               	goto	u4725
  5899  0347  3001               	movlw	1
  5900  0348  0246               	subwf	___flmul@temp,w
  5901  0349                     u4725:
  5902  0349  1803               	skipnc
  5903  034A  2B4C               	goto	u4721
  5904  034B  2B4D               	goto	u4720
  5905  034C                     u4721:
  5906  034C  2B59               	goto	l3207
  5907  034D                     u4720:
  5908  034D                     l3203:
  5909  034D  3000               	movlw	0
  5910  034E  1283               	bcf	3,5	;RP0=0, select bank0
  5911  034F  1303               	bcf	3,6	;RP1=0, select bank0
  5912  0350  00C5               	movwf	___flmul@prod+3
  5913  0351  3000               	movlw	0
  5914  0352  00C4               	movwf	___flmul@prod+2
  5915  0353  3000               	movlw	0
  5916  0354  00C3               	movwf	___flmul@prod+1
  5917  0355  3000               	movlw	0
  5918  0356  00C2               	movwf	___flmul@prod
  5919  0357                     l3205:
  5920  0357  01BB               	clrf	___flmul@sign
  5921  0358  2B73               	goto	l709
  5922  0359                     l3207:
  5923  0359  1283               	bcf	3,5	;RP0=0, select bank0
  5924  035A  1303               	bcf	3,6	;RP1=0, select bank0
  5925  035B  0846               	movf	___flmul@temp,w
  5926  035C  00B6               	movwf	??___flmul
  5927  035D  0836               	movf	??___flmul,w
  5928  035E  00C1               	movwf	___flmul@bexp
  5929  035F  30FF               	movlw	255
  5930  0360  05C2               	andwf	___flmul@prod,f
  5931  0361  30FF               	movlw	255
  5932  0362  05C3               	andwf	___flmul@prod+1,f
  5933  0363  307F               	movlw	127
  5934  0364  05C4               	andwf	___flmul@prod+2,f
  5935  0365  3000               	movlw	0
  5936  0366  05C5               	andwf	___flmul@prod+3,f
  5937  0367                     l3209:
  5938  0367  1C41               	btfss	___flmul@bexp,0
  5939  0368  2B6A               	goto	u4731
  5940  0369  2B6B               	goto	u4730
  5941  036A                     u4731:
  5942  036A  2B6C               	goto	l3213
  5943  036B                     u4730:
  5944  036B                     l3211:
  5945  036B  17C4               	bsf	___flmul@prod+2,7
  5946  036C                     l3213:
  5947  036C  0841               	movf	___flmul@bexp,w
  5948  036D  00B6               	movwf	??___flmul
  5949  036E  1003               	clrc
  5950  036F  0C36               	rrf	??___flmul,w
  5951  0370  00B7               	movwf	??___flmul+1
  5952  0371  0837               	movf	??___flmul+1,w
  5953  0372  00C5               	movwf	___flmul@prod+3
  5954  0373                     l709:
  5955  0373  083B               	movf	___flmul@sign,w
  5956  0374  00B6               	movwf	??___flmul
  5957  0375  0836               	movf	??___flmul,w
  5958  0376  04C5               	iorwf	___flmul@prod+3,f
  5959  0377                     l3215:
  5960  0377  0845               	movf	___flmul@prod+3,w
  5961  0378  00B1               	movwf	?___flmul+3
  5962  0379  0844               	movf	___flmul@prod+2,w
  5963  037A  00B0               	movwf	?___flmul+2
  5964  037B  0843               	movf	___flmul@prod+1,w
  5965  037C  00AF               	movwf	?___flmul+1
  5966  037D  0842               	movf	___flmul@prod,w
  5967  037E  00AE               	movwf	?___flmul
  5968  037F                     l697:
  5969  037F  0008               	return
  5970  0380                     __end_of___flmul:
  5971                           
  5972                           	psect	text16
  5973  12E8                     __ptext16:	
  5974 ;; *************** function __Umul8_16 *****************
  5975 ;; Defined at:
  5976 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5977 ;; Parameters:    Size  Location     Type
  5978 ;;  multiplier      1    wreg     unsigned char 
  5979 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;  multiplier      1    8[BANK0 ] unsigned char 
  5982 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  5983 ;;  product         2    4[BANK0 ] unsigned int 
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  2    0[BANK0 ] unsigned int 
  5986 ;; Registers used:
  5987 ;;		wreg, status,2, status,0
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5993 ;;      Params:         0       2       0       0       0
  5994 ;;      Locals:         0       5       0       0       0
  5995 ;;      Temps:          0       2       0       0       0
  5996 ;;      Totals:         0       9       0       0       0
  5997 ;;Total ram usage:        9 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; Hardware stack levels required when called:    1
  6000 ;; This function calls:
  6001 ;;		Nothing
  6002 ;; This function is called by:
  6003 ;;		___flmul
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           
  6008                           ;psect for function __Umul8_16
  6009  12E8                     __Umul8_16:
  6010                           
  6011                           ;incstack = 0
  6012                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6013                           ;__Umul8_16@multiplier stored from wreg
  6014  12E8  1283               	bcf	3,5	;RP0=0, select bank0
  6015  12E9  1303               	bcf	3,6	;RP1=0, select bank0
  6016  12EA  00A8               	movwf	__Umul8_16@multiplier
  6017  12EB                     l3049:
  6018  12EB  01A4               	clrf	__Umul8_16@product
  6019  12EC  01A5               	clrf	__Umul8_16@product+1
  6020  12ED                     l3051:
  6021  12ED  0820               	movf	__Umul8_16@multiplicand,w
  6022  12EE  00A2               	movwf	??__Umul8_16
  6023  12EF  01A3               	clrf	??__Umul8_16+1
  6024  12F0  0822               	movf	??__Umul8_16,w
  6025  12F1  00A6               	movwf	__Umul8_16@word_mpld
  6026  12F2  0823               	movf	??__Umul8_16+1,w
  6027  12F3  00A7               	movwf	__Umul8_16@word_mpld+1
  6028  12F4                     l3053:
  6029  12F4  1C28               	btfss	__Umul8_16@multiplier,0
  6030  12F5  2AF7               	goto	u4311
  6031  12F6  2AF8               	goto	u4310
  6032  12F7                     u4311:
  6033  12F7  2AFE               	goto	l716
  6034  12F8                     u4310:
  6035  12F8                     l3055:
  6036  12F8  0826               	movf	__Umul8_16@word_mpld,w
  6037  12F9  07A4               	addwf	__Umul8_16@product,f
  6038  12FA  1803               	skipnc
  6039  12FB  0AA5               	incf	__Umul8_16@product+1,f
  6040  12FC  0827               	movf	__Umul8_16@word_mpld+1,w
  6041  12FD  07A5               	addwf	__Umul8_16@product+1,f
  6042  12FE                     l716:
  6043  12FE  3001               	movlw	1
  6044  12FF                     u4325:
  6045  12FF  1003               	clrc
  6046  1300  0DA6               	rlf	__Umul8_16@word_mpld,f
  6047  1301  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  6048  1302  3EFF               	addlw	-1
  6049  1303  1D03               	skipz
  6050  1304  2AFF               	goto	u4325
  6051  1305  1003               	clrc
  6052  1306  0CA8               	rrf	__Umul8_16@multiplier,f
  6053  1307                     l3057:
  6054  1307  0828               	movf	__Umul8_16@multiplier,w
  6055  1308  1D03               	btfss	3,2
  6056  1309  2B0B               	goto	u4331
  6057  130A  2B0C               	goto	u4330
  6058  130B                     u4331:
  6059  130B  2AF4               	goto	l3053
  6060  130C                     u4330:
  6061  130C                     l3059:
  6062  130C  0825               	movf	__Umul8_16@product+1,w
  6063  130D  00A1               	movwf	?__Umul8_16+1
  6064  130E  0824               	movf	__Umul8_16@product,w
  6065  130F  00A0               	movwf	?__Umul8_16
  6066  1310                     l718:
  6067  1310  0008               	return
  6068  1311                     __end_of__Umul8_16:
  6069                           
  6070                           	psect	text17
  6071  094F                     __ptext17:	
  6072 ;; *************** function ___fldiv *****************
  6073 ;; Defined at:
  6074 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;  a               4   14[BANK0 ] unsigned int 
  6077 ;;  b               4   18[BANK0 ] unsigned int 
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;  grs             4   34[BANK0 ] unsigned long 
  6080 ;;  rem             4   27[BANK0 ] unsigned long 
  6081 ;;  new_exp         2   32[BANK0 ] int 
  6082 ;;  aexp            1   39[BANK0 ] unsigned char 
  6083 ;;  bexp            1   38[BANK0 ] unsigned char 
  6084 ;;  sign            1   31[BANK0 ] unsigned char 
  6085 ;; Return value:  Size  Location     Type
  6086 ;;                  4   14[BANK0 ] unsigned char 
  6087 ;; Registers used:
  6088 ;;		wreg, status,2, status,0, btemp+1
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6094 ;;      Params:         0       8       0       0       0
  6095 ;;      Locals:         0      13       0       0       0
  6096 ;;      Temps:          0       5       0       0       0
  6097 ;;      Totals:         0      26       0       0       0
  6098 ;;Total ram usage:       26 bytes
  6099 ;; Hardware stack levels used:    1
  6100 ;; Hardware stack levels required when called:    1
  6101 ;; This function calls:
  6102 ;;		Nothing
  6103 ;; This function is called by:
  6104 ;;		_readMPU
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           
  6109                           ;psect for function ___fldiv
  6110  094F                     ___fldiv:
  6111  094F                     l2693:	
  6112                           ;incstack = 0
  6113                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6114                           
  6115  094F  1283               	bcf	3,5	;RP0=0, select bank0
  6116  0950  1303               	bcf	3,6	;RP1=0, select bank0
  6117  0951  0835               	movf	___fldiv@b+3,w
  6118  0952  3980               	andlw	128
  6119  0953  00B6               	movwf	??___fldiv
  6120  0954  0836               	movf	??___fldiv,w
  6121  0955  00BF               	movwf	___fldiv@sign
  6122  0956                     l2695:
  6123  0956  0835               	movf	___fldiv@b+3,w
  6124  0957  00B6               	movwf	??___fldiv
  6125  0958  0736               	addwf	??___fldiv,w
  6126  0959  00B7               	movwf	??___fldiv+1
  6127  095A  0837               	movf	??___fldiv+1,w
  6128  095B  00C6               	movwf	___fldiv@bexp
  6129  095C                     l2697:
  6130  095C  1FB4               	btfss	___fldiv@b+2,7
  6131  095D  295F               	goto	u3831
  6132  095E  2960               	goto	u3830
  6133  095F                     u3831:
  6134  095F  2961               	goto	l2701
  6135  0960                     u3830:
  6136  0960                     l2699:
  6137  0960  1446               	bsf	___fldiv@bexp,0
  6138  0961                     l2701:
  6139  0961  0846               	movf	___fldiv@bexp,w
  6140  0962  1903               	btfsc	3,2
  6141  0963  2965               	goto	u3841
  6142  0964  2966               	goto	u3840
  6143  0965                     u3841:
  6144  0965  2976               	goto	l2711
  6145  0966                     u3840:
  6146  0966                     l2703:
  6147  0966  0A46               	incf	___fldiv@bexp,w
  6148  0967  1D03               	btfss	3,2
  6149  0968  296A               	goto	u3851
  6150  0969  296B               	goto	u3850
  6151  096A                     u3851:
  6152  096A  2973               	goto	l2707
  6153  096B                     u3850:
  6154  096B                     l2705:
  6155  096B  3000               	movlw	0
  6156  096C  00B5               	movwf	___fldiv@b+3
  6157  096D  3000               	movlw	0
  6158  096E  00B4               	movwf	___fldiv@b+2
  6159  096F  3000               	movlw	0
  6160  0970  00B3               	movwf	___fldiv@b+1
  6161  0971  3000               	movlw	0
  6162  0972  00B2               	movwf	___fldiv@b
  6163  0973                     l2707:
  6164  0973  17B4               	bsf	___fldiv@b+2,7
  6165  0974                     l2709:
  6166  0974  01B5               	clrf	___fldiv@b+3
  6167  0975  297E               	goto	l2713
  6168  0976                     l2711:
  6169  0976  3000               	movlw	0
  6170  0977  00B5               	movwf	___fldiv@b+3
  6171  0978  3000               	movlw	0
  6172  0979  00B4               	movwf	___fldiv@b+2
  6173  097A  3000               	movlw	0
  6174  097B  00B3               	movwf	___fldiv@b+1
  6175  097C  3000               	movlw	0
  6176  097D  00B2               	movwf	___fldiv@b
  6177  097E                     l2713:
  6178  097E  0831               	movf	___fldiv@a+3,w
  6179  097F  3980               	andlw	128
  6180  0980  00B6               	movwf	??___fldiv
  6181  0981  0836               	movf	??___fldiv,w
  6182  0982  06BF               	xorwf	___fldiv@sign,f
  6183  0983                     l2715:
  6184  0983  0831               	movf	___fldiv@a+3,w
  6185  0984  00B6               	movwf	??___fldiv
  6186  0985  0736               	addwf	??___fldiv,w
  6187  0986  00B7               	movwf	??___fldiv+1
  6188  0987  0837               	movf	??___fldiv+1,w
  6189  0988  00C7               	movwf	___fldiv@aexp
  6190  0989                     l2717:
  6191  0989  1FB0               	btfss	___fldiv@a+2,7
  6192  098A  298C               	goto	u3861
  6193  098B  298D               	goto	u3860
  6194  098C                     u3861:
  6195  098C  298E               	goto	l2721
  6196  098D                     u3860:
  6197  098D                     l2719:
  6198  098D  1447               	bsf	___fldiv@aexp,0
  6199  098E                     l2721:
  6200  098E  0847               	movf	___fldiv@aexp,w
  6201  098F  1903               	btfsc	3,2
  6202  0990  2992               	goto	u3871
  6203  0991  2993               	goto	u3870
  6204  0992                     u3871:
  6205  0992  29A3               	goto	l2731
  6206  0993                     u3870:
  6207  0993                     l2723:
  6208  0993  0A47               	incf	___fldiv@aexp,w
  6209  0994  1D03               	btfss	3,2
  6210  0995  2997               	goto	u3881
  6211  0996  2998               	goto	u3880
  6212  0997                     u3881:
  6213  0997  29A0               	goto	l2727
  6214  0998                     u3880:
  6215  0998                     l2725:
  6216  0998  3000               	movlw	0
  6217  0999  00B1               	movwf	___fldiv@a+3
  6218  099A  3000               	movlw	0
  6219  099B  00B0               	movwf	___fldiv@a+2
  6220  099C  3000               	movlw	0
  6221  099D  00AF               	movwf	___fldiv@a+1
  6222  099E  3000               	movlw	0
  6223  099F  00AE               	movwf	___fldiv@a
  6224  09A0                     l2727:
  6225  09A0  17B0               	bsf	___fldiv@a+2,7
  6226  09A1                     l2729:
  6227  09A1  01B1               	clrf	___fldiv@a+3
  6228  09A2  29AB               	goto	l657
  6229  09A3                     l2731:
  6230  09A3  3000               	movlw	0
  6231  09A4  00B1               	movwf	___fldiv@a+3
  6232  09A5  3000               	movlw	0
  6233  09A6  00B0               	movwf	___fldiv@a+2
  6234  09A7  3000               	movlw	0
  6235  09A8  00AF               	movwf	___fldiv@a+1
  6236  09A9  3000               	movlw	0
  6237  09AA  00AE               	movwf	___fldiv@a
  6238  09AB                     l657:
  6239  09AB  0831               	movf	___fldiv@a+3,w
  6240  09AC  0430               	iorwf	___fldiv@a+2,w
  6241  09AD  042F               	iorwf	___fldiv@a+1,w
  6242  09AE  042E               	iorwf	___fldiv@a,w
  6243  09AF  1D03               	skipz
  6244  09B0  29B2               	goto	u3891
  6245  09B1  29B3               	goto	u3890
  6246  09B2                     u3891:
  6247  09B2  29CC               	goto	l2741
  6248  09B3                     u3890:
  6249  09B3                     l2733:
  6250  09B3  3000               	movlw	0
  6251  09B4  00B5               	movwf	___fldiv@b+3
  6252  09B5  3000               	movlw	0
  6253  09B6  00B4               	movwf	___fldiv@b+2
  6254  09B7  3000               	movlw	0
  6255  09B8  00B3               	movwf	___fldiv@b+1
  6256  09B9  3000               	movlw	0
  6257  09BA  00B2               	movwf	___fldiv@b
  6258  09BB  3080               	movlw	128
  6259  09BC  04B4               	iorwf	___fldiv@b+2,f
  6260  09BD  307F               	movlw	127
  6261  09BE  04B5               	iorwf	___fldiv@b+3,f
  6262  09BF                     l2735:
  6263  09BF  083F               	movf	___fldiv@sign,w
  6264  09C0  00B6               	movwf	??___fldiv
  6265  09C1  0836               	movf	??___fldiv,w
  6266  09C2  04B5               	iorwf	___fldiv@b+3,f
  6267  09C3                     l2737:
  6268  09C3  0835               	movf	___fldiv@b+3,w
  6269  09C4  00B1               	movwf	?___fldiv+3
  6270  09C5  0834               	movf	___fldiv@b+2,w
  6271  09C6  00B0               	movwf	?___fldiv+2
  6272  09C7  0833               	movf	___fldiv@b+1,w
  6273  09C8  00AF               	movwf	?___fldiv+1
  6274  09C9  0832               	movf	___fldiv@b,w
  6275  09CA  00AE               	movwf	?___fldiv
  6276  09CB  2B2B               	goto	l659
  6277  09CC                     l2741:
  6278  09CC  0846               	movf	___fldiv@bexp,w
  6279  09CD  1D03               	btfss	3,2
  6280  09CE  29D0               	goto	u3901
  6281  09CF  29D1               	goto	u3900
  6282  09D0                     u3901:
  6283  09D0  29DA               	goto	l2747
  6284  09D1                     u3900:
  6285  09D1                     l2743:
  6286  09D1  3000               	movlw	0
  6287  09D2  00B1               	movwf	?___fldiv+3
  6288  09D3  3000               	movlw	0
  6289  09D4  00B0               	movwf	?___fldiv+2
  6290  09D5  3000               	movlw	0
  6291  09D6  00AF               	movwf	?___fldiv+1
  6292  09D7  3000               	movlw	0
  6293  09D8  00AE               	movwf	?___fldiv
  6294  09D9  2B2B               	goto	l659
  6295  09DA                     l2747:
  6296  09DA  0846               	movf	___fldiv@bexp,w
  6297  09DB  00B6               	movwf	??___fldiv
  6298  09DC  01B7               	clrf	??___fldiv+1
  6299  09DD  0837               	movf	??___fldiv+1,w
  6300  09DE  00B9               	movwf	??___fldiv+3
  6301  09DF  0847               	movf	___fldiv@aexp,w
  6302  09E0  0236               	subwf	??___fldiv,w
  6303  09E1  00B8               	movwf	??___fldiv+2
  6304  09E2  1C03               	skipc
  6305  09E3  03B9               	decf	??___fldiv+3,f
  6306  09E4  0838               	movf	??___fldiv+2,w
  6307  09E5  3E7F               	addlw	127
  6308  09E6  00C0               	movwf	___fldiv@new_exp
  6309  09E7  0839               	movf	??___fldiv+3,w
  6310  09E8  1803               	skipnc
  6311  09E9  3E01               	addlw	1
  6312  09EA  3E00               	addlw	0
  6313  09EB  00C1               	movwf	___fldiv@new_exp+1
  6314  09EC                     l2749:
  6315  09EC  0835               	movf	___fldiv@b+3,w
  6316  09ED  00BE               	movwf	___fldiv@rem+3
  6317  09EE  0834               	movf	___fldiv@b+2,w
  6318  09EF  00BD               	movwf	___fldiv@rem+2
  6319  09F0  0833               	movf	___fldiv@b+1,w
  6320  09F1  00BC               	movwf	___fldiv@rem+1
  6321  09F2  0832               	movf	___fldiv@b,w
  6322  09F3  00BB               	movwf	___fldiv@rem
  6323  09F4                     l2751:
  6324  09F4  3000               	movlw	0
  6325  09F5  00B5               	movwf	___fldiv@b+3
  6326  09F6  3000               	movlw	0
  6327  09F7  00B4               	movwf	___fldiv@b+2
  6328  09F8  3000               	movlw	0
  6329  09F9  00B3               	movwf	___fldiv@b+1
  6330  09FA  3000               	movlw	0
  6331  09FB  00B2               	movwf	___fldiv@b
  6332  09FC                     l2753:
  6333  09FC  3000               	movlw	0
  6334  09FD  00C5               	movwf	___fldiv@grs+3
  6335  09FE  3000               	movlw	0
  6336  09FF  00C4               	movwf	___fldiv@grs+2
  6337  0A00  3000               	movlw	0
  6338  0A01  00C3               	movwf	___fldiv@grs+1
  6339  0A02  3000               	movlw	0
  6340  0A03  00C2               	movwf	___fldiv@grs
  6341  0A04                     l2755:
  6342  0A04  01C7               	clrf	___fldiv@aexp
  6343  0A05  2A50               	goto	l2775
  6344  0A06                     l2757:
  6345  0A06  0847               	movf	___fldiv@aexp,w
  6346  0A07  1903               	btfsc	3,2
  6347  0A08  2A0A               	goto	u3911
  6348  0A09  2A0B               	goto	u3910
  6349  0A0A                     u3911:
  6350  0A0A  2A2B               	goto	l2767
  6351  0A0B                     u3910:
  6352  0A0B                     l2759:
  6353  0A0B  3001               	movlw	1
  6354  0A0C  00B6               	movwf	??___fldiv
  6355  0A0D                     u3925:
  6356  0A0D  1003               	clrc
  6357  0A0E  0DBB               	rlf	___fldiv@rem,f
  6358  0A0F  0DBC               	rlf	___fldiv@rem+1,f
  6359  0A10  0DBD               	rlf	___fldiv@rem+2,f
  6360  0A11  0DBE               	rlf	___fldiv@rem+3,f
  6361  0A12  0BB6               	decfsz	??___fldiv,f
  6362  0A13  2A0D               	goto	u3925
  6363  0A14  3001               	movlw	1
  6364  0A15  00B6               	movwf	??___fldiv
  6365  0A16                     u3935:
  6366  0A16  1003               	clrc
  6367  0A17  0DB2               	rlf	___fldiv@b,f
  6368  0A18  0DB3               	rlf	___fldiv@b+1,f
  6369  0A19  0DB4               	rlf	___fldiv@b+2,f
  6370  0A1A  0DB5               	rlf	___fldiv@b+3,f
  6371  0A1B  0BB6               	decfsz	??___fldiv,f
  6372  0A1C  2A16               	goto	u3935
  6373  0A1D                     l2761:
  6374  0A1D  1FC5               	btfss	___fldiv@grs+3,7
  6375  0A1E  2A20               	goto	u3941
  6376  0A1F  2A21               	goto	u3940
  6377  0A20                     u3941:
  6378  0A20  2A22               	goto	l2765
  6379  0A21                     u3940:
  6380  0A21                     l2763:
  6381  0A21  1432               	bsf	___fldiv@b,0
  6382  0A22                     l2765:
  6383  0A22  3001               	movlw	1
  6384  0A23  00B6               	movwf	??___fldiv
  6385  0A24                     u3955:
  6386  0A24  1003               	clrc
  6387  0A25  0DC2               	rlf	___fldiv@grs,f
  6388  0A26  0DC3               	rlf	___fldiv@grs+1,f
  6389  0A27  0DC4               	rlf	___fldiv@grs+2,f
  6390  0A28  0DC5               	rlf	___fldiv@grs+3,f
  6391  0A29  0BB6               	decfsz	??___fldiv,f
  6392  0A2A  2A24               	goto	u3955
  6393  0A2B                     l2767:
  6394  0A2B  0831               	movf	___fldiv@a+3,w
  6395  0A2C  023E               	subwf	___fldiv@rem+3,w
  6396  0A2D  1D03               	skipz
  6397  0A2E  2A39               	goto	u3965
  6398  0A2F  0830               	movf	___fldiv@a+2,w
  6399  0A30  023D               	subwf	___fldiv@rem+2,w
  6400  0A31  1D03               	skipz
  6401  0A32  2A39               	goto	u3965
  6402  0A33  082F               	movf	___fldiv@a+1,w
  6403  0A34  023C               	subwf	___fldiv@rem+1,w
  6404  0A35  1D03               	skipz
  6405  0A36  2A39               	goto	u3965
  6406  0A37  082E               	movf	___fldiv@a,w
  6407  0A38  023B               	subwf	___fldiv@rem,w
  6408  0A39                     u3965:
  6409  0A39  1C03               	skipc
  6410  0A3A  2A3C               	goto	u3961
  6411  0A3B  2A3D               	goto	u3960
  6412  0A3C                     u3961:
  6413  0A3C  2A4C               	goto	l2773
  6414  0A3D                     u3960:
  6415  0A3D                     l2769:
  6416  0A3D  1745               	bsf	___fldiv@grs+3,6
  6417  0A3E                     l2771:
  6418  0A3E  082E               	movf	___fldiv@a,w
  6419  0A3F  02BB               	subwf	___fldiv@rem,f
  6420  0A40  082F               	movf	___fldiv@a+1,w
  6421  0A41  1C03               	skipc
  6422  0A42  0F2F               	incfsz	___fldiv@a+1,w
  6423  0A43  02BC               	subwf	___fldiv@rem+1,f
  6424  0A44  0830               	movf	___fldiv@a+2,w
  6425  0A45  1C03               	skipc
  6426  0A46  0F30               	incfsz	___fldiv@a+2,w
  6427  0A47  02BD               	subwf	___fldiv@rem+2,f
  6428  0A48  0831               	movf	___fldiv@a+3,w
  6429  0A49  1C03               	skipc
  6430  0A4A  0F31               	incfsz	___fldiv@a+3,w
  6431  0A4B  02BE               	subwf	___fldiv@rem+3,f
  6432  0A4C                     l2773:
  6433  0A4C  3001               	movlw	1
  6434  0A4D  00B6               	movwf	??___fldiv
  6435  0A4E  0836               	movf	??___fldiv,w
  6436  0A4F  07C7               	addwf	___fldiv@aexp,f
  6437  0A50                     l2775:
  6438  0A50  301A               	movlw	26
  6439  0A51  0247               	subwf	___fldiv@aexp,w
  6440  0A52  1C03               	skipc
  6441  0A53  2A55               	goto	u3971
  6442  0A54  2A56               	goto	u3970
  6443  0A55                     u3971:
  6444  0A55  2A06               	goto	l2757
  6445  0A56                     u3970:
  6446  0A56                     l2777:
  6447  0A56  083E               	movf	___fldiv@rem+3,w
  6448  0A57  043D               	iorwf	___fldiv@rem+2,w
  6449  0A58  043C               	iorwf	___fldiv@rem+1,w
  6450  0A59  043B               	iorwf	___fldiv@rem,w
  6451  0A5A  1903               	skipnz
  6452  0A5B  2A5D               	goto	u3981
  6453  0A5C  2A5E               	goto	u3980
  6454  0A5D                     u3981:
  6455  0A5D  2A7D               	goto	l2791
  6456  0A5E                     u3980:
  6457  0A5E                     l2779:
  6458  0A5E  1442               	bsf	___fldiv@grs,0
  6459  0A5F  2A7D               	goto	l2791
  6460  0A60                     l2781:
  6461  0A60  3001               	movlw	1
  6462  0A61  00B6               	movwf	??___fldiv
  6463  0A62                     u3995:
  6464  0A62  1003               	clrc
  6465  0A63  0DB2               	rlf	___fldiv@b,f
  6466  0A64  0DB3               	rlf	___fldiv@b+1,f
  6467  0A65  0DB4               	rlf	___fldiv@b+2,f
  6468  0A66  0DB5               	rlf	___fldiv@b+3,f
  6469  0A67  0BB6               	decfsz	??___fldiv,f
  6470  0A68  2A62               	goto	u3995
  6471  0A69                     l2783:
  6472  0A69  1FC5               	btfss	___fldiv@grs+3,7
  6473  0A6A  2A6C               	goto	u4001
  6474  0A6B  2A6D               	goto	u4000
  6475  0A6C                     u4001:
  6476  0A6C  2A6E               	goto	l2787
  6477  0A6D                     u4000:
  6478  0A6D                     l2785:
  6479  0A6D  1432               	bsf	___fldiv@b,0
  6480  0A6E                     l2787:
  6481  0A6E  3001               	movlw	1
  6482  0A6F  00B6               	movwf	??___fldiv
  6483  0A70                     u4015:
  6484  0A70  1003               	clrc
  6485  0A71  0DC2               	rlf	___fldiv@grs,f
  6486  0A72  0DC3               	rlf	___fldiv@grs+1,f
  6487  0A73  0DC4               	rlf	___fldiv@grs+2,f
  6488  0A74  0DC5               	rlf	___fldiv@grs+3,f
  6489  0A75  0BB6               	decfsz	??___fldiv,f
  6490  0A76  2A70               	goto	u4015
  6491  0A77                     l2789:
  6492  0A77  30FF               	movlw	255
  6493  0A78  07C0               	addwf	___fldiv@new_exp,f
  6494  0A79  1803               	skipnc
  6495  0A7A  0AC1               	incf	___fldiv@new_exp+1,f
  6496  0A7B  30FF               	movlw	255
  6497  0A7C  07C1               	addwf	___fldiv@new_exp+1,f
  6498  0A7D                     l2791:
  6499  0A7D  1FB4               	btfss	___fldiv@b+2,7
  6500  0A7E  2A80               	goto	u4021
  6501  0A7F  2A81               	goto	u4020
  6502  0A80                     u4021:
  6503  0A80  2A60               	goto	l2781
  6504  0A81                     u4020:
  6505  0A81                     l2793:
  6506  0A81  01C7               	clrf	___fldiv@aexp
  6507  0A82                     l2795:
  6508  0A82  1FC5               	btfss	___fldiv@grs+3,7
  6509  0A83  2A85               	goto	u4031
  6510  0A84  2A86               	goto	u4030
  6511  0A85                     u4031:
  6512  0A85  2AA2               	goto	l2803
  6513  0A86                     u4030:
  6514  0A86                     l2797:
  6515  0A86  30FF               	movlw	255
  6516  0A87  0542               	andwf	___fldiv@grs,w
  6517  0A88  00B6               	movwf	??___fldiv
  6518  0A89  30FF               	movlw	255
  6519  0A8A  0543               	andwf	___fldiv@grs+1,w
  6520  0A8B  00B7               	movwf	??___fldiv+1
  6521  0A8C  30FF               	movlw	255
  6522  0A8D  0544               	andwf	___fldiv@grs+2,w
  6523  0A8E  00B8               	movwf	??___fldiv+2
  6524  0A8F  307F               	movlw	127
  6525  0A90  0545               	andwf	___fldiv@grs+3,w
  6526  0A91  00B9               	movwf	??___fldiv+3
  6527  0A92  0839               	movf	??___fldiv+3,w
  6528  0A93  0438               	iorwf	??___fldiv+2,w
  6529  0A94  0437               	iorwf	??___fldiv+1,w
  6530  0A95  0436               	iorwf	??___fldiv,w
  6531  0A96  1903               	skipnz
  6532  0A97  2A99               	goto	u4041
  6533  0A98  2A9A               	goto	u4040
  6534  0A99                     u4041:
  6535  0A99  2A9D               	goto	l673
  6536  0A9A                     u4040:
  6537  0A9A                     l2799:
  6538  0A9A  01C7               	clrf	___fldiv@aexp
  6539  0A9B  0AC7               	incf	___fldiv@aexp,f
  6540  0A9C  2AA2               	goto	l2803
  6541  0A9D                     l673:
  6542  0A9D  1C32               	btfss	___fldiv@b,0
  6543  0A9E  2AA0               	goto	u4051
  6544  0A9F  2AA1               	goto	u4050
  6545  0AA0                     u4051:
  6546  0AA0  2AA2               	goto	l2803
  6547  0AA1                     u4050:
  6548  0AA1  2A9A               	goto	l2799
  6549  0AA2                     l2803:
  6550  0AA2  0847               	movf	___fldiv@aexp,w
  6551  0AA3  1903               	btfsc	3,2
  6552  0AA4  2AA6               	goto	u4061
  6553  0AA5  2AA7               	goto	u4060
  6554  0AA6                     u4061:
  6555  0AA6  2AD8               	goto	l2813
  6556  0AA7                     u4060:
  6557  0AA7                     l2805:
  6558  0AA7  3001               	movlw	1
  6559  0AA8  07B2               	addwf	___fldiv@b,f
  6560  0AA9  3000               	movlw	0
  6561  0AAA  1803               	skipnc
  6562  0AAB  3001               	movlw	1
  6563  0AAC  07B3               	addwf	___fldiv@b+1,f
  6564  0AAD  3000               	movlw	0
  6565  0AAE  1803               	skipnc
  6566  0AAF  3001               	movlw	1
  6567  0AB0  07B4               	addwf	___fldiv@b+2,f
  6568  0AB1  3000               	movlw	0
  6569  0AB2  1803               	skipnc
  6570  0AB3  3001               	movlw	1
  6571  0AB4  07B5               	addwf	___fldiv@b+3,f
  6572  0AB5                     l2807:
  6573  0AB5  1C35               	btfss	___fldiv@b+3,0
  6574  0AB6  2AB8               	goto	u4071
  6575  0AB7  2AB9               	goto	u4070
  6576  0AB8                     u4071:
  6577  0AB8  2AD8               	goto	l2813
  6578  0AB9                     u4070:
  6579  0AB9                     l2809:
  6580  0AB9  0832               	movf	___fldiv@b,w
  6581  0ABA  00B6               	movwf	??___fldiv
  6582  0ABB  0833               	movf	___fldiv@b+1,w
  6583  0ABC  00B7               	movwf	??___fldiv+1
  6584  0ABD  0834               	movf	___fldiv@b+2,w
  6585  0ABE  00B8               	movwf	??___fldiv+2
  6586  0ABF  0835               	movf	___fldiv@b+3,w
  6587  0AC0  00B9               	movwf	??___fldiv+3
  6588  0AC1  3001               	movlw	1
  6589  0AC2  00BA               	movwf	??___fldiv+4
  6590  0AC3                     u4085:
  6591  0AC3  0D39               	rlf	??___fldiv+3,w
  6592  0AC4  0CB9               	rrf	??___fldiv+3,f
  6593  0AC5  0CB8               	rrf	??___fldiv+2,f
  6594  0AC6  0CB7               	rrf	??___fldiv+1,f
  6595  0AC7  0CB6               	rrf	??___fldiv,f
  6596  0AC8                     u4080:
  6597  0AC8  0BBA               	decfsz	??___fldiv+4,f
  6598  0AC9  2AC3               	goto	u4085
  6599  0ACA  0839               	movf	??___fldiv+3,w
  6600  0ACB  00B5               	movwf	___fldiv@b+3
  6601  0ACC  0838               	movf	??___fldiv+2,w
  6602  0ACD  00B4               	movwf	___fldiv@b+2
  6603  0ACE  0837               	movf	??___fldiv+1,w
  6604  0ACF  00B3               	movwf	___fldiv@b+1
  6605  0AD0  0836               	movf	??___fldiv,w
  6606  0AD1  00B2               	movwf	___fldiv@b
  6607  0AD2                     l2811:
  6608  0AD2  3001               	movlw	1
  6609  0AD3  07C0               	addwf	___fldiv@new_exp,f
  6610  0AD4  1803               	skipnc
  6611  0AD5  0AC1               	incf	___fldiv@new_exp+1,f
  6612  0AD6  3000               	movlw	0
  6613  0AD7  07C1               	addwf	___fldiv@new_exp+1,f
  6614  0AD8                     l2813:
  6615  0AD8  0841               	movf	___fldiv@new_exp+1,w
  6616  0AD9  3A80               	xorlw	128
  6617  0ADA  00FF               	movwf	btemp+1
  6618  0ADB  3080               	movlw	128
  6619  0ADC  027F               	subwf	btemp+1,w
  6620  0ADD  1D03               	skipz
  6621  0ADE  2AE1               	goto	u4095
  6622  0ADF  30FF               	movlw	255
  6623  0AE0  0240               	subwf	___fldiv@new_exp,w
  6624  0AE1                     u4095:
  6625  0AE1  1C03               	skipc
  6626  0AE2  2AE4               	goto	u4091
  6627  0AE3  2AE5               	goto	u4090
  6628  0AE4                     u4091:
  6629  0AE4  2AF3               	goto	l2817
  6630  0AE5                     u4090:
  6631  0AE5                     l2815:
  6632  0AE5  30FF               	movlw	255
  6633  0AE6  1283               	bcf	3,5	;RP0=0, select bank0
  6634  0AE7  1303               	bcf	3,6	;RP1=0, select bank0
  6635  0AE8  00C0               	movwf	___fldiv@new_exp
  6636  0AE9  3000               	movlw	0
  6637  0AEA  00C1               	movwf	___fldiv@new_exp+1
  6638  0AEB  3000               	movlw	0
  6639  0AEC  00B5               	movwf	___fldiv@b+3
  6640  0AED  3000               	movlw	0
  6641  0AEE  00B4               	movwf	___fldiv@b+2
  6642  0AEF  3000               	movlw	0
  6643  0AF0  00B3               	movwf	___fldiv@b+1
  6644  0AF1  3000               	movlw	0
  6645  0AF2  00B2               	movwf	___fldiv@b
  6646  0AF3                     l2817:
  6647  0AF3  1283               	bcf	3,5	;RP0=0, select bank0
  6648  0AF4  1303               	bcf	3,6	;RP1=0, select bank0
  6649  0AF5  0841               	movf	___fldiv@new_exp+1,w
  6650  0AF6  3A80               	xorlw	128
  6651  0AF7  00FF               	movwf	btemp+1
  6652  0AF8  3080               	movlw	128
  6653  0AF9  027F               	subwf	btemp+1,w
  6654  0AFA  1D03               	skipz
  6655  0AFB  2AFE               	goto	u4105
  6656  0AFC  3001               	movlw	1
  6657  0AFD  0240               	subwf	___fldiv@new_exp,w
  6658  0AFE                     u4105:
  6659  0AFE  1803               	skipnc
  6660  0AFF  2B01               	goto	u4101
  6661  0B00  2B02               	goto	u4100
  6662  0B01                     u4101:
  6663  0B01  2B0F               	goto	l679
  6664  0B02                     u4100:
  6665  0B02                     l2819:
  6666  0B02  1283               	bcf	3,5	;RP0=0, select bank0
  6667  0B03  1303               	bcf	3,6	;RP1=0, select bank0
  6668  0B04  01C0               	clrf	___fldiv@new_exp
  6669  0B05  01C1               	clrf	___fldiv@new_exp+1
  6670  0B06                     l2821:
  6671  0B06  3000               	movlw	0
  6672  0B07  00B5               	movwf	___fldiv@b+3
  6673  0B08  3000               	movlw	0
  6674  0B09  00B4               	movwf	___fldiv@b+2
  6675  0B0A  3000               	movlw	0
  6676  0B0B  00B3               	movwf	___fldiv@b+1
  6677  0B0C  3000               	movlw	0
  6678  0B0D  00B2               	movwf	___fldiv@b
  6679  0B0E                     l2823:
  6680  0B0E  01BF               	clrf	___fldiv@sign
  6681  0B0F                     l679:
  6682  0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  6683  0B10  1303               	bcf	3,6	;RP1=0, select bank0
  6684  0B11  0840               	movf	___fldiv@new_exp,w
  6685  0B12  00B6               	movwf	??___fldiv
  6686  0B13  0836               	movf	??___fldiv,w
  6687  0B14  00C6               	movwf	___fldiv@bexp
  6688  0B15                     l2825:
  6689  0B15  1C46               	btfss	___fldiv@bexp,0
  6690  0B16  2B18               	goto	u4111
  6691  0B17  2B19               	goto	u4110
  6692  0B18                     u4111:
  6693  0B18  2B1B               	goto	l2829
  6694  0B19                     u4110:
  6695  0B19                     l2827:
  6696  0B19  17B4               	bsf	___fldiv@b+2,7
  6697  0B1A  2B1F               	goto	l681
  6698  0B1B                     l2829:
  6699  0B1B  307F               	movlw	127
  6700  0B1C  00B6               	movwf	??___fldiv
  6701  0B1D  0836               	movf	??___fldiv,w
  6702  0B1E  05B4               	andwf	___fldiv@b+2,f
  6703  0B1F                     l681:
  6704  0B1F  0846               	movf	___fldiv@bexp,w
  6705  0B20  00B6               	movwf	??___fldiv
  6706  0B21  1003               	clrc
  6707  0B22  0C36               	rrf	??___fldiv,w
  6708  0B23  00B7               	movwf	??___fldiv+1
  6709  0B24  0837               	movf	??___fldiv+1,w
  6710  0B25  00B5               	movwf	___fldiv@b+3
  6711  0B26  083F               	movf	___fldiv@sign,w
  6712  0B27  00B6               	movwf	??___fldiv
  6713  0B28  0836               	movf	??___fldiv,w
  6714  0B29  04B5               	iorwf	___fldiv@b+3,f
  6715  0B2A  29C3               	goto	l2737
  6716  0B2B                     l659:
  6717  0B2B  0008               	return
  6718  0B2C                     __end_of___fldiv:
  6719                           
  6720                           	psect	text18
  6721  0D78                     __ptext18:	
  6722 ;; *************** function ___fladd *****************
  6723 ;; Defined at:
  6724 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  b               4   40[BANK0 ] unsigned char 
  6727 ;;  a               4   44[BANK0 ] unsigned char 
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;  grs             1   59[BANK0 ] unsigned char 
  6730 ;;  bexp            1   58[BANK0 ] unsigned char 
  6731 ;;  aexp            1   57[BANK0 ] unsigned char 
  6732 ;;  signs           1   56[BANK0 ] unsigned char 
  6733 ;; Return value:  Size  Location     Type
  6734 ;;                  4   40[BANK0 ] unsigned char 
  6735 ;; Registers used:
  6736 ;;		wreg, status,2, status,0, btemp+1
  6737 ;; Tracked objects:
  6738 ;;		On entry : 0/0
  6739 ;;		On exit  : 0/0
  6740 ;;		Unchanged: 0/0
  6741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6742 ;;      Params:         0       8       0       0       0
  6743 ;;      Locals:         0       4       0       0       0
  6744 ;;      Temps:          0       8       0       0       0
  6745 ;;      Totals:         0      20       0       0       0
  6746 ;;Total ram usage:       20 bytes
  6747 ;; Hardware stack levels used:    1
  6748 ;; Hardware stack levels required when called:    1
  6749 ;; This function calls:
  6750 ;;		Nothing
  6751 ;; This function is called by:
  6752 ;;		_readMPU
  6753 ;;		___flsub
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           
  6758                           ;psect for function ___fladd
  6759  0D78                     ___fladd:
  6760  0D78                     l2035:	
  6761                           ;incstack = 0
  6762                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6763                           
  6764  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  6765  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  6766  0D7A  084B               	movf	___fladd@b+3,w
  6767  0D7B  3980               	andlw	128
  6768  0D7C  00D0               	movwf	??___fladd
  6769  0D7D  0850               	movf	??___fladd,w
  6770  0D7E  00D8               	movwf	___fladd@signs
  6771  0D7F                     l2037:
  6772  0D7F  084B               	movf	___fladd@b+3,w
  6773  0D80  00D0               	movwf	??___fladd
  6774  0D81  0750               	addwf	??___fladd,w
  6775  0D82  00D1               	movwf	??___fladd+1
  6776  0D83  0851               	movf	??___fladd+1,w
  6777  0D84  00DA               	movwf	___fladd@bexp
  6778  0D85                     l2039:
  6779  0D85  1FCA               	btfss	___fladd@b+2,7
  6780  0D86  2D88               	goto	u2321
  6781  0D87  2D89               	goto	u2320
  6782  0D88                     u2321:
  6783  0D88  2D8A               	goto	l2043
  6784  0D89                     u2320:
  6785  0D89                     l2041:
  6786  0D89  145A               	bsf	___fladd@bexp,0
  6787  0D8A                     l2043:
  6788  0D8A  085A               	movf	___fladd@bexp,w
  6789  0D8B  1903               	btfsc	3,2
  6790  0D8C  2D8E               	goto	u2331
  6791  0D8D  2D8F               	goto	u2330
  6792  0D8E                     u2331:
  6793  0D8E  2D9F               	goto	l2053
  6794  0D8F                     u2330:
  6795  0D8F                     l2045:
  6796  0D8F  0A5A               	incf	___fladd@bexp,w
  6797  0D90  1D03               	btfss	3,2
  6798  0D91  2D93               	goto	u2341
  6799  0D92  2D94               	goto	u2340
  6800  0D93                     u2341:
  6801  0D93  2D9C               	goto	l2049
  6802  0D94                     u2340:
  6803  0D94                     l2047:
  6804  0D94  3000               	movlw	0
  6805  0D95  00CB               	movwf	___fladd@b+3
  6806  0D96  3000               	movlw	0
  6807  0D97  00CA               	movwf	___fladd@b+2
  6808  0D98  3000               	movlw	0
  6809  0D99  00C9               	movwf	___fladd@b+1
  6810  0D9A  3000               	movlw	0
  6811  0D9B  00C8               	movwf	___fladd@b
  6812  0D9C                     l2049:
  6813  0D9C  17CA               	bsf	___fladd@b+2,7
  6814  0D9D                     l2051:
  6815  0D9D  01CB               	clrf	___fladd@b+3
  6816  0D9E  2DA7               	goto	l2055
  6817  0D9F                     l2053:
  6818  0D9F  3000               	movlw	0
  6819  0DA0  00CB               	movwf	___fladd@b+3
  6820  0DA1  3000               	movlw	0
  6821  0DA2  00CA               	movwf	___fladd@b+2
  6822  0DA3  3000               	movlw	0
  6823  0DA4  00C9               	movwf	___fladd@b+1
  6824  0DA5  3000               	movlw	0
  6825  0DA6  00C8               	movwf	___fladd@b
  6826  0DA7                     l2055:
  6827  0DA7  084F               	movf	___fladd@a+3,w
  6828  0DA8  3980               	andlw	128
  6829  0DA9  00D0               	movwf	??___fladd
  6830  0DAA  0850               	movf	??___fladd,w
  6831  0DAB  00D9               	movwf	___fladd@aexp
  6832  0DAC                     l2057:
  6833  0DAC  0859               	movf	___fladd@aexp,w
  6834  0DAD  0658               	xorwf	___fladd@signs,w
  6835  0DAE  1903               	skipnz
  6836  0DAF  2DB1               	goto	u2351
  6837  0DB0  2DB2               	goto	u2350
  6838  0DB1                     u2351:
  6839  0DB1  2DB3               	goto	l2061
  6840  0DB2                     u2350:
  6841  0DB2                     l2059:
  6842  0DB2  1758               	bsf	___fladd@signs,6
  6843  0DB3                     l2061:
  6844  0DB3  084F               	movf	___fladd@a+3,w
  6845  0DB4  00D0               	movwf	??___fladd
  6846  0DB5  0750               	addwf	??___fladd,w
  6847  0DB6  00D1               	movwf	??___fladd+1
  6848  0DB7  0851               	movf	??___fladd+1,w
  6849  0DB8  00D9               	movwf	___fladd@aexp
  6850  0DB9                     l2063:
  6851  0DB9  1FCE               	btfss	___fladd@a+2,7
  6852  0DBA  2DBC               	goto	u2361
  6853  0DBB  2DBD               	goto	u2360
  6854  0DBC                     u2361:
  6855  0DBC  2DBE               	goto	l2067
  6856  0DBD                     u2360:
  6857  0DBD                     l2065:
  6858  0DBD  1459               	bsf	___fladd@aexp,0
  6859  0DBE                     l2067:
  6860  0DBE  0859               	movf	___fladd@aexp,w
  6861  0DBF  1903               	btfsc	3,2
  6862  0DC0  2DC2               	goto	u2371
  6863  0DC1  2DC3               	goto	u2370
  6864  0DC2                     u2371:
  6865  0DC2  2DD3               	goto	l2077
  6866  0DC3                     u2370:
  6867  0DC3                     l2069:
  6868  0DC3  0A59               	incf	___fladd@aexp,w
  6869  0DC4  1D03               	btfss	3,2
  6870  0DC5  2DC7               	goto	u2381
  6871  0DC6  2DC8               	goto	u2380
  6872  0DC7                     u2381:
  6873  0DC7  2DD0               	goto	l2073
  6874  0DC8                     u2380:
  6875  0DC8                     l2071:
  6876  0DC8  3000               	movlw	0
  6877  0DC9  00CF               	movwf	___fladd@a+3
  6878  0DCA  3000               	movlw	0
  6879  0DCB  00CE               	movwf	___fladd@a+2
  6880  0DCC  3000               	movlw	0
  6881  0DCD  00CD               	movwf	___fladd@a+1
  6882  0DCE  3000               	movlw	0
  6883  0DCF  00CC               	movwf	___fladd@a
  6884  0DD0                     l2073:
  6885  0DD0  17CE               	bsf	___fladd@a+2,7
  6886  0DD1                     l2075:
  6887  0DD1  01CF               	clrf	___fladd@a+3
  6888  0DD2  2DDB               	goto	l601
  6889  0DD3                     l2077:
  6890  0DD3  3000               	movlw	0
  6891  0DD4  00CF               	movwf	___fladd@a+3
  6892  0DD5  3000               	movlw	0
  6893  0DD6  00CE               	movwf	___fladd@a+2
  6894  0DD7  3000               	movlw	0
  6895  0DD8  00CD               	movwf	___fladd@a+1
  6896  0DD9  3000               	movlw	0
  6897  0DDA  00CC               	movwf	___fladd@a
  6898  0DDB                     l601:
  6899  0DDB  085A               	movf	___fladd@bexp,w
  6900  0DDC  0259               	subwf	___fladd@aexp,w
  6901  0DDD  1803               	skipnc
  6902  0DDE  2DE0               	goto	u2391
  6903  0DDF  2DE1               	goto	u2390
  6904  0DE0                     u2391:
  6905  0DE0  2E25               	goto	l2113
  6906  0DE1                     u2390:
  6907  0DE1                     l2079:
  6908  0DE1  1F58               	btfss	___fladd@signs,6
  6909  0DE2  2DE4               	goto	u2401
  6910  0DE3  2DE5               	goto	u2400
  6911  0DE4                     u2401:
  6912  0DE4  2DE9               	goto	l2083
  6913  0DE5                     u2400:
  6914  0DE5                     l2081:
  6915  0DE5  3080               	movlw	128
  6916  0DE6  00D0               	movwf	??___fladd
  6917  0DE7  0850               	movf	??___fladd,w
  6918  0DE8  06D8               	xorwf	___fladd@signs,f
  6919  0DE9                     l2083:
  6920  0DE9  085A               	movf	___fladd@bexp,w
  6921  0DEA  00D0               	movwf	??___fladd
  6922  0DEB  0850               	movf	??___fladd,w
  6923  0DEC  00DB               	movwf	___fladd@grs
  6924  0DED                     l2085:
  6925  0DED  0859               	movf	___fladd@aexp,w
  6926  0DEE  00D0               	movwf	??___fladd
  6927  0DEF  0850               	movf	??___fladd,w
  6928  0DF0  00DA               	movwf	___fladd@bexp
  6929  0DF1                     l2087:
  6930  0DF1  085B               	movf	___fladd@grs,w
  6931  0DF2  00D0               	movwf	??___fladd
  6932  0DF3  0850               	movf	??___fladd,w
  6933  0DF4  00D9               	movwf	___fladd@aexp
  6934  0DF5                     l2089:
  6935  0DF5  0848               	movf	___fladd@b,w
  6936  0DF6  00D0               	movwf	??___fladd
  6937  0DF7  0850               	movf	??___fladd,w
  6938  0DF8  00DB               	movwf	___fladd@grs
  6939  0DF9                     l2091:
  6940  0DF9  084C               	movf	___fladd@a,w
  6941  0DFA  00D0               	movwf	??___fladd
  6942  0DFB  0850               	movf	??___fladd,w
  6943  0DFC  00C8               	movwf	___fladd@b
  6944  0DFD                     l2093:
  6945  0DFD  085B               	movf	___fladd@grs,w
  6946  0DFE  00D0               	movwf	??___fladd
  6947  0DFF  0850               	movf	??___fladd,w
  6948  0E00  00CC               	movwf	___fladd@a
  6949  0E01                     l2095:
  6950  0E01  0849               	movf	___fladd@b+1,w
  6951  0E02  00D0               	movwf	??___fladd
  6952  0E03  0850               	movf	??___fladd,w
  6953  0E04  00DB               	movwf	___fladd@grs
  6954  0E05                     l2097:
  6955  0E05  084D               	movf	___fladd@a+1,w
  6956  0E06  00D0               	movwf	??___fladd
  6957  0E07  0850               	movf	??___fladd,w
  6958  0E08  00C9               	movwf	___fladd@b+1
  6959  0E09                     l2099:
  6960  0E09  085B               	movf	___fladd@grs,w
  6961  0E0A  00D0               	movwf	??___fladd
  6962  0E0B  0850               	movf	??___fladd,w
  6963  0E0C  00CD               	movwf	___fladd@a+1
  6964  0E0D                     l2101:
  6965  0E0D  084A               	movf	___fladd@b+2,w
  6966  0E0E  00D0               	movwf	??___fladd
  6967  0E0F  0850               	movf	??___fladd,w
  6968  0E10  00DB               	movwf	___fladd@grs
  6969  0E11                     l2103:
  6970  0E11  084E               	movf	___fladd@a+2,w
  6971  0E12  00D0               	movwf	??___fladd
  6972  0E13  0850               	movf	??___fladd,w
  6973  0E14  00CA               	movwf	___fladd@b+2
  6974  0E15                     l2105:
  6975  0E15  085B               	movf	___fladd@grs,w
  6976  0E16  00D0               	movwf	??___fladd
  6977  0E17  0850               	movf	??___fladd,w
  6978  0E18  00CE               	movwf	___fladd@a+2
  6979  0E19                     l2107:
  6980  0E19  084B               	movf	___fladd@b+3,w
  6981  0E1A  00D0               	movwf	??___fladd
  6982  0E1B  0850               	movf	??___fladd,w
  6983  0E1C  00DB               	movwf	___fladd@grs
  6984  0E1D                     l2109:
  6985  0E1D  084F               	movf	___fladd@a+3,w
  6986  0E1E  00D0               	movwf	??___fladd
  6987  0E1F  0850               	movf	??___fladd,w
  6988  0E20  00CB               	movwf	___fladd@b+3
  6989  0E21                     l2111:
  6990  0E21  085B               	movf	___fladd@grs,w
  6991  0E22  00D0               	movwf	??___fladd
  6992  0E23  0850               	movf	??___fladd,w
  6993  0E24  00CF               	movwf	___fladd@a+3
  6994  0E25                     l2113:
  6995  0E25  01DB               	clrf	___fladd@grs
  6996  0E26                     l2115:
  6997  0E26  0859               	movf	___fladd@aexp,w
  6998  0E27  00D0               	movwf	??___fladd
  6999  0E28  01D1               	clrf	??___fladd+1
  7000  0E29  0851               	movf	??___fladd+1,w
  7001  0E2A  00D3               	movwf	??___fladd+3
  7002  0E2B  085A               	movf	___fladd@bexp,w
  7003  0E2C  0250               	subwf	??___fladd,w
  7004  0E2D  00D2               	movwf	??___fladd+2
  7005  0E2E  1C03               	skipc
  7006  0E2F  03D3               	decf	??___fladd+3,f
  7007  0E30  0853               	movf	??___fladd+3,w
  7008  0E31  3A80               	xorlw	128
  7009  0E32  00FF               	movwf	btemp+1
  7010  0E33  3080               	movlw	128
  7011  0E34  027F               	subwf	btemp+1,w
  7012  0E35  1D03               	skipz
  7013  0E36  2E39               	goto	u2415
  7014  0E37  301A               	movlw	26
  7015  0E38  0252               	subwf	??___fladd+2,w
  7016  0E39                     u2415:
  7017  0E39  1C03               	skipc
  7018  0E3A  2E3C               	goto	u2411
  7019  0E3B  2E3D               	goto	u2410
  7020  0E3C                     u2411:
  7021  0E3C  2E7A               	goto	l2131
  7022  0E3D                     u2410:
  7023  0E3D                     l2117:
  7024  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  7025  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  7026  0E3F  084B               	movf	___fladd@b+3,w
  7027  0E40  044A               	iorwf	___fladd@b+2,w
  7028  0E41  0449               	iorwf	___fladd@b+1,w
  7029  0E42  0448               	iorwf	___fladd@b,w
  7030  0E43  1D03               	skipz
  7031  0E44  2E46               	goto	u2421
  7032  0E45  2E48               	goto	u2420
  7033  0E46                     u2421:
  7034  0E46  3001               	movlw	1
  7035  0E47  2E49               	goto	u2430
  7036  0E48                     u2420:
  7037  0E48  3000               	movlw	0
  7038  0E49                     u2430:
  7039  0E49  00D0               	movwf	??___fladd
  7040  0E4A  0850               	movf	??___fladd,w
  7041  0E4B  00DB               	movwf	___fladd@grs
  7042  0E4C  3000               	movlw	0
  7043  0E4D  00CB               	movwf	___fladd@b+3
  7044  0E4E  3000               	movlw	0
  7045  0E4F  00CA               	movwf	___fladd@b+2
  7046  0E50  3000               	movlw	0
  7047  0E51  00C9               	movwf	___fladd@b+1
  7048  0E52  3000               	movlw	0
  7049  0E53  00C8               	movwf	___fladd@b
  7050  0E54  0859               	movf	___fladd@aexp,w
  7051  0E55  00D0               	movwf	??___fladd
  7052  0E56  0850               	movf	??___fladd,w
  7053  0E57  00DA               	movwf	___fladd@bexp
  7054  0E58  2E82               	goto	l605
  7055  0E59                     l607:
  7056  0E59  1C5B               	btfss	___fladd@grs,0
  7057  0E5A  2E5C               	goto	u2441
  7058  0E5B  2E5D               	goto	u2440
  7059  0E5C                     u2441:
  7060  0E5C  2E66               	goto	l2121
  7061  0E5D                     u2440:
  7062  0E5D                     l2119:
  7063  0E5D  085B               	movf	___fladd@grs,w
  7064  0E5E  00D0               	movwf	??___fladd
  7065  0E5F  1003               	clrc
  7066  0E60  0C50               	rrf	??___fladd,w
  7067  0E61  3801               	iorlw	1
  7068  0E62  00D1               	movwf	??___fladd+1
  7069  0E63  0851               	movf	??___fladd+1,w
  7070  0E64  00DB               	movwf	___fladd@grs
  7071  0E65  2E68               	goto	l2123
  7072  0E66                     l2121:
  7073  0E66  1003               	clrc
  7074  0E67  0CDB               	rrf	___fladd@grs,f
  7075  0E68                     l2123:
  7076  0E68  1C48               	btfss	___fladd@b,0
  7077  0E69  2E6B               	goto	u2451
  7078  0E6A  2E6C               	goto	u2450
  7079  0E6B                     u2451:
  7080  0E6B  2E6D               	goto	l2127
  7081  0E6C                     u2450:
  7082  0E6C                     l2125:
  7083  0E6C  17DB               	bsf	___fladd@grs,7
  7084  0E6D                     l2127:
  7085  0E6D  3001               	movlw	1
  7086  0E6E  00D0               	movwf	??___fladd
  7087  0E6F                     u2465:
  7088  0E6F  0D4B               	rlf	___fladd@b+3,w
  7089  0E70  0CCB               	rrf	___fladd@b+3,f
  7090  0E71  0CCA               	rrf	___fladd@b+2,f
  7091  0E72  0CC9               	rrf	___fladd@b+1,f
  7092  0E73  0CC8               	rrf	___fladd@b,f
  7093  0E74  0BD0               	decfsz	??___fladd& (0+127),f
  7094  0E75  2E6F               	goto	u2465
  7095  0E76                     l2129:
  7096  0E76  3001               	movlw	1
  7097  0E77  00D0               	movwf	??___fladd
  7098  0E78  0850               	movf	??___fladd,w
  7099  0E79  07DA               	addwf	___fladd@bexp,f
  7100  0E7A                     l2131:
  7101  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  7102  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  7103  0E7C  0859               	movf	___fladd@aexp,w
  7104  0E7D  025A               	subwf	___fladd@bexp,w
  7105  0E7E  1C03               	skipc
  7106  0E7F  2E81               	goto	u2471
  7107  0E80  2E82               	goto	u2470
  7108  0E81                     u2471:
  7109  0E81  2E59               	goto	l607
  7110  0E82                     u2470:
  7111  0E82                     l605:
  7112  0E82  1B58               	btfsc	___fladd@signs,6
  7113  0E83  2E85               	goto	u2481
  7114  0E84  2E86               	goto	u2480
  7115  0E85                     u2481:
  7116  0E85  2ED1               	goto	l2157
  7117  0E86                     u2480:
  7118  0E86                     l2133:
  7119  0E86  085A               	movf	___fladd@bexp,w
  7120  0E87  1D03               	btfss	3,2
  7121  0E88  2E8A               	goto	u2491
  7122  0E89  2E8B               	goto	u2490
  7123  0E8A                     u2491:
  7124  0E8A  2E94               	goto	l2139
  7125  0E8B                     u2490:
  7126  0E8B                     l2135:
  7127  0E8B  3000               	movlw	0
  7128  0E8C  00CB               	movwf	?___fladd+3
  7129  0E8D  3000               	movlw	0
  7130  0E8E  00CA               	movwf	?___fladd+2
  7131  0E8F  3000               	movlw	0
  7132  0E90  00C9               	movwf	?___fladd+1
  7133  0E91  3000               	movlw	0
  7134  0E92  00C8               	movwf	?___fladd
  7135  0E93  2FFF               	goto	l614
  7136  0E94                     l2139:
  7137  0E94  084C               	movf	___fladd@a,w
  7138  0E95  07C8               	addwf	___fladd@b,f
  7139  0E96  084D               	movf	___fladd@a+1,w
  7140  0E97  1103               	clrz
  7141  0E98  1803               	skipnc
  7142  0E99  3E01               	addlw	1
  7143  0E9A  1903               	skipnz
  7144  0E9B  2E9D               	goto	u2501
  7145  0E9C  07C9               	addwf	___fladd@b+1,f
  7146  0E9D                     u2501:
  7147  0E9D  084E               	movf	___fladd@a+2,w
  7148  0E9E  1103               	clrz
  7149  0E9F  1803               	skipnc
  7150  0EA0  3E01               	addlw	1
  7151  0EA1  1903               	skipnz
  7152  0EA2  2EA4               	goto	u2502
  7153  0EA3  07CA               	addwf	___fladd@b+2,f
  7154  0EA4                     u2502:
  7155  0EA4  084F               	movf	___fladd@a+3,w
  7156  0EA5  1103               	clrz
  7157  0EA6  1803               	skipnc
  7158  0EA7  3E01               	addlw	1
  7159  0EA8  1903               	skipnz
  7160  0EA9  2EAB               	goto	u2503
  7161  0EAA  07CB               	addwf	___fladd@b+3,f
  7162  0EAB                     u2503:
  7163  0EAB                     l2141:
  7164  0EAB  1C4B               	btfss	___fladd@b+3,0
  7165  0EAC  2EAE               	goto	u2511
  7166  0EAD  2EAF               	goto	u2510
  7167  0EAE                     u2511:
  7168  0EAE  2F85               	goto	l2191
  7169  0EAF                     u2510:
  7170  0EAF                     l2143:
  7171  0EAF  1C5B               	btfss	___fladd@grs,0
  7172  0EB0  2EB2               	goto	u2521
  7173  0EB1  2EB3               	goto	u2520
  7174  0EB2                     u2521:
  7175  0EB2  2EBC               	goto	l2147
  7176  0EB3                     u2520:
  7177  0EB3                     l2145:
  7178  0EB3  085B               	movf	___fladd@grs,w
  7179  0EB4  00D0               	movwf	??___fladd
  7180  0EB5  1003               	clrc
  7181  0EB6  0C50               	rrf	??___fladd,w
  7182  0EB7  3801               	iorlw	1
  7183  0EB8  00D1               	movwf	??___fladd+1
  7184  0EB9  0851               	movf	??___fladd+1,w
  7185  0EBA  00DB               	movwf	___fladd@grs
  7186  0EBB  2EBE               	goto	l2149
  7187  0EBC                     l2147:
  7188  0EBC  1003               	clrc
  7189  0EBD  0CDB               	rrf	___fladd@grs,f
  7190  0EBE                     l2149:
  7191  0EBE  1C48               	btfss	___fladd@b,0
  7192  0EBF  2EC1               	goto	u2531
  7193  0EC0  2EC2               	goto	u2530
  7194  0EC1                     u2531:
  7195  0EC1  2EC3               	goto	l2153
  7196  0EC2                     u2530:
  7197  0EC2                     l2151:
  7198  0EC2  17DB               	bsf	___fladd@grs,7
  7199  0EC3                     l2153:
  7200  0EC3  3001               	movlw	1
  7201  0EC4  00D0               	movwf	??___fladd
  7202  0EC5                     u2545:
  7203  0EC5  0D4B               	rlf	___fladd@b+3,w
  7204  0EC6  0CCB               	rrf	___fladd@b+3,f
  7205  0EC7  0CCA               	rrf	___fladd@b+2,f
  7206  0EC8  0CC9               	rrf	___fladd@b+1,f
  7207  0EC9  0CC8               	rrf	___fladd@b,f
  7208  0ECA  0BD0               	decfsz	??___fladd& (0+127),f
  7209  0ECB  2EC5               	goto	u2545
  7210  0ECC                     l2155:
  7211  0ECC  3001               	movlw	1
  7212  0ECD  00D0               	movwf	??___fladd
  7213  0ECE  0850               	movf	??___fladd,w
  7214  0ECF  07DA               	addwf	___fladd@bexp,f
  7215  0ED0  2F85               	goto	l2191
  7216  0ED1                     l2157:
  7217  0ED1  084B               	movf	___fladd@b+3,w
  7218  0ED2  3A80               	xorlw	128
  7219  0ED3  00FF               	movwf	btemp+1
  7220  0ED4  084F               	movf	___fladd@a+3,w
  7221  0ED5  3A80               	xorlw	128
  7222  0ED6  027F               	subwf	btemp+1,w
  7223  0ED7  1D03               	skipz
  7224  0ED8  2EE3               	goto	u2553
  7225  0ED9  084E               	movf	___fladd@a+2,w
  7226  0EDA  024A               	subwf	___fladd@b+2,w
  7227  0EDB  1D03               	skipz
  7228  0EDC  2EE3               	goto	u2553
  7229  0EDD  084D               	movf	___fladd@a+1,w
  7230  0EDE  0249               	subwf	___fladd@b+1,w
  7231  0EDF  1D03               	skipz
  7232  0EE0  2EE3               	goto	u2553
  7233  0EE1  084C               	movf	___fladd@a,w
  7234  0EE2  0248               	subwf	___fladd@b,w
  7235  0EE3                     u2553:
  7236  0EE3  1803               	skipnc
  7237  0EE4  2EE6               	goto	u2551
  7238  0EE5  2EE7               	goto	u2550
  7239  0EE6                     u2551:
  7240  0EE6  2F3F               	goto	l2167
  7241  0EE7                     u2550:
  7242  0EE7                     l2159:
  7243  0EE7  30FF               	movlw	255
  7244  0EE8  00D0               	movwf	??___fladd
  7245  0EE9  30FF               	movlw	255
  7246  0EEA  00D1               	movwf	??___fladd+1
  7247  0EEB  30FF               	movlw	255
  7248  0EEC  00D2               	movwf	??___fladd+2
  7249  0EED  30FF               	movlw	255
  7250  0EEE  00D3               	movwf	??___fladd+3
  7251  0EEF  084C               	movf	___fladd@a,w
  7252  0EF0  00D4               	movwf	??___fladd+4
  7253  0EF1  084D               	movf	___fladd@a+1,w
  7254  0EF2  00D5               	movwf	??___fladd+5
  7255  0EF3  084E               	movf	___fladd@a+2,w
  7256  0EF4  00D6               	movwf	??___fladd+6
  7257  0EF5  084F               	movf	___fladd@a+3,w
  7258  0EF6  00D7               	movwf	??___fladd+7
  7259  0EF7  0848               	movf	___fladd@b,w
  7260  0EF8  02D4               	subwf	??___fladd+4,f
  7261  0EF9  0849               	movf	___fladd@b+1,w
  7262  0EFA  1C03               	skipc
  7263  0EFB  0F49               	incfsz	___fladd@b+1,w
  7264  0EFC  2EFE               	goto	u2561
  7265  0EFD  2EFF               	goto	u2562
  7266  0EFE                     u2561:
  7267  0EFE  02D5               	subwf	??___fladd+5,f
  7268  0EFF                     u2562:
  7269  0EFF  084A               	movf	___fladd@b+2,w
  7270  0F00  1C03               	skipc
  7271  0F01  0F4A               	incfsz	___fladd@b+2,w
  7272  0F02  2F04               	goto	u2563
  7273  0F03  2F05               	goto	u2564
  7274  0F04                     u2563:
  7275  0F04  02D6               	subwf	??___fladd+6,f
  7276  0F05                     u2564:
  7277  0F05  084B               	movf	___fladd@b+3,w
  7278  0F06  1C03               	skipc
  7279  0F07  0F4B               	incfsz	___fladd@b+3,w
  7280  0F08  2F0A               	goto	u2565
  7281  0F09  2F0B               	goto	u2566
  7282  0F0A                     u2565:
  7283  0F0A  02D7               	subwf	??___fladd+7,f
  7284  0F0B                     u2566:
  7285  0F0B  0854               	movf	??___fladd+4,w
  7286  0F0C  07D0               	addwf	??___fladd,f
  7287  0F0D  0855               	movf	??___fladd+5,w
  7288  0F0E  1803               	skipnc
  7289  0F0F  0F55               	incfsz	??___fladd+5,w
  7290  0F10  2F12               	goto	u2570
  7291  0F11  2F13               	goto	u2571
  7292  0F12                     u2570:
  7293  0F12  07D1               	addwf	??___fladd+1,f
  7294  0F13                     u2571:
  7295  0F13  0856               	movf	??___fladd+6,w
  7296  0F14  1803               	skipnc
  7297  0F15  0F56               	incfsz	??___fladd+6,w
  7298  0F16  2F18               	goto	u2572
  7299  0F17  2F19               	goto	u2573
  7300  0F18                     u2572:
  7301  0F18  07D2               	addwf	??___fladd+2,f
  7302  0F19                     u2573:
  7303  0F19  0857               	movf	??___fladd+7,w
  7304  0F1A  1803               	skipnc
  7305  0F1B  0A57               	incf	??___fladd+7,w
  7306  0F1C  07D3               	addwf	??___fladd+3,f
  7307  0F1D  0853               	movf	??___fladd+3,w
  7308  0F1E  00CB               	movwf	___fladd@b+3
  7309  0F1F  0852               	movf	??___fladd+2,w
  7310  0F20  00CA               	movwf	___fladd@b+2
  7311  0F21  0851               	movf	??___fladd+1,w
  7312  0F22  00C9               	movwf	___fladd@b+1
  7313  0F23  0850               	movf	??___fladd,w
  7314  0F24  00C8               	movwf	___fladd@b
  7315  0F25                     l2161:
  7316  0F25  3080               	movlw	128
  7317  0F26  00D0               	movwf	??___fladd
  7318  0F27  0850               	movf	??___fladd,w
  7319  0F28  06D8               	xorwf	___fladd@signs,f
  7320  0F29  09DB               	comf	___fladd@grs,f
  7321  0F2A  0ADB               	incf	___fladd@grs,f
  7322  0F2B                     l2163:
  7323  0F2B  085B               	movf	___fladd@grs,w
  7324  0F2C  1D03               	btfss	3,2
  7325  0F2D  2F2F               	goto	u2581
  7326  0F2E  2F30               	goto	u2580
  7327  0F2F                     u2581:
  7328  0F2F  2F4D               	goto	l622
  7329  0F30                     u2580:
  7330  0F30                     l2165:
  7331  0F30  3001               	movlw	1
  7332  0F31  07C8               	addwf	___fladd@b,f
  7333  0F32  3000               	movlw	0
  7334  0F33  1803               	skipnc
  7335  0F34  3001               	movlw	1
  7336  0F35  07C9               	addwf	___fladd@b+1,f
  7337  0F36  3000               	movlw	0
  7338  0F37  1803               	skipnc
  7339  0F38  3001               	movlw	1
  7340  0F39  07CA               	addwf	___fladd@b+2,f
  7341  0F3A  3000               	movlw	0
  7342  0F3B  1803               	skipnc
  7343  0F3C  3001               	movlw	1
  7344  0F3D  07CB               	addwf	___fladd@b+3,f
  7345  0F3E  2F4D               	goto	l622
  7346  0F3F                     l2167:
  7347  0F3F  084C               	movf	___fladd@a,w
  7348  0F40  02C8               	subwf	___fladd@b,f
  7349  0F41  084D               	movf	___fladd@a+1,w
  7350  0F42  1C03               	skipc
  7351  0F43  0F4D               	incfsz	___fladd@a+1,w
  7352  0F44  02C9               	subwf	___fladd@b+1,f
  7353  0F45  084E               	movf	___fladd@a+2,w
  7354  0F46  1C03               	skipc
  7355  0F47  0F4E               	incfsz	___fladd@a+2,w
  7356  0F48  02CA               	subwf	___fladd@b+2,f
  7357  0F49  084F               	movf	___fladd@a+3,w
  7358  0F4A  1C03               	skipc
  7359  0F4B  0F4F               	incfsz	___fladd@a+3,w
  7360  0F4C  02CB               	subwf	___fladd@b+3,f
  7361  0F4D                     l622:
  7362  0F4D  084B               	movf	___fladd@b+3,w
  7363  0F4E  044A               	iorwf	___fladd@b+2,w
  7364  0F4F  0449               	iorwf	___fladd@b+1,w
  7365  0F50  0448               	iorwf	___fladd@b,w
  7366  0F51  1D03               	skipz
  7367  0F52  2F54               	goto	u2591
  7368  0F53  2F55               	goto	u2590
  7369  0F54                     u2591:
  7370  0F54  2F81               	goto	l2189
  7371  0F55                     u2590:
  7372  0F55                     l2169:
  7373  0F55  085B               	movf	___fladd@grs,w
  7374  0F56  1D03               	btfss	3,2
  7375  0F57  2F59               	goto	u2601
  7376  0F58  2F5A               	goto	u2600
  7377  0F59                     u2601:
  7378  0F59  2F81               	goto	l2189
  7379  0F5A                     u2600:
  7380  0F5A                     l2171:
  7381  0F5A  3000               	movlw	0
  7382  0F5B  00CB               	movwf	?___fladd+3
  7383  0F5C  3000               	movlw	0
  7384  0F5D  00CA               	movwf	?___fladd+2
  7385  0F5E  3000               	movlw	0
  7386  0F5F  00C9               	movwf	?___fladd+1
  7387  0F60  3000               	movlw	0
  7388  0F61  00C8               	movwf	?___fladd
  7389  0F62  2FFF               	goto	l614
  7390  0F63                     l2175:
  7391  0F63  3001               	movlw	1
  7392  0F64  00D0               	movwf	??___fladd
  7393  0F65                     u2615:
  7394  0F65  1003               	clrc
  7395  0F66  0DC8               	rlf	___fladd@b,f
  7396  0F67  0DC9               	rlf	___fladd@b+1,f
  7397  0F68  0DCA               	rlf	___fladd@b+2,f
  7398  0F69  0DCB               	rlf	___fladd@b+3,f
  7399  0F6A  0BD0               	decfsz	??___fladd,f
  7400  0F6B  2F65               	goto	u2615
  7401  0F6C                     l2177:
  7402  0F6C  1FDB               	btfss	___fladd@grs,7
  7403  0F6D  2F6F               	goto	u2621
  7404  0F6E  2F70               	goto	u2620
  7405  0F6F                     u2621:
  7406  0F6F  2F71               	goto	l626
  7407  0F70                     u2620:
  7408  0F70                     l2179:
  7409  0F70  1448               	bsf	___fladd@b,0
  7410  0F71                     l626:
  7411  0F71  1C5B               	btfss	___fladd@grs,0
  7412  0F72  2F74               	goto	u2631
  7413  0F73  2F75               	goto	u2630
  7414  0F74                     u2631:
  7415  0F74  2F78               	goto	l2183
  7416  0F75                     u2630:
  7417  0F75                     l2181:
  7418  0F75  1403               	setc
  7419  0F76  0DDB               	rlf	___fladd@grs,f
  7420  0F77  2F7A               	goto	l2185
  7421  0F78                     l2183:
  7422  0F78  1003               	clrc
  7423  0F79  0DDB               	rlf	___fladd@grs,f
  7424  0F7A                     l2185:
  7425  0F7A  085A               	movf	___fladd@bexp,w
  7426  0F7B  1903               	btfsc	3,2
  7427  0F7C  2F7E               	goto	u2641
  7428  0F7D  2F7F               	goto	u2640
  7429  0F7E                     u2641:
  7430  0F7E  2F81               	goto	l2189
  7431  0F7F                     u2640:
  7432  0F7F                     l2187:
  7433  0F7F  3001               	movlw	1
  7434  0F80  02DA               	subwf	___fladd@bexp,f
  7435  0F81                     l2189:
  7436  0F81  1FCA               	btfss	___fladd@b+2,7
  7437  0F82  2F84               	goto	u2651
  7438  0F83  2F85               	goto	u2650
  7439  0F84                     u2651:
  7440  0F84  2F63               	goto	l2175
  7441  0F85                     u2650:
  7442  0F85                     l2191:
  7443  0F85  01D9               	clrf	___fladd@aexp
  7444  0F86                     l2193:
  7445  0F86  1FDB               	btfss	___fladd@grs,7
  7446  0F87  2F89               	goto	u2661
  7447  0F88  2F8A               	goto	u2660
  7448  0F89                     u2661:
  7449  0F89  2F98               	goto	l2201
  7450  0F8A                     u2660:
  7451  0F8A                     l2195:
  7452  0F8A  085B               	movf	___fladd@grs,w
  7453  0F8B  397F               	andlw	127
  7454  0F8C  1903               	btfsc	3,2
  7455  0F8D  2F8F               	goto	u2671
  7456  0F8E  2F90               	goto	u2670
  7457  0F8F                     u2671:
  7458  0F8F  2F93               	goto	l632
  7459  0F90                     u2670:
  7460  0F90                     l2197:
  7461  0F90  01D9               	clrf	___fladd@aexp
  7462  0F91  0AD9               	incf	___fladd@aexp,f
  7463  0F92  2F98               	goto	l2201
  7464  0F93                     l632:
  7465  0F93  1C48               	btfss	___fladd@b,0
  7466  0F94  2F96               	goto	u2681
  7467  0F95  2F97               	goto	u2680
  7468  0F96                     u2681:
  7469  0F96  2F98               	goto	l2201
  7470  0F97                     u2680:
  7471  0F97  2F90               	goto	l2197
  7472  0F98                     l2201:
  7473  0F98  0859               	movf	___fladd@aexp,w
  7474  0F99  1903               	btfsc	3,2
  7475  0F9A  2F9C               	goto	u2691
  7476  0F9B  2F9D               	goto	u2690
  7477  0F9C                     u2691:
  7478  0F9C  2FD1               	goto	l635
  7479  0F9D                     u2690:
  7480  0F9D                     l2203:
  7481  0F9D  3001               	movlw	1
  7482  0F9E  07C8               	addwf	___fladd@b,f
  7483  0F9F  3000               	movlw	0
  7484  0FA0  1803               	skipnc
  7485  0FA1  3001               	movlw	1
  7486  0FA2  07C9               	addwf	___fladd@b+1,f
  7487  0FA3  3000               	movlw	0
  7488  0FA4  1803               	skipnc
  7489  0FA5  3001               	movlw	1
  7490  0FA6  07CA               	addwf	___fladd@b+2,f
  7491  0FA7  3000               	movlw	0
  7492  0FA8  1803               	skipnc
  7493  0FA9  3001               	movlw	1
  7494  0FAA  07CB               	addwf	___fladd@b+3,f
  7495  0FAB                     l2205:
  7496  0FAB  1C4B               	btfss	___fladd@b+3,0
  7497  0FAC  2FAE               	goto	u2701
  7498  0FAD  2FAF               	goto	u2700
  7499  0FAE                     u2701:
  7500  0FAE  2FD1               	goto	l635
  7501  0FAF                     u2700:
  7502  0FAF                     l2207:
  7503  0FAF  0848               	movf	___fladd@b,w
  7504  0FB0  00D0               	movwf	??___fladd
  7505  0FB1  0849               	movf	___fladd@b+1,w
  7506  0FB2  00D1               	movwf	??___fladd+1
  7507  0FB3  084A               	movf	___fladd@b+2,w
  7508  0FB4  00D2               	movwf	??___fladd+2
  7509  0FB5  084B               	movf	___fladd@b+3,w
  7510  0FB6  00D3               	movwf	??___fladd+3
  7511  0FB7  3001               	movlw	1
  7512  0FB8  00D4               	movwf	??___fladd+4
  7513  0FB9                     u2715:
  7514  0FB9  0D53               	rlf	??___fladd+3,w
  7515  0FBA  0CD3               	rrf	??___fladd+3,f
  7516  0FBB  0CD2               	rrf	??___fladd+2,f
  7517  0FBC  0CD1               	rrf	??___fladd+1,f
  7518  0FBD  0CD0               	rrf	??___fladd,f
  7519  0FBE                     u2710:
  7520  0FBE  0BD4               	decfsz	??___fladd+4,f
  7521  0FBF  2FB9               	goto	u2715
  7522  0FC0  0853               	movf	??___fladd+3,w
  7523  0FC1  00CB               	movwf	___fladd@b+3
  7524  0FC2  0852               	movf	??___fladd+2,w
  7525  0FC3  00CA               	movwf	___fladd@b+2
  7526  0FC4  0851               	movf	??___fladd+1,w
  7527  0FC5  00C9               	movwf	___fladd@b+1
  7528  0FC6  0850               	movf	??___fladd,w
  7529  0FC7  00C8               	movwf	___fladd@b
  7530  0FC8  0A5A               	incf	___fladd@bexp,w
  7531  0FC9  1903               	btfsc	3,2
  7532  0FCA  2FCC               	goto	u2721
  7533  0FCB  2FCD               	goto	u2720
  7534  0FCC                     u2721:
  7535  0FCC  2FD1               	goto	l635
  7536  0FCD                     u2720:
  7537  0FCD                     l2209:
  7538  0FCD  3001               	movlw	1
  7539  0FCE  00D0               	movwf	??___fladd
  7540  0FCF  0850               	movf	??___fladd,w
  7541  0FD0  07DA               	addwf	___fladd@bexp,f
  7542  0FD1                     l635:
  7543  0FD1  0A5A               	incf	___fladd@bexp,w
  7544  0FD2  1903               	btfsc	3,2
  7545  0FD3  2FD5               	goto	u2731
  7546  0FD4  2FD6               	goto	u2730
  7547  0FD5                     u2731:
  7548  0FD5  2FDB               	goto	l2213
  7549  0FD6                     u2730:
  7550  0FD6                     l2211:
  7551  0FD6  085A               	movf	___fladd@bexp,w
  7552  0FD7  1D03               	btfss	3,2
  7553  0FD8  2FDA               	goto	u2741
  7554  0FD9  2FDB               	goto	u2740
  7555  0FDA                     u2741:
  7556  0FDA  2FE9               	goto	l2219
  7557  0FDB                     u2740:
  7558  0FDB                     l2213:
  7559  0FDB  3000               	movlw	0
  7560  0FDC  00CB               	movwf	___fladd@b+3
  7561  0FDD  3000               	movlw	0
  7562  0FDE  00CA               	movwf	___fladd@b+2
  7563  0FDF  3000               	movlw	0
  7564  0FE0  00C9               	movwf	___fladd@b+1
  7565  0FE1  3000               	movlw	0
  7566  0FE2  00C8               	movwf	___fladd@b
  7567  0FE3                     l2215:
  7568  0FE3  085A               	movf	___fladd@bexp,w
  7569  0FE4  1D03               	btfss	3,2
  7570  0FE5  2FE7               	goto	u2751
  7571  0FE6  2FE8               	goto	u2750
  7572  0FE7                     u2751:
  7573  0FE7  2FE9               	goto	l2219
  7574  0FE8                     u2750:
  7575  0FE8                     l2217:
  7576  0FE8  01D8               	clrf	___fladd@signs
  7577  0FE9                     l2219:
  7578  0FE9  1C5A               	btfss	___fladd@bexp,0
  7579  0FEA  2FEC               	goto	u2761
  7580  0FEB  2FED               	goto	u2760
  7581  0FEC                     u2761:
  7582  0FEC  2FEF               	goto	l2223
  7583  0FED                     u2760:
  7584  0FED                     l2221:
  7585  0FED  17CA               	bsf	___fladd@b+2,7
  7586  0FEE  2FF3               	goto	l643
  7587  0FEF                     l2223:
  7588  0FEF  307F               	movlw	127
  7589  0FF0  00D0               	movwf	??___fladd
  7590  0FF1  0850               	movf	??___fladd,w
  7591  0FF2  05CA               	andwf	___fladd@b+2,f
  7592  0FF3                     l643:
  7593  0FF3  085A               	movf	___fladd@bexp,w
  7594  0FF4  00D0               	movwf	??___fladd
  7595  0FF5  1003               	clrc
  7596  0FF6  0C50               	rrf	??___fladd,w
  7597  0FF7  00D1               	movwf	??___fladd+1
  7598  0FF8  0851               	movf	??___fladd+1,w
  7599  0FF9  00CB               	movwf	___fladd@b+3
  7600  0FFA                     l2225:
  7601  0FFA  1FD8               	btfss	___fladd@signs,7
  7602  0FFB  2FFD               	goto	u2771
  7603  0FFC  2FFE               	goto	u2770
  7604  0FFD                     u2771:
  7605  0FFD  2FFF               	goto	l644
  7606  0FFE                     u2770:
  7607  0FFE                     l2227:
  7608  0FFE  17CB               	bsf	___fladd@b+3,7
  7609  0FFF                     l644:
  7610  0FFF                     l614:
  7611  0FFF  0008               	return
  7612  1000                     __end_of___fladd:
  7613                           
  7614                           	psect	text19
  7615  1262                     __ptext19:	
  7616 ;; *************** function _I2C_Start *****************
  7617 ;; Defined at:
  7618 ;;		line 30 in file "I2C.c"
  7619 ;; Parameters:    Size  Location     Type
  7620 ;;  add             1    wreg     unsigned char 
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;  add             1    0[BANK0 ] unsigned char 
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  1    wreg      void 
  7625 ;; Registers used:
  7626 ;;		wreg, status,2, status,0, pclath, cstack
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7632 ;;      Params:         0       0       0       0       0
  7633 ;;      Locals:         0       1       0       0       0
  7634 ;;      Temps:          0       0       0       0       0
  7635 ;;      Totals:         0       1       0       0       0
  7636 ;;Total ram usage:        1 bytes
  7637 ;; Hardware stack levels used:    1
  7638 ;; Hardware stack levels required when called:    3
  7639 ;; This function calls:
  7640 ;;		_I2C_Master_Wait
  7641 ;;		_I2C_Master_Write
  7642 ;; This function is called by:
  7643 ;;		_readMPU
  7644 ;; This function uses a non-reentrant model
  7645 ;;
  7646                           
  7647                           
  7648                           ;psect for function _I2C_Start
  7649  1262                     _I2C_Start:
  7650                           
  7651                           ;incstack = 0
  7652                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  7653                           ;I2C_Start@add stored from wreg
  7654  1262  1283               	bcf	3,5	;RP0=0, select bank0
  7655  1263  1303               	bcf	3,6	;RP1=0, select bank0
  7656  1264  00A0               	movwf	I2C_Start@add
  7657  1265                     l3331:
  7658                           
  7659                           ;I2C.c: 30: void I2C_Start(char add);I2C.c: 31: {;I2C.c: 32:     I2C_Master_Wait();
  7660  1265  160A  118A  2238  160A  118A  	fcall	_I2C_Master_Wait
  7661  126A                     l3333:
  7662                           
  7663                           ;I2C.c: 33:     SEN = 1;
  7664  126A  1683               	bsf	3,5	;RP0=1, select bank1
  7665  126B  1303               	bcf	3,6	;RP1=0, select bank1
  7666  126C  1411               	bsf	17,0	;volatile
  7667                           
  7668                           ;I2C.c: 34:     I2C_Master_Write(add);
  7669  126D  1283               	bcf	3,5	;RP0=0, select bank0
  7670  126E  1303               	bcf	3,6	;RP1=0, select bank0
  7671  126F  0820               	movf	I2C_Start@add,w
  7672  1270  160A  118A  2252  160A  118A  	fcall	_I2C_Master_Write
  7673  1275                     l49:
  7674  1275  0008               	return
  7675  1276                     __end_of_I2C_Start:
  7676                           
  7677                           	psect	text20
  7678  1311                     __ptext20:	
  7679 ;; *************** function _I2C_Read *****************
  7680 ;; Defined at:
  7681 ;;		line 83 in file "I2C.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  ACK_NACK        1    wreg     unsigned char 
  7684 ;; Auto vars:     Size  Location     Type
  7685 ;;  ACK_NACK        1    0[BANK0 ] unsigned char 
  7686 ;;  Data            1    1[BANK0 ] unsigned char 
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  1    wreg      unsigned char 
  7689 ;; Registers used:
  7690 ;;		wreg, status,2, status,0, pclath, cstack
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7696 ;;      Params:         0       0       0       0       0
  7697 ;;      Locals:         0       2       0       0       0
  7698 ;;      Temps:          1       0       0       0       0
  7699 ;;      Totals:         1       2       0       0       0
  7700 ;;Total ram usage:        3 bytes
  7701 ;; Hardware stack levels used:    1
  7702 ;; Hardware stack levels required when called:    2
  7703 ;; This function calls:
  7704 ;;		_I2C_ACK
  7705 ;;		_I2C_Master_Wait
  7706 ;;		_I2C_NACK
  7707 ;; This function is called by:
  7708 ;;		_readMPU
  7709 ;; This function uses a non-reentrant model
  7710 ;;
  7711                           
  7712                           
  7713                           ;psect for function _I2C_Read
  7714  1311                     _I2C_Read:
  7715                           
  7716                           ;incstack = 0
  7717                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  7718                           ;I2C_Read@ACK_NACK stored from wreg
  7719  1311  1283               	bcf	3,5	;RP0=0, select bank0
  7720  1312  1303               	bcf	3,6	;RP1=0, select bank0
  7721  1313  00A0               	movwf	I2C_Read@ACK_NACK
  7722  1314                     l3343:
  7723                           
  7724                           ;I2C.c: 83: unsigned char I2C_Read(unsigned char ACK_NACK);I2C.c: 84: { I2C_Master_Wait(
      +                          );
  7725  1314  160A  118A  2238  160A  118A  	fcall	_I2C_Master_Wait
  7726  1319                     l3345:
  7727                           
  7728                           ;I2C.c: 86:     unsigned char Data;;I2C.c: 87:     RCEN = 1;
  7729  1319  1683               	bsf	3,5	;RP0=1, select bank1
  7730  131A  1303               	bcf	3,6	;RP1=0, select bank1
  7731  131B  1591               	bsf	17,3	;volatile
  7732  131C                     l82:	
  7733                           ;I2C.c: 88:     while(!BF);
  7734                           
  7735  131C  1C14               	btfss	20,0	;volatile
  7736  131D  2B1F               	goto	u4931
  7737  131E  2B20               	goto	u4930
  7738  131F                     u4931:
  7739  131F  2B1C               	goto	l82
  7740  1320                     u4930:
  7741  1320                     l3347:
  7742                           
  7743                           ;I2C.c: 89:     Data = SSPBUF;
  7744  1320  1283               	bcf	3,5	;RP0=0, select bank0
  7745  1321  1303               	bcf	3,6	;RP1=0, select bank0
  7746  1322  0813               	movf	19,w	;volatile
  7747  1323  00F6               	movwf	??_I2C_Read
  7748  1324  0876               	movf	??_I2C_Read,w
  7749  1325  00A1               	movwf	I2C_Read@Data
  7750  1326                     l3349:
  7751                           
  7752                           ;I2C.c: 90:     if(ACK_NACK==0)
  7753  1326  0820               	movf	I2C_Read@ACK_NACK,w
  7754  1327  1D03               	btfss	3,2
  7755  1328  2B2A               	goto	u4941
  7756  1329  2B2B               	goto	u4940
  7757  132A                     u4941:
  7758  132A  2B31               	goto	l3353
  7759  132B                     u4940:
  7760  132B                     l3351:
  7761                           
  7762                           ;I2C.c: 91:         I2C_ACK();
  7763  132B  160A  118A  2216  160A  118A  	fcall	_I2C_ACK
  7764  1330  2B36               	goto	l87
  7765  1331                     l3353:
  7766                           
  7767                           ;I2C.c: 93:         I2C_NACK();
  7768  1331  120A  118A  27F7  160A  118A  	fcall	_I2C_NACK
  7769  1336                     l87:
  7770  1336  1283               	bcf	3,5	;RP0=0, select bank0
  7771  1337  1303               	bcf	3,6	;RP1=0, select bank0
  7772  1338  1D8C               	btfss	12,3	;volatile
  7773  1339  2B3B               	goto	u4951
  7774  133A  2B3C               	goto	u4950
  7775  133B                     u4951:
  7776  133B  2B36               	goto	l87
  7777  133C                     u4950:
  7778  133C                     l89:
  7779                           
  7780                           ;I2C.c: 95:     SSPIF=0;
  7781  133C  118C               	bcf	12,3	;volatile
  7782  133D                     l3355:
  7783                           
  7784                           ;I2C.c: 96:     return Data;
  7785  133D  0821               	movf	I2C_Read@Data,w
  7786  133E                     l90:
  7787  133E  0008               	return
  7788  133F                     __end_of_I2C_Read:
  7789                           
  7790                           	psect	text21
  7791  07F7                     __ptext21:	
  7792 ;; *************** function _I2C_NACK *****************
  7793 ;; Defined at:
  7794 ;;		line 56 in file "I2C.c"
  7795 ;; Parameters:    Size  Location     Type
  7796 ;;		None
  7797 ;; Auto vars:     Size  Location     Type
  7798 ;;		None
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  1    wreg      void 
  7801 ;; Registers used:
  7802 ;;		None
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7808 ;;      Params:         0       0       0       0       0
  7809 ;;      Locals:         0       0       0       0       0
  7810 ;;      Temps:          0       0       0       0       0
  7811 ;;      Totals:         0       0       0       0       0
  7812 ;;Total ram usage:        0 bytes
  7813 ;; Hardware stack levels used:    1
  7814 ;; Hardware stack levels required when called:    1
  7815 ;; This function calls:
  7816 ;;		Nothing
  7817 ;; This function is called by:
  7818 ;;		_I2C_Read
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822                           
  7823                           ;psect for function _I2C_NACK
  7824  07F7                     _I2C_NACK:
  7825  07F7                     l2261:	
  7826                           ;incstack = 0
  7827                           ; Regs used in _I2C_NACK: []
  7828                           
  7829                           
  7830                           ;I2C.c: 58:  ACKDT = 1;
  7831  07F7  1683               	bsf	3,5	;RP0=1, select bank1
  7832  07F8  1303               	bcf	3,6	;RP1=0, select bank1
  7833  07F9  1691               	bsf	17,5	;volatile
  7834                           
  7835                           ;I2C.c: 59:  ACKEN = 1;
  7836  07FA  1611               	bsf	17,4	;volatile
  7837  07FB                     l64:	
  7838                           ;I2C.c: 60:     while(ACKEN);
  7839                           
  7840  07FB  1A11               	btfsc	17,4	;volatile
  7841  07FC  2FFE               	goto	u2851
  7842  07FD  2FFF               	goto	u2850
  7843  07FE                     u2851:
  7844  07FE  2FFB               	goto	l64
  7845  07FF                     u2850:
  7846  07FF                     l67:
  7847  07FF  0008               	return
  7848  0800                     __end_of_I2C_NACK:
  7849                           
  7850                           	psect	text22
  7851  1216                     __ptext22:	
  7852 ;; *************** function _I2C_ACK *****************
  7853 ;; Defined at:
  7854 ;;		line 49 in file "I2C.c"
  7855 ;; Parameters:    Size  Location     Type
  7856 ;;		None
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;		None
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  1    wreg      void 
  7861 ;; Registers used:
  7862 ;;		None
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7868 ;;      Params:         0       0       0       0       0
  7869 ;;      Locals:         0       0       0       0       0
  7870 ;;      Temps:          0       0       0       0       0
  7871 ;;      Totals:         0       0       0       0       0
  7872 ;;Total ram usage:        0 bytes
  7873 ;; Hardware stack levels used:    1
  7874 ;; Hardware stack levels required when called:    1
  7875 ;; This function calls:
  7876 ;;		Nothing
  7877 ;; This function is called by:
  7878 ;;		_I2C_Read
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           
  7883                           ;psect for function _I2C_ACK
  7884  1216                     _I2C_ACK:
  7885  1216                     l2259:	
  7886                           ;incstack = 0
  7887                           ; Regs used in _I2C_ACK: []
  7888                           
  7889                           
  7890                           ;I2C.c: 51:  ACKDT = 0;
  7891  1216  1683               	bsf	3,5	;RP0=1, select bank1
  7892  1217  1303               	bcf	3,6	;RP1=0, select bank1
  7893  1218  1291               	bcf	17,5	;volatile
  7894                           
  7895                           ;I2C.c: 52:     ACKEN = 1;
  7896  1219  1611               	bsf	17,4	;volatile
  7897  121A                     l58:	
  7898                           ;I2C.c: 53:     while(ACKEN);
  7899                           
  7900  121A  1A11               	btfsc	17,4	;volatile
  7901  121B  2A1D               	goto	u2841
  7902  121C  2A1E               	goto	u2840
  7903  121D                     u2841:
  7904  121D  2A1A               	goto	l58
  7905  121E                     u2840:
  7906  121E                     l61:
  7907  121E  0008               	return
  7908  121F                     __end_of_I2C_ACK:
  7909                           
  7910                           	psect	text23
  7911  120D                     __ptext23:	
  7912 ;; *************** function _I2C_Master_RepeatedStart *****************
  7913 ;; Defined at:
  7914 ;;		line 37 in file "I2C.c"
  7915 ;; Parameters:    Size  Location     Type
  7916 ;;		None
  7917 ;; Auto vars:     Size  Location     Type
  7918 ;;		None
  7919 ;; Return value:  Size  Location     Type
  7920 ;;                  1    wreg      void 
  7921 ;; Registers used:
  7922 ;;		wreg, status,2, status,0, pclath, cstack
  7923 ;; Tracked objects:
  7924 ;;		On entry : 0/0
  7925 ;;		On exit  : 0/0
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7928 ;;      Params:         0       0       0       0       0
  7929 ;;      Locals:         0       0       0       0       0
  7930 ;;      Temps:          0       0       0       0       0
  7931 ;;      Totals:         0       0       0       0       0
  7932 ;;Total ram usage:        0 bytes
  7933 ;; Hardware stack levels used:    1
  7934 ;; Hardware stack levels required when called:    2
  7935 ;; This function calls:
  7936 ;;		_I2C_Master_Wait
  7937 ;; This function is called by:
  7938 ;;		_readMPU
  7939 ;; This function uses a non-reentrant model
  7940 ;;
  7941                           
  7942                           
  7943                           ;psect for function _I2C_Master_RepeatedStart
  7944  120D                     _I2C_Master_RepeatedStart:
  7945  120D                     l3335:	
  7946                           ;incstack = 0
  7947                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  7948                           
  7949                           
  7950                           ;I2C.c: 39:     I2C_Master_Wait();
  7951  120D  160A  118A  2238  160A  118A  	fcall	_I2C_Master_Wait
  7952  1212                     l3337:
  7953                           
  7954                           ;I2C.c: 40:     RSEN = 1;
  7955  1212  1683               	bsf	3,5	;RP0=1, select bank1
  7956  1213  1303               	bcf	3,6	;RP1=0, select bank1
  7957  1214  1491               	bsf	17,1	;volatile
  7958  1215                     l52:
  7959  1215  0008               	return
  7960  1216                     __end_of_I2C_Master_RepeatedStart:
  7961                           
  7962                           	psect	text24
  7963  0890                     __ptext24:	
  7964 ;; *************** function _confMPU *****************
  7965 ;; Defined at:
  7966 ;;		line 63 in file "MPU6050.c"
  7967 ;; Parameters:    Size  Location     Type
  7968 ;;		None
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;		None
  7971 ;; Return value:  Size  Location     Type
  7972 ;;                  1    wreg      void 
  7973 ;; Registers used:
  7974 ;;		wreg, status,2, status,0, pclath, cstack
  7975 ;; Tracked objects:
  7976 ;;		On entry : 0/0
  7977 ;;		On exit  : 0/0
  7978 ;;		Unchanged: 0/0
  7979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7980 ;;      Params:         0       0       0       0       0
  7981 ;;      Locals:         0       0       0       0       0
  7982 ;;      Temps:          0       0       0       0       0
  7983 ;;      Totals:         0       0       0       0       0
  7984 ;;Total ram usage:        0 bytes
  7985 ;; Hardware stack levels used:    1
  7986 ;; Hardware stack levels required when called:    3
  7987 ;; This function calls:
  7988 ;;		_I2C_Master_Start
  7989 ;;		_I2C_Master_Stop
  7990 ;;		_I2C_Master_Write
  7991 ;; This function is called by:
  7992 ;;		_main
  7993 ;; This function uses a non-reentrant model
  7994 ;;
  7995                           
  7996                           
  7997                           ;psect for function _confMPU
  7998  0890                     _confMPU:
  7999  0890                     l3381:	
  8000                           ;incstack = 0
  8001                           ; Regs used in _confMPU: [wreg+status,2+status,0+pclath+cstack]
  8002                           
  8003                           
  8004                           ;MPU6050.c: 65:     I2C_Master_Start();
  8005  0890  160A  118A  21FB  120A  158A  	fcall	_I2C_Master_Start
  8006                           
  8007                           ;MPU6050.c: 66:     I2C_Master_Write(0xD0);
  8008  0895  30D0               	movlw	208
  8009  0896  160A  118A  2252  120A  158A  	fcall	_I2C_Master_Write
  8010                           
  8011                           ;MPU6050.c: 67:     I2C_Master_Write(0x6B);
  8012  089B  306B               	movlw	107
  8013  089C  160A  118A  2252  120A  158A  	fcall	_I2C_Master_Write
  8014                           
  8015                           ;MPU6050.c: 68:     I2C_Master_Write(0x01);
  8016  08A1  3001               	movlw	1
  8017  08A2  160A  118A  2252  120A  158A  	fcall	_I2C_Master_Write
  8018                           
  8019                           ;MPU6050.c: 69:     I2C_Master_Stop();
  8020  08A7  160A  118A  2204  120A  158A  	fcall	_I2C_Master_Stop
  8021                           
  8022                           ;MPU6050.c: 71:     I2C_Master_Start();
  8023  08AC  160A  118A  21FB  120A  158A  	fcall	_I2C_Master_Start
  8024                           
  8025                           ;MPU6050.c: 72:     I2C_Master_Write(0xD0);
  8026  08B1  30D0               	movlw	208
  8027  08B2  160A  118A  2252  120A  158A  	fcall	_I2C_Master_Write
  8028                           
  8029                           ;MPU6050.c: 73:     I2C_Master_Write(0x00);
  8030  08B7  3000               	movlw	0
  8031  08B8  160A  118A  2252  120A  158A  	fcall	_I2C_Master_Write
  8032                           
  8033                           ;MPU6050.c: 74:     I2C_Master_Stop();
  8034  08BD  160A  118A  2204  120A  158A  	fcall	_I2C_Master_Stop
  8035                           
  8036                           ;MPU6050.c: 77:     I2C_Master_Start();
  8037  08C2  160A  118A  21FB  120A  158A  	fcall	_I2C_Master_Start
  8038                           
  8039                           ;MPU6050.c: 78:     I2C_Master_Write(0xD0);
  8040  08C7  30D0               	movlw	208
  8041  08C8  160A  118A  2252  120A  158A  	fcall	_I2C_Master_Write
  8042                           
  8043                           ;MPU6050.c: 79:     I2C_Master_Write(0x19);
  8044  08CD  3019               	movlw	25
  8045  08CE  160A  118A  2252  120A  158A  	fcall	_I2C_Master_Write
  8046                           
  8047                           ;MPU6050.c: 80:     I2C_Master_Write(0x08);
  8048  08D3  3008               	movlw	8
  8049  08D4  160A  118A  2252  120A  158A  	fcall	_I2C_Master_Write
  8050                           
  8051                           ;MPU6050.c: 81:     I2C_Master_Stop();
  8052  08D9  160A  118A  2204  120A  158A  	fcall	_I2C_Master_Stop
  8053                           
  8054                           ;MPU6050.c: 83:     I2C_Master_Start();
  8055  08DE  160A  118A  21FB  120A  158A  	fcall	_I2C_Master_Start
  8056                           
  8057                           ;MPU6050.c: 84:     I2C_Master_Write(0xD0);
  8058  08E3  30D0               	movlw	208
  8059  08E4  160A  118A  2252  120A  158A  	fcall	_I2C_Master_Write
  8060                           
  8061                           ;MPU6050.c: 85:     I2C_Master_Write(0x1A);
  8062  08E9  301A               	movlw	26
  8063  08EA  160A  118A  2252  120A  158A  	fcall	_I2C_Master_Write
  8064                           
  8065                           ;MPU6050.c: 86:     I2C_Master_Write(0x00);
  8066  08EF  3000               	movlw	0
  8067  08F0  160A  118A  2252  120A  158A  	fcall	_I2C_Master_Write
  8068                           
  8069                           ;MPU6050.c: 87:     I2C_Master_Stop();
  8070  08F5  160A  118A  2204  120A  158A  	fcall	_I2C_Master_Stop
  8071                           
  8072                           ;MPU6050.c: 89:     I2C_Master_Start();
  8073  08FA  160A  118A  21FB  120A  158A  	fcall	_I2C_Master_Start
  8074                           
  8075                           ;MPU6050.c: 90:     I2C_Master_Write(0xD0);
  8076  08FF  30D0               	movlw	208
  8077  0900  160A  118A  2252  120A  158A  	fcall	_I2C_Master_Write
  8078                           
  8079                           ;MPU6050.c: 91:     I2C_Master_Write(0x1B);
  8080  0905  301B               	movlw	27
  8081  0906  160A  118A  2252  120A  158A  	fcall	_I2C_Master_Write
  8082                           
  8083                           ;MPU6050.c: 92:     I2C_Master_Write(0x00);
  8084  090B  3000               	movlw	0
  8085  090C  160A  118A  2252  120A  158A  	fcall	_I2C_Master_Write
  8086                           
  8087                           ;MPU6050.c: 93:     I2C_Master_Stop();
  8088  0911  160A  118A  2204  120A  158A  	fcall	_I2C_Master_Stop
  8089                           
  8090                           ;MPU6050.c: 95:     I2C_Master_Start();
  8091  0916  160A  118A  21FB  120A  158A  	fcall	_I2C_Master_Start
  8092                           
  8093                           ;MPU6050.c: 96:     I2C_Master_Write(0xD0);
  8094  091B  30D0               	movlw	208
  8095  091C  160A  118A  2252  120A  158A  	fcall	_I2C_Master_Write
  8096                           
  8097                           ;MPU6050.c: 97:     I2C_Master_Write(0x1C);
  8098  0921  301C               	movlw	28
  8099  0922  160A  118A  2252  120A  158A  	fcall	_I2C_Master_Write
  8100                           
  8101                           ;MPU6050.c: 98:     I2C_Master_Write(0x00);
  8102  0927  3000               	movlw	0
  8103  0928  160A  118A  2252  120A  158A  	fcall	_I2C_Master_Write
  8104                           
  8105                           ;MPU6050.c: 99:     I2C_Master_Stop();
  8106  092D  160A  118A  2204  120A  158A  	fcall	_I2C_Master_Stop
  8107                           
  8108                           ;MPU6050.c: 103:     I2C_Master_Start();
  8109  0932  160A  118A  21FB  120A  158A  	fcall	_I2C_Master_Start
  8110                           
  8111                           ;MPU6050.c: 104:     I2C_Master_Write(0x68);
  8112  0937  3068               	movlw	104
  8113  0938  160A  118A  2252  120A  158A  	fcall	_I2C_Master_Write
  8114                           
  8115                           ;MPU6050.c: 105:     I2C_Master_Write(0x6C);
  8116  093D  306C               	movlw	108
  8117  093E  160A  118A  2252  120A  158A  	fcall	_I2C_Master_Write
  8118                           
  8119                           ;MPU6050.c: 106:     I2C_Master_Write(0x00);
  8120  0943  3000               	movlw	0
  8121  0944  160A  118A  2252  120A  158A  	fcall	_I2C_Master_Write
  8122                           
  8123                           ;MPU6050.c: 107:     I2C_Master_Stop();
  8124  0949  160A  118A  2204  120A  158A  	fcall	_I2C_Master_Stop
  8125  094E                     l222:
  8126  094E  0008               	return
  8127  094F                     __end_of_confMPU:
  8128                           
  8129                           	psect	text25
  8130  1252                     __ptext25:	
  8131 ;; *************** function _I2C_Master_Write *****************
  8132 ;; Defined at:
  8133 ;;		line 63 in file "I2C.c"
  8134 ;; Parameters:    Size  Location     Type
  8135 ;;  data            1    wreg     unsigned char 
  8136 ;; Auto vars:     Size  Location     Type
  8137 ;;  data            1    6[COMMON] unsigned char 
  8138 ;; Return value:  Size  Location     Type
  8139 ;;                  1    wreg      unsigned char 
  8140 ;; Registers used:
  8141 ;;		wreg, status,2, status,0, pclath, cstack
  8142 ;; Tracked objects:
  8143 ;;		On entry : 0/0
  8144 ;;		On exit  : 0/0
  8145 ;;		Unchanged: 0/0
  8146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8147 ;;      Params:         0       0       0       0       0
  8148 ;;      Locals:         1       0       0       0       0
  8149 ;;      Temps:          0       0       0       0       0
  8150 ;;      Totals:         1       0       0       0       0
  8151 ;;Total ram usage:        1 bytes
  8152 ;; Hardware stack levels used:    1
  8153 ;; Hardware stack levels required when called:    2
  8154 ;; This function calls:
  8155 ;;		_I2C_Master_Wait
  8156 ;; This function is called by:
  8157 ;;		_I2C_Start
  8158 ;;		_readMPU
  8159 ;;		_confMPU
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163                           
  8164                           ;psect for function _I2C_Master_Write
  8165  1252                     _I2C_Master_Write:
  8166                           
  8167                           ;incstack = 0
  8168                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  8169                           ;I2C_Master_Write@data stored from wreg
  8170  1252  00F6               	movwf	I2C_Master_Write@data
  8171  1253                     l3075:
  8172                           
  8173                           ;I2C.c: 63: unsigned char I2C_Master_Write(unsigned char data);I2C.c: 64: {;I2C.c: 65:  
      +                             I2C_Master_Wait();
  8174  1253  160A  118A  2238  160A  118A  	fcall	_I2C_Master_Wait
  8175  1258                     l3077:
  8176                           
  8177                           ;I2C.c: 66:     SSPBUF = data;
  8178  1258  0876               	movf	I2C_Master_Write@data,w
  8179  1259  1283               	bcf	3,5	;RP0=0, select bank0
  8180  125A  1303               	bcf	3,6	;RP1=0, select bank0
  8181  125B  0093               	movwf	19	;volatile
  8182  125C                     l70:	
  8183                           ;I2C.c: 67:     while(!SSPIF);
  8184                           
  8185  125C  1D8C               	btfss	12,3	;volatile
  8186  125D  2A5F               	goto	u4361
  8187  125E  2A60               	goto	u4360
  8188  125F                     u4361:
  8189  125F  2A5C               	goto	l70
  8190  1260                     u4360:
  8191  1260                     l72:
  8192                           
  8193                           ;I2C.c: 68:  SSPIF = 0;
  8194  1260  118C               	bcf	12,3	;volatile
  8195  1261                     l73:	
  8196                           ;I2C.c: 69:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  8197                           
  8198  1261  0008               	return
  8199  1262                     __end_of_I2C_Master_Write:
  8200                           
  8201                           	psect	text26
  8202  1204                     __ptext26:	
  8203 ;; *************** function _I2C_Master_Stop *****************
  8204 ;; Defined at:
  8205 ;;		line 43 in file "I2C.c"
  8206 ;; Parameters:    Size  Location     Type
  8207 ;;		None
  8208 ;; Auto vars:     Size  Location     Type
  8209 ;;		None
  8210 ;; Return value:  Size  Location     Type
  8211 ;;                  1    wreg      void 
  8212 ;; Registers used:
  8213 ;;		wreg, status,2, status,0, pclath, cstack
  8214 ;; Tracked objects:
  8215 ;;		On entry : 0/0
  8216 ;;		On exit  : 0/0
  8217 ;;		Unchanged: 0/0
  8218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8219 ;;      Params:         0       0       0       0       0
  8220 ;;      Locals:         0       0       0       0       0
  8221 ;;      Temps:          0       0       0       0       0
  8222 ;;      Totals:         0       0       0       0       0
  8223 ;;Total ram usage:        0 bytes
  8224 ;; Hardware stack levels used:    1
  8225 ;; Hardware stack levels required when called:    2
  8226 ;; This function calls:
  8227 ;;		_I2C_Master_Wait
  8228 ;; This function is called by:
  8229 ;;		_readMPU
  8230 ;;		_confMPU
  8231 ;; This function uses a non-reentrant model
  8232 ;;
  8233                           
  8234                           
  8235                           ;psect for function _I2C_Master_Stop
  8236  1204                     _I2C_Master_Stop:
  8237  1204                     l3339:	
  8238                           ;incstack = 0
  8239                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  8240                           
  8241                           
  8242                           ;I2C.c: 45:     I2C_Master_Wait();
  8243  1204  160A  118A  2238  160A  118A  	fcall	_I2C_Master_Wait
  8244  1209                     l3341:
  8245                           
  8246                           ;I2C.c: 46:     PEN = 1;
  8247  1209  1683               	bsf	3,5	;RP0=1, select bank1
  8248  120A  1303               	bcf	3,6	;RP1=0, select bank1
  8249  120B  1511               	bsf	17,2	;volatile
  8250  120C                     l55:
  8251  120C  0008               	return
  8252  120D                     __end_of_I2C_Master_Stop:
  8253                           
  8254                           	psect	text27
  8255  11FB                     __ptext27:	
  8256 ;; *************** function _I2C_Master_Start *****************
  8257 ;; Defined at:
  8258 ;;		line 24 in file "I2C.c"
  8259 ;; Parameters:    Size  Location     Type
  8260 ;;		None
  8261 ;; Auto vars:     Size  Location     Type
  8262 ;;		None
  8263 ;; Return value:  Size  Location     Type
  8264 ;;                  1    wreg      void 
  8265 ;; Registers used:
  8266 ;;		wreg, status,2, status,0, pclath, cstack
  8267 ;; Tracked objects:
  8268 ;;		On entry : 0/0
  8269 ;;		On exit  : 0/0
  8270 ;;		Unchanged: 0/0
  8271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8272 ;;      Params:         0       0       0       0       0
  8273 ;;      Locals:         0       0       0       0       0
  8274 ;;      Temps:          0       0       0       0       0
  8275 ;;      Totals:         0       0       0       0       0
  8276 ;;Total ram usage:        0 bytes
  8277 ;; Hardware stack levels used:    1
  8278 ;; Hardware stack levels required when called:    2
  8279 ;; This function calls:
  8280 ;;		_I2C_Master_Wait
  8281 ;; This function is called by:
  8282 ;;		_confMPU
  8283 ;; This function uses a non-reentrant model
  8284 ;;
  8285                           
  8286                           
  8287                           ;psect for function _I2C_Master_Start
  8288  11FB                     _I2C_Master_Start:
  8289  11FB                     l3327:	
  8290                           ;incstack = 0
  8291                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  8292                           
  8293                           
  8294                           ;I2C.c: 26:     I2C_Master_Wait();
  8295  11FB  160A  118A  2238  160A  118A  	fcall	_I2C_Master_Wait
  8296  1200                     l3329:
  8297                           
  8298                           ;I2C.c: 27:     SEN = 1;
  8299  1200  1683               	bsf	3,5	;RP0=1, select bank1
  8300  1201  1303               	bcf	3,6	;RP1=0, select bank1
  8301  1202  1411               	bsf	17,0	;volatile
  8302  1203                     l46:
  8303  1203  0008               	return
  8304  1204                     __end_of_I2C_Master_Start:
  8305                           
  8306                           	psect	text28
  8307  1238                     __ptext28:	
  8308 ;; *************** function _I2C_Master_Wait *****************
  8309 ;; Defined at:
  8310 ;;		line 19 in file "I2C.c"
  8311 ;; Parameters:    Size  Location     Type
  8312 ;;		None
  8313 ;; Auto vars:     Size  Location     Type
  8314 ;;		None
  8315 ;; Return value:  Size  Location     Type
  8316 ;;                  1    wreg      void 
  8317 ;; Registers used:
  8318 ;;		wreg, status,2
  8319 ;; Tracked objects:
  8320 ;;		On entry : 0/0
  8321 ;;		On exit  : 0/0
  8322 ;;		Unchanged: 0/0
  8323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8324 ;;      Params:         0       0       0       0       0
  8325 ;;      Locals:         0       0       0       0       0
  8326 ;;      Temps:          0       0       0       0       0
  8327 ;;      Totals:         0       0       0       0       0
  8328 ;;Total ram usage:        0 bytes
  8329 ;; Hardware stack levels used:    1
  8330 ;; Hardware stack levels required when called:    1
  8331 ;; This function calls:
  8332 ;;		Nothing
  8333 ;; This function is called by:
  8334 ;;		_I2C_Master_Start
  8335 ;;		_I2C_Start
  8336 ;;		_I2C_Master_RepeatedStart
  8337 ;;		_I2C_Master_Stop
  8338 ;;		_I2C_Master_Write
  8339 ;;		_I2C_Read
  8340 ;;		_I2C_Read_Byte
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344                           
  8345                           ;psect for function _I2C_Master_Wait
  8346  1238                     _I2C_Master_Wait:
  8347  1238                     l3011:	
  8348                           ;incstack = 0
  8349                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  8350                           
  8351  1238                     l40:	
  8352                           ;I2C.c: 21:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  8353                           
  8354  1238  1683               	bsf	3,5	;RP0=1, select bank1
  8355  1239  1303               	bcf	3,6	;RP1=0, select bank1
  8356  123A  1914               	btfsc	20,2	;volatile
  8357  123B  2A3D               	goto	u4191
  8358  123C  2A3E               	goto	u4190
  8359  123D                     u4191:
  8360  123D  2A38               	goto	l40
  8361  123E                     u4190:
  8362  123E                     l3013:
  8363  123E  0811               	movf	17,w	;volatile
  8364  123F  391F               	andlw	31
  8365  1240  1D03               	btfss	3,2
  8366  1241  2A43               	goto	u4201
  8367  1242  2A44               	goto	u4200
  8368  1243                     u4201:
  8369  1243  2A38               	goto	l40
  8370  1244                     u4200:
  8371  1244                     l43:
  8372  1244  0008               	return
  8373  1245                     __end_of_I2C_Master_Wait:
  8374                           
  8375                           	psect	text29
  8376  1491                     __ptext29:	
  8377 ;; *************** function _UARTInit *****************
  8378 ;; Defined at:
  8379 ;;		line 8 in file "UART.c"
  8380 ;; Parameters:    Size  Location     Type
  8381 ;;  baud_rate       4   13[BANK0 ] const unsigned long 
  8382 ;;  BRGH            1   17[BANK0 ] const unsigned char 
  8383 ;; Auto vars:     Size  Location     Type
  8384 ;;		None
  8385 ;; Return value:  Size  Location     Type
  8386 ;;                  1    wreg      void 
  8387 ;; Registers used:
  8388 ;;		wreg, status,2, status,0, pclath, cstack
  8389 ;; Tracked objects:
  8390 ;;		On entry : 0/0
  8391 ;;		On exit  : 0/0
  8392 ;;		Unchanged: 0/0
  8393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8394 ;;      Params:         0       5       0       0       0
  8395 ;;      Locals:         0       0       0       0       0
  8396 ;;      Temps:          0       4       0       0       0
  8397 ;;      Totals:         0       9       0       0       0
  8398 ;;Total ram usage:        9 bytes
  8399 ;; Hardware stack levels used:    1
  8400 ;; Hardware stack levels required when called:    2
  8401 ;; This function calls:
  8402 ;;		___lldiv
  8403 ;; This function is called by:
  8404 ;;		_main
  8405 ;; This function uses a non-reentrant model
  8406 ;;
  8407                           
  8408                           
  8409                           ;psect for function _UARTInit
  8410  1491                     _UARTInit:
  8411  1491                     l2845:	
  8412                           ;incstack = 0
  8413                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  8414                           
  8415                           
  8416                           ;UART.c: 10:     if (BRGH == 0) {
  8417  1491  1283               	bcf	3,5	;RP0=0, select bank0
  8418  1492  1303               	bcf	3,6	;RP1=0, select bank0
  8419  1493  0831               	movf	UARTInit@BRGH,w
  8420  1494  1D03               	btfss	3,2
  8421  1495  2C97               	goto	u4121
  8422  1496  2C98               	goto	u4120
  8423  1497                     u4121:
  8424  1497  2CC7               	goto	l2851
  8425  1498                     u4120:
  8426  1498                     l2847:
  8427                           
  8428                           ;UART.c: 11:         SPBRG = 4000000/(64*baud_rate) - 1;
  8429  1498  082D               	movf	UARTInit@baud_rate,w
  8430  1499  00B2               	movwf	??_UARTInit
  8431  149A  082E               	movf	UARTInit@baud_rate+1,w
  8432  149B  00B3               	movwf	??_UARTInit+1
  8433  149C  082F               	movf	UARTInit@baud_rate+2,w
  8434  149D  00B4               	movwf	??_UARTInit+2
  8435  149E  0830               	movf	UARTInit@baud_rate+3,w
  8436  149F  00B5               	movwf	??_UARTInit+3
  8437  14A0  3006               	movlw	6
  8438  14A1                     u4135:
  8439  14A1  1003               	clrc
  8440  14A2  0DB2               	rlf	??_UARTInit,f
  8441  14A3  0DB3               	rlf	??_UARTInit+1,f
  8442  14A4  0DB4               	rlf	??_UARTInit+2,f
  8443  14A5  0DB5               	rlf	??_UARTInit+3,f
  8444  14A6                     u4130:
  8445  14A6  3EFF               	addlw	-1
  8446  14A7  1D03               	skipz
  8447  14A8  2CA1               	goto	u4135
  8448  14A9  0835               	movf	??_UARTInit+3,w
  8449  14AA  00A3               	movwf	___lldiv@divisor+3
  8450  14AB  0834               	movf	??_UARTInit+2,w
  8451  14AC  00A2               	movwf	___lldiv@divisor+2
  8452  14AD  0833               	movf	??_UARTInit+1,w
  8453  14AE  00A1               	movwf	___lldiv@divisor+1
  8454  14AF  0832               	movf	??_UARTInit,w
  8455  14B0  00A0               	movwf	___lldiv@divisor
  8456  14B1  3000               	movlw	0
  8457  14B2  00A7               	movwf	___lldiv@dividend+3
  8458  14B3  303D               	movlw	61
  8459  14B4  00A6               	movwf	___lldiv@dividend+2
  8460  14B5  3009               	movlw	9
  8461  14B6  00A5               	movwf	___lldiv@dividend+1
  8462  14B7  3000               	movlw	0
  8463  14B8  00A4               	movwf	___lldiv@dividend
  8464  14B9  160A  118A  2429  160A  118A  	fcall	___lldiv
  8465  14BE  1283               	bcf	3,5	;RP0=0, select bank0
  8466  14BF  1303               	bcf	3,6	;RP1=0, select bank0
  8467  14C0  0820               	movf	?___lldiv,w
  8468  14C1  3EFF               	addlw	255
  8469  14C2  1683               	bsf	3,5	;RP0=1, select bank1
  8470  14C3  1303               	bcf	3,6	;RP1=0, select bank1
  8471  14C4  0099               	movwf	25	;volatile
  8472  14C5                     l2849:
  8473                           
  8474                           ;UART.c: 12:         TXSTAbits.BRGH = 0;
  8475  14C5  1118               	bcf	24,2	;volatile
  8476                           
  8477                           ;UART.c: 13:     } else {
  8478  14C6  2CF5               	goto	l2855
  8479  14C7                     l2851:
  8480                           
  8481                           ;UART.c: 14:         SPBRG = 4000000/(16*baud_rate) - 1;
  8482  14C7  082D               	movf	UARTInit@baud_rate,w
  8483  14C8  00B2               	movwf	??_UARTInit
  8484  14C9  082E               	movf	UARTInit@baud_rate+1,w
  8485  14CA  00B3               	movwf	??_UARTInit+1
  8486  14CB  082F               	movf	UARTInit@baud_rate+2,w
  8487  14CC  00B4               	movwf	??_UARTInit+2
  8488  14CD  0830               	movf	UARTInit@baud_rate+3,w
  8489  14CE  00B5               	movwf	??_UARTInit+3
  8490  14CF  3004               	movlw	4
  8491  14D0                     u4145:
  8492  14D0  1003               	clrc
  8493  14D1  0DB2               	rlf	??_UARTInit,f
  8494  14D2  0DB3               	rlf	??_UARTInit+1,f
  8495  14D3  0DB4               	rlf	??_UARTInit+2,f
  8496  14D4  0DB5               	rlf	??_UARTInit+3,f
  8497  14D5                     u4140:
  8498  14D5  3EFF               	addlw	-1
  8499  14D6  1D03               	skipz
  8500  14D7  2CD0               	goto	u4145
  8501  14D8  0835               	movf	??_UARTInit+3,w
  8502  14D9  00A3               	movwf	___lldiv@divisor+3
  8503  14DA  0834               	movf	??_UARTInit+2,w
  8504  14DB  00A2               	movwf	___lldiv@divisor+2
  8505  14DC  0833               	movf	??_UARTInit+1,w
  8506  14DD  00A1               	movwf	___lldiv@divisor+1
  8507  14DE  0832               	movf	??_UARTInit,w
  8508  14DF  00A0               	movwf	___lldiv@divisor
  8509  14E0  3000               	movlw	0
  8510  14E1  00A7               	movwf	___lldiv@dividend+3
  8511  14E2  303D               	movlw	61
  8512  14E3  00A6               	movwf	___lldiv@dividend+2
  8513  14E4  3009               	movlw	9
  8514  14E5  00A5               	movwf	___lldiv@dividend+1
  8515  14E6  3000               	movlw	0
  8516  14E7  00A4               	movwf	___lldiv@dividend
  8517  14E8  160A  118A  2429  160A  118A  	fcall	___lldiv
  8518  14ED  1283               	bcf	3,5	;RP0=0, select bank0
  8519  14EE  1303               	bcf	3,6	;RP1=0, select bank0
  8520  14EF  0820               	movf	?___lldiv,w
  8521  14F0  3EFF               	addlw	255
  8522  14F1  1683               	bsf	3,5	;RP0=1, select bank1
  8523  14F2  1303               	bcf	3,6	;RP1=0, select bank1
  8524  14F3  0099               	movwf	25	;volatile
  8525  14F4                     l2853:
  8526                           
  8527                           ;UART.c: 15:         TXSTAbits.BRGH = 1;
  8528  14F4  1518               	bsf	24,2	;volatile
  8529  14F5                     l2855:
  8530                           
  8531                           ;UART.c: 19:     TXSTAbits.TX9 = 0;
  8532  14F5  1318               	bcf	24,6	;volatile
  8533  14F6                     l2857:
  8534                           
  8535                           ;UART.c: 20:     TXSTAbits.TXEN = 1;
  8536  14F6  1698               	bsf	24,5	;volatile
  8537  14F7                     l2859:
  8538                           
  8539                           ;UART.c: 21:     TXSTAbits.SYNC = 0;
  8540  14F7  1218               	bcf	24,4	;volatile
  8541  14F8                     l2861:
  8542                           
  8543                           ;UART.c: 24:     RCSTAbits.SPEN = 1;
  8544  14F8  1283               	bcf	3,5	;RP0=0, select bank0
  8545  14F9  1303               	bcf	3,6	;RP1=0, select bank0
  8546  14FA  1798               	bsf	24,7	;volatile
  8547  14FB                     l2863:
  8548                           
  8549                           ;UART.c: 25:     RCSTAbits.RX9 = 0;
  8550  14FB  1318               	bcf	24,6	;volatile
  8551  14FC                     l2865:
  8552                           
  8553                           ;UART.c: 26:     RCSTAbits.CREN = 1;
  8554  14FC  1618               	bsf	24,4	;volatile
  8555  14FD                     l2867:
  8556                           
  8557                           ;UART.c: 27:     RCSTAbits.FERR = 0;
  8558  14FD  1118               	bcf	24,2	;volatile
  8559  14FE                     l2869:
  8560                           
  8561                           ;UART.c: 28:     RCSTAbits.OERR = 0;
  8562  14FE  1098               	bcf	24,1	;volatile
  8563  14FF                     l2871:
  8564                           
  8565                           ;UART.c: 31:     TRISCbits.TRISC7 = 1;
  8566  14FF  1683               	bsf	3,5	;RP0=1, select bank1
  8567  1500  1303               	bcf	3,6	;RP1=0, select bank1
  8568  1501  1787               	bsf	7,7	;volatile
  8569  1502                     l2873:
  8570                           
  8571                           ;UART.c: 32:     TRISCbits.TRISC6 = 0;
  8572  1502  1307               	bcf	7,6	;volatile
  8573  1503                     l162:
  8574  1503  0008               	return
  8575  1504                     __end_of_UARTInit:
  8576                           
  8577                           	psect	text30
  8578  1429                     __ptext30:	
  8579 ;; *************** function ___lldiv *****************
  8580 ;; Defined at:
  8581 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  8582 ;; Parameters:    Size  Location     Type
  8583 ;;  divisor         4    0[BANK0 ] unsigned long 
  8584 ;;  dividend        4    4[BANK0 ] unsigned long 
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;  quotient        4    8[BANK0 ] unsigned long 
  8587 ;;  counter         1   12[BANK0 ] unsigned char 
  8588 ;; Return value:  Size  Location     Type
  8589 ;;                  4    0[BANK0 ] unsigned long 
  8590 ;; Registers used:
  8591 ;;		wreg, status,2, status,0
  8592 ;; Tracked objects:
  8593 ;;		On entry : 0/0
  8594 ;;		On exit  : 0/0
  8595 ;;		Unchanged: 0/0
  8596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8597 ;;      Params:         0       8       0       0       0
  8598 ;;      Locals:         0       5       0       0       0
  8599 ;;      Temps:          1       0       0       0       0
  8600 ;;      Totals:         1      13       0       0       0
  8601 ;;Total ram usage:       14 bytes
  8602 ;; Hardware stack levels used:    1
  8603 ;; Hardware stack levels required when called:    1
  8604 ;; This function calls:
  8605 ;;		Nothing
  8606 ;; This function is called by:
  8607 ;;		_UARTInit
  8608 ;;		_sprintf
  8609 ;; This function uses a non-reentrant model
  8610 ;;
  8611                           
  8612                           
  8613                           ;psect for function ___lldiv
  8614  1429                     ___lldiv:
  8615  1429                     l1991:	
  8616                           ;incstack = 0
  8617                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8618                           
  8619  1429  3000               	movlw	0
  8620  142A  1283               	bcf	3,5	;RP0=0, select bank0
  8621  142B  1303               	bcf	3,6	;RP1=0, select bank0
  8622  142C  00AB               	movwf	___lldiv@quotient+3
  8623  142D  3000               	movlw	0
  8624  142E  00AA               	movwf	___lldiv@quotient+2
  8625  142F  3000               	movlw	0
  8626  1430  00A9               	movwf	___lldiv@quotient+1
  8627  1431  3000               	movlw	0
  8628  1432  00A8               	movwf	___lldiv@quotient
  8629  1433  0823               	movf	___lldiv@divisor+3,w
  8630  1434  0422               	iorwf	___lldiv@divisor+2,w
  8631  1435  0421               	iorwf	___lldiv@divisor+1,w
  8632  1436  0420               	iorwf	___lldiv@divisor,w
  8633  1437  1903               	skipnz
  8634  1438  2C3A               	goto	u2191
  8635  1439  2C3B               	goto	u2190
  8636  143A                     u2191:
  8637  143A  2C88               	goto	l2011
  8638  143B                     u2190:
  8639  143B                     l1993:
  8640  143B  01AC               	clrf	___lldiv@counter
  8641  143C  0AAC               	incf	___lldiv@counter,f
  8642  143D  2C4B               	goto	l1997
  8643  143E                     l1995:
  8644  143E  3001               	movlw	1
  8645  143F  00F6               	movwf	??___lldiv
  8646  1440                     u2205:
  8647  1440  1003               	clrc
  8648  1441  0DA0               	rlf	___lldiv@divisor,f
  8649  1442  0DA1               	rlf	___lldiv@divisor+1,f
  8650  1443  0DA2               	rlf	___lldiv@divisor+2,f
  8651  1444  0DA3               	rlf	___lldiv@divisor+3,f
  8652  1445  0BF6               	decfsz	??___lldiv,f
  8653  1446  2C40               	goto	u2205
  8654  1447  3001               	movlw	1
  8655  1448  00F6               	movwf	??___lldiv
  8656  1449  0876               	movf	??___lldiv,w
  8657  144A  07AC               	addwf	___lldiv@counter,f
  8658  144B                     l1997:
  8659  144B  1FA3               	btfss	___lldiv@divisor+3,7
  8660  144C  2C4E               	goto	u2211
  8661  144D  2C4F               	goto	u2210
  8662  144E                     u2211:
  8663  144E  2C3E               	goto	l1995
  8664  144F                     u2210:
  8665  144F                     l1999:
  8666  144F  3001               	movlw	1
  8667  1450  00F6               	movwf	??___lldiv
  8668  1451                     u2225:
  8669  1451  1003               	clrc
  8670  1452  0DA8               	rlf	___lldiv@quotient,f
  8671  1453  0DA9               	rlf	___lldiv@quotient+1,f
  8672  1454  0DAA               	rlf	___lldiv@quotient+2,f
  8673  1455  0DAB               	rlf	___lldiv@quotient+3,f
  8674  1456  0BF6               	decfsz	??___lldiv,f
  8675  1457  2C51               	goto	u2225
  8676  1458                     l2001:
  8677  1458  0823               	movf	___lldiv@divisor+3,w
  8678  1459  0227               	subwf	___lldiv@dividend+3,w
  8679  145A  1D03               	skipz
  8680  145B  2C66               	goto	u2235
  8681  145C  0822               	movf	___lldiv@divisor+2,w
  8682  145D  0226               	subwf	___lldiv@dividend+2,w
  8683  145E  1D03               	skipz
  8684  145F  2C66               	goto	u2235
  8685  1460  0821               	movf	___lldiv@divisor+1,w
  8686  1461  0225               	subwf	___lldiv@dividend+1,w
  8687  1462  1D03               	skipz
  8688  1463  2C66               	goto	u2235
  8689  1464  0820               	movf	___lldiv@divisor,w
  8690  1465  0224               	subwf	___lldiv@dividend,w
  8691  1466                     u2235:
  8692  1466  1C03               	skipc
  8693  1467  2C69               	goto	u2231
  8694  1468  2C6A               	goto	u2230
  8695  1469                     u2231:
  8696  1469  2C79               	goto	l2007
  8697  146A                     u2230:
  8698  146A                     l2003:
  8699  146A  0820               	movf	___lldiv@divisor,w
  8700  146B  02A4               	subwf	___lldiv@dividend,f
  8701  146C  0821               	movf	___lldiv@divisor+1,w
  8702  146D  1C03               	skipc
  8703  146E  0F21               	incfsz	___lldiv@divisor+1,w
  8704  146F  02A5               	subwf	___lldiv@dividend+1,f
  8705  1470  0822               	movf	___lldiv@divisor+2,w
  8706  1471  1C03               	skipc
  8707  1472  0F22               	incfsz	___lldiv@divisor+2,w
  8708  1473  02A6               	subwf	___lldiv@dividend+2,f
  8709  1474  0823               	movf	___lldiv@divisor+3,w
  8710  1475  1C03               	skipc
  8711  1476  0F23               	incfsz	___lldiv@divisor+3,w
  8712  1477  02A7               	subwf	___lldiv@dividend+3,f
  8713  1478                     l2005:
  8714  1478  1428               	bsf	___lldiv@quotient,0
  8715  1479                     l2007:
  8716  1479  3001               	movlw	1
  8717  147A                     u2245:
  8718  147A  1003               	clrc
  8719  147B  0CA3               	rrf	___lldiv@divisor+3,f
  8720  147C  0CA2               	rrf	___lldiv@divisor+2,f
  8721  147D  0CA1               	rrf	___lldiv@divisor+1,f
  8722  147E  0CA0               	rrf	___lldiv@divisor,f
  8723  147F  3EFF               	addlw	-1
  8724  1480  1D03               	skipz
  8725  1481  2C7A               	goto	u2245
  8726  1482                     l2009:
  8727  1482  3001               	movlw	1
  8728  1483  02AC               	subwf	___lldiv@counter,f
  8729  1484  1D03               	btfss	3,2
  8730  1485  2C87               	goto	u2251
  8731  1486  2C88               	goto	u2250
  8732  1487                     u2251:
  8733  1487  2C4F               	goto	l1999
  8734  1488                     u2250:
  8735  1488                     l2011:
  8736  1488  082B               	movf	___lldiv@quotient+3,w
  8737  1489  00A3               	movwf	?___lldiv+3
  8738  148A  082A               	movf	___lldiv@quotient+2,w
  8739  148B  00A2               	movwf	?___lldiv+2
  8740  148C  0829               	movf	___lldiv@quotient+1,w
  8741  148D  00A1               	movwf	?___lldiv+1
  8742  148E  0828               	movf	___lldiv@quotient,w
  8743  148F  00A0               	movwf	?___lldiv
  8744  1490                     l344:
  8745  1490  0008               	return
  8746  1491                     __end_of___lldiv:
  8747                           
  8748                           	psect	text31
  8749  122B                     __ptext31:	
  8750 ;; *************** function _I2C_Master_Init *****************
  8751 ;; Defined at:
  8752 ;;		line 9 in file "I2C.c"
  8753 ;; Parameters:    Size  Location     Type
  8754 ;;		None
  8755 ;; Auto vars:     Size  Location     Type
  8756 ;;		None
  8757 ;; Return value:  Size  Location     Type
  8758 ;;                  1    wreg      void 
  8759 ;; Registers used:
  8760 ;;		wreg, status,2
  8761 ;; Tracked objects:
  8762 ;;		On entry : 0/0
  8763 ;;		On exit  : 0/0
  8764 ;;		Unchanged: 0/0
  8765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8766 ;;      Params:         0       0       0       0       0
  8767 ;;      Locals:         0       0       0       0       0
  8768 ;;      Temps:          0       0       0       0       0
  8769 ;;      Totals:         0       0       0       0       0
  8770 ;;Total ram usage:        0 bytes
  8771 ;; Hardware stack levels used:    1
  8772 ;; Hardware stack levels required when called:    1
  8773 ;; This function calls:
  8774 ;;		Nothing
  8775 ;; This function is called by:
  8776 ;;		_main
  8777 ;; This function uses a non-reentrant model
  8778 ;;
  8779                           
  8780                           
  8781                           ;psect for function _I2C_Master_Init
  8782  122B                     _I2C_Master_Init:
  8783  122B                     l2835:	
  8784                           ;incstack = 0
  8785                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  8786                           
  8787                           
  8788                           ;I2C.c: 11:   SSPCON = 0x28;
  8789  122B  3028               	movlw	40
  8790  122C  1283               	bcf	3,5	;RP0=0, select bank0
  8791  122D  1303               	bcf	3,6	;RP1=0, select bank0
  8792  122E  0094               	movwf	20	;volatile
  8793  122F                     l2837:
  8794                           
  8795                           ;I2C.c: 12:   SSPCON2 = 0x00;
  8796  122F  1683               	bsf	3,5	;RP0=1, select bank1
  8797  1230  1303               	bcf	3,6	;RP1=0, select bank1
  8798  1231  0191               	clrf	17	;volatile
  8799  1232                     l2839:
  8800                           
  8801                           ;I2C.c: 13:   SSPSTAT = 0x00;
  8802  1232  0194               	clrf	20	;volatile
  8803                           
  8804                           ;I2C.c: 14:   SSPADD = ((4000000/4)/100000) - 1;
  8805  1233  3009               	movlw	9
  8806  1234  0093               	movwf	19	;volatile
  8807  1235                     l2841:
  8808                           
  8809                           ;I2C.c: 15:   TRISC3 = 1;
  8810  1235  1587               	bsf	7,3	;volatile
  8811  1236                     l2843:
  8812                           
  8813                           ;I2C.c: 16:   TRISC4 = 1;
  8814  1236  1607               	bsf	7,4	;volatile
  8815  1237                     l37:
  8816  1237  0008               	return
  8817  1238                     __end_of_I2C_Master_Init:
  8818                           
  8819                           	psect	text32
  8820  129A                     __ptext32:	
  8821 ;; *************** function _isr *****************
  8822 ;; Defined at:
  8823 ;;		line 100 in file "main.c"
  8824 ;; Parameters:    Size  Location     Type
  8825 ;;		None
  8826 ;; Auto vars:     Size  Location     Type
  8827 ;;  entrante        1    5[COMMON] unsigned char 
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  1    wreg      void 
  8830 ;; Registers used:
  8831 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8832 ;; Tracked objects:
  8833 ;;		On entry : 0/0
  8834 ;;		On exit  : 0/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8837 ;;      Params:         0       0       0       0       0
  8838 ;;      Locals:         1       0       0       0       0
  8839 ;;      Temps:          5       0       0       0       0
  8840 ;;      Totals:         6       0       0       0       0
  8841 ;;Total ram usage:        6 bytes
  8842 ;; Hardware stack levels used:    1
  8843 ;; This function calls:
  8844 ;;		Nothing
  8845 ;; This function is called by:
  8846 ;;		Interrupt level 1
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           
  8850                           
  8851                           ;psect for function _isr
  8852  129A                     _isr:
  8853  129A                     i1l1887:
  8854                           
  8855                           ;main.c: 102:     if (PIR1bits.RCIF) {
  8856  129A  1283               	bcf	3,5	;RP0=0, select bank0
  8857  129B  1303               	bcf	3,6	;RP1=0, select bank0
  8858  129C  1E8C               	btfss	12,5	;volatile
  8859  129D  2A9F               	goto	u208_21
  8860  129E  2AA0               	goto	u208_20
  8861  129F                     u208_21:
  8862  129F  2AB8               	goto	i1l143
  8863  12A0                     u208_20:
  8864  12A0                     i1l1889:
  8865                           
  8866                           ;main.c: 103:         char entrante = RCREG;
  8867  12A0  081A               	movf	26,w	;volatile
  8868  12A1  00F0               	movwf	??_isr
  8869  12A2  0870               	movf	??_isr,w
  8870  12A3  00F5               	movwf	isr@entrante
  8871                           
  8872                           ;main.c: 104:         switch (entrante) {
  8873  12A4  2AAB               	goto	i1l1895
  8874  12A5                     i1l1891:
  8875                           
  8876                           ;main.c: 106:                 banderas = banderas | 1;
  8877  12A5  0877               	movf	_banderas,w
  8878  12A6  3801               	iorlw	1
  8879  12A7  00F0               	movwf	??_isr
  8880  12A8  0870               	movf	??_isr,w
  8881  12A9  00F7               	movwf	_banderas
  8882                           
  8883                           ;main.c: 107:                 break;
  8884  12AA  2AB8               	goto	i1l143
  8885  12AB                     i1l1895:
  8886  12AB  0875               	movf	isr@entrante,w
  8887  12AC  00F0               	movwf	??_isr
  8888  12AD  01F1               	clrf	??_isr+1
  8889                           
  8890                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8891                           ; Switch size 1, requested type "simple"
  8892                           ; Number of cases is 1, Range of values is 0 to 0
  8893                           ; switch strategies available:
  8894                           ; Name         Instructions Cycles
  8895                           ; simple_byte            4     3 (average)
  8896                           ; direct_byte           11     8 (fixed)
  8897                           ; jumptable            260     6 (fixed)
  8898                           ;	Chosen strategy is simple_byte
  8899  12AE  0871               	movf	??_isr+1,w
  8900  12AF  3A00               	xorlw	0	; case 0
  8901  12B0  1903               	skipnz
  8902  12B1  2AB3               	goto	i1l3519
  8903  12B2  2AB8               	goto	i1l143
  8904  12B3                     i1l3519:
  8905                           
  8906                           ; Switch size 1, requested type "simple"
  8907                           ; Number of cases is 1, Range of values is 71 to 71
  8908                           ; switch strategies available:
  8909                           ; Name         Instructions Cycles
  8910                           ; simple_byte            4     3 (average)
  8911                           ; direct_byte           14    11 (fixed)
  8912                           ; jumptable            263     9 (fixed)
  8913                           ;	Chosen strategy is simple_byte
  8914  12B3  0870               	movf	??_isr,w
  8915  12B4  3A47               	xorlw	71	; case 71
  8916  12B5  1903               	skipnz
  8917  12B6  2AA5               	goto	i1l1891
  8918  12B7  2AB8               	goto	i1l143
  8919  12B8                     i1l143:
  8920  12B8  0874               	movf	??_isr+4,w
  8921  12B9  008A               	movwf	10
  8922  12BA  0873               	movf	??_isr+3,w
  8923  12BB  0084               	movwf	4
  8924  12BC  0E72               	swapf	??_isr+2,w
  8925  12BD  0083               	movwf	3
  8926  12BE  0EFE               	swapf	btemp,f
  8927  12BF  0E7E               	swapf	btemp,w
  8928  12C0  0009               	retfie
  8929  12C1                     __end_of_isr:
  8930  007E                     btemp	set	126	;btemp
  8931  007E                     wtemp0	set	126
  8932                           
  8933                           	psect	intentry
  8934  0004                     __pintentry:	
  8935                           ;incstack = 0
  8936                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  8937                           
  8938  0004                     interrupt_function:
  8939  007E                     saved_w	set	btemp
  8940  0004  00FE               	movwf	btemp
  8941  0005  0E03               	swapf	3,w
  8942  0006  00F2               	movwf	??_isr+2
  8943  0007  0804               	movf	4,w
  8944  0008  00F3               	movwf	??_isr+3
  8945  0009  080A               	movf	10,w
  8946  000A  00F4               	movwf	??_isr+4
  8947  000B  160A  118A  2A9A   	ljmp	_isr
  8948                           
  8949                           	psect	config
  8950                           
  8951                           ;Config register CONFIG1 @ 0x2007
  8952                           ;	Oscillator Selection bits
  8953                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8954                           ;	Watchdog Timer Enable bit
  8955                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8956                           ;	Power-up Timer Enable bit
  8957                           ;	PWRTE = OFF, PWRT disabled
  8958                           ;	RE3/MCLR pin function select bit
  8959                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8960                           ;	Code Protection bit
  8961                           ;	CP = OFF, Program memory code protection is disabled
  8962                           ;	Data Code Protection bit
  8963                           ;	CPD = OFF, Data memory code protection is disabled
  8964                           ;	Brown Out Reset Selection bits
  8965                           ;	BOREN = OFF, BOR disabled
  8966                           ;	Internal External Switchover bit
  8967                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8968                           ;	Fail-Safe Clock Monitor Enabled bit
  8969                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8970                           ;	Low Voltage Programming Enable bit
  8971                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8972                           ;	In-Circuit Debugger Mode bit
  8973                           ;	DEBUG = 0x1, unprogrammed default
  8974  2007                     	org	8199
  8975  2007  20D4               	dw	8404
  8976                           
  8977                           ;Config register CONFIG2 @ 0x2008
  8978                           ;	Brown-out Reset Selection bit
  8979                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8980                           ;	Flash Program Memory Self Write Enable bits
  8981                           ;	WRT = OFF, Write protection off
  8982  2008                     	org	8200
  8983  2008  3FFF               	dw	16383

Data Sizes:
    Strings     13
    Constant    40
    Data        0
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80     79      79
    BANK1            80     33      78
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ftoa@status	PTR int  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_7(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    ftoa@cp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    readMPU@datos	PTR float  size(1) Largest target is 28
		 -> datos(BANK1[28]), 

    UARTSendString@str	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK1[17]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sendMPU@buffer	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 


Critical Paths under _main in COMMON

    _sendMPU->_UARTSendChar
    _sprintf->___lldiv
    ___llmod->___lldiv
    _UARTSendString->_UARTSendChar
    _readMPU->_I2C_Master_Write
    _readMPU->_I2C_Read
    _I2C_Start->_I2C_Master_Write
    _confMPU->_I2C_Master_Write
    _UARTInit->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sendMPU
    _sendMPU->_ftoa
    _ftoa->___flsub
    _sprintf->___llmod
    ___llmod->___lldiv
    ___fltol->___flmul
    ___flsub->___fladd
    _readMPU->___fladd
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    ___fladd->___fldiv
    _UARTInit->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_readMPU
    _sendMPU->_ftoa

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   27277
                                             31 BANK1      2     2      0
                    _I2C_Master_Init
                           _UARTInit
                            _confMPU
                            _readMPU
                            _sendMPU
 ---------------------------------------------------------------------------------
 (1) _sendMPU                                              4     4      0   15969
                                             75 BANK0      4     4      0
                       _UARTSendChar
                     _UARTSendString
                               _ftoa
 ---------------------------------------------------------------------------------
 (2) _ftoa                                                16    10      6   13359
                                             68 BANK0      7     1      6
                                              0 BANK1      9     9      0
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             34    25      9    3087
                                             23 BANK0     26    17      9
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     496
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     412
                                             13 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     381
                                             40 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                             60 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     334
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _UARTSendString                                       8     5      3    2133
                                              0 BANK0      8     5      3
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (3) _UARTSendChar                                         1     1      0      22
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readMPU                                             35    35      0   10441
                                             60 BANK0      4     4      0
                                              0 BANK1     31    31      0
           _I2C_Master_RepeatedStart
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     930
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4433
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             40 BANK0     20    12      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      62
                                              0 BANK0      1     1      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      65
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                            _I2C_ACK
                    _I2C_Master_Wait
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _confMPU                                              0     0      0      31
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      31
                                              6 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             9     4      5     836
                                             13 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     618
                                              6 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  6     6      0      15
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _UARTInit
     ___lldiv
   _confMPU
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _readMPU
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read
       _I2C_ACK
       _I2C_Master_Wait
       _I2C_NACK
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl
   _sendMPU
     _UARTSendChar
     _UARTSendString
       _UARTSendChar
     _ftoa
       ___flge
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___xxtofl
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         _isdigit

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     21      4E       7       97.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A5      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 03 18:24:49 2021

                UARTInit@baud_rate 002D                       ___fldiv@aexp 0047  
                     ___fldiv@bexp 0046                                  pc 0002  
                     ___fldiv@sign 003F                 __size_of_I2C_Start 0014  
                               _BF 04A0                                 l40 1238  
                               l43 1244                                 l52 1215  
                               l37 1237                                 l61 121E  
                               l46 1203                                 l70 125C  
                               l55 120C                                 l72 1260  
                               l64 07FB                                 l73 1261  
                               l49 1275                                 l58 121A  
                               l90 133E                                 l82 131C  
                               l67 07FF                                 l87 1336  
                               l89 133C                                 fsr 0004  
              ___wmul@multiplicand 0022                __Umul8_16@word_mpld 0026  
                              l211 0389                                l133 17FF  
                              l222 094E                                l214 0395  
                              l310 12E7                                l162 1503  
                              l219 0682                                l308 12CF  
                              l165 1220                                l501 087A  
                              l344 1490                                l168 122A  
                              l176 1428                                l504 088F  
                              l601 0DDB                                l530 13D1  
                              l605 0E82                                l622 0F4D  
                              l614 0FFF                                l607 0E59  
                              l703 02EB                                l632 0F93  
                              l801 0CBE                                l626 0F71  
                              l482 1522                                l490 1251  
                              l643 0FF3                                l635 0FD1  
                              l644 0FFF                                l716 12FE  
                              l812 0D77                                l709 0373  
                              l741 15CC                                l485 158E  
                              l718 1310                                l486 15A7  
                              l494 088F                                l743 1663  
                              l647 1299                                l681 0B1F  
                              l673 0A9D                                l657 09AB  
                              l817 0813                                l754 162D  
                              l659 0B2B                                l755 1639  
                              l747 1611                                l764 07B1  
                              l790 0BEE                                l679 0B0F  
                              l697 037F                                l793 0C14  
                              _PEN 048A                                _SEN 0488  
                  __end_of_I2C_ACK 121F                                _isr 129A  
                              fsr0 0004                                indf 0000  
                     ___flmul@aexp 003C                       ___flmul@bexp 0041  
                     ___flmul@sign 003B                       ___flmul@temp 0046  
                     ___flmul@prod 0042                       ___fltol@exp1 0052  
                             l2001 1458                               l2003 146A  
                             l2011 1488                               l2005 1478  
                             l2101 0E0D                               l2007 1479  
                             l2111 0E21                               l2103 0E11  
                             l2009 1482                               l2201 0F98  
                             l2121 0E66                               l2105 0E15  
                             l2113 0E25                               l2041 0D89  
                             l3011 1238                               l2211 0FD6  
                             l2203 0F9D                               l2123 0E68  
                             l2131 0E7A                               l2115 0E26  
                             l2107 0E19                               l2051 0D9D  
                             l2043 0D8A                               l2035 0D78  
                             l3013 123E                               l2221 0FED  
                             l2213 0FDB                               l2205 0FAB  
                             l2141 0EAB                               l2133 0E86  
                             l2125 0E6C                               l2117 0E3D  
                             l2109 0E1D                               l2061 0DB3  
                             l2045 0D8F                               l2053 0D9F  
                             l2037 0D7F                               l3101 0058  
                             l2301 082A                               l3021 12D6  
                             l2223 0FEF                               l2215 0FE3  
                             l2207 0FAF                               l2151 0EC2  
                             l2143 0EAF                               l2135 0E8B  
                             l2127 0E6D                               l2119 0E5D  
                             l2071 0DC8                               l2063 0DB9  
                             l2055 0DA7                               l2047 0D94  
                             l2039 0D85                               l3111 006F  
                             l3103 005C                               l2311 084E  
                             l2303 083F                               l3031 1386  
                             l3023 12DD                               l3015 12C1  
                             l2225 0FFA                               l2217 0FE8  
                             l2209 0FCD                               l2161 0F25  
                             l2153 0EC3                               l2145 0EB3  
                             l2129 0E76                               l2081 0DE5  
                             l2073 0DD0                               l2065 0DBD  
                             l2057 0DAC                               l2049 0D9C  
                             l3201 033E                               l3113 0071  
                             l3105 005D                               l2305 0840  
                             l3041 13BA                               l3033 1389  
                             l3025 12E3                               l3017 12C5  
                             l2227 0FFE                               l2219 0FE9  
                             l2171 0F5A                               l2163 0F2B  
                             l2155 0ECC                               l2147 0EBC  
                             l2139 0E94                               l2091 0DF9  
                             l2083 0DE9                               l2075 0DD1  
                             l2067 0DBE                               l2059 0DB2  
                             l3051 12ED                               l3211 036B  
                             l3203 034D                               l3131 00E2  
                             l3123 008C                               l3115 0079  
                             l3107 0062                               l2331 1276  
                             l2307 0848                               l3043 13C3  
                             l3035 1396                               l3019 12C9  
                             l2261 07F7                               l2181 0F75  
                             l2165 0F30                               l2149 0EBE  
                             l2157 0ED1                               l2093 0DFD  
                             l2085 0DED                               l2069 0DC3  
                             l2077 0DD3                               l3053 12F4  
                             l3213 036C                               l3205 0357  
                             l3141 015F                               l3133 010E  
                             l3125 009C                               l3117 007E  
                             l3109 0067                               l2501 1618  
                             l2333 127A                               l2325 086F  
                             l2317 0856                               l2309 084A  
                             l3037 139A                               l3045 13C9  
                             l3029 137C                               l3301 0CDB  
                             l3221 0B34                               l2183 0F78  
                             l2175 0F63                               l2159 0EE7  
                             l2167 0F3F                               l2191 0F85  
                             l2095 0E01                               l2087 0DF1  
                             l2079 0DE1                               l3055 12F8  
                             l3215 0377                               l3207 0359  
                             l3151 01DF                               l3143 017C  
                             l3135 012A                               l3127 00A9  
                             l3119 0083                               l2511 1651  
                             l2503 1623                               l2263 1220  
                             l2271 1536                               l2327 087F  
                             l2319 0868                               l3039 13AC  
                             l3071 0812                               l3063 0803  
                             l3311 0D48                               l3303 0CE1  
                             l3231 0B59                               l3223 0B3A  
                             l2193 0F86                               l2185 0F7A  
                             l2177 0F6C                               l2169 0F55  
                             l2097 0E05                               l2089 0DF5  
                             l3057 1307                               l3049 12EB  
                             l3209 0367                               l3161 0297  
                             l3153 020C                               l3145 018C  
                             l3137 0146                               l3129 00C6  
                             l3081 0026                               l2513 1656  
                             l2505 1627                               l3401 03C5  
                             l2265 1226                               l2281 15A4  
                             l2273 153E                               l2329 0884  
                             l3065 0804                               l3313 0D4F  
                             l3305 0CE8                               l3233 0B5D  
                             l3241 0B99                               l3225 0B41  
                             l3075 1253                               l2259 1216  
                             l3331 1265                               l2195 0F8A  
                             l2187 0F7F                               l2179 0F70  
                             l2099 0E09                               l3059 130C  
                             l3171 02BC                               l3163 02A0  
                             l3155 021C                               l3147 01A9  
                             l3139 014F                               l3091 003B  
                             l3083 002C                               l2515 165A  
                             l2507 1631                               l3411 0437  
                             l3403 03D2                               l2283 15A6  
                             l2275 1542                               l2267 1504  
                             l2291 1251                               l3067 080A  
                             l3307 0CEC                               l3315 0D53  
                             l3251 0BD6                               l3243 0BA7  
                             l3235 0B72                               l3227 0B46  
                             l3219 0B2F                               l3341 1209  
                             l3077 1258                               l3333 126A  
                             l2197 0F90                               l2189 0F81  
                             l2701 0961                               l3181 02D4  
                             l3173 02C5                               l3165 02AE  
                             l3157 0249                               l3149 01C2  
                             l3093 0043                               l3085 0030  
                             l2517 165B                               l2509 163B  
                             l3421 04E5                               l3413 0452  
                             l3405 03E4                               l2277 1566  
                             l2269 151A                               l3069 0810  
                             l3309 0CF9                               l3261 0BF5  
                             l3253 0BDA                               l3245 0BAB  
                             l3237 0B85                               l3229 0B49  
                             l3317 0D61                               l3327 11FB  
                             l3335 120D                               l3351 132B  
                             l3343 1314                               l2703 0966  
                             l2711 0976                               l3191 0303  
                             l3183 02E8                               l3167 02B7  
                             l3175 02CB                               l3159 026F  
                             l3095 0045                               l3087 0031  
                             l3079 001F                               l3431 0641  
                             l3423 0526                               l3415 046D  
                             l3407 0401                               l2279 156A  
                             l2287 1245                               l2295 0814  
                             l3271 0C3D                               l3263 0C18  
                             l3319 0D73                               l3247 0BAE  
                             l3255 0BEB                               l3239 0B89  
                             l3329 1200                               l3337 1212  
                             l3353 1331                               l3345 1319  
                             l2721 098E                               l2713 097E  
                             l2705 096B                               l3193 0307  
                             l3177 02CF                               l3169 02BB  
                             l3097 004D                               l3089 0036  
                             l2481 15B4                               l3425 0567  
                             l3417 0488                               l3409 041C  
                             l2289 124F                               l2297 0821  
                             l3273 0C43                               l3265 0C26  
                             l3257 0BF0                               l3249 0BC3  
                             l3361 068B                               l3339 1204  
                             l3355 133D                               l3347 1320  
                             l2811 0AD2                               l2803 0AA2  
                             l2723 0993                               l2731 09A3  
                             l2715 0983                               l2707 0973  
                             l3195 0320                               l3187 02F0  
                             l3179 02D0                               l3099 0052  
                             l2491 15E2                               l2483 15C4  
                             l3427 05BF                               l3419 04A3  
                             l3291 0C9F                               l3283 0C53  
                             l3275 0C4B                               l3267 0C2B  
                             l3371 06F9                               l3363 06A6  
                             l3435 1664                               l3451 1349  
                             l3381 0890                               l3349 1326  
                             l2821 0B06                               l2805 0AA7  
                             l2813 0AD8                               l2733 09B3  
                             l2741 09CC                               l2725 0998  
                             l2717 0989                               l2709 0974  
                             l3189 02F5                               l3197 0326  
                             l2493 15EF                               l2485 15D4  
                             l2477 15AB                               l3429 0600  
                             l3293 0CA6                               l3277 0C51  
                             l3269 0C39                               l3517 0C09  
                             l3373 0736                               l3365 06B3  
                             l3437 17F9                               l3461 1368  
                             l3453 134C                               l2823 0B0E  
                             l2815 0AE5                               l2807 0AB5  
                             l2751 09F4                               l2743 09D1  
                             l2735 09BF                               l2727 09A0  
                             l2719 098D                               l3199 0333  
                             l2495 15F6                               l2479 15B0  
                             l3391 03A6                               l3295 0CB5  
                             l3287 0C8A                               l3375 0772  
                             l3367 06B9                               l3359 0683  
                             l3463 136D                               l3455 134F  
                             l2841 1235                               l2825 0B15  
                             l2817 0AF3                               l2809 0AB9  
                             l2761 0A1D                               l2753 09FC  
                             l2737 09C3                               l2729 09A1  
                             l2497 15FA                               l2489 15DD  
                             l3385 0383                               l3297 0CCB  
                             l3289 0C94                               l3377 07B0  
                             l3369 06D2                               l3465 1373  
                             l3457 1352                               l3449 133F  
                             l2843 1236                               l2835 122B  
                             l2851 14C7                               l2827 0B19  
                             l2819 0B02                               l2771 0A3E  
                             l2763 0A21                               l2755 0A04  
                             l2747 09DA                               l2499 1608  
                             l3387 038F                               l2691 140A  
                             l2683 13D2                               l3299 0CD7  
                             l3459 1357                               l2837 122F  
                             l2861 14F8                               l2853 14F4  
                             l2845 1491                               l2829 0B1B  
                             l2781 0A60                               l2773 0A4C  
                             l2765 0A22                               l2757 0A06  
                             l2749 09EC                               l2693 094F  
                             l3397 03AA                               l3389 039B  
                             l2685 13D9                               l2839 1232  
                             l1991 1429                               l2871 14FF  
                             l2863 14FB                               l2855 14F5  
                             l2847 1498                               l2783 0A69  
                             l2791 0A7D                               l2759 0A0B  
                             l2767 0A2B                               l2775 0A50  
                             l2695 0956                               l3399 03BD  
                             l2687 13F5                               l1993 143B  
                             l2873 1502                               l2865 14FC  
                             l2857 14F6                               l2849 14C5  
                             l2793 0A81                               l2785 0A6D  
                             l2777 0A56                               l2769 0A3D  
                             l2697 095C                               l2689 13FD  
                             l1995 143E                               l2867 14FD  
                             l2859 14F7                               l2795 0A82  
                             l2787 0A6E                               l2779 0A5E  
                             l2699 0960                               l1997 144B  
                             l2869 14FE                               l2797 0A86  
                             l2789 0A77                               l1999 144F  
                             l2799 0A9A                               ?_isr 0070  
                             STR_1 07F5                               STR_2 07F5  
                             STR_3 07F5                               STR_4 07F5  
                             STR_5 07F5                               STR_6 07F5  
                             STR_7 07EA                               u3000 0867  
                             u3001 0866                               u2210 144F  
                             u3010 086E                               u2211 144E  
                             u3011 086D                               u2205 1440  
                             u2230 146A                               u3030 087F  
                             u2231 1469                               u3031 087E  
                             u2400 0DE5                               u2320 0D89  
                             u4000 0A6D                               u3040 0884  
                             u2225 1451                               u2401 0DE4  
                             u2321 0D88                               u4001 0A6C  
                             u3041 0883                               u3025 0871  
                             u2250 1488                               u2410 0E3D  
                             u2330 0D8F                               u2251 1487  
                             u2235 1466                               u2411 0E3C  
                             u2331 0D8E                               u2420 0E48  
                             u2340 0D94                               u4100 0B02  
                             u4020 0A81                               u2245 147A  
                             u2501 0E9D                               u2421 0E46  
                             u2341 0D93                               u4101 0B01  
                             u4021 0A80                               u2190 143B  
                             u2510 0EAF                               u2502 0EA4  
                             u2430 0E49                               u2350 0DB2  
                             u4110 0B19                               u4030 0A86  
                             u2191 143A                               u2511 0EAE  
                             u2503 0EAB                               u2415 0E39  
                             u2351 0DB1                               u4111 0B18  
                             u4031 0A85                               u4015 0A70  
                             u4120 1498                               u4200 1244  
                             u2600 0F5A                               u2520 0EB3  
                             u2440 0E5D                               u2360 0DBD  
                             u4040 0A9A                               u4121 1497  
                             u4201 1243                               u2601 0F59  
                             u2521 0EB2                               u2441 0E5C  
                             u2361 0DBC                               u4105 0AFE  
                             u4041 0A99                               u4130 14A6  
                             u2530 0EC2                               u2450 0E6C  
                             u2370 0DC3                               u4050 0AA1  
                             u4210 12C9                               u2531 0EC1  
                             u2451 0E6B                               u2371 0DC2  
                             u4051 0AA0                               u4211 12C8  
                             u4140 14D5                               u2700 0FAF  
                             u2620 0F70                               u2380 0DC8  
                             u4060 0AA7                               u3500 1627  
                             u3420 15B0                               u4300 13C9  
                             u2701 0FAE                               u2621 0F6F  
                             u2381 0DC7                               u4061 0AA6  
                             u3501 1626                               u3421 15AF  
                             u4301 13C8                               u2710 0FBE  
                             u2630 0F75                               u2550 0EE7  
                             u2470 0E82                               u2390 0DE1  
                             u4070 0AB9                               u4310 12F8  
                             u3510 162D                               u3430 15B4  
                             u4135 14A1                               u2631 0F74  
                             u2615 0F65                               u2551 0EE6  
                             u2471 0E81                               u2391 0DE0  
                             u4071 0AB8                               u4311 12F7  
                             u3511 162C                               u3431 15B3  
                             u2720 0FCD                               u2640 0F7F  
                             u2480 0E86                               u4080 0AC8  
                             u4400 005C                               u3520 1631  
                             u3440 15D4                               u4240 12E3  
                             u4145 14D0                               u2721 0FCC  
                             u2641 0F7E                               u2561 0EFE  
                             u2553 0EE3                               u2545 0EC5  
                             u2481 0E85                               u2465 0E6F  
                             u4401 005B                               u3521 1630  
                             u3441 15D3                               u4241 12E2  
                             u4225 12D0                               u5017 1345  
                             u2730 0FD6                               u2650 0F85  
                             u2570 0F12                               u2562 0EFF  
                             u2490 0E8B                               u4090 0AE5  
                             u4330 130C                               u4410 0062  
                             u3530 1646                               u4250 1386  
                             u2731 0FD5                               u2715 0FB9  
                             u2651 0F84                               u2571 0F13  
                             u2563 0F04                               u2491 0E8A  
                             u4091 0AE4                               u4331 130B  
                             u4411 0061                               u4251 1385  
                             u4235 12D7                               u2740 0FDB  
                             u2660 0F8A                               u2580 0F30  
                             u2572 0F18                               u2564 0F05  
                             u4420 0067                               u3540 1656  
                             u3460 15F5                               u4340 080A  
                             u2741 0FDA                               u2661 0F89  
                             u2581 0F2F                               u2573 0F19  
                             u2565 0F0A                               u4085 0AC3  
                             u4325 12FF                               u4501 016E  
                             u4421 0066                               u3541 1655  
                             u3461 15F4                               u2901 1551  
                             u4341 0809                               u4190 123E  
                             u2750 0FE8                               u2670 0F90  
                             u2590 0F55                               u2566 0F0B  
                             u4502 0175                               u4430 007E  
                             u3550 165A                               u2910 156A  
                             u2902 1552                               u4270 139A  
                             u4350 0810                               u4191 123D  
                             u2751 0FE7                               u2671 0F8F  
                             u2591 0F54                               u4095 0AE1  
                             u4511 019B                               u4503 017C  
                             u4431 007D                               u3551 1659  
                             u3535 1641                               u3455 15E7  
                             u2911 1569                               u2903 1557  
                             u4271 1399                               u4351 080F  
                             u4360 1260                               u2840 121E  
                             u2760 0FED                               u2680 0F97  
                             u4512 01A2                               u4440 0083  
                             u3480 1617                               u3800 140A  
                             u2904 1558                               u4280 13AC  
                             u4361 125F                               u2841 121D  
                             u2761 0FEC                               u2681 0F96  
                             u4513 01A9                               u4441 0082  
                             u3481 1616                               u3801 1409  
                             u2921 1579                               u2905 155D  
                             u4281 13AB                               u4265 138B  
                             u2850 07FF                               u2770 0FFE  
                             u2690 0F9D                               u4370 0030  
                             u3810 1416                               u2930 15A4  
                             u2922 157A                               u2906 155E  
                             u2851 07FE                               u2771 0FFD  
                             u2691 0F9C                               u4531 01D1  
                             u4451 00D4                               u4371 002F  
                             u3475 1609                               u2931 15A3  
                             u2923 157F                               u3900 09D1  
                             u4700 0316                               u4620 02BB  
                             u4532 01D8                               u4452 00DB  
                             u4380 0036                               u2860 1226  
                             u3820 1428                               u2924 1580  
                             u2940 124F                               u3901 09D0  
                             u4621 02BA                               u4605 0299  
                             u4541 01FE                               u4533 01DF  
                             u4525 01AB                               u4461 00F0  
                             u4453 00E2                               u4381 0035  
                             u2861 1225                               u3821 1427  
                             u3805 1406                               u2925 1585  
                             u2941 124E                               u4285 13A8  
                             u3910 0A0B                               u3830 0960  
                             u4710 0333                               u4542 0205  
                             u4462 00F7                               u4390 003B  
                             u2926 1586                               u2870 151A  
                             u2950 0821                               u3911 0A0A  
                             u3831 095F                               u4711 0332  
                             u4615 02B0                               u4551 022B  
                             u4543 020C                               u4471 011C  
                             u4463 00FE                               u4391 003A  
                             u3495 161C                               u2935 15A0  
                             u2871 1519                               u2951 0820  
                             u4295 13BB                               u3840 0966  
                             u4720 034D                               u4640 02CF  
                             u4560 0255                               u4552 0232  
                             u4472 0123                               u2880 1536  
                             u2960 0838                               u4800 0C43  
                             u3841 0965                               u4721 034C  
                             u4705 0311                               u4641 02CE  
                             u4553 0239                               u4481 0138  
                             u4473 012A                               u2881 1535  
                             u4801 0C42                               u3850 096B  
                             u4730 036B                               u4650 02D4  
                             u4482 013F                               u2890 1542  
                             u2970 084E                               u4810 0C4B  
                             u3851 096A                               u4731 036A  
                             u4715 032F                               u4651 02D3  
                             u4635 02BE                               u4571 0261  
                             u4483 0146                               u2891 1541  
                             u2971 084D                               u4811 0C4A  
                             u3940 0A21                               u3860 098D  
                             u4660 02E8                               u4580 027D  
                             u4572 0268                               u2980 0855  
                             u4740 0B3A                               _RCEN 048B  
                             u3941 0A20                               u3925 0A0D  
                             u3861 098C                               u4725 0349  
                             u4661 02E7                               u4573 026F  
                             u4565 0250                               u2981 0854  
                             u2965 0833                               u4741 0B39  
                             u3870 0993                               u4670 02EF  
                             u3790 13E3                               u4910 0D61  
                             u4830 0C89                               u4750 0B59  
                             u3935 0A16                               u3871 0992  
                             u4671 02EE                               u4591 0289  
                             u4495 0148                               u4911 0D60  
                             u4831 0C88                               u4751 0B58  
                             u3960 0A3D                               u3880 0998  
                             u4680 02F5                               u4592 0290  
                             u4920 0D73                               u4840 0C94  
                             u4760 0B99                               u3961 0A3C  
                             u3881 0997                               u4681 02F4  
                             u4593 0297                               u4585 0278  
                             u4921 0D72                               u4905 0D04  
                             u4841 0C93                               u4825 0C56  
                             u4761 0B98                               u4930 1320  
                             u3970 0A56                               u3890 09B3  
                             u4690 0307                               u4850 0C9F  
                             u4770 0BA7                               u4931 131F  
                             u3971 0A55                               u3955 0A24  
                             u3891 09B2                               u4691 0306  
                             u2995 0857                               u4851 0C9E  
                             u4835 0C85                               u4771 0BA6  
                             u4940 132B                               u3980 0A5E  
                             u4860 0CB5                               u4780 0BEA  
                             u4941 132A                               u3981 0A5D  
                             u3965 0A39                               u4861 0CB4  
                             u4781 0BE9                               u4950 133C  
                             u4870 0CCB                               u4790 0C18  
                             u4951 133B                               u4871 0CCA  
                             u4855 0C9B                               u4791 0C17  
                             u4880 0CE1                               u4960 06A6  
                             u4881 0CE0                               u4865 0CB1  
                             u4961 06A5                               u4970 038F  
                             u4890 0CF8                               u3995 0A62  
                             u4971 038E                               u4891 0CF7  
                             u4875 0CC7                               u4980 039B  
                             u4981 039A                               u4990 03D2  
                             u4991 03D1                               u4995 03CE  
                             _RSEN 0489                   __end_of_I2C_NACK 0800  
 __end_of_I2C_Master_RepeatedStart 1216                               _main 133F  
                             _ftoa 0683                   __end_of_I2C_Read 133F  
                             btemp 007E                               start 000E  
                  ___fldiv@new_exp 0040                              ??_isr 0070  
                 ?_I2C_Master_Init 0070                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                      ___fltol@sign1 0051  
                  __end_of___fladd 1000                              ?_main 0070  
                            _ACKEN 048C                              ?_ftoa 0064  
                            _ACKDT 048D                    __end_of___fldiv 0B2C  
                  __end_of___flneg 1252                    __end_of___flmul 0380  
                  __end_of___flsub 129A                    __end_of___fltol 0890  
                            _ANSEL 0188                    __end_of___lldiv 1491  
                  __end_of___llmod 13D2                              i1l143 12B8  
                            _RCREG 001A                              _SPBRG 0099  
                            _PORTA 0005                              _TRISA 0085  
                            _SSPIF 0063                              _TXREG 0019  
                  __end_of_confMPU 094F                   __end_of_UARTInit 1504  
                            _datos 00A0                    __end_of_readMPU 0683  
                  __end_of_dpowers 07EA                    __end_of_isdigit 0814  
                  __end_of_sendMPU 1800                              ftoa@f 0064  
                            ftoa@l 00D1                  __end_of_I2C_Start 1276  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 0D78  
                  __initialization 0011                       __end_of_main 137C  
                     __end_of_ftoa 07B2                          ??_I2C_ACK 0076  
                           ??_main 00EC                             ??_ftoa 006A  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0070  
               ??_I2C_Master_Start 0076                 ??_I2C_Master_Write 0076  
                 ___llmod@dividend 0031                      sendMPU@buffer 006E  
                           i1l3519 12B3                             i1l1891 12A5  
                           i1l1895 12AB                             i1l1887 129A  
                           i1l1889 12A0                             u208_20 12A0  
                           u208_21 129F                        isr@entrante 0075  
                    sendMPU@status 006C                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
                 __end_of___xxtofl 1664           _I2C_Master_RepeatedStart 120D  
                           ___flge 1504                   I2C_Read@ACK_NACK 0020  
                        ??___fladd 0050                             ___wmul 12C1  
                        ??___fldiv 0036                          ??___flneg 0076  
                        ??___flmul 0036                     readMPU@guardar 00DB  
                        ??___flsub 0076                          ??___fltol 004C  
                        ??___lldiv 0076                          ??___llmod 0035  
          __size_of_UARTSendString 0057                     readMPU@valores 00CD  
                        ??_confMPU 0077                             ftoa@cp 00D5  
                        ?_I2C_NACK 0070                          ??_readMPU 005C  
                        ??_isdigit 0076                          ?_I2C_Read 0070  
               __size_of__Umul8_16 0029                          ??_sendMPU 006B  
                           saved_w 007E                          ??_sprintf 0040  
                       ___flge@ff1 0020                         ___flge@ff2 0024  
                     ___xxtofl@arg 002A                       ___xxtofl@exp 0029  
                     ___xxtofl@val 0020            __end_of__initialization 001B  
                       ___flneg@f1 0020                         ___fltol@f1 0048  
                   __pcstackCOMMON 0070                          ?_UARTInit 002D  
                       ??_I2C_NACK 0076                         ??_I2C_Read 0076  
         UARTSendString@max_length 0022                       readMPU@datos 00EB  
                     sprintf@width 004C                         __pbssBANK1 00A0  
                     I2C_Read@Data 0021                  __end_of__Umul8_16 1311  
                       __pmaintext 133F                            ?___flge 0020  
                          ?___wmul 0020                         ??_UARTInit 0032  
                       __pintentry 0004                            _I2C_ACK 1216  
                          _ACKSTAT 048E                          ?___xxtofl 0020  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                       __stringtab 07B2                      ?_UARTSendChar 0070  
                     I2C_Start@add 0020                          _I2C_Start 1262  
                  __size_of___flge 00A4                            ___fladd 0D78  
                          ___fldiv 094F                            ___flneg 1245  
                          ___flmul 001F                            ___flsub 1276  
                          ___fltol 0814                            ___lldiv 1429  
                  __size_of___wmul 0027                            ___llmod 137C  
                   _UARTSendString 13D2                            _confMPU 0890  
                          __ptext1 1664                            __ptext2 0683  
                          __ptext3 0B2C                            __ptext4 0800  
                          __ptext5 12C1                            __ptext6 137C  
                          __ptext7 0814                            __ptext8 1276  
                          __ptext9 1245                            _readMPU 0380  
                          _dpowers 07C2                            _isdigit 0800  
                     __size_of_isr 0027                         ??___xxtofl 0024  
                          _sendMPU 1664           __size_of_I2C_Master_Init 000D  
         __size_of_I2C_Master_Wait 000D           __size_of_I2C_Master_Stop 0009  
                          _sprintf 0B2C                            clrloop0 11F4  
             end_of_initialization 001B                     ??_UARTSendChar 0076  
                          ftoa@buf 00BC                            ftoa@rem 00CD  
       ??_I2C_Master_RepeatedStart 0076                         ?_I2C_Start 0070  
        __size_of_I2C_Master_Start 0009          __size_of_I2C_Master_Write 0010  
                  ___lldiv@divisor 0020                    ___lldiv@counter 002C  
                        _RCSTAbits 0018             __end_of_UARTSendString 1429  
                      ___fladd@grs 005B                      ___xxtofl@sign 0028  
                __size_of_I2C_NACK 0009                          _TRISCbits 0087  
                __size_of_I2C_Read 002E                        ___fldiv@grs 0042  
                      ___fldiv@rem 003B                        ___flmul@grs 003D  
                        _TXSTAbits 0098                    ?_UARTSendString 0020  
                   __end_of___flge 15A8                     __end_of___wmul 12E8  
                __size_of_UARTInit 0073                start_initialization 0011  
                      __end_of_isr 12C1                         ftoa@status 0068  
                ??_I2C_Master_Init 0076                  ??_I2C_Master_Wait 0076  
                ??_I2C_Master_Stop 0076                    ___llmod@divisor 002D  
                      ??_I2C_Start 0077                    ___llmod@counter 0036  
                         ??___flge 0028                           ??___wmul 0076  
                        __Umul8_16 12E8                           ?_I2C_ACK 0070  
             __end_of_UARTSendChar 122B                          ___fladd@a 004C  
                        ___fladd@b 0048                          ___fldiv@a 002E  
                        ___fldiv@b 0032                          ___flmul@a 0032  
                        ___flmul@b 002E                        __pbssCOMMON 0077  
                        ___flsub@a 005C                          ___flsub@b 0060  
                        ___latbits 0002                      __pcstackBANK0 0020  
                    __pcstackBANK1 00CD                  __size_of___xxtofl 00BC  
                      sprintf@flag 0045                        sprintf@prec 004E  
                 _I2C_Master_Start 11FB                   _I2C_Master_Write 1252  
                    UARTSendChar@c 0076                           ?___fladd 0048  
                         ?___fldiv 002E                           ?___flneg 0020  
                         ?___flmul 002E                           ?___flsub 005C  
                         ?___fltol 0048                           ?___lldiv 0020  
                         ?___llmod 002D                         ?__Umul8_16 0020  
             I2C_Master_Write@data 0076                          __pstrings 07B2  
                         ?_confMPU 0070                           _I2C_NACK 07F7  
                         ?_readMPU 0070                           ?_isdigit 0070  
                         _I2C_Read 1311                           ?_sendMPU 0070  
                         ?_sprintf 0037                  interrupt_function 0004  
                   ___wmul@product 0024                          clear_ram0 11F3  
                  UARTSendString@i 0026                           _PIR1bits 000C  
                         _UARTInit 1491                   __size_of_I2C_ACK 0009  
                      __stringbase 07C1                  ___wmul@multiplier 0020  
                 ??_UARTSendString 0023              __size_of_UARTSendChar 000C  
                     UARTInit@BRGH 0031                        ??__Umul8_16 0022  
__size_of_I2C_Master_RepeatedStart 0009                   __size_of___fladd 0288  
                 __size_of___fldiv 01DD                   __size_of___flneg 000D  
                 __size_of___flmul 0361          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___flsub 0024                   __size_of___fltol 007C  
                 __size_of___lldiv 0068                   __size_of___llmod 0056  
               __end_of__stringtab 07C2                        _isdigit$851 0020  
                 __size_of_confMPU 00BF                           _banderas 0077  
                       sprintf@val 0047                    _I2C_Master_Init 122B  
                         ___xxtofl 15A8                    _I2C_Master_Wait 1238  
                 __size_of_readMPU 0303                    _I2C_Master_Stop 1204  
                 __size_of_isdigit 0014                   __size_of_sendMPU 019C  
                         __ptext10 1504                           __ptext11 13D2  
                         __ptext20 1311                           __ptext12 121F  
                         __ptext21 07F7                           __ptext13 0380  
                         __ptext30 1429                           __ptext22 1216  
                         __ptext14 15A8                           __ptext31 122B  
                         __ptext23 120D                           __ptext15 001F  
                         __ptext32 129A                           __ptext24 0890  
                         __ptext16 12E8                           __ptext25 1252  
                         __ptext17 094F                           __ptext26 1204  
                         __ptext18 0D78                           __ptext27 11FB  
                         __ptext19 1262                           __ptext28 1238  
                         __ptext29 1491                   __size_of_sprintf 024C  
                     _UARTSendChar 121F                      __size_of_main 003D  
                    __size_of_ftoa 012F           __end_of_I2C_Master_Start 1204  
                         readMPU@i 00E9           __end_of_I2C_Master_Write 1262  
                         isdigit@c 0021                  UARTSendString@str 0020  
                         intlevel1 0000                          sprintf@ap 0046  
                        sprintf@sp 004B                   ___lldiv@dividend 0024  
                        stringcode 07BC            __end_of_I2C_Master_Init 1238  
          __end_of_I2C_Master_Wait 1245            __end_of_I2C_Master_Stop 120D  
           __Umul8_16@multiplicand 0020                           sprintf@c 0050  
                         sprintf@f 0037                   ___lldiv@quotient 0028  
                         stringdir 07BC                           stringtab 07B2  
                      _SSPCON2bits 0091                      ___fladd@signs 0058  
                     ___fladd@aexp 0059                       ___fladd@bexp 005A  
             __Umul8_16@multiplier 0028                  __Umul8_16@product 0024  
