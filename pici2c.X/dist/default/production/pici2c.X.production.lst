

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 03 18:19:01 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.20
    51                           ; Generated 12/02/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F887 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  008F                     	;# 
   129  0090                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  009F                     	;# 
   147  0105                     	;# 
   148  0107                     	;# 
   149  0108                     	;# 
   150  0109                     	;# 
   151  010C                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  010F                     	;# 
   156  0185                     	;# 
   157  0187                     	;# 
   158  0188                     	;# 
   159  0189                     	;# 
   160  018C                     	;# 
   161  018D                     	;# 
   162  0000                     	;# 
   163  0001                     	;# 
   164  0002                     	;# 
   165  0003                     	;# 
   166  0004                     	;# 
   167  0005                     	;# 
   168  0006                     	;# 
   169  0007                     	;# 
   170  0008                     	;# 
   171  0009                     	;# 
   172  000A                     	;# 
   173  000B                     	;# 
   174  000C                     	;# 
   175  000D                     	;# 
   176  000E                     	;# 
   177  000E                     	;# 
   178  000F                     	;# 
   179  0010                     	;# 
   180  0011                     	;# 
   181  0012                     	;# 
   182  0013                     	;# 
   183  0014                     	;# 
   184  0015                     	;# 
   185  0015                     	;# 
   186  0016                     	;# 
   187  0017                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001B                     	;# 
   192  001B                     	;# 
   193  001C                     	;# 
   194  001D                     	;# 
   195  001E                     	;# 
   196  001F                     	;# 
   197  0081                     	;# 
   198  0085                     	;# 
   199  0086                     	;# 
   200  0087                     	;# 
   201  0088                     	;# 
   202  0089                     	;# 
   203  008C                     	;# 
   204  008D                     	;# 
   205  008E                     	;# 
   206  008F                     	;# 
   207  0090                     	;# 
   208  0091                     	;# 
   209  0092                     	;# 
   210  0093                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0097                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009A                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  0105                     	;# 
   226  0107                     	;# 
   227  0108                     	;# 
   228  0109                     	;# 
   229  010C                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  0185                     	;# 
   235  0187                     	;# 
   236  0188                     	;# 
   237  0189                     	;# 
   238  018C                     	;# 
   239  018D                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0008                     	;# 
   249  0009                     	;# 
   250  000A                     	;# 
   251  000B                     	;# 
   252  000C                     	;# 
   253  000D                     	;# 
   254  000E                     	;# 
   255  000E                     	;# 
   256  000F                     	;# 
   257  0010                     	;# 
   258  0011                     	;# 
   259  0012                     	;# 
   260  0013                     	;# 
   261  0014                     	;# 
   262  0015                     	;# 
   263  0015                     	;# 
   264  0016                     	;# 
   265  0017                     	;# 
   266  0018                     	;# 
   267  0019                     	;# 
   268  001A                     	;# 
   269  001B                     	;# 
   270  001B                     	;# 
   271  001C                     	;# 
   272  001D                     	;# 
   273  001E                     	;# 
   274  001F                     	;# 
   275  0081                     	;# 
   276  0085                     	;# 
   277  0086                     	;# 
   278  0087                     	;# 
   279  0088                     	;# 
   280  0089                     	;# 
   281  008C                     	;# 
   282  008D                     	;# 
   283  008E                     	;# 
   284  008F                     	;# 
   285  0090                     	;# 
   286  0091                     	;# 
   287  0092                     	;# 
   288  0093                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0094                     	;# 
   292  0095                     	;# 
   293  0096                     	;# 
   294  0097                     	;# 
   295  0098                     	;# 
   296  0099                     	;# 
   297  009A                     	;# 
   298  009B                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  0105                     	;# 
   304  0107                     	;# 
   305  0108                     	;# 
   306  0109                     	;# 
   307  010C                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  010F                     	;# 
   312  0185                     	;# 
   313  0187                     	;# 
   314  0188                     	;# 
   315  0189                     	;# 
   316  018C                     	;# 
   317  018D                     	;# 
   318  0000                     	;# 
   319  0001                     	;# 
   320  0002                     	;# 
   321  0003                     	;# 
   322  0004                     	;# 
   323  0005                     	;# 
   324  0006                     	;# 
   325  0007                     	;# 
   326  0008                     	;# 
   327  0009                     	;# 
   328  000A                     	;# 
   329  000B                     	;# 
   330  000C                     	;# 
   331  000D                     	;# 
   332  000E                     	;# 
   333  000E                     	;# 
   334  000F                     	;# 
   335  0010                     	;# 
   336  0011                     	;# 
   337  0012                     	;# 
   338  0013                     	;# 
   339  0014                     	;# 
   340  0015                     	;# 
   341  0015                     	;# 
   342  0016                     	;# 
   343  0017                     	;# 
   344  0018                     	;# 
   345  0019                     	;# 
   346  001A                     	;# 
   347  001B                     	;# 
   348  001B                     	;# 
   349  001C                     	;# 
   350  001D                     	;# 
   351  001E                     	;# 
   352  001F                     	;# 
   353  0081                     	;# 
   354  0085                     	;# 
   355  0086                     	;# 
   356  0087                     	;# 
   357  0088                     	;# 
   358  0089                     	;# 
   359  008C                     	;# 
   360  008D                     	;# 
   361  008E                     	;# 
   362  008F                     	;# 
   363  0090                     	;# 
   364  0091                     	;# 
   365  0092                     	;# 
   366  0093                     	;# 
   367  0093                     	;# 
   368  0093                     	;# 
   369  0094                     	;# 
   370  0095                     	;# 
   371  0096                     	;# 
   372  0097                     	;# 
   373  0098                     	;# 
   374  0099                     	;# 
   375  009A                     	;# 
   376  009B                     	;# 
   377  009C                     	;# 
   378  009D                     	;# 
   379  009E                     	;# 
   380  009F                     	;# 
   381  0105                     	;# 
   382  0107                     	;# 
   383  0108                     	;# 
   384  0109                     	;# 
   385  010C                     	;# 
   386  010C                     	;# 
   387  010D                     	;# 
   388  010E                     	;# 
   389  010F                     	;# 
   390  0185                     	;# 
   391  0187                     	;# 
   392  0188                     	;# 
   393  0189                     	;# 
   394  018C                     	;# 
   395  018D                     	;# 
   396  0000                     	;# 
   397  0001                     	;# 
   398  0002                     	;# 
   399  0003                     	;# 
   400  0004                     	;# 
   401  0005                     	;# 
   402  0006                     	;# 
   403  0007                     	;# 
   404  0008                     	;# 
   405  0009                     	;# 
   406  000A                     	;# 
   407  000B                     	;# 
   408  000C                     	;# 
   409  000D                     	;# 
   410  000E                     	;# 
   411  000E                     	;# 
   412  000F                     	;# 
   413  0010                     	;# 
   414  0011                     	;# 
   415  0012                     	;# 
   416  0013                     	;# 
   417  0014                     	;# 
   418  0015                     	;# 
   419  0015                     	;# 
   420  0016                     	;# 
   421  0017                     	;# 
   422  0018                     	;# 
   423  0019                     	;# 
   424  001A                     	;# 
   425  001B                     	;# 
   426  001B                     	;# 
   427  001C                     	;# 
   428  001D                     	;# 
   429  001E                     	;# 
   430  001F                     	;# 
   431  0081                     	;# 
   432  0085                     	;# 
   433  0086                     	;# 
   434  0087                     	;# 
   435  0088                     	;# 
   436  0089                     	;# 
   437  008C                     	;# 
   438  008D                     	;# 
   439  008E                     	;# 
   440  008F                     	;# 
   441  0090                     	;# 
   442  0091                     	;# 
   443  0092                     	;# 
   444  0093                     	;# 
   445  0093                     	;# 
   446  0093                     	;# 
   447  0094                     	;# 
   448  0095                     	;# 
   449  0096                     	;# 
   450  0097                     	;# 
   451  0098                     	;# 
   452  0099                     	;# 
   453  009A                     	;# 
   454  009B                     	;# 
   455  009C                     	;# 
   456  009D                     	;# 
   457  009E                     	;# 
   458  009F                     	;# 
   459  0105                     	;# 
   460  0107                     	;# 
   461  0108                     	;# 
   462  0109                     	;# 
   463  010C                     	;# 
   464  010C                     	;# 
   465  010D                     	;# 
   466  010E                     	;# 
   467  010F                     	;# 
   468  0185                     	;# 
   469  0187                     	;# 
   470  0188                     	;# 
   471  0189                     	;# 
   472  018C                     	;# 
   473  018D                     	;# 
   474                           
   475                           	psect	strings
   476  07B5                     __pstrings:
   477  07B5                     stringtab:
   478  07B5                     __stringtab:
   479                           
   480                           ;	String table - string pointers are 1 byte each
   481  07B5  1BFF               	btfsc	btemp+1,7
   482  07B6  2FBF               	ljmp	stringcode
   483  07B7  1383               	bcf	3,7
   484  07B8  187F               	btfsc	btemp+1,0
   485  07B9  1783               	bsf	3,7
   486  07BA  0800               	movf	0,w
   487  07BB  0A84               	incf	4,f
   488  07BC  1903               	skipnz
   489  07BD  0AFF               	incf	btemp+1,f
   490  07BE  0008               	return
   491  07BF                     stringcode:
   492  07BF                     stringdir:
   493  07BF  3007               	movlw	high stringdir
   494  07C0  008A               	movwf	10
   495  07C1  0804               	movf	4,w
   496  07C2  0A84               	incf	4,f
   497  07C3  0782               	addwf	2,f
   498  07C4                     __stringbase:
   499  07C4  3400               	retlw	0
   500  07C5                     __end_of__stringtab:
   501  07C5                     _dpowers:
   502  07C5  3401               	retlw	1
   503  07C6  3400               	retlw	0
   504  07C7  3400               	retlw	0
   505  07C8  3400               	retlw	0
   506  07C9  340A               	retlw	10
   507  07CA  3400               	retlw	0
   508  07CB  3400               	retlw	0
   509  07CC  3400               	retlw	0
   510  07CD  3464               	retlw	100
   511  07CE  3400               	retlw	0
   512  07CF  3400               	retlw	0
   513  07D0  3400               	retlw	0
   514  07D1  34E8               	retlw	232
   515  07D2  3403               	retlw	3
   516  07D3  3400               	retlw	0
   517  07D4  3400               	retlw	0
   518  07D5  3410               	retlw	16
   519  07D6  3427               	retlw	39
   520  07D7  3400               	retlw	0
   521  07D8  3400               	retlw	0
   522  07D9  34A0               	retlw	160
   523  07DA  3486               	retlw	134
   524  07DB  3401               	retlw	1
   525  07DC  3400               	retlw	0
   526  07DD  3440               	retlw	64
   527  07DE  3442               	retlw	66
   528  07DF  340F               	retlw	15
   529  07E0  3400               	retlw	0
   530  07E1  3480               	retlw	128
   531  07E2  3496               	retlw	150
   532  07E3  3498               	retlw	152
   533  07E4  3400               	retlw	0
   534  07E5  3400               	retlw	0
   535  07E6  34E1               	retlw	225
   536  07E7  34F5               	retlw	245
   537  07E8  3405               	retlw	5
   538  07E9  3400               	retlw	0
   539  07EA  34CA               	retlw	202
   540  07EB  349A               	retlw	154
   541  07EC  343B               	retlw	59
   542  07ED                     __end_of_dpowers:
   543  0019                     _TXREG	set	25
   544  0018                     _RCSTAbits	set	24
   545  001A                     _RCREG	set	26
   546  000C                     _PIR1bits	set	12
   547  000B                     _INTCONbits	set	11
   548  0005                     _PORTA	set	5
   549  0013                     _SSPBUF	set	19
   550  0014                     _SSPCON	set	20
   551  0063                     _SSPIF	set	99
   552  0091                     _SSPCON2bits	set	145
   553  0087                     _TRISCbits	set	135
   554  0098                     _TXSTAbits	set	152
   555  0099                     _SPBRG	set	153
   556  008C                     _PIE1bits	set	140
   557  0085                     _TRISA	set	133
   558  0093                     _SSPADD	set	147
   559  0094                     _SSPSTAT	set	148
   560  0091                     _SSPCON2	set	145
   561  04A0                     _BF	set	1184
   562  048B                     _RCEN	set	1163
   563  048E                     _ACKSTAT	set	1166
   564  048C                     _ACKEN	set	1164
   565  048D                     _ACKDT	set	1165
   566  048A                     _PEN	set	1162
   567  0489                     _RSEN	set	1161
   568  0488                     _SEN	set	1160
   569  043C                     _TRISC4	set	1084
   570  043B                     _TRISC3	set	1083
   571  0188                     _ANSEL	set	392
   572  07ED                     STR_7:
   573  07ED  3425               	retlw	37	;'%'
   574  07EE  346C               	retlw	108	;'l'
   575  07EF  3475               	retlw	117	;'u'
   576  07F0  342E               	retlw	46	;'.'
   577  07F1  3425               	retlw	37	;'%'
   578  07F2  3436               	retlw	54	;'6'
   579  07F3  342E               	retlw	46	;'.'
   580  07F4  3436               	retlw	54	;'6'
   581  07F5  346C               	retlw	108	;'l'
   582  07F6  3475               	retlw	117	;'u'
   583  07F7  3400               	retlw	0
   584  07F8                     STR_1:
   585  07F8  3420               	retlw	32	;' '
   586  07F9  3400               	retlw	0
   587  07F8                     
   588                           	psect	cinit
   589  0011                     start_initialization:	
   590                           ; #config settings
   591                           
   592  0011                     __initialization:
   593                           
   594                           ; Clear objects allocated to COMMON
   595  0011  01F7               	clrf	__pbssCOMMON& (0+127)
   596                           
   597                           ; Clear objects allocated to BANK0
   598  0012  1283               	bcf	3,5	;RP0=0, select bank0
   599  0013  1303               	bcf	3,6	;RP1=0, select bank0
   600  0014  01EE               	clrf	__pbssBANK0& (0+127)
   601                           
   602                           ; Clear objects allocated to BANK1
   603  0015  1383               	bcf	3,7	;select IRP bank0
   604  0016  30A0               	movlw	low __pbssBANK1
   605  0017  0084               	movwf	4
   606  0018  30CF               	movlw	low (__pbssBANK1+47)
   607  0019  160A  118A  21E5  120A  118A  	fcall	clear_ram0
   608  001E                     end_of_initialization:	
   609                           ;End of C runtime variable initialization code
   610                           
   611  001E                     __end_of__initialization:
   612  001E  0183               	clrf	3
   613  001F  160A  118A  2B3A   	ljmp	_main	;jump to C main() function
   614                           
   615                           	psect	bssCOMMON
   616  0077                     __pbssCOMMON:
   617  0077                     _banderas:
   618  0077                     	ds	1
   619                           
   620                           	psect	bssBANK0
   621  006E                     __pbssBANK0:
   622  006E                     _buffer:
   623  006E                     	ds	1
   624                           
   625                           	psect	bssBANK1
   626  00A0                     __pbssBANK1:
   627  00A0                     _status:
   628  00A0                     	ds	2
   629  00A2                     _datos:
   630  00A2                     	ds	28
   631  00BE                     ftoa@buf:
   632  00BE                     	ds	17
   633                           
   634                           	psect	clrtext
   635  11E5                     clear_ram0:	
   636                           ;	Called with FSR containing the base address, and
   637                           ;	W with the last address+1
   638                           
   639  11E5  0064               	clrwdt	;clear the watchdog before getting into this loop
   640  11E6                     clrloop0:
   641  11E6  0180               	clrf	0	;clear RAM location pointed to by FSR
   642  11E7  0A84               	incf	4,f	;increment pointer
   643  11E8  0604               	xorwf	4,w	;XOR with final address
   644  11E9  1903               	btfsc	3,2	;have we reached the end yet?
   645  11EA  3400               	retlw	0	;all done for this memory range, return
   646  11EB  0604               	xorwf	4,w	;XOR again to restore value
   647  11EC  29E6               	goto	clrloop0	;do the next byte
   648                           
   649                           	psect	cstackBANK1
   650  00CF                     __pcstackBANK1:
   651  00CF                     ftoa@rem:
   652  00CF                     readMPU@valores:	
   653                           ; 4 bytes @ 0x0
   654                           
   655                           
   656                           ; 14 bytes @ 0x0
   657  00CF                     	ds	4
   658  00D3                     ftoa@l:
   659                           
   660                           ; 4 bytes @ 0x4
   661  00D3                     	ds	4
   662  00D7                     ftoa@cp:
   663                           
   664                           ; 1 bytes @ 0x8
   665  00D7                     	ds	6
   666  00DD                     readMPU@guardar:
   667                           
   668                           ; 14 bytes @ 0xE
   669  00DD                     	ds	14
   670  00EB                     readMPU@i:
   671                           
   672                           ; 2 bytes @ 0x1C
   673  00EB                     	ds	2
   674  00ED                     readMPU@datos:
   675                           
   676                           ; 1 bytes @ 0x1E
   677  00ED                     	ds	1
   678                           
   679                           	psect	cstackCOMMON
   680  0070                     __pcstackCOMMON:
   681  0070                     ?_isdigit:
   682  0070                     ?_I2C_Master_Write:	
   683                           ; 1 bit 
   684                           
   685  0070                     ?_confMPU:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_readMPU:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_sendMPU:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_UARTSendChar:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_I2C_Master_Init:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_I2C_Master_Wait:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_I2C_Master_Start:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_I2C_Start:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_I2C_Master_RepeatedStart:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_I2C_Master_Stop:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?_I2C_ACK:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ?_I2C_NACK:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ?_I2C_Read:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?_main:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ?_isr:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ??_isr:	
   731                           ; 1 bytes @ 0x0
   732                           
   733                           
   734                           ; 1 bytes @ 0x0
   735  0070                     	ds	5
   736  0075                     isr@entrante:
   737                           
   738                           ; 1 bytes @ 0x5
   739  0075                     	ds	1
   740  0076                     ??_I2C_Master_Write:
   741  0076                     ??_UARTSendChar:	
   742                           ; 1 bytes @ 0x6
   743                           
   744  0076                     ??_isdigit:	
   745                           ; 1 bytes @ 0x6
   746                           
   747  0076                     ??_I2C_Master_Init:	
   748                           ; 1 bytes @ 0x6
   749                           
   750  0076                     ??_I2C_Master_Wait:	
   751                           ; 1 bytes @ 0x6
   752                           
   753  0076                     ??_I2C_Master_Start:	
   754                           ; 1 bytes @ 0x6
   755                           
   756  0076                     ??_I2C_Master_RepeatedStart:	
   757                           ; 1 bytes @ 0x6
   758                           
   759  0076                     ??_I2C_Master_Stop:	
   760                           ; 1 bytes @ 0x6
   761                           
   762  0076                     ??_I2C_ACK:	
   763                           ; 1 bytes @ 0x6
   764                           
   765  0076                     ??_I2C_NACK:	
   766                           ; 1 bytes @ 0x6
   767                           
   768  0076                     ??_I2C_Read:	
   769                           ; 1 bytes @ 0x6
   770                           
   771  0076                     ??___wmul:	
   772                           ; 1 bytes @ 0x6
   773                           
   774  0076                     ??___lldiv:	
   775                           ; 1 bytes @ 0x6
   776                           
   777  0076                     ??___flneg:	
   778                           ; 1 bytes @ 0x6
   779                           
   780  0076                     ??___flsub:	
   781                           ; 1 bytes @ 0x6
   782                           
   783  0076                     I2C_Master_Write@data:	
   784                           ; 1 bytes @ 0x6
   785                           
   786  0076                     UARTSendChar@c:	
   787                           ; 1 bytes @ 0x6
   788                           
   789                           
   790                           ; 1 bytes @ 0x6
   791  0076                     	ds	1
   792  0077                     ??_confMPU:
   793  0077                     ??_I2C_Start:	
   794                           ; 1 bytes @ 0x7
   795                           
   796                           
   797                           	psect	cstackBANK0
   798  0020                     __pcstackBANK0:	
   799                           ; 1 bytes @ 0x7
   800                           
   801  0020                     ?___flge:
   802  0020                     ?_UARTSendString:	
   803                           ; 1 bit 
   804                           
   805  0020                     ?__Umul8_16:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0020                     ?___wmul:	
   809                           ; 2 bytes @ 0x0
   810                           
   811  0020                     ?___lldiv:	
   812                           ; 2 bytes @ 0x0
   813                           
   814  0020                     ?___flneg:	
   815                           ; 4 bytes @ 0x0
   816                           
   817  0020                     ?___xxtofl:	
   818                           ; 4 bytes @ 0x0
   819                           
   820  0020                     I2C_Start@add:	
   821                           ; 4 bytes @ 0x0
   822                           
   823  0020                     I2C_Read@ACK_NACK:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0020                     __Umul8_16@multiplicand:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0020                     _isdigit$895:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0020                     UARTSendString@str:	
   833                           ; 1 bytes @ 0x0
   834                           
   835  0020                     ___wmul@multiplier:	
   836                           ; 2 bytes @ 0x0
   837                           
   838  0020                     ___lldiv@divisor:	
   839                           ; 2 bytes @ 0x0
   840                           
   841  0020                     ___flge@ff1:	
   842                           ; 4 bytes @ 0x0
   843                           
   844  0020                     ___flneg@f1:	
   845                           ; 4 bytes @ 0x0
   846                           
   847  0020                     ___xxtofl@val:	
   848                           ; 4 bytes @ 0x0
   849                           
   850                           
   851                           ; 4 bytes @ 0x0
   852  0020                     	ds	1
   853  0021                     I2C_Read@Data:
   854  0021                     isdigit@c:	
   855                           ; 1 bytes @ 0x1
   856                           
   857                           
   858                           ; 1 bytes @ 0x1
   859  0021                     	ds	1
   860  0022                     ??__Umul8_16:
   861  0022                     UARTSendString@max_length:	
   862                           ; 1 bytes @ 0x2
   863                           
   864  0022                     ___wmul@multiplicand:	
   865                           ; 1 bytes @ 0x2
   866                           
   867                           
   868                           ; 2 bytes @ 0x2
   869  0022                     	ds	1
   870  0023                     ??_UARTSendString:
   871                           
   872                           ; 1 bytes @ 0x3
   873  0023                     	ds	1
   874  0024                     ??___xxtofl:
   875  0024                     ___wmul@product:	
   876                           ; 1 bytes @ 0x4
   877                           
   878  0024                     __Umul8_16@product:	
   879                           ; 2 bytes @ 0x4
   880                           
   881  0024                     ___lldiv@dividend:	
   882                           ; 2 bytes @ 0x4
   883                           
   884  0024                     ___flge@ff2:	
   885                           ; 4 bytes @ 0x4
   886                           
   887                           
   888                           ; 4 bytes @ 0x4
   889  0024                     	ds	2
   890  0026                     UARTSendString@i:
   891  0026                     __Umul8_16@word_mpld:	
   892                           ; 2 bytes @ 0x6
   893                           
   894                           
   895                           ; 2 bytes @ 0x6
   896  0026                     	ds	2
   897  0028                     ??___flge:
   898  0028                     __Umul8_16@multiplier:	
   899                           ; 1 bytes @ 0x8
   900                           
   901  0028                     ___xxtofl@sign:	
   902                           ; 1 bytes @ 0x8
   903                           
   904  0028                     ___lldiv@quotient:	
   905                           ; 1 bytes @ 0x8
   906                           
   907                           
   908                           ; 4 bytes @ 0x8
   909  0028                     	ds	1
   910  0029                     ___xxtofl@exp:
   911                           
   912                           ; 1 bytes @ 0x9
   913  0029                     	ds	1
   914  002A                     ___xxtofl@arg:
   915                           
   916                           ; 4 bytes @ 0xA
   917  002A                     	ds	2
   918  002C                     ___lldiv@counter:
   919                           
   920                           ; 1 bytes @ 0xC
   921  002C                     	ds	1
   922  002D                     ?_UARTInit:
   923  002D                     ?___llmod:	
   924                           ; 1 bytes @ 0xD
   925                           
   926  002D                     UARTInit@baud_rate:	
   927                           ; 4 bytes @ 0xD
   928                           
   929  002D                     ___llmod@divisor:	
   930                           ; 4 bytes @ 0xD
   931                           
   932                           
   933                           ; 4 bytes @ 0xD
   934  002D                     	ds	1
   935  002E                     ?___fldiv:
   936  002E                     ?___flmul:	
   937                           ; 4 bytes @ 0xE
   938                           
   939  002E                     ___fldiv@a:	
   940                           ; 4 bytes @ 0xE
   941                           
   942  002E                     ___flmul@b:	
   943                           ; 4 bytes @ 0xE
   944                           
   945                           
   946                           ; 4 bytes @ 0xE
   947  002E                     	ds	3
   948  0031                     UARTInit@BRGH:
   949  0031                     ___llmod@dividend:	
   950                           ; 1 bytes @ 0x11
   951                           
   952                           
   953                           ; 4 bytes @ 0x11
   954  0031                     	ds	1
   955  0032                     ??_UARTInit:
   956  0032                     ___fldiv@b:	
   957                           ; 1 bytes @ 0x12
   958                           
   959  0032                     ___flmul@a:	
   960                           ; 4 bytes @ 0x12
   961                           
   962                           
   963                           ; 4 bytes @ 0x12
   964  0032                     	ds	3
   965  0035                     ??___llmod:
   966                           
   967                           ; 1 bytes @ 0x15
   968  0035                     	ds	1
   969  0036                     ??___fldiv:
   970  0036                     ??___flmul:	
   971                           ; 1 bytes @ 0x16
   972                           
   973  0036                     ___llmod@counter:	
   974                           ; 1 bytes @ 0x16
   975                           
   976                           
   977                           ; 1 bytes @ 0x16
   978  0036                     	ds	1
   979  0037                     ?_sprintf:
   980  0037                     sprintf@f:	
   981                           ; 2 bytes @ 0x17
   982                           
   983                           
   984                           ; 1 bytes @ 0x17
   985  0037                     	ds	4
   986  003B                     ___flmul@sign:
   987  003B                     ___fldiv@rem:	
   988                           ; 1 bytes @ 0x1B
   989                           
   990                           
   991                           ; 4 bytes @ 0x1B
   992  003B                     	ds	1
   993  003C                     ___flmul@aexp:
   994                           
   995                           ; 1 bytes @ 0x1C
   996  003C                     	ds	1
   997  003D                     ___flmul@grs:
   998                           
   999                           ; 4 bytes @ 0x1D
  1000  003D                     	ds	2
  1001  003F                     ___fldiv@sign:
  1002                           
  1003                           ; 1 bytes @ 0x1F
  1004  003F                     	ds	1
  1005  0040                     ??_sprintf:
  1006  0040                     ___fldiv@new_exp:	
  1007                           ; 1 bytes @ 0x20
  1008                           
  1009                           
  1010                           ; 2 bytes @ 0x20
  1011  0040                     	ds	1
  1012  0041                     ___flmul@bexp:
  1013                           
  1014                           ; 1 bytes @ 0x21
  1015  0041                     	ds	1
  1016  0042                     ___fldiv@grs:
  1017  0042                     ___flmul@prod:	
  1018                           ; 4 bytes @ 0x22
  1019                           
  1020                           
  1021                           ; 4 bytes @ 0x22
  1022  0042                     	ds	3
  1023  0045                     sprintf@flag:
  1024                           
  1025                           ; 1 bytes @ 0x25
  1026  0045                     	ds	1
  1027  0046                     ___fldiv@bexp:
  1028  0046                     sprintf@ap:	
  1029                           ; 1 bytes @ 0x26
  1030                           
  1031  0046                     ___flmul@temp:	
  1032                           ; 1 bytes @ 0x26
  1033                           
  1034                           
  1035                           ; 2 bytes @ 0x26
  1036  0046                     	ds	1
  1037  0047                     ___fldiv@aexp:
  1038  0047                     sprintf@val:	
  1039                           ; 1 bytes @ 0x27
  1040                           
  1041                           
  1042                           ; 4 bytes @ 0x27
  1043  0047                     	ds	1
  1044  0048                     ?___fltol:
  1045  0048                     ?___fladd:	
  1046                           ; 4 bytes @ 0x28
  1047                           
  1048  0048                     ___fltol@f1:	
  1049                           ; 4 bytes @ 0x28
  1050                           
  1051  0048                     ___fladd@b:	
  1052                           ; 4 bytes @ 0x28
  1053                           
  1054                           
  1055                           ; 4 bytes @ 0x28
  1056  0048                     	ds	3
  1057  004B                     sprintf@sp:
  1058                           
  1059                           ; 1 bytes @ 0x2B
  1060  004B                     	ds	1
  1061  004C                     ??___fltol:
  1062  004C                     sprintf@width:	
  1063                           ; 1 bytes @ 0x2C
  1064                           
  1065  004C                     ___fladd@a:	
  1066                           ; 2 bytes @ 0x2C
  1067                           
  1068                           
  1069                           ; 4 bytes @ 0x2C
  1070  004C                     	ds	2
  1071  004E                     sprintf@prec:
  1072                           
  1073                           ; 2 bytes @ 0x2E
  1074  004E                     	ds	2
  1075  0050                     ??___fladd:
  1076  0050                     sprintf@c:	
  1077                           ; 1 bytes @ 0x30
  1078                           
  1079                           
  1080                           ; 1 bytes @ 0x30
  1081  0050                     	ds	1
  1082  0051                     ___fltol@sign1:
  1083                           
  1084                           ; 1 bytes @ 0x31
  1085  0051                     	ds	1
  1086  0052                     ___fltol@exp1:
  1087                           
  1088                           ; 1 bytes @ 0x32
  1089  0052                     	ds	6
  1090  0058                     ___fladd@signs:
  1091                           
  1092                           ; 1 bytes @ 0x38
  1093  0058                     	ds	1
  1094  0059                     ___fladd@aexp:
  1095                           
  1096                           ; 1 bytes @ 0x39
  1097  0059                     	ds	1
  1098  005A                     ___fladd@bexp:
  1099                           
  1100                           ; 1 bytes @ 0x3A
  1101  005A                     	ds	1
  1102  005B                     ___fladd@grs:
  1103                           
  1104                           ; 1 bytes @ 0x3B
  1105  005B                     	ds	1
  1106  005C                     ??_readMPU:
  1107  005C                     ?___flsub:	
  1108                           ; 1 bytes @ 0x3C
  1109                           
  1110  005C                     ___flsub@a:	
  1111                           ; 4 bytes @ 0x3C
  1112                           
  1113                           
  1114                           ; 4 bytes @ 0x3C
  1115  005C                     	ds	4
  1116  0060                     ___flsub@b:
  1117                           
  1118                           ; 4 bytes @ 0x40
  1119  0060                     	ds	4
  1120  0064                     ?_ftoa:
  1121  0064                     ftoa@f:	
  1122                           ; 1 bytes @ 0x44
  1123                           
  1124                           
  1125                           ; 4 bytes @ 0x44
  1126  0064                     	ds	4
  1127  0068                     ftoa@status:
  1128                           
  1129                           ; 2 bytes @ 0x48
  1130  0068                     	ds	2
  1131  006A                     ??_ftoa:
  1132                           
  1133                           ; 1 bytes @ 0x4A
  1134  006A                     	ds	1
  1135  006B                     ??_sendMPU:
  1136                           
  1137                           ; 1 bytes @ 0x4B
  1138  006B                     	ds	1
  1139  006C                     ??_main:
  1140                           
  1141                           ; 1 bytes @ 0x4C
  1142  006C                     	ds	2
  1143                           
  1144                           	psect	maintext
  1145  133A                     __pmaintext:	
  1146 ;;
  1147 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1148 ;;
  1149 ;; *************** function _main *****************
  1150 ;; Defined at:
  1151 ;;		line 43 in file "main.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;		None
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;		None
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : B00/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1165 ;;      Params:         0       0       0       0       0
  1166 ;;      Locals:         0       0       0       0       0
  1167 ;;      Temps:          0       2       0       0       0
  1168 ;;      Totals:         0       2       0       0       0
  1169 ;;Total ram usage:        2 bytes
  1170 ;; Hardware stack levels required when called:    5
  1171 ;; This function calls:
  1172 ;;		_I2C_Master_Init
  1173 ;;		_UARTInit
  1174 ;;		_confMPU
  1175 ;;		_readMPU
  1176 ;;		_sendMPU
  1177 ;; This function is called by:
  1178 ;;		Startup code after reset
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           
  1183                           ;psect for function _main
  1184  133A                     _main:
  1185  133A                     l3469:	
  1186                           ;incstack = 0
  1187                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1188                           
  1189                           
  1190                           ;main.c: 44:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1191  133A  3082               	movlw	130
  1192  133B  1283               	bcf	3,5	;RP0=0, select bank0
  1193  133C  1303               	bcf	3,6	;RP1=0, select bank0
  1194  133D  00ED               	movwf	??_main+1
  1195  133E  30DD               	movlw	221
  1196  133F  00EC               	movwf	??_main
  1197  1340                     u5017:
  1198  1340  0BEC               	decfsz	??_main,f
  1199  1341  2B40               	goto	u5017
  1200  1342  0BED               	decfsz	??_main+1,f
  1201  1343  2B40               	goto	u5017
  1202  1344                     l3471:
  1203                           
  1204                           ;main.c: 45:     ANSEL = 0;
  1205  1344  1683               	bsf	3,5	;RP0=1, select bank3
  1206  1345  1703               	bsf	3,6	;RP1=1, select bank3
  1207  1346  0188               	clrf	8	;volatile
  1208  1347                     l3473:
  1209                           
  1210                           ;main.c: 46:     TRISA = 0;
  1211  1347  1683               	bsf	3,5	;RP0=1, select bank1
  1212  1348  1303               	bcf	3,6	;RP1=0, select bank1
  1213  1349  0185               	clrf	5	;volatile
  1214  134A                     l3475:
  1215                           
  1216                           ;main.c: 47:     PORTA = 0;
  1217  134A  1283               	bcf	3,5	;RP0=0, select bank0
  1218  134B  1303               	bcf	3,6	;RP1=0, select bank0
  1219  134C  0185               	clrf	5	;volatile
  1220  134D                     l3477:
  1221                           
  1222                           ;main.c: 50:     I2C_Master_Init();
  1223  134D  160A  118A  2226  160A  118A  	fcall	_I2C_Master_Init
  1224  1352                     l3479:
  1225                           
  1226                           ;main.c: 51:     UARTInit(19200, 1);
  1227  1352  3000               	movlw	0
  1228  1353  1283               	bcf	3,5	;RP0=0, select bank0
  1229  1354  1303               	bcf	3,6	;RP1=0, select bank0
  1230  1355  00B0               	movwf	UARTInit@baud_rate+3
  1231  1356  3000               	movlw	0
  1232  1357  00AF               	movwf	UARTInit@baud_rate+2
  1233  1358  304B               	movlw	75
  1234  1359  00AE               	movwf	UARTInit@baud_rate+1
  1235  135A  3000               	movlw	0
  1236  135B  00AD               	movwf	UARTInit@baud_rate
  1237  135C  01B1               	clrf	UARTInit@BRGH
  1238  135D  0AB1               	incf	UARTInit@BRGH,f
  1239  135E  160A  118A  2491  160A  118A  	fcall	_UARTInit
  1240  1363                     l3481:
  1241                           
  1242                           ;main.c: 52:     confMPU();
  1243  1363  120A  158A  2090  160A  118A  	fcall	_confMPU
  1244  1368                     l3483:
  1245                           
  1246                           ;main.c: 55:     INTCONbits.GIE = 1;
  1247  1368  178B               	bsf	11,7	;volatile
  1248  1369                     l3485:
  1249                           
  1250                           ;main.c: 56:     INTCONbits.PEIE = 1;
  1251  1369  170B               	bsf	11,6	;volatile
  1252  136A                     l3487:
  1253                           
  1254                           ;main.c: 57:     PIE1bits.RCIE = 1;
  1255  136A  1683               	bsf	3,5	;RP0=1, select bank1
  1256  136B  1303               	bcf	3,6	;RP1=0, select bank1
  1257  136C  168C               	bsf	12,5	;volatile
  1258  136D                     l3489:
  1259                           
  1260                           ;main.c: 60:         readMPU(datos);
  1261  136D  30A2               	movlw	(low (_datos| 0))& (0+255)
  1262  136E  120A  118A  2383  160A  118A  	fcall	_readMPU
  1263  1373                     l3491:
  1264                           
  1265                           ;main.c: 61:         sendMPU();
  1266  1373  160A  118A  2664  160A  118A  	fcall	_sendMPU
  1267  1378  2B6D               	goto	l3489
  1268  1379  120A  118A  280E   	ljmp	start
  1269  137C                     __end_of_main:
  1270                           
  1271                           	psect	text1
  1272  1664                     __ptext1:	
  1273 ;; *************** function _sendMPU *****************
  1274 ;; Defined at:
  1275 ;;		line 69 in file "main.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;		None
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;		None
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      void 
  1282 ;; Registers used:
  1283 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1289 ;;      Params:         0       0       0       0       0
  1290 ;;      Locals:         0       0       0       0       0
  1291 ;;      Temps:          0       1       0       0       0
  1292 ;;      Totals:         0       1       0       0       0
  1293 ;;Total ram usage:        1 bytes
  1294 ;; Hardware stack levels used:    1
  1295 ;; Hardware stack levels required when called:    4
  1296 ;; This function calls:
  1297 ;;		_UARTSendChar
  1298 ;;		_UARTSendString
  1299 ;;		_ftoa
  1300 ;; This function is called by:
  1301 ;;		_main
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           
  1306                           ;psect for function _sendMPU
  1307  1664                     _sendMPU:
  1308  1664                     l3455:	
  1309                           ;incstack = 0
  1310                           ; Regs used in _sendMPU: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1311                           
  1312                           
  1313                           ;main.c: 70:     buffer = ftoa(datos[0], status);
  1314  1664  1683               	bsf	3,5	;RP0=1, select bank1
  1315  1665  1303               	bcf	3,6	;RP1=0, select bank1
  1316  1666  0825               	movf	(_datos+3)^(0+128),w
  1317  1667  1283               	bcf	3,5	;RP0=0, select bank0
  1318  1668  1303               	bcf	3,6	;RP1=0, select bank0
  1319  1669  00E7               	movwf	ftoa@f+3
  1320  166A  1683               	bsf	3,5	;RP0=1, select bank1
  1321  166B  1303               	bcf	3,6	;RP1=0, select bank1
  1322  166C  0824               	movf	(_datos+2)^(0+128),w
  1323  166D  1283               	bcf	3,5	;RP0=0, select bank0
  1324  166E  1303               	bcf	3,6	;RP1=0, select bank0
  1325  166F  00E6               	movwf	ftoa@f+2
  1326  1670  1683               	bsf	3,5	;RP0=1, select bank1
  1327  1671  1303               	bcf	3,6	;RP1=0, select bank1
  1328  1672  0823               	movf	(_datos+1)^(0+128),w
  1329  1673  1283               	bcf	3,5	;RP0=0, select bank0
  1330  1674  1303               	bcf	3,6	;RP1=0, select bank0
  1331  1675  00E5               	movwf	ftoa@f+1
  1332  1676  1683               	bsf	3,5	;RP0=1, select bank1
  1333  1677  1303               	bcf	3,6	;RP1=0, select bank1
  1334  1678  0822               	movf	_datos^(0+128),w
  1335  1679  1283               	bcf	3,5	;RP0=0, select bank0
  1336  167A  1303               	bcf	3,6	;RP1=0, select bank0
  1337  167B  00E4               	movwf	ftoa@f
  1338  167C  3000               	movlw	0
  1339  167D  00E8               	movwf	ftoa@status
  1340  167E  3000               	movlw	0
  1341  167F  00E9               	movwf	ftoa@status+1
  1342  1680  120A  118A  2686  160A  118A  	fcall	_ftoa
  1343  1685  1283               	bcf	3,5	;RP0=0, select bank0
  1344  1686  1303               	bcf	3,6	;RP1=0, select bank0
  1345  1687  00EB               	movwf	??_sendMPU
  1346  1688  086B               	movf	??_sendMPU,w
  1347  1689  00EE               	movwf	_buffer
  1348                           
  1349                           ;main.c: 71:     UARTSendString(buffer, 6);
  1350  168A  086E               	movf	_buffer,w
  1351  168B  00A0               	movwf	UARTSendString@str
  1352  168C  3000               	movlw	0
  1353  168D  00A1               	movwf	UARTSendString@str+1
  1354  168E  3006               	movlw	6
  1355  168F  00EB               	movwf	??_sendMPU
  1356  1690  086B               	movf	??_sendMPU,w
  1357  1691  00A2               	movwf	UARTSendString@max_length
  1358  1692  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1359                           
  1360                           ;main.c: 73:     buffer = ftoa(datos[1], status);
  1361  1697  3004               	movlw	4
  1362  1698  3EA2               	addlw	(low (_datos| 0))& (0+255)
  1363  1699  0084               	movwf	4
  1364  169A  1383               	bcf	3,7	;select IRP bank1
  1365  169B  0800               	movf	0,w
  1366  169C  1283               	bcf	3,5	;RP0=0, select bank0
  1367  169D  1303               	bcf	3,6	;RP1=0, select bank0
  1368  169E  00E4               	movwf	ftoa@f
  1369  169F  0A84               	incf	4,f
  1370  16A0  0800               	movf	0,w
  1371  16A1  00E5               	movwf	ftoa@f+1
  1372  16A2  0A84               	incf	4,f
  1373  16A3  0800               	movf	0,w
  1374  16A4  00E6               	movwf	ftoa@f+2
  1375  16A5  0A84               	incf	4,f
  1376  16A6  0800               	movf	0,w
  1377  16A7  00E7               	movwf	ftoa@f+3
  1378  16A8  3000               	movlw	0
  1379  16A9  00E8               	movwf	ftoa@status
  1380  16AA  3000               	movlw	0
  1381  16AB  00E9               	movwf	ftoa@status+1
  1382  16AC  120A  118A  2686  160A  118A  	fcall	_ftoa
  1383  16B1  1283               	bcf	3,5	;RP0=0, select bank0
  1384  16B2  1303               	bcf	3,6	;RP1=0, select bank0
  1385  16B3  00EB               	movwf	??_sendMPU
  1386  16B4  086B               	movf	??_sendMPU,w
  1387  16B5  00EE               	movwf	_buffer
  1388                           
  1389                           ;main.c: 74:     UARTSendString(" ", 10);
  1390  16B6  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1391  16B7  00A0               	movwf	UARTSendString@str
  1392  16B8  3080               	movlw	128
  1393  16B9  00A1               	movwf	UARTSendString@str+1
  1394  16BA  300A               	movlw	10
  1395  16BB  00EB               	movwf	??_sendMPU
  1396  16BC  086B               	movf	??_sendMPU,w
  1397  16BD  00A2               	movwf	UARTSendString@max_length
  1398  16BE  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1399                           
  1400                           ;main.c: 75:     UARTSendString(buffer, 6);
  1401  16C3  1283               	bcf	3,5	;RP0=0, select bank0
  1402  16C4  1303               	bcf	3,6	;RP1=0, select bank0
  1403  16C5  086E               	movf	_buffer,w
  1404  16C6  00A0               	movwf	UARTSendString@str
  1405  16C7  3000               	movlw	0
  1406  16C8  00A1               	movwf	UARTSendString@str+1
  1407  16C9  3006               	movlw	6
  1408  16CA  00EB               	movwf	??_sendMPU
  1409  16CB  086B               	movf	??_sendMPU,w
  1410  16CC  00A2               	movwf	UARTSendString@max_length
  1411  16CD  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1412                           
  1413                           ;main.c: 77:     buffer = ftoa(datos[2], status);
  1414  16D2  3008               	movlw	8
  1415  16D3  3EA2               	addlw	(low (_datos| 0))& (0+255)
  1416  16D4  0084               	movwf	4
  1417  16D5  1383               	bcf	3,7	;select IRP bank1
  1418  16D6  0800               	movf	0,w
  1419  16D7  1283               	bcf	3,5	;RP0=0, select bank0
  1420  16D8  1303               	bcf	3,6	;RP1=0, select bank0
  1421  16D9  00E4               	movwf	ftoa@f
  1422  16DA  0A84               	incf	4,f
  1423  16DB  0800               	movf	0,w
  1424  16DC  00E5               	movwf	ftoa@f+1
  1425  16DD  0A84               	incf	4,f
  1426  16DE  0800               	movf	0,w
  1427  16DF  00E6               	movwf	ftoa@f+2
  1428  16E0  0A84               	incf	4,f
  1429  16E1  0800               	movf	0,w
  1430  16E2  00E7               	movwf	ftoa@f+3
  1431  16E3  3000               	movlw	0
  1432  16E4  00E8               	movwf	ftoa@status
  1433  16E5  3000               	movlw	0
  1434  16E6  00E9               	movwf	ftoa@status+1
  1435  16E7  120A  118A  2686  160A  118A  	fcall	_ftoa
  1436  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  1437  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  1438  16EE  00EB               	movwf	??_sendMPU
  1439  16EF  086B               	movf	??_sendMPU,w
  1440  16F0  00EE               	movwf	_buffer
  1441                           
  1442                           ;main.c: 78:     UARTSendString(" ", 10);
  1443  16F1  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1444  16F2  00A0               	movwf	UARTSendString@str
  1445  16F3  3080               	movlw	128
  1446  16F4  00A1               	movwf	UARTSendString@str+1
  1447  16F5  300A               	movlw	10
  1448  16F6  00EB               	movwf	??_sendMPU
  1449  16F7  086B               	movf	??_sendMPU,w
  1450  16F8  00A2               	movwf	UARTSendString@max_length
  1451  16F9  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1452                           
  1453                           ;main.c: 79:     UARTSendString(buffer, 6);
  1454  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  1455  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  1456  1700  086E               	movf	_buffer,w
  1457  1701  00A0               	movwf	UARTSendString@str
  1458  1702  3000               	movlw	0
  1459  1703  00A1               	movwf	UARTSendString@str+1
  1460  1704  3006               	movlw	6
  1461  1705  00EB               	movwf	??_sendMPU
  1462  1706  086B               	movf	??_sendMPU,w
  1463  1707  00A2               	movwf	UARTSendString@max_length
  1464  1708  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1465                           
  1466                           ;main.c: 81:     buffer = ftoa(datos[3], status);
  1467  170D  300C               	movlw	12
  1468  170E  3EA2               	addlw	(low (_datos| 0))& (0+255)
  1469  170F  0084               	movwf	4
  1470  1710  1383               	bcf	3,7	;select IRP bank1
  1471  1711  0800               	movf	0,w
  1472  1712  1283               	bcf	3,5	;RP0=0, select bank0
  1473  1713  1303               	bcf	3,6	;RP1=0, select bank0
  1474  1714  00E4               	movwf	ftoa@f
  1475  1715  0A84               	incf	4,f
  1476  1716  0800               	movf	0,w
  1477  1717  00E5               	movwf	ftoa@f+1
  1478  1718  0A84               	incf	4,f
  1479  1719  0800               	movf	0,w
  1480  171A  00E6               	movwf	ftoa@f+2
  1481  171B  0A84               	incf	4,f
  1482  171C  0800               	movf	0,w
  1483  171D  00E7               	movwf	ftoa@f+3
  1484  171E  3000               	movlw	0
  1485  171F  00E8               	movwf	ftoa@status
  1486  1720  3000               	movlw	0
  1487  1721  00E9               	movwf	ftoa@status+1
  1488  1722  120A  118A  2686  160A  118A  	fcall	_ftoa
  1489  1727  1283               	bcf	3,5	;RP0=0, select bank0
  1490  1728  1303               	bcf	3,6	;RP1=0, select bank0
  1491  1729  00EB               	movwf	??_sendMPU
  1492  172A  086B               	movf	??_sendMPU,w
  1493  172B  00EE               	movwf	_buffer
  1494                           
  1495                           ;main.c: 82:     UARTSendString(" ", 10);
  1496  172C  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1497  172D  00A0               	movwf	UARTSendString@str
  1498  172E  3080               	movlw	128
  1499  172F  00A1               	movwf	UARTSendString@str+1
  1500  1730  300A               	movlw	10
  1501  1731  00EB               	movwf	??_sendMPU
  1502  1732  086B               	movf	??_sendMPU,w
  1503  1733  00A2               	movwf	UARTSendString@max_length
  1504  1734  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1505                           
  1506                           ;main.c: 83:     UARTSendString(buffer, 6);
  1507  1739  1283               	bcf	3,5	;RP0=0, select bank0
  1508  173A  1303               	bcf	3,6	;RP1=0, select bank0
  1509  173B  086E               	movf	_buffer,w
  1510  173C  00A0               	movwf	UARTSendString@str
  1511  173D  3000               	movlw	0
  1512  173E  00A1               	movwf	UARTSendString@str+1
  1513  173F  3006               	movlw	6
  1514  1740  00EB               	movwf	??_sendMPU
  1515  1741  086B               	movf	??_sendMPU,w
  1516  1742  00A2               	movwf	UARTSendString@max_length
  1517  1743  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1518                           
  1519                           ;main.c: 85:     buffer = ftoa(datos[4], status);
  1520  1748  3010               	movlw	16
  1521  1749  3EA2               	addlw	(low (_datos| 0))& (0+255)
  1522  174A  0084               	movwf	4
  1523  174B  1383               	bcf	3,7	;select IRP bank1
  1524  174C  0800               	movf	0,w
  1525  174D  1283               	bcf	3,5	;RP0=0, select bank0
  1526  174E  1303               	bcf	3,6	;RP1=0, select bank0
  1527  174F  00E4               	movwf	ftoa@f
  1528  1750  0A84               	incf	4,f
  1529  1751  0800               	movf	0,w
  1530  1752  00E5               	movwf	ftoa@f+1
  1531  1753  0A84               	incf	4,f
  1532  1754  0800               	movf	0,w
  1533  1755  00E6               	movwf	ftoa@f+2
  1534  1756  0A84               	incf	4,f
  1535  1757  0800               	movf	0,w
  1536  1758  00E7               	movwf	ftoa@f+3
  1537  1759  3000               	movlw	0
  1538  175A  00E8               	movwf	ftoa@status
  1539  175B  3000               	movlw	0
  1540  175C  00E9               	movwf	ftoa@status+1
  1541  175D  120A  118A  2686  160A  118A  	fcall	_ftoa
  1542  1762  1283               	bcf	3,5	;RP0=0, select bank0
  1543  1763  1303               	bcf	3,6	;RP1=0, select bank0
  1544  1764  00EB               	movwf	??_sendMPU
  1545  1765  086B               	movf	??_sendMPU,w
  1546  1766  00EE               	movwf	_buffer
  1547                           
  1548                           ;main.c: 86:     UARTSendString(" ", 10);
  1549  1767  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1550  1768  00A0               	movwf	UARTSendString@str
  1551  1769  3080               	movlw	128
  1552  176A  00A1               	movwf	UARTSendString@str+1
  1553  176B  300A               	movlw	10
  1554  176C  00EB               	movwf	??_sendMPU
  1555  176D  086B               	movf	??_sendMPU,w
  1556  176E  00A2               	movwf	UARTSendString@max_length
  1557  176F  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1558                           
  1559                           ;main.c: 87:     UARTSendString(buffer, 6);
  1560  1774  1283               	bcf	3,5	;RP0=0, select bank0
  1561  1775  1303               	bcf	3,6	;RP1=0, select bank0
  1562  1776  086E               	movf	_buffer,w
  1563  1777  00A0               	movwf	UARTSendString@str
  1564  1778  3000               	movlw	0
  1565  1779  00A1               	movwf	UARTSendString@str+1
  1566  177A  3006               	movlw	6
  1567  177B  00EB               	movwf	??_sendMPU
  1568  177C  086B               	movf	??_sendMPU,w
  1569  177D  00A2               	movwf	UARTSendString@max_length
  1570  177E  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1571                           
  1572                           ;main.c: 88:     buffer = ftoa(datos[5], status);
  1573  1783  3014               	movlw	20
  1574  1784  3EA2               	addlw	(low (_datos| 0))& (0+255)
  1575  1785  0084               	movwf	4
  1576  1786  1383               	bcf	3,7	;select IRP bank1
  1577  1787  0800               	movf	0,w
  1578  1788  1283               	bcf	3,5	;RP0=0, select bank0
  1579  1789  1303               	bcf	3,6	;RP1=0, select bank0
  1580  178A  00E4               	movwf	ftoa@f
  1581  178B  0A84               	incf	4,f
  1582  178C  0800               	movf	0,w
  1583  178D  00E5               	movwf	ftoa@f+1
  1584  178E  0A84               	incf	4,f
  1585  178F  0800               	movf	0,w
  1586  1790  00E6               	movwf	ftoa@f+2
  1587  1791  0A84               	incf	4,f
  1588  1792  0800               	movf	0,w
  1589  1793  00E7               	movwf	ftoa@f+3
  1590  1794  3000               	movlw	0
  1591  1795  00E8               	movwf	ftoa@status
  1592  1796  3000               	movlw	0
  1593  1797  00E9               	movwf	ftoa@status+1
  1594  1798  120A  118A  2686  160A  118A  	fcall	_ftoa
  1595  179D  1283               	bcf	3,5	;RP0=0, select bank0
  1596  179E  1303               	bcf	3,6	;RP1=0, select bank0
  1597  179F  00EB               	movwf	??_sendMPU
  1598  17A0  086B               	movf	??_sendMPU,w
  1599  17A1  00EE               	movwf	_buffer
  1600                           
  1601                           ;main.c: 89:     UARTSendString(" ", 10);
  1602  17A2  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1603  17A3  00A0               	movwf	UARTSendString@str
  1604  17A4  3080               	movlw	128
  1605  17A5  00A1               	movwf	UARTSendString@str+1
  1606  17A6  300A               	movlw	10
  1607  17A7  00EB               	movwf	??_sendMPU
  1608  17A8  086B               	movf	??_sendMPU,w
  1609  17A9  00A2               	movwf	UARTSendString@max_length
  1610  17AA  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1611                           
  1612                           ;main.c: 90:     UARTSendString(buffer, 6);
  1613  17AF  1283               	bcf	3,5	;RP0=0, select bank0
  1614  17B0  1303               	bcf	3,6	;RP1=0, select bank0
  1615  17B1  086E               	movf	_buffer,w
  1616  17B2  00A0               	movwf	UARTSendString@str
  1617  17B3  3000               	movlw	0
  1618  17B4  00A1               	movwf	UARTSendString@str+1
  1619  17B5  3006               	movlw	6
  1620  17B6  00EB               	movwf	??_sendMPU
  1621  17B7  086B               	movf	??_sendMPU,w
  1622  17B8  00A2               	movwf	UARTSendString@max_length
  1623  17B9  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1624                           
  1625                           ;main.c: 92:     buffer = ftoa(datos[6], status);
  1626  17BE  3018               	movlw	24
  1627  17BF  3EA2               	addlw	(low (_datos| 0))& (0+255)
  1628  17C0  0084               	movwf	4
  1629  17C1  1383               	bcf	3,7	;select IRP bank1
  1630  17C2  0800               	movf	0,w
  1631  17C3  1283               	bcf	3,5	;RP0=0, select bank0
  1632  17C4  1303               	bcf	3,6	;RP1=0, select bank0
  1633  17C5  00E4               	movwf	ftoa@f
  1634  17C6  0A84               	incf	4,f
  1635  17C7  0800               	movf	0,w
  1636  17C8  00E5               	movwf	ftoa@f+1
  1637  17C9  0A84               	incf	4,f
  1638  17CA  0800               	movf	0,w
  1639  17CB  00E6               	movwf	ftoa@f+2
  1640  17CC  0A84               	incf	4,f
  1641  17CD  0800               	movf	0,w
  1642  17CE  00E7               	movwf	ftoa@f+3
  1643  17CF  3000               	movlw	0
  1644  17D0  00E8               	movwf	ftoa@status
  1645  17D1  3000               	movlw	0
  1646  17D2  00E9               	movwf	ftoa@status+1
  1647  17D3  120A  118A  2686  160A  118A  	fcall	_ftoa
  1648  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  1649  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  1650  17DA  00EB               	movwf	??_sendMPU
  1651  17DB  086B               	movf	??_sendMPU,w
  1652  17DC  00EE               	movwf	_buffer
  1653                           
  1654                           ;main.c: 93:     UARTSendString(" ", 10);
  1655  17DD  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1656  17DE  00A0               	movwf	UARTSendString@str
  1657  17DF  3080               	movlw	128
  1658  17E0  00A1               	movwf	UARTSendString@str+1
  1659  17E1  300A               	movlw	10
  1660  17E2  00EB               	movwf	??_sendMPU
  1661  17E3  086B               	movf	??_sendMPU,w
  1662  17E4  00A2               	movwf	UARTSendString@max_length
  1663  17E5  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1664                           
  1665                           ;main.c: 94:     UARTSendString(buffer, 6);
  1666  17EA  1283               	bcf	3,5	;RP0=0, select bank0
  1667  17EB  1303               	bcf	3,6	;RP1=0, select bank0
  1668  17EC  086E               	movf	_buffer,w
  1669  17ED  00A0               	movwf	UARTSendString@str
  1670  17EE  3000               	movlw	0
  1671  17EF  00A1               	movwf	UARTSendString@str+1
  1672  17F0  3006               	movlw	6
  1673  17F1  00EB               	movwf	??_sendMPU
  1674  17F2  086B               	movf	??_sendMPU,w
  1675  17F3  00A2               	movwf	UARTSendString@max_length
  1676  17F4  160A  118A  23D2  160A  118A  	fcall	_UARTSendString
  1677  17F9                     l3457:
  1678                           
  1679                           ;main.c: 96:     UARTSendChar('\n');
  1680  17F9  300A               	movlw	10
  1681  17FA  160A  118A  221A  160A  118A  	fcall	_UARTSendChar
  1682  17FF                     l141:
  1683  17FF  0008               	return
  1684  1800                     __end_of_sendMPU:
  1685                           
  1686                           	psect	text2
  1687  0686                     __ptext2:	
  1688 ;; *************** function _ftoa *****************
  1689 ;; Defined at:
  1690 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftoa.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;  f               4   68[BANK0 ] float 
  1693 ;;  status          2   72[BANK0 ] PTR int 
  1694 ;;		 -> NULL(0), RAM(512), 
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;  l               4    4[BANK1 ] unsigned long 
  1697 ;;  rem             4    0[BANK1 ] unsigned long 
  1698 ;;  cp              1    8[BANK1 ] PTR unsigned char 
  1699 ;;		 -> ftoa@buf(17), 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      PTR unsigned char 
  1702 ;; Registers used:
  1703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1709 ;;      Params:         0       6       0       0       0
  1710 ;;      Locals:         0       0       9       0       0
  1711 ;;      Temps:          0       1       0       0       0
  1712 ;;      Totals:         0       7       9       0       0
  1713 ;;Total ram usage:       16 bytes
  1714 ;; Hardware stack levels used:    1
  1715 ;; Hardware stack levels required when called:    3
  1716 ;; This function calls:
  1717 ;;		___flge
  1718 ;;		___flmul
  1719 ;;		___flneg
  1720 ;;		___flsub
  1721 ;;		___fltol
  1722 ;;		___xxtofl
  1723 ;;		_sprintf
  1724 ;; This function is called by:
  1725 ;;		_sendMPU
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           
  1730                           ;psect for function _ftoa
  1731  0686                     _ftoa:
  1732  0686                     l3379:	
  1733                           ;incstack = 0
  1734                           ; Regs used in _ftoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1735                           
  1736  0686  30BE               	movlw	(low (ftoa@buf| 0))& (0+255)
  1737  0687  1283               	bcf	3,5	;RP0=0, select bank0
  1738  0688  1303               	bcf	3,6	;RP1=0, select bank0
  1739  0689  00EA               	movwf	??_ftoa
  1740  068A  086A               	movf	??_ftoa,w
  1741  068B  1683               	bsf	3,5	;RP0=1, select bank1
  1742  068C  1303               	bcf	3,6	;RP1=0, select bank1
  1743  068D  00D7               	movwf	ftoa@cp^(0+128)
  1744  068E                     l3381:
  1745  068E  1283               	bcf	3,5	;RP0=0, select bank0
  1746  068F  1303               	bcf	3,6	;RP1=0, select bank0
  1747  0690  0867               	movf	ftoa@f+3,w
  1748  0691  00A3               	movwf	___flge@ff1+3
  1749  0692  0866               	movf	ftoa@f+2,w
  1750  0693  00A2               	movwf	___flge@ff1+2
  1751  0694  0865               	movf	ftoa@f+1,w
  1752  0695  00A1               	movwf	___flge@ff1+1
  1753  0696  0864               	movf	ftoa@f,w
  1754  0697  00A0               	movwf	___flge@ff1
  1755  0698  3000               	movlw	0
  1756  0699  00A7               	movwf	___flge@ff2+3
  1757  069A  3000               	movlw	0
  1758  069B  00A6               	movwf	___flge@ff2+2
  1759  069C  3000               	movlw	0
  1760  069D  00A5               	movwf	___flge@ff2+1
  1761  069E  3000               	movlw	0
  1762  069F  00A4               	movwf	___flge@ff2
  1763  06A0  160A  118A  2504  120A  118A  	fcall	___flge
  1764  06A5  1803               	btfsc	3,0
  1765  06A6  2EA8               	goto	u4961
  1766  06A7  2EA9               	goto	u4960
  1767  06A8                     u4961:
  1768  06A8  2ED5               	goto	l3389
  1769  06A9                     u4960:
  1770  06A9                     l3383:
  1771  06A9  302D               	movlw	45
  1772  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  1773  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  1774  06AC  00EA               	movwf	??_ftoa
  1775  06AD  1683               	bsf	3,5	;RP0=1, select bank1
  1776  06AE  1303               	bcf	3,6	;RP1=0, select bank1
  1777  06AF  0857               	movf	ftoa@cp^(0+128),w
  1778  06B0  0084               	movwf	4
  1779  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1780  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  1781  06B3  086A               	movf	??_ftoa,w
  1782  06B4  1383               	bcf	3,7	;select IRP bank0
  1783  06B5  0080               	movwf	0
  1784  06B6                     l3385:
  1785  06B6  3001               	movlw	1
  1786  06B7  00EA               	movwf	??_ftoa
  1787  06B8  086A               	movf	??_ftoa,w
  1788  06B9  1683               	bsf	3,5	;RP0=1, select bank1
  1789  06BA  1303               	bcf	3,6	;RP1=0, select bank1
  1790  06BB  07D7               	addwf	ftoa@cp^(0+128),f
  1791  06BC                     l3387:
  1792  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  1793  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  1794  06BE  0867               	movf	ftoa@f+3,w
  1795  06BF  00A3               	movwf	___flneg@f1+3
  1796  06C0  0866               	movf	ftoa@f+2,w
  1797  06C1  00A2               	movwf	___flneg@f1+2
  1798  06C2  0865               	movf	ftoa@f+1,w
  1799  06C3  00A1               	movwf	___flneg@f1+1
  1800  06C4  0864               	movf	ftoa@f,w
  1801  06C5  00A0               	movwf	___flneg@f1
  1802  06C6  160A  118A  2240  120A  118A  	fcall	___flneg
  1803  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  1804  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  1805  06CD  0823               	movf	?___flneg+3,w
  1806  06CE  00E7               	movwf	ftoa@f+3
  1807  06CF  0822               	movf	?___flneg+2,w
  1808  06D0  00E6               	movwf	ftoa@f+2
  1809  06D1  0821               	movf	?___flneg+1,w
  1810  06D2  00E5               	movwf	ftoa@f+1
  1811  06D3  0820               	movf	?___flneg,w
  1812  06D4  00E4               	movwf	ftoa@f
  1813  06D5                     l3389:
  1814  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  1815  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  1816  06D7  0867               	movf	ftoa@f+3,w
  1817  06D8  00CB               	movwf	___fltol@f1+3
  1818  06D9  0866               	movf	ftoa@f+2,w
  1819  06DA  00CA               	movwf	___fltol@f1+2
  1820  06DB  0865               	movf	ftoa@f+1,w
  1821  06DC  00C9               	movwf	___fltol@f1+1
  1822  06DD  0864               	movf	ftoa@f,w
  1823  06DE  00C8               	movwf	___fltol@f1
  1824  06DF  120A  158A  2014  120A  118A  	fcall	___fltol
  1825  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  1826  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  1827  06E6  084B               	movf	?___fltol+3,w
  1828  06E7  1683               	bsf	3,5	;RP0=1, select bank1
  1829  06E8  1303               	bcf	3,6	;RP1=0, select bank1
  1830  06E9  00D6               	movwf	(ftoa@l+3)^(0+128)
  1831  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  1832  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  1833  06EC  084A               	movf	?___fltol+2,w
  1834  06ED  1683               	bsf	3,5	;RP0=1, select bank1
  1835  06EE  1303               	bcf	3,6	;RP1=0, select bank1
  1836  06EF  00D5               	movwf	(ftoa@l+2)^(0+128)
  1837  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  1838  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  1839  06F2  0849               	movf	?___fltol+1,w
  1840  06F3  1683               	bsf	3,5	;RP0=1, select bank1
  1841  06F4  1303               	bcf	3,6	;RP1=0, select bank1
  1842  06F5  00D4               	movwf	(ftoa@l+1)^(0+128)
  1843  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1844  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1845  06F8  0848               	movf	?___fltol,w
  1846  06F9  1683               	bsf	3,5	;RP0=1, select bank1
  1847  06FA  1303               	bcf	3,6	;RP1=0, select bank1
  1848  06FB  00D3               	movwf	ftoa@l^(0+128)
  1849  06FC                     l3391:
  1850  06FC  0856               	movf	(ftoa@l+3)^(0+128),w
  1851  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  1852  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  1853  06FF  00A3               	movwf	___xxtofl@val+3
  1854  0700  1683               	bsf	3,5	;RP0=1, select bank1
  1855  0701  1303               	bcf	3,6	;RP1=0, select bank1
  1856  0702  0855               	movf	(ftoa@l+2)^(0+128),w
  1857  0703  1283               	bcf	3,5	;RP0=0, select bank0
  1858  0704  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0705  00A2               	movwf	___xxtofl@val+2
  1860  0706  1683               	bsf	3,5	;RP0=1, select bank1
  1861  0707  1303               	bcf	3,6	;RP1=0, select bank1
  1862  0708  0854               	movf	(ftoa@l+1)^(0+128),w
  1863  0709  1283               	bcf	3,5	;RP0=0, select bank0
  1864  070A  1303               	bcf	3,6	;RP1=0, select bank0
  1865  070B  00A1               	movwf	___xxtofl@val+1
  1866  070C  1683               	bsf	3,5	;RP0=1, select bank1
  1867  070D  1303               	bcf	3,6	;RP1=0, select bank1
  1868  070E  0853               	movf	ftoa@l^(0+128),w
  1869  070F  1283               	bcf	3,5	;RP0=0, select bank0
  1870  0710  1303               	bcf	3,6	;RP1=0, select bank0
  1871  0711  00A0               	movwf	___xxtofl@val
  1872  0712  3000               	movlw	0
  1873  0713  160A  118A  25A8  120A  118A  	fcall	___xxtofl
  1874  0718  1283               	bcf	3,5	;RP0=0, select bank0
  1875  0719  1303               	bcf	3,6	;RP1=0, select bank0
  1876  071A  0823               	movf	?___xxtofl+3,w
  1877  071B  00DF               	movwf	___flsub@a+3
  1878  071C  0822               	movf	?___xxtofl+2,w
  1879  071D  00DE               	movwf	___flsub@a+2
  1880  071E  0821               	movf	?___xxtofl+1,w
  1881  071F  00DD               	movwf	___flsub@a+1
  1882  0720  0820               	movf	?___xxtofl,w
  1883  0721  00DC               	movwf	___flsub@a
  1884  0722  0867               	movf	ftoa@f+3,w
  1885  0723  00E3               	movwf	___flsub@b+3
  1886  0724  0866               	movf	ftoa@f+2,w
  1887  0725  00E2               	movwf	___flsub@b+2
  1888  0726  0865               	movf	ftoa@f+1,w
  1889  0727  00E1               	movwf	___flsub@b+1
  1890  0728  0864               	movf	ftoa@f,w
  1891  0729  00E0               	movwf	___flsub@b
  1892  072A  160A  118A  2271  120A  118A  	fcall	___flsub
  1893  072F  1283               	bcf	3,5	;RP0=0, select bank0
  1894  0730  1303               	bcf	3,6	;RP1=0, select bank0
  1895  0731  085F               	movf	?___flsub+3,w
  1896  0732  00E7               	movwf	ftoa@f+3
  1897  0733  085E               	movf	?___flsub+2,w
  1898  0734  00E6               	movwf	ftoa@f+2
  1899  0735  085D               	movf	?___flsub+1,w
  1900  0736  00E5               	movwf	ftoa@f+1
  1901  0737  085C               	movf	?___flsub,w
  1902  0738  00E4               	movwf	ftoa@f
  1903  0739                     l3393:
  1904  0739  0867               	movf	ftoa@f+3,w
  1905  073A  00B5               	movwf	___flmul@a+3
  1906  073B  0866               	movf	ftoa@f+2,w
  1907  073C  00B4               	movwf	___flmul@a+2
  1908  073D  0865               	movf	ftoa@f+1,w
  1909  073E  00B3               	movwf	___flmul@a+1
  1910  073F  0864               	movf	ftoa@f,w
  1911  0740  00B2               	movwf	___flmul@a
  1912  0741  3049               	movlw	73
  1913  0742  00B1               	movwf	___flmul@b+3
  1914  0743  3074               	movlw	116
  1915  0744  00B0               	movwf	___flmul@b+2
  1916  0745  3024               	movlw	36
  1917  0746  00AF               	movwf	___flmul@b+1
  1918  0747  3000               	movlw	0
  1919  0748  00AE               	movwf	___flmul@b
  1920  0749  120A  118A  2022  120A  118A  	fcall	___flmul
  1921  074E  1283               	bcf	3,5	;RP0=0, select bank0
  1922  074F  1303               	bcf	3,6	;RP1=0, select bank0
  1923  0750  0831               	movf	?___flmul+3,w
  1924  0751  00CB               	movwf	___fltol@f1+3
  1925  0752  0830               	movf	?___flmul+2,w
  1926  0753  00CA               	movwf	___fltol@f1+2
  1927  0754  082F               	movf	?___flmul+1,w
  1928  0755  00C9               	movwf	___fltol@f1+1
  1929  0756  082E               	movf	?___flmul,w
  1930  0757  00C8               	movwf	___fltol@f1
  1931  0758  120A  158A  2014  120A  118A  	fcall	___fltol
  1932  075D  1283               	bcf	3,5	;RP0=0, select bank0
  1933  075E  1303               	bcf	3,6	;RP1=0, select bank0
  1934  075F  084B               	movf	?___fltol+3,w
  1935  0760  1683               	bsf	3,5	;RP0=1, select bank1
  1936  0761  1303               	bcf	3,6	;RP1=0, select bank1
  1937  0762  00D2               	movwf	(ftoa@rem+3)^(0+128)
  1938  0763  1283               	bcf	3,5	;RP0=0, select bank0
  1939  0764  1303               	bcf	3,6	;RP1=0, select bank0
  1940  0765  084A               	movf	?___fltol+2,w
  1941  0766  1683               	bsf	3,5	;RP0=1, select bank1
  1942  0767  1303               	bcf	3,6	;RP1=0, select bank1
  1943  0768  00D1               	movwf	(ftoa@rem+2)^(0+128)
  1944  0769  1283               	bcf	3,5	;RP0=0, select bank0
  1945  076A  1303               	bcf	3,6	;RP1=0, select bank0
  1946  076B  0849               	movf	?___fltol+1,w
  1947  076C  1683               	bsf	3,5	;RP0=1, select bank1
  1948  076D  1303               	bcf	3,6	;RP1=0, select bank1
  1949  076E  00D0               	movwf	(ftoa@rem+1)^(0+128)
  1950  076F  1283               	bcf	3,5	;RP0=0, select bank0
  1951  0770  1303               	bcf	3,6	;RP1=0, select bank0
  1952  0771  0848               	movf	?___fltol,w
  1953  0772  1683               	bsf	3,5	;RP0=1, select bank1
  1954  0773  1303               	bcf	3,6	;RP1=0, select bank1
  1955  0774  00CF               	movwf	ftoa@rem^(0+128)
  1956  0775                     l3395:
  1957  0775  3029               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1958  0776  1283               	bcf	3,5	;RP0=0, select bank0
  1959  0777  1303               	bcf	3,6	;RP1=0, select bank0
  1960  0778  00EA               	movwf	??_ftoa
  1961  0779  086A               	movf	??_ftoa,w
  1962  077A  00B7               	movwf	sprintf@f
  1963  077B  1683               	bsf	3,5	;RP0=1, select bank1
  1964  077C  1303               	bcf	3,6	;RP1=0, select bank1
  1965  077D  0856               	movf	(ftoa@l+3)^(0+128),w
  1966  077E  1283               	bcf	3,5	;RP0=0, select bank0
  1967  077F  1303               	bcf	3,6	;RP1=0, select bank0
  1968  0780  00BB               	movwf	?_sprintf+4
  1969  0781  1683               	bsf	3,5	;RP0=1, select bank1
  1970  0782  1303               	bcf	3,6	;RP1=0, select bank1
  1971  0783  0855               	movf	(ftoa@l+2)^(0+128),w
  1972  0784  1283               	bcf	3,5	;RP0=0, select bank0
  1973  0785  1303               	bcf	3,6	;RP1=0, select bank0
  1974  0786  00BA               	movwf	?_sprintf+3
  1975  0787  1683               	bsf	3,5	;RP0=1, select bank1
  1976  0788  1303               	bcf	3,6	;RP1=0, select bank1
  1977  0789  0854               	movf	(ftoa@l+1)^(0+128),w
  1978  078A  1283               	bcf	3,5	;RP0=0, select bank0
  1979  078B  1303               	bcf	3,6	;RP1=0, select bank0
  1980  078C  00B9               	movwf	?_sprintf+2
  1981  078D  1683               	bsf	3,5	;RP0=1, select bank1
  1982  078E  1303               	bcf	3,6	;RP1=0, select bank1
  1983  078F  0853               	movf	ftoa@l^(0+128),w
  1984  0790  1283               	bcf	3,5	;RP0=0, select bank0
  1985  0791  1303               	bcf	3,6	;RP1=0, select bank0
  1986  0792  00B8               	movwf	?_sprintf+1
  1987  0793  1683               	bsf	3,5	;RP0=1, select bank1
  1988  0794  1303               	bcf	3,6	;RP1=0, select bank1
  1989  0795  0852               	movf	(ftoa@rem+3)^(0+128),w
  1990  0796  1283               	bcf	3,5	;RP0=0, select bank0
  1991  0797  1303               	bcf	3,6	;RP1=0, select bank0
  1992  0798  00BF               	movwf	?_sprintf+8
  1993  0799  1683               	bsf	3,5	;RP0=1, select bank1
  1994  079A  1303               	bcf	3,6	;RP1=0, select bank1
  1995  079B  0851               	movf	(ftoa@rem+2)^(0+128),w
  1996  079C  1283               	bcf	3,5	;RP0=0, select bank0
  1997  079D  1303               	bcf	3,6	;RP1=0, select bank0
  1998  079E  00BE               	movwf	?_sprintf+7
  1999  079F  1683               	bsf	3,5	;RP0=1, select bank1
  2000  07A0  1303               	bcf	3,6	;RP1=0, select bank1
  2001  07A1  0850               	movf	(ftoa@rem+1)^(0+128),w
  2002  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  2003  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  2004  07A4  00BD               	movwf	?_sprintf+6
  2005  07A5  1683               	bsf	3,5	;RP0=1, select bank1
  2006  07A6  1303               	bcf	3,6	;RP1=0, select bank1
  2007  07A7  084F               	movf	ftoa@rem^(0+128),w
  2008  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  2009  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  2010  07AA  00BC               	movwf	?_sprintf+5
  2011  07AB  1683               	bsf	3,5	;RP0=1, select bank1
  2012  07AC  1303               	bcf	3,6	;RP1=0, select bank1
  2013  07AD  0857               	movf	ftoa@cp^(0+128),w
  2014  07AE  120A  158A  232C  120A  118A  	fcall	_sprintf
  2015  07B3                     l3397:
  2016  07B3  30BE               	movlw	(low (ftoa@buf| 0))& (0+255)
  2017  07B4                     l772:
  2018  07B4  0008               	return
  2019  07B5                     __end_of_ftoa:
  2020                           
  2021                           	psect	text3
  2022  0B2C                     __ptext3:	
  2023 ;; *************** function _sprintf *****************
  2024 ;; Defined at:
  2025 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  sp              1    wreg     PTR unsigned char 
  2028 ;;		 -> ftoa@buf(17), 
  2029 ;;  f               1   23[BANK0 ] PTR const unsigned char 
  2030 ;;		 -> STR_7(11), 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  sp              1   43[BANK0 ] PTR unsigned char 
  2033 ;;		 -> ftoa@buf(17), 
  2034 ;;  val             4   39[BANK0 ] unsigned long 
  2035 ;;  tmpval          4    0        struct .
  2036 ;;  prec            2   46[BANK0 ] int 
  2037 ;;  width           2   44[BANK0 ] int 
  2038 ;;  cp              2    0        PTR const unsigned char 
  2039 ;;  len             2    0        unsigned int 
  2040 ;;  c               1   48[BANK0 ] unsigned char 
  2041 ;;  ap              1   38[BANK0 ] PTR void [1]
  2042 ;;		 -> ?_sprintf(2), 
  2043 ;;  flag            1   37[BANK0 ] unsigned char 
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  2   23[BANK0 ] int 
  2046 ;; Registers used:
  2047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2053 ;;      Params:         0       9       0       0       0
  2054 ;;      Locals:         0      12       0       0       0
  2055 ;;      Temps:          0       5       0       0       0
  2056 ;;      Totals:         0      26       0       0       0
  2057 ;;Total ram usage:       26 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    2
  2060 ;; This function calls:
  2061 ;;		___lldiv
  2062 ;;		___llmod
  2063 ;;		___wmul
  2064 ;;		_isdigit
  2065 ;; This function is called by:
  2066 ;;		_ftoa
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           
  2071                           ;psect for function _sprintf
  2072  0B2C                     _sprintf:
  2073                           
  2074                           ;incstack = 0
  2075                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2076                           ;sprintf@sp stored from wreg
  2077  0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  2078  0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  2079  0B2E  00CB               	movwf	sprintf@sp
  2080  0B2F                     l3239:
  2081                           
  2082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2083  0B2F  3038               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2084  0B30  00C0               	movwf	??_sprintf
  2085  0B31  0840               	movf	??_sprintf,w
  2086  0B32  00C6               	movwf	sprintf@ap
  2087                           
  2088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2089  0B33  2D61               	goto	l3337
  2090  0B34                     l3241:
  2091                           
  2092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2093  0B34  3025               	movlw	37
  2094  0B35  0650               	xorwf	sprintf@c,w
  2095  0B36  1903               	btfsc	3,2
  2096  0B37  2B39               	goto	u4741
  2097  0B38  2B3A               	goto	u4740
  2098  0B39                     u4741:
  2099  0B39  2B46               	goto	l3247
  2100  0B3A                     u4740:
  2101  0B3A                     l3243:
  2102                           
  2103                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2104  0B3A  0850               	movf	sprintf@c,w
  2105  0B3B  00C0               	movwf	??_sprintf
  2106  0B3C  084B               	movf	sprintf@sp,w
  2107  0B3D  0084               	movwf	4
  2108  0B3E  0840               	movf	??_sprintf,w
  2109  0B3F  1383               	bcf	3,7	;select IRP bank0
  2110  0B40  0080               	movwf	0
  2111  0B41                     l3245:
  2112  0B41  3001               	movlw	1
  2113  0B42  00C0               	movwf	??_sprintf
  2114  0B43  0840               	movf	??_sprintf,w
  2115  0B44  07CB               	addwf	sprintf@sp,f
  2116                           
  2117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2118  0B45  2D61               	goto	l3337
  2119  0B46                     l3247:
  2120                           
  2121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2122  0B46  01CC               	clrf	sprintf@width
  2123  0B47  01CD               	clrf	sprintf@width+1
  2124                           
  2125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2126  0B48  01C5               	clrf	sprintf@flag
  2127  0B49                     l3249:
  2128                           
  2129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2130  0B49  0837               	movf	sprintf@f,w
  2131  0B4A  0084               	movwf	4
  2132  0B4B  120A  118A  27BF  120A  158A  	fcall	stringdir
  2133  0B50  120A  158A  2000  120A  158A  	fcall	_isdigit
  2134  0B55  1C03               	btfss	3,0
  2135  0B56  2B58               	goto	u4751
  2136  0B57  2B59               	goto	u4750
  2137  0B58                     u4751:
  2138  0B58  2B99               	goto	l3261
  2139  0B59                     u4750:
  2140  0B59                     l3251:
  2141                           
  2142                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2143  0B59  1283               	bcf	3,5	;RP0=0, select bank0
  2144  0B5A  1303               	bcf	3,6	;RP1=0, select bank0
  2145  0B5B  01CC               	clrf	sprintf@width
  2146  0B5C  01CD               	clrf	sprintf@width+1
  2147  0B5D                     l3253:
  2148                           
  2149                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2150  0B5D  300A               	movlw	10
  2151  0B5E  1283               	bcf	3,5	;RP0=0, select bank0
  2152  0B5F  1303               	bcf	3,6	;RP1=0, select bank0
  2153  0B60  00A0               	movwf	___wmul@multiplier
  2154  0B61  3000               	movlw	0
  2155  0B62  00A1               	movwf	___wmul@multiplier+1
  2156  0B63  084D               	movf	sprintf@width+1,w
  2157  0B64  00A3               	movwf	___wmul@multiplicand+1
  2158  0B65  084C               	movf	sprintf@width,w
  2159  0B66  00A2               	movwf	___wmul@multiplicand
  2160  0B67  160A  118A  22BC  120A  158A  	fcall	___wmul
  2161  0B6C  1283               	bcf	3,5	;RP0=0, select bank0
  2162  0B6D  1303               	bcf	3,6	;RP1=0, select bank0
  2163  0B6E  0821               	movf	?___wmul+1,w
  2164  0B6F  00CD               	movwf	sprintf@width+1
  2165  0B70  0820               	movf	?___wmul,w
  2166  0B71  00CC               	movwf	sprintf@width
  2167  0B72                     l3255:
  2168                           
  2169                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2170  0B72  0837               	movf	sprintf@f,w
  2171  0B73  0084               	movwf	4
  2172  0B74  120A  118A  27BF  120A  158A  	fcall	stringdir
  2173  0B79  3ED0               	addlw	208
  2174  0B7A  00C0               	movwf	??_sprintf
  2175  0B7B  30FF               	movlw	255
  2176  0B7C  1803               	skipnc
  2177  0B7D  3000               	movlw	0
  2178  0B7E  00C1               	movwf	??_sprintf+1
  2179  0B7F  0840               	movf	??_sprintf,w
  2180  0B80  07CC               	addwf	sprintf@width,f
  2181  0B81  1803               	skipnc
  2182  0B82  0ACD               	incf	sprintf@width+1,f
  2183  0B83  0841               	movf	??_sprintf+1,w
  2184  0B84  07CD               	addwf	sprintf@width+1,f
  2185  0B85                     l3257:
  2186  0B85  3001               	movlw	1
  2187  0B86  00C0               	movwf	??_sprintf
  2188  0B87  0840               	movf	??_sprintf,w
  2189  0B88  07B7               	addwf	sprintf@f,f
  2190  0B89                     l3259:
  2191                           
  2192                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2193  0B89  0837               	movf	sprintf@f,w
  2194  0B8A  0084               	movwf	4
  2195  0B8B  120A  118A  27BF  120A  158A  	fcall	stringdir
  2196  0B90  120A  158A  2000  120A  158A  	fcall	_isdigit
  2197  0B95  1803               	btfsc	3,0
  2198  0B96  2B98               	goto	u4761
  2199  0B97  2B99               	goto	u4760
  2200  0B98                     u4761:
  2201  0B98  2B5D               	goto	l3253
  2202  0B99                     u4760:
  2203  0B99                     l3261:
  2204                           
  2205                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2206  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  2207  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  2208  0B9B  0837               	movf	sprintf@f,w
  2209  0B9C  0084               	movwf	4
  2210  0B9D  120A  118A  27BF  120A  158A  	fcall	stringdir
  2211  0BA2  3A2E               	xorlw	46
  2212  0BA3  1D03               	skipz
  2213  0BA4  2BA6               	goto	u4771
  2214  0BA5  2BA7               	goto	u4770
  2215  0BA6                     u4771:
  2216  0BA6  2BEB               	goto	l3275
  2217  0BA7                     u4770:
  2218  0BA7                     l3263:
  2219                           
  2220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2221  0BA7  3001               	movlw	1
  2222  0BA8  00C0               	movwf	??_sprintf
  2223  0BA9  0840               	movf	??_sprintf,w
  2224  0BAA  07B7               	addwf	sprintf@f,f
  2225  0BAB                     l3265:
  2226                           
  2227                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2228  0BAB  01CE               	clrf	sprintf@prec
  2229  0BAC  01CF               	clrf	sprintf@prec+1
  2230                           
  2231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2232  0BAD  2BDA               	goto	l3273
  2233  0BAE                     l3267:
  2234                           
  2235                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2236  0BAE  300A               	movlw	10
  2237  0BAF  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0BB0  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0BB1  00A0               	movwf	___wmul@multiplier
  2240  0BB2  3000               	movlw	0
  2241  0BB3  00A1               	movwf	___wmul@multiplier+1
  2242  0BB4  084F               	movf	sprintf@prec+1,w
  2243  0BB5  00A3               	movwf	___wmul@multiplicand+1
  2244  0BB6  084E               	movf	sprintf@prec,w
  2245  0BB7  00A2               	movwf	___wmul@multiplicand
  2246  0BB8  160A  118A  22BC  120A  158A  	fcall	___wmul
  2247  0BBD  1283               	bcf	3,5	;RP0=0, select bank0
  2248  0BBE  1303               	bcf	3,6	;RP1=0, select bank0
  2249  0BBF  0821               	movf	?___wmul+1,w
  2250  0BC0  00CF               	movwf	sprintf@prec+1
  2251  0BC1  0820               	movf	?___wmul,w
  2252  0BC2  00CE               	movwf	sprintf@prec
  2253  0BC3                     l3269:
  2254                           
  2255                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2256  0BC3  0837               	movf	sprintf@f,w
  2257  0BC4  0084               	movwf	4
  2258  0BC5  120A  118A  27BF  120A  158A  	fcall	stringdir
  2259  0BCA  3ED0               	addlw	208
  2260  0BCB  00C0               	movwf	??_sprintf
  2261  0BCC  30FF               	movlw	255
  2262  0BCD  1803               	skipnc
  2263  0BCE  3000               	movlw	0
  2264  0BCF  00C1               	movwf	??_sprintf+1
  2265  0BD0  0840               	movf	??_sprintf,w
  2266  0BD1  07CE               	addwf	sprintf@prec,f
  2267  0BD2  1803               	skipnc
  2268  0BD3  0ACF               	incf	sprintf@prec+1,f
  2269  0BD4  0841               	movf	??_sprintf+1,w
  2270  0BD5  07CF               	addwf	sprintf@prec+1,f
  2271  0BD6                     l3271:
  2272  0BD6  3001               	movlw	1
  2273  0BD7  00C0               	movwf	??_sprintf
  2274  0BD8  0840               	movf	??_sprintf,w
  2275  0BD9  07B7               	addwf	sprintf@f,f
  2276  0BDA                     l3273:
  2277                           
  2278                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2279  0BDA  0837               	movf	sprintf@f,w
  2280  0BDB  0084               	movwf	4
  2281  0BDC  120A  118A  27BF  120A  158A  	fcall	stringdir
  2282  0BE1  120A  158A  2000  120A  158A  	fcall	_isdigit
  2283  0BE6  1803               	btfsc	3,0
  2284  0BE7  2BE9               	goto	u4781
  2285  0BE8  2BEA               	goto	u4780
  2286  0BE9                     u4781:
  2287  0BE9  2BAE               	goto	l3267
  2288  0BEA                     u4780:
  2289  0BEA  2BF5               	goto	l3281
  2290  0BEB                     l3275:
  2291                           
  2292                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2293  0BEB  01CE               	clrf	sprintf@prec
  2294  0BEC  01CF               	clrf	sprintf@prec+1
  2295  0BED  2BF5               	goto	l3281
  2296  0BEE                     l798:	
  2297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 667:   case 'l':
  2298                           
  2299                           
  2300                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 669:    flag |= 0
      +                          x10;
  2301  0BEE  1645               	bsf	sprintf@flag,4
  2302                           
  2303                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 670:    goto loop
      +                          ;
  2304  0BEF  2BF5               	goto	l3281
  2305  0BF0                     l3277:
  2306                           
  2307                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  2308  0BF0  30C0               	movlw	192
  2309  0BF1  00C0               	movwf	??_sprintf
  2310  0BF2  0840               	movf	??_sprintf,w
  2311  0BF3  04C5               	iorwf	sprintf@flag,f
  2312                           
  2313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 845:    break;
  2314  0BF4  2C14               	goto	l801
  2315  0BF5                     l3281:
  2316  0BF5  3001               	movlw	1
  2317  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
  2318  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
  2319  0BF8  07B7               	addwf	sprintf@f,f
  2320  0BF9  30FF               	movlw	-1
  2321  0BFA  0737               	addwf	sprintf@f,w
  2322  0BFB  0084               	movwf	4
  2323  0BFC  120A  118A  27BF  120A  158A  	fcall	stringdir
  2324  0C01  00D0               	movwf	sprintf@c
  2325  0C02  00C0               	movwf	??_sprintf
  2326  0C03  01C1               	clrf	??_sprintf+1
  2327                           
  2328                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2329                           ; Switch size 1, requested type "simple"
  2330                           ; Number of cases is 1, Range of values is 0 to 0
  2331                           ; switch strategies available:
  2332                           ; Name         Instructions Cycles
  2333                           ; simple_byte            4     3 (average)
  2334                           ; direct_byte           11     8 (fixed)
  2335                           ; jumptable            260     6 (fixed)
  2336                           ;	Chosen strategy is simple_byte
  2337  0C04  0841               	movf	??_sprintf+1,w
  2338  0C05  3A00               	xorlw	0	; case 0
  2339  0C06  1903               	skipnz
  2340  0C07  2C09               	goto	l3543
  2341  0C08  2D61               	goto	l3337
  2342  0C09                     l3543:
  2343                           
  2344                           ; Switch size 1, requested type "simple"
  2345                           ; Number of cases is 3, Range of values is 0 to 117
  2346                           ; switch strategies available:
  2347                           ; Name         Instructions Cycles
  2348                           ; simple_byte           10     6 (average)
  2349                           ; jumptable            260     6 (fixed)
  2350                           ;	Chosen strategy is simple_byte
  2351  0C09  0840               	movf	??_sprintf,w
  2352  0C0A  3A00               	xorlw	0	; case 0
  2353  0C0B  1903               	skipnz
  2354  0C0C  2D73               	goto	l3339
  2355  0C0D  3A6C               	xorlw	108	; case 108
  2356  0C0E  1903               	skipnz
  2357  0C0F  2BEE               	goto	l798
  2358  0C10  3A19               	xorlw	25	; case 117
  2359  0C11  1903               	skipnz
  2360  0C12  2BF0               	goto	l3277
  2361  0C13  2D61               	goto	l3337
  2362  0C14                     l801:
  2363                           
  2364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1307:     if(flag & 0x10)
  2365  0C14  1E45               	btfss	sprintf@flag,4
  2366  0C15  2C17               	goto	u4791
  2367  0C16  2C18               	goto	u4790
  2368  0C17                     u4791:
  2369  0C17  2C2B               	goto	l3287
  2370  0C18                     u4790:
  2371  0C18                     l3283:
  2372                           
  2373                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1308:     val = (
      +                          *(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned long)0));
  2374  0C18  0846               	movf	sprintf@ap,w
  2375  0C19  0084               	movwf	4
  2376  0C1A  1383               	bcf	3,7	;select IRP bank0
  2377  0C1B  0800               	movf	0,w
  2378  0C1C  00C7               	movwf	sprintf@val
  2379  0C1D  0A84               	incf	4,f
  2380  0C1E  0800               	movf	0,w
  2381  0C1F  00C8               	movwf	sprintf@val+1
  2382  0C20  0A84               	incf	4,f
  2383  0C21  0800               	movf	0,w
  2384  0C22  00C9               	movwf	sprintf@val+2
  2385  0C23  0A84               	incf	4,f
  2386  0C24  0800               	movf	0,w
  2387  0C25  00CA               	movwf	sprintf@val+3
  2388  0C26                     l3285:
  2389  0C26  3004               	movlw	4
  2390  0C27  00C0               	movwf	??_sprintf
  2391  0C28  0840               	movf	??_sprintf,w
  2392  0C29  07C6               	addwf	sprintf@ap,f
  2393  0C2A  2C3D               	goto	l3291
  2394  0C2B                     l3287:
  2395                           
  2396                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1312:     val = (
      +                          *(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2397  0C2B  0846               	movf	sprintf@ap,w
  2398  0C2C  0084               	movwf	4
  2399  0C2D  1383               	bcf	3,7	;select IRP bank0
  2400  0C2E  0800               	movf	0,w
  2401  0C2F  00C0               	movwf	??_sprintf
  2402  0C30  0A84               	incf	4,f
  2403  0C31  0800               	movf	0,w
  2404  0C32  00C1               	movwf	??_sprintf+1
  2405  0C33  0840               	movf	??_sprintf,w
  2406  0C34  00C7               	movwf	sprintf@val
  2407  0C35  0841               	movf	??_sprintf+1,w
  2408  0C36  00C8               	movwf	sprintf@val+1
  2409  0C37  01C9               	clrf	sprintf@val+2
  2410  0C38  01CA               	clrf	sprintf@val+3
  2411  0C39                     l3289:
  2412  0C39  3002               	movlw	2
  2413  0C3A  00C0               	movwf	??_sprintf
  2414  0C3B  0840               	movf	??_sprintf,w
  2415  0C3C  07C6               	addwf	sprintf@ap,f
  2416  0C3D                     l3291:
  2417                           
  2418                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  2419  0C3D  084E               	movf	sprintf@prec,w
  2420  0C3E  044F               	iorwf	sprintf@prec+1,w
  2421  0C3F  1D03               	btfss	3,2
  2422  0C40  2C42               	goto	u4801
  2423  0C41  2C43               	goto	u4800
  2424  0C42                     u4801:
  2425  0C42  2C51               	goto	l3297
  2426  0C43                     u4800:
  2427  0C43                     l3293:
  2428  0C43  084A               	movf	sprintf@val+3,w
  2429  0C44  0449               	iorwf	sprintf@val+2,w
  2430  0C45  0448               	iorwf	sprintf@val+1,w
  2431  0C46  0447               	iorwf	sprintf@val,w
  2432  0C47  1D03               	skipz
  2433  0C48  2C4A               	goto	u4811
  2434  0C49  2C4B               	goto	u4810
  2435  0C4A                     u4811:
  2436  0C4A  2C51               	goto	l3297
  2437  0C4B                     u4810:
  2438  0C4B                     l3295:
  2439                           
  2440                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  2441  0C4B  3001               	movlw	1
  2442  0C4C  07CE               	addwf	sprintf@prec,f
  2443  0C4D  1803               	skipnc
  2444  0C4E  0ACF               	incf	sprintf@prec+1,f
  2445  0C4F  3000               	movlw	0
  2446  0C50  07CF               	addwf	sprintf@prec+1,f
  2447  0C51                     l3297:
  2448                           
  2449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2450  0C51  01D0               	clrf	sprintf@c
  2451  0C52  0AD0               	incf	sprintf@c,f
  2452  0C53                     l3303:
  2453                           
  2454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2455  0C53  0850               	movf	sprintf@c,w
  2456  0C54  00C0               	movwf	??_sprintf
  2457  0C55  3001               	movlw	1
  2458  0C56                     u4825:
  2459  0C56  1003               	clrc
  2460  0C57  0DC0               	rlf	??_sprintf,f
  2461  0C58  3EFF               	addlw	-1
  2462  0C59  1D03               	skipz
  2463  0C5A  2C56               	goto	u4825
  2464  0C5B  1003               	clrc
  2465  0C5C  0D40               	rlf	??_sprintf,w
  2466  0C5D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2467  0C5E  0084               	movwf	4
  2468  0C5F  120A  118A  27BF  120A  158A  	fcall	stringdir
  2469  0C64  00C1               	movwf	??_sprintf+1
  2470  0C65  120A  118A  27BF  120A  158A  	fcall	stringdir
  2471  0C6A  00C2               	movwf	??_sprintf+2
  2472  0C6B  120A  118A  27BF  120A  158A  	fcall	stringdir
  2473  0C70  00C3               	movwf	??_sprintf+3
  2474  0C71  120A  118A  27BF  120A  158A  	fcall	stringdir
  2475  0C76  00C4               	movwf	??_sprintf+4
  2476  0C77  0844               	movf	??_sprintf+4,w
  2477  0C78  024A               	subwf	sprintf@val+3,w
  2478  0C79  1D03               	skipz
  2479  0C7A  2C85               	goto	u4835
  2480  0C7B  0843               	movf	??_sprintf+3,w
  2481  0C7C  0249               	subwf	sprintf@val+2,w
  2482  0C7D  1D03               	skipz
  2483  0C7E  2C85               	goto	u4835
  2484  0C7F  0842               	movf	??_sprintf+2,w
  2485  0C80  0248               	subwf	sprintf@val+1,w
  2486  0C81  1D03               	skipz
  2487  0C82  2C85               	goto	u4835
  2488  0C83  0841               	movf	??_sprintf+1,w
  2489  0C84  0247               	subwf	sprintf@val,w
  2490  0C85                     u4835:
  2491  0C85  1803               	skipnc
  2492  0C86  2C88               	goto	u4831
  2493  0C87  2C89               	goto	u4830
  2494  0C88                     u4831:
  2495  0C88  2C8A               	goto	l3307
  2496  0C89                     u4830:
  2497  0C89  2C94               	goto	l3309
  2498  0C8A                     l3307:
  2499  0C8A  3001               	movlw	1
  2500  0C8B  00C0               	movwf	??_sprintf
  2501  0C8C  0840               	movf	??_sprintf,w
  2502  0C8D  07D0               	addwf	sprintf@c,f
  2503  0C8E  300A               	movlw	10
  2504  0C8F  0650               	xorwf	sprintf@c,w
  2505  0C90  1D03               	btfss	3,2
  2506  0C91  2C93               	goto	u4841
  2507  0C92  2C94               	goto	u4840
  2508  0C93                     u4841:
  2509  0C93  2C53               	goto	l3303
  2510  0C94                     u4840:
  2511  0C94                     l3309:
  2512                           
  2513                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  2514  0C94  084F               	movf	sprintf@prec+1,w
  2515  0C95  3A80               	xorlw	128
  2516  0C96  3C80               	sublw	128
  2517  0C97  1D03               	skipz
  2518  0C98  2C9B               	goto	u4855
  2519  0C99  084E               	movf	sprintf@prec,w
  2520  0C9A  0250               	subwf	sprintf@c,w
  2521  0C9B                     u4855:
  2522  0C9B  1803               	skipnc
  2523  0C9C  2C9E               	goto	u4851
  2524  0C9D  2C9F               	goto	u4850
  2525  0C9E                     u4851:
  2526  0C9E  2CA6               	goto	l3313
  2527  0C9F                     u4850:
  2528  0C9F                     l3311:
  2529                           
  2530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  2531  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  2532  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  2533  0CA1  084E               	movf	sprintf@prec,w
  2534  0CA2  00C0               	movwf	??_sprintf
  2535  0CA3  0840               	movf	??_sprintf,w
  2536  0CA4  00D0               	movwf	sprintf@c
  2537  0CA5  2CBE               	goto	l809
  2538  0CA6                     l3313:
  2539  0CA6  1283               	bcf	3,5	;RP0=0, select bank0
  2540  0CA7  1303               	bcf	3,6	;RP1=0, select bank0
  2541  0CA8  084F               	movf	sprintf@prec+1,w
  2542  0CA9  3A80               	xorlw	128
  2543  0CAA  00C0               	movwf	??_sprintf
  2544  0CAB  3080               	movlw	128
  2545  0CAC  0240               	subwf	??_sprintf,w
  2546  0CAD  1D03               	skipz
  2547  0CAE  2CB1               	goto	u4865
  2548  0CAF  0850               	movf	sprintf@c,w
  2549  0CB0  024E               	subwf	sprintf@prec,w
  2550  0CB1                     u4865:
  2551  0CB1  1803               	skipnc
  2552  0CB2  2CB4               	goto	u4861
  2553  0CB3  2CB5               	goto	u4860
  2554  0CB4                     u4861:
  2555  0CB4  2CBE               	goto	l809
  2556  0CB5                     u4860:
  2557  0CB5                     l3315:
  2558                           
  2559                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  2560  0CB5  1283               	bcf	3,5	;RP0=0, select bank0
  2561  0CB6  1303               	bcf	3,6	;RP1=0, select bank0
  2562  0CB7  0850               	movf	sprintf@c,w
  2563  0CB8  00C0               	movwf	??_sprintf
  2564  0CB9  01C1               	clrf	??_sprintf+1
  2565  0CBA  0840               	movf	??_sprintf,w
  2566  0CBB  00CE               	movwf	sprintf@prec
  2567  0CBC  0841               	movf	??_sprintf+1,w
  2568  0CBD  00CF               	movwf	sprintf@prec+1
  2569  0CBE                     l809:
  2570                           
  2571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2572  0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  2573  0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  2574  0CC0  084D               	movf	sprintf@width+1,w
  2575  0CC1  3A80               	xorlw	128
  2576  0CC2  3C80               	sublw	128
  2577  0CC3  1D03               	skipz
  2578  0CC4  2CC7               	goto	u4875
  2579  0CC5  084C               	movf	sprintf@width,w
  2580  0CC6  0250               	subwf	sprintf@c,w
  2581  0CC7                     u4875:
  2582  0CC7  1803               	skipnc
  2583  0CC8  2CCA               	goto	u4871
  2584  0CC9  2CCB               	goto	u4870
  2585  0CCA                     u4871:
  2586  0CCA  2CD7               	goto	l3319
  2587  0CCB                     u4870:
  2588  0CCB                     l3317:
  2589                           
  2590                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2591  0CCB  1283               	bcf	3,5	;RP0=0, select bank0
  2592  0CCC  1303               	bcf	3,6	;RP1=0, select bank0
  2593  0CCD  0850               	movf	sprintf@c,w
  2594  0CCE  00C0               	movwf	??_sprintf
  2595  0CCF  01C1               	clrf	??_sprintf+1
  2596  0CD0  0840               	movf	??_sprintf,w
  2597  0CD1  02CC               	subwf	sprintf@width,f
  2598  0CD2  0841               	movf	??_sprintf+1,w
  2599  0CD3  1C03               	skipc
  2600  0CD4  03CD               	decf	sprintf@width+1,f
  2601  0CD5  02CD               	subwf	sprintf@width+1,f
  2602  0CD6  2CDB               	goto	l3321
  2603  0CD7                     l3319:
  2604                           
  2605                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2606  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  2607  0CD8  1303               	bcf	3,6	;RP1=0, select bank0
  2608  0CD9  01CC               	clrf	sprintf@width
  2609  0CDA  01CD               	clrf	sprintf@width+1
  2610  0CDB                     l3321:
  2611                           
  2612                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2613  0CDB  084C               	movf	sprintf@width,w
  2614  0CDC  044D               	iorwf	sprintf@width+1,w
  2615  0CDD  1903               	btfsc	3,2
  2616  0CDE  2CE0               	goto	u4881
  2617  0CDF  2CE1               	goto	u4880
  2618  0CE0                     u4881:
  2619  0CE0  2D53               	goto	l3335
  2620  0CE1                     u4880:
  2621  0CE1                     l3323:
  2622                           
  2623                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2624  0CE1  3020               	movlw	32
  2625  0CE2  00C0               	movwf	??_sprintf
  2626  0CE3  084B               	movf	sprintf@sp,w
  2627  0CE4  0084               	movwf	4
  2628  0CE5  0840               	movf	??_sprintf,w
  2629  0CE6  1383               	bcf	3,7	;select IRP bank0
  2630  0CE7  0080               	movwf	0
  2631  0CE8                     l3325:
  2632  0CE8  3001               	movlw	1
  2633  0CE9  00C0               	movwf	??_sprintf
  2634  0CEA  0840               	movf	??_sprintf,w
  2635  0CEB  07CB               	addwf	sprintf@sp,f
  2636  0CEC                     l3327:
  2637  0CEC  30FF               	movlw	255
  2638  0CED  07CC               	addwf	sprintf@width,f
  2639  0CEE  1803               	skipnc
  2640  0CEF  0ACD               	incf	sprintf@width+1,f
  2641  0CF0  30FF               	movlw	255
  2642  0CF1  07CD               	addwf	sprintf@width+1,f
  2643  0CF2  084C               	movf	sprintf@width,w
  2644  0CF3  044D               	iorwf	sprintf@width+1,w
  2645  0CF4  1D03               	btfss	3,2
  2646  0CF5  2CF7               	goto	u4891
  2647  0CF6  2CF8               	goto	u4890
  2648  0CF7                     u4891:
  2649  0CF7  2CE1               	goto	l3323
  2650  0CF8                     u4890:
  2651  0CF8  2D53               	goto	l3335
  2652  0CF9                     l3329:
  2653                           
  2654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  2655  0CF9  3000               	movlw	0
  2656  0CFA  00B0               	movwf	___llmod@divisor+3
  2657  0CFB  3000               	movlw	0
  2658  0CFC  00AF               	movwf	___llmod@divisor+2
  2659  0CFD  3000               	movlw	0
  2660  0CFE  00AE               	movwf	___llmod@divisor+1
  2661  0CFF  300A               	movlw	10
  2662  0D00  00AD               	movwf	___llmod@divisor
  2663  0D01  084E               	movf	sprintf@prec,w
  2664  0D02  00C0               	movwf	??_sprintf
  2665  0D03  3001               	movlw	1
  2666  0D04                     u4905:
  2667  0D04  1003               	clrc
  2668  0D05  0DC0               	rlf	??_sprintf,f
  2669  0D06  3EFF               	addlw	-1
  2670  0D07  1D03               	skipz
  2671  0D08  2D04               	goto	u4905
  2672  0D09  1003               	clrc
  2673  0D0A  0D40               	rlf	??_sprintf,w
  2674  0D0B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2675  0D0C  0084               	movwf	4
  2676  0D0D  120A  118A  27BF  120A  158A  	fcall	stringdir
  2677  0D12  00A0               	movwf	___lldiv@divisor
  2678  0D13  120A  118A  27BF  120A  158A  	fcall	stringdir
  2679  0D18  00A1               	movwf	___lldiv@divisor+1
  2680  0D19  120A  118A  27BF  120A  158A  	fcall	stringdir
  2681  0D1E  00A2               	movwf	___lldiv@divisor+2
  2682  0D1F  120A  118A  27BF  120A  158A  	fcall	stringdir
  2683  0D24  00A3               	movwf	___lldiv@divisor+3
  2684  0D25  084A               	movf	sprintf@val+3,w
  2685  0D26  00A7               	movwf	___lldiv@dividend+3
  2686  0D27  0849               	movf	sprintf@val+2,w
  2687  0D28  00A6               	movwf	___lldiv@dividend+2
  2688  0D29  0848               	movf	sprintf@val+1,w
  2689  0D2A  00A5               	movwf	___lldiv@dividend+1
  2690  0D2B  0847               	movf	sprintf@val,w
  2691  0D2C  00A4               	movwf	___lldiv@dividend
  2692  0D2D  160A  118A  2429  120A  158A  	fcall	___lldiv
  2693  0D32  1283               	bcf	3,5	;RP0=0, select bank0
  2694  0D33  1303               	bcf	3,6	;RP1=0, select bank0
  2695  0D34  0823               	movf	?___lldiv+3,w
  2696  0D35  00B4               	movwf	___llmod@dividend+3
  2697  0D36  0822               	movf	?___lldiv+2,w
  2698  0D37  00B3               	movwf	___llmod@dividend+2
  2699  0D38  0821               	movf	?___lldiv+1,w
  2700  0D39  00B2               	movwf	___llmod@dividend+1
  2701  0D3A  0820               	movf	?___lldiv,w
  2702  0D3B  00B1               	movwf	___llmod@dividend
  2703  0D3C  160A  118A  237C  120A  158A  	fcall	___llmod
  2704  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  2705  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  2706  0D43  082D               	movf	?___llmod,w
  2707  0D44  3E30               	addlw	48
  2708  0D45  00C1               	movwf	??_sprintf+1
  2709  0D46  0841               	movf	??_sprintf+1,w
  2710  0D47  00D0               	movwf	sprintf@c
  2711  0D48                     l3331:
  2712                           
  2713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2714  0D48  0850               	movf	sprintf@c,w
  2715  0D49  00C0               	movwf	??_sprintf
  2716  0D4A  084B               	movf	sprintf@sp,w
  2717  0D4B  0084               	movwf	4
  2718  0D4C  0840               	movf	??_sprintf,w
  2719  0D4D  1383               	bcf	3,7	;select IRP bank0
  2720  0D4E  0080               	movwf	0
  2721  0D4F                     l3333:
  2722  0D4F  3001               	movlw	1
  2723  0D50  00C0               	movwf	??_sprintf
  2724  0D51  0840               	movf	??_sprintf,w
  2725  0D52  07CB               	addwf	sprintf@sp,f
  2726  0D53                     l3335:
  2727                           
  2728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2729  0D53  30FF               	movlw	255
  2730  0D54  07CE               	addwf	sprintf@prec,f
  2731  0D55  1803               	skipnc
  2732  0D56  0ACF               	incf	sprintf@prec+1,f
  2733  0D57  30FF               	movlw	255
  2734  0D58  07CF               	addwf	sprintf@prec+1,f
  2735  0D59  0A4E               	incf	sprintf@prec,w
  2736  0D5A  1D03               	skipz
  2737  0D5B  2D60               	goto	u4911
  2738  0D5C  0A4F               	incf	sprintf@prec+1,w
  2739  0D5D  1D03               	btfss	3,2
  2740  0D5E  2D60               	goto	u4911
  2741  0D5F  2D61               	goto	u4910
  2742  0D60                     u4911:
  2743  0D60  2CF9               	goto	l3329
  2744  0D61                     u4910:
  2745  0D61                     l3337:
  2746                           
  2747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2748  0D61  3001               	movlw	1
  2749  0D62  07B7               	addwf	sprintf@f,f
  2750  0D63  30FF               	movlw	-1
  2751  0D64  0737               	addwf	sprintf@f,w
  2752  0D65  0084               	movwf	4
  2753  0D66  120A  118A  27BF  120A  158A  	fcall	stringdir
  2754  0D6B  00C0               	movwf	??_sprintf
  2755  0D6C  0840               	movf	??_sprintf,w
  2756  0D6D  00D0               	movwf	sprintf@c
  2757  0D6E  0850               	movf	sprintf@c,w
  2758  0D6F  1D03               	btfss	3,2
  2759  0D70  2D72               	goto	u4921
  2760  0D71  2D73               	goto	u4920
  2761  0D72                     u4921:
  2762  0D72  2B34               	goto	l3241
  2763  0D73                     u4920:
  2764  0D73                     l3339:
  2765                           
  2766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2767  0D73  084B               	movf	sprintf@sp,w
  2768  0D74  0084               	movwf	4
  2769  0D75  1383               	bcf	3,7	;select IRP bank0
  2770  0D76  0180               	clrf	0
  2771  0D77                     l820:
  2772  0D77  0008               	return
  2773  0D78                     __end_of_sprintf:
  2774                           
  2775                           	psect	text4
  2776  0800                     __ptext4:	
  2777 ;; *************** function _isdigit *****************
  2778 ;; Defined at:
  2779 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;  c               1    wreg     unsigned char 
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;  c               1    1[BANK0 ] unsigned char 
  2784 ;; Return value:  Size  Location     Type
  2785 ;;		None               void
  2786 ;; Registers used:
  2787 ;;		wreg, status,2, status,0
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2793 ;;      Params:         0       0       0       0       0
  2794 ;;      Locals:         0       2       0       0       0
  2795 ;;      Temps:          0       0       0       0       0
  2796 ;;      Totals:         0       2       0       0       0
  2797 ;;Total ram usage:        2 bytes
  2798 ;; Hardware stack levels used:    1
  2799 ;; Hardware stack levels required when called:    1
  2800 ;; This function calls:
  2801 ;;		Nothing
  2802 ;; This function is called by:
  2803 ;;		_sprintf
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           
  2808                           ;psect for function _isdigit
  2809  0800                     _isdigit:
  2810                           
  2811                           ;incstack = 0
  2812                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2813                           ;isdigit@c stored from wreg
  2814  0800  1283               	bcf	3,5	;RP0=0, select bank0
  2815  0801  1303               	bcf	3,6	;RP1=0, select bank0
  2816  0802  00A1               	movwf	isdigit@c
  2817  0803                     l3083:
  2818  0803  01A0               	clrf	_isdigit$895
  2819  0804                     l3085:
  2820  0804  303A               	movlw	58
  2821  0805  0221               	subwf	isdigit@c,w
  2822  0806  1803               	skipnc
  2823  0807  2809               	goto	u4341
  2824  0808  280A               	goto	u4340
  2825  0809                     u4341:
  2826  0809  2812               	goto	l3091
  2827  080A                     u4340:
  2828  080A                     l3087:
  2829  080A  3030               	movlw	48
  2830  080B  0221               	subwf	isdigit@c,w
  2831  080C  1C03               	skipc
  2832  080D  280F               	goto	u4351
  2833  080E  2810               	goto	u4350
  2834  080F                     u4351:
  2835  080F  2812               	goto	l3091
  2836  0810                     u4350:
  2837  0810                     l3089:
  2838  0810  01A0               	clrf	_isdigit$895
  2839  0811  0AA0               	incf	_isdigit$895,f
  2840  0812                     l3091:
  2841  0812  0C20               	rrf	_isdigit$895,w
  2842  0813                     l825:
  2843  0813  0008               	return
  2844  0814                     __end_of_isdigit:
  2845                           
  2846                           	psect	text5
  2847  12BC                     __ptext5:	
  2848 ;; *************** function ___wmul *****************
  2849 ;; Defined at:
  2850 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2853 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;  product         2    4[BANK0 ] unsigned int 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  2    0[BANK0 ] unsigned int 
  2858 ;; Registers used:
  2859 ;;		wreg, status,2, status,0
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2865 ;;      Params:         0       4       0       0       0
  2866 ;;      Locals:         0       2       0       0       0
  2867 ;;      Temps:          0       0       0       0       0
  2868 ;;      Totals:         0       6       0       0       0
  2869 ;;Total ram usage:        6 bytes
  2870 ;; Hardware stack levels used:    1
  2871 ;; Hardware stack levels required when called:    1
  2872 ;; This function calls:
  2873 ;;		Nothing
  2874 ;; This function is called by:
  2875 ;;		_sprintf
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           
  2880                           ;psect for function ___wmul
  2881  12BC                     ___wmul:
  2882  12BC                     l3035:	
  2883                           ;incstack = 0
  2884                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2885                           
  2886  12BC  1283               	bcf	3,5	;RP0=0, select bank0
  2887  12BD  1303               	bcf	3,6	;RP1=0, select bank0
  2888  12BE  01A4               	clrf	___wmul@product
  2889  12BF  01A5               	clrf	___wmul@product+1
  2890  12C0                     l3037:
  2891  12C0  1C20               	btfss	___wmul@multiplier,0
  2892  12C1  2AC3               	goto	u4211
  2893  12C2  2AC4               	goto	u4210
  2894  12C3                     u4211:
  2895  12C3  2ACA               	goto	l316
  2896  12C4                     u4210:
  2897  12C4                     l3039:
  2898  12C4  0822               	movf	___wmul@multiplicand,w
  2899  12C5  07A4               	addwf	___wmul@product,f
  2900  12C6  1803               	skipnc
  2901  12C7  0AA5               	incf	___wmul@product+1,f
  2902  12C8  0823               	movf	___wmul@multiplicand+1,w
  2903  12C9  07A5               	addwf	___wmul@product+1,f
  2904  12CA                     l316:
  2905  12CA  3001               	movlw	1
  2906  12CB                     u4225:
  2907  12CB  1003               	clrc
  2908  12CC  0DA2               	rlf	___wmul@multiplicand,f
  2909  12CD  0DA3               	rlf	___wmul@multiplicand+1,f
  2910  12CE  3EFF               	addlw	-1
  2911  12CF  1D03               	skipz
  2912  12D0  2ACB               	goto	u4225
  2913  12D1                     l3041:
  2914  12D1  3001               	movlw	1
  2915  12D2                     u4235:
  2916  12D2  1003               	clrc
  2917  12D3  0CA1               	rrf	___wmul@multiplier+1,f
  2918  12D4  0CA0               	rrf	___wmul@multiplier,f
  2919  12D5  3EFF               	addlw	-1
  2920  12D6  1D03               	skipz
  2921  12D7  2AD2               	goto	u4235
  2922  12D8                     l3043:
  2923  12D8  0820               	movf	___wmul@multiplier,w
  2924  12D9  0421               	iorwf	___wmul@multiplier+1,w
  2925  12DA  1D03               	btfss	3,2
  2926  12DB  2ADD               	goto	u4241
  2927  12DC  2ADE               	goto	u4240
  2928  12DD                     u4241:
  2929  12DD  2AC0               	goto	l3037
  2930  12DE                     u4240:
  2931  12DE                     l3045:
  2932  12DE  0825               	movf	___wmul@product+1,w
  2933  12DF  00A1               	movwf	?___wmul+1
  2934  12E0  0824               	movf	___wmul@product,w
  2935  12E1  00A0               	movwf	?___wmul
  2936  12E2                     l318:
  2937  12E2  0008               	return
  2938  12E3                     __end_of___wmul:
  2939                           
  2940                           	psect	text6
  2941  137C                     __ptext6:	
  2942 ;; *************** function ___llmod *****************
  2943 ;; Defined at:
  2944 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;  divisor         4   13[BANK0 ] unsigned long 
  2947 ;;  dividend        4   17[BANK0 ] unsigned long 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  counter         1   22[BANK0 ] unsigned char 
  2950 ;; Return value:  Size  Location     Type
  2951 ;;                  4   13[BANK0 ] unsigned long 
  2952 ;; Registers used:
  2953 ;;		wreg, status,2, status,0
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2959 ;;      Params:         0       8       0       0       0
  2960 ;;      Locals:         0       1       0       0       0
  2961 ;;      Temps:          0       1       0       0       0
  2962 ;;      Totals:         0      10       0       0       0
  2963 ;;Total ram usage:       10 bytes
  2964 ;; Hardware stack levels used:    1
  2965 ;; Hardware stack levels required when called:    1
  2966 ;; This function calls:
  2967 ;;		Nothing
  2968 ;; This function is called by:
  2969 ;;		_sprintf
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973                           
  2974                           ;psect for function ___llmod
  2975  137C                     ___llmod:
  2976  137C                     l3049:	
  2977                           ;incstack = 0
  2978                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2979                           
  2980  137C  1283               	bcf	3,5	;RP0=0, select bank0
  2981  137D  1303               	bcf	3,6	;RP1=0, select bank0
  2982  137E  0830               	movf	___llmod@divisor+3,w
  2983  137F  042F               	iorwf	___llmod@divisor+2,w
  2984  1380  042E               	iorwf	___llmod@divisor+1,w
  2985  1381  042D               	iorwf	___llmod@divisor,w
  2986  1382  1903               	skipnz
  2987  1383  2B85               	goto	u4251
  2988  1384  2B86               	goto	u4250
  2989  1385                     u4251:
  2990  1385  2BC9               	goto	l3065
  2991  1386                     u4250:
  2992  1386                     l3051:
  2993  1386  01B6               	clrf	___llmod@counter
  2994  1387  0AB6               	incf	___llmod@counter,f
  2995  1388  2B96               	goto	l3055
  2996  1389                     l3053:
  2997  1389  3001               	movlw	1
  2998  138A  00B5               	movwf	??___llmod
  2999  138B                     u4265:
  3000  138B  1003               	clrc
  3001  138C  0DAD               	rlf	___llmod@divisor,f
  3002  138D  0DAE               	rlf	___llmod@divisor+1,f
  3003  138E  0DAF               	rlf	___llmod@divisor+2,f
  3004  138F  0DB0               	rlf	___llmod@divisor+3,f
  3005  1390  0BB5               	decfsz	??___llmod,f
  3006  1391  2B8B               	goto	u4265
  3007  1392  3001               	movlw	1
  3008  1393  00B5               	movwf	??___llmod
  3009  1394  0835               	movf	??___llmod,w
  3010  1395  07B6               	addwf	___llmod@counter,f
  3011  1396                     l3055:
  3012  1396  1FB0               	btfss	___llmod@divisor+3,7
  3013  1397  2B99               	goto	u4271
  3014  1398  2B9A               	goto	u4270
  3015  1399                     u4271:
  3016  1399  2B89               	goto	l3053
  3017  139A                     u4270:
  3018  139A                     l3057:
  3019  139A  0830               	movf	___llmod@divisor+3,w
  3020  139B  0234               	subwf	___llmod@dividend+3,w
  3021  139C  1D03               	skipz
  3022  139D  2BA8               	goto	u4285
  3023  139E  082F               	movf	___llmod@divisor+2,w
  3024  139F  0233               	subwf	___llmod@dividend+2,w
  3025  13A0  1D03               	skipz
  3026  13A1  2BA8               	goto	u4285
  3027  13A2  082E               	movf	___llmod@divisor+1,w
  3028  13A3  0232               	subwf	___llmod@dividend+1,w
  3029  13A4  1D03               	skipz
  3030  13A5  2BA8               	goto	u4285
  3031  13A6  082D               	movf	___llmod@divisor,w
  3032  13A7  0231               	subwf	___llmod@dividend,w
  3033  13A8                     u4285:
  3034  13A8  1C03               	skipc
  3035  13A9  2BAB               	goto	u4281
  3036  13AA  2BAC               	goto	u4280
  3037  13AB                     u4281:
  3038  13AB  2BBA               	goto	l3061
  3039  13AC                     u4280:
  3040  13AC                     l3059:
  3041  13AC  082D               	movf	___llmod@divisor,w
  3042  13AD  02B1               	subwf	___llmod@dividend,f
  3043  13AE  082E               	movf	___llmod@divisor+1,w
  3044  13AF  1C03               	skipc
  3045  13B0  0F2E               	incfsz	___llmod@divisor+1,w
  3046  13B1  02B2               	subwf	___llmod@dividend+1,f
  3047  13B2  082F               	movf	___llmod@divisor+2,w
  3048  13B3  1C03               	skipc
  3049  13B4  0F2F               	incfsz	___llmod@divisor+2,w
  3050  13B5  02B3               	subwf	___llmod@dividend+2,f
  3051  13B6  0830               	movf	___llmod@divisor+3,w
  3052  13B7  1C03               	skipc
  3053  13B8  0F30               	incfsz	___llmod@divisor+3,w
  3054  13B9  02B4               	subwf	___llmod@dividend+3,f
  3055  13BA                     l3061:
  3056  13BA  3001               	movlw	1
  3057  13BB                     u4295:
  3058  13BB  1003               	clrc
  3059  13BC  0CB0               	rrf	___llmod@divisor+3,f
  3060  13BD  0CAF               	rrf	___llmod@divisor+2,f
  3061  13BE  0CAE               	rrf	___llmod@divisor+1,f
  3062  13BF  0CAD               	rrf	___llmod@divisor,f
  3063  13C0  3EFF               	addlw	-1
  3064  13C1  1D03               	skipz
  3065  13C2  2BBB               	goto	u4295
  3066  13C3                     l3063:
  3067  13C3  3001               	movlw	1
  3068  13C4  02B6               	subwf	___llmod@counter,f
  3069  13C5  1D03               	btfss	3,2
  3070  13C6  2BC8               	goto	u4301
  3071  13C7  2BC9               	goto	u4300
  3072  13C8                     u4301:
  3073  13C8  2B9A               	goto	l3057
  3074  13C9                     u4300:
  3075  13C9                     l3065:
  3076  13C9  0834               	movf	___llmod@dividend+3,w
  3077  13CA  00B0               	movwf	?___llmod+3
  3078  13CB  0833               	movf	___llmod@dividend+2,w
  3079  13CC  00AF               	movwf	?___llmod+2
  3080  13CD  0832               	movf	___llmod@dividend+1,w
  3081  13CE  00AE               	movwf	?___llmod+1
  3082  13CF  0831               	movf	___llmod@dividend,w
  3083  13D0  00AD               	movwf	?___llmod
  3084  13D1                     l538:
  3085  13D1  0008               	return
  3086  13D2                     __end_of___llmod:
  3087                           
  3088                           	psect	text7
  3089  0814                     __ptext7:	
  3090 ;; *************** function ___fltol *****************
  3091 ;; Defined at:
  3092 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;  f1              4   40[BANK0 ] unsigned long 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;  exp1            1   50[BANK0 ] unsigned char 
  3097 ;;  sign1           1   49[BANK0 ] unsigned char 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  4   40[BANK0 ] long 
  3100 ;; Registers used:
  3101 ;;		wreg, status,2, status,0
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3107 ;;      Params:         0       4       0       0       0
  3108 ;;      Locals:         0       2       0       0       0
  3109 ;;      Temps:          0       5       0       0       0
  3110 ;;      Totals:         0      11       0       0       0
  3111 ;;Total ram usage:       11 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; Hardware stack levels required when called:    1
  3114 ;; This function calls:
  3115 ;;		Nothing
  3116 ;; This function is called by:
  3117 ;;		_ftoa
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           
  3122                           ;psect for function ___fltol
  3123  0814                     ___fltol:
  3124  0814                     l2309:	
  3125                           ;incstack = 0
  3126                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3127                           
  3128  0814  1003               	clrc
  3129  0815  1283               	bcf	3,5	;RP0=0, select bank0
  3130  0816  1303               	bcf	3,6	;RP1=0, select bank0
  3131  0817  0D4A               	rlf	___fltol@f1+2,w
  3132  0818  0D4B               	rlf	___fltol@f1+3,w
  3133  0819  00CC               	movwf	??___fltol
  3134  081A  084C               	movf	??___fltol,w
  3135  081B  00D2               	movwf	___fltol@exp1
  3136  081C  0852               	movf	___fltol@exp1,w
  3137  081D  1D03               	btfss	3,2
  3138  081E  2820               	goto	u2951
  3139  081F  2821               	goto	u2950
  3140  0820                     u2951:
  3141  0820  282A               	goto	l2315
  3142  0821                     u2950:
  3143  0821                     l2311:
  3144  0821  3000               	movlw	0
  3145  0822  00CB               	movwf	?___fltol+3
  3146  0823  3000               	movlw	0
  3147  0824  00CA               	movwf	?___fltol+2
  3148  0825  3000               	movlw	0
  3149  0826  00C9               	movwf	?___fltol+1
  3150  0827  3000               	movlw	0
  3151  0828  00C8               	movwf	?___fltol
  3152  0829  288F               	goto	l502
  3153  082A                     l2315:
  3154  082A  0848               	movf	___fltol@f1,w
  3155  082B  00CC               	movwf	??___fltol
  3156  082C  0849               	movf	___fltol@f1+1,w
  3157  082D  00CD               	movwf	??___fltol+1
  3158  082E  084A               	movf	___fltol@f1+2,w
  3159  082F  00CE               	movwf	??___fltol+2
  3160  0830  084B               	movf	___fltol@f1+3,w
  3161  0831  00CF               	movwf	??___fltol+3
  3162  0832  301F               	movlw	31
  3163  0833                     u2965:
  3164  0833  1003               	clrc
  3165  0834  0CCF               	rrf	??___fltol+3,f
  3166  0835  0CCE               	rrf	??___fltol+2,f
  3167  0836  0CCD               	rrf	??___fltol+1,f
  3168  0837  0CCC               	rrf	??___fltol,f
  3169  0838                     u2960:
  3170  0838  3EFF               	addlw	-1
  3171  0839  1D03               	skipz
  3172  083A  2833               	goto	u2965
  3173  083B  084C               	movf	??___fltol,w
  3174  083C  00D0               	movwf	??___fltol+4
  3175  083D  0850               	movf	??___fltol+4,w
  3176  083E  00D1               	movwf	___fltol@sign1
  3177  083F                     l2317:
  3178  083F  17CA               	bsf	___fltol@f1+2,7
  3179  0840                     l2319:
  3180  0840  30FF               	movlw	255
  3181  0841  05C8               	andwf	___fltol@f1,f
  3182  0842  30FF               	movlw	255
  3183  0843  05C9               	andwf	___fltol@f1+1,f
  3184  0844  30FF               	movlw	255
  3185  0845  05CA               	andwf	___fltol@f1+2,f
  3186  0846  3000               	movlw	0
  3187  0847  05CB               	andwf	___fltol@f1+3,f
  3188  0848                     l2321:
  3189  0848  3096               	movlw	150
  3190  0849  02D2               	subwf	___fltol@exp1,f
  3191  084A                     l2323:
  3192  084A  1FD2               	btfss	___fltol@exp1,7
  3193  084B  284D               	goto	u2971
  3194  084C  284E               	goto	u2970
  3195  084D                     u2971:
  3196  084D  2868               	goto	l2333
  3197  084E                     u2970:
  3198  084E                     l2325:
  3199  084E  0852               	movf	___fltol@exp1,w
  3200  084F  3A80               	xorlw	128
  3201  0850  3E97               	addlw	151
  3202  0851  1803               	skipnc
  3203  0852  2854               	goto	u2981
  3204  0853  2855               	goto	u2980
  3205  0854                     u2981:
  3206  0854  2856               	goto	l2331
  3207  0855                     u2980:
  3208  0855  2821               	goto	l2311
  3209  0856                     l2331:
  3210  0856  3001               	movlw	1
  3211  0857                     u2995:
  3212  0857  1003               	clrc
  3213  0858  0CCB               	rrf	___fltol@f1+3,f
  3214  0859  0CCA               	rrf	___fltol@f1+2,f
  3215  085A  0CC9               	rrf	___fltol@f1+1,f
  3216  085B  0CC8               	rrf	___fltol@f1,f
  3217  085C  3EFF               	addlw	-1
  3218  085D  1D03               	skipz
  3219  085E  2857               	goto	u2995
  3220  085F  3001               	movlw	1
  3221  0860  00CC               	movwf	??___fltol
  3222  0861  084C               	movf	??___fltol,w
  3223  0862  07D2               	addwf	___fltol@exp1,f
  3224  0863  1D03               	btfss	3,2
  3225  0864  2866               	goto	u3001
  3226  0865  2867               	goto	u3000
  3227  0866                     u3001:
  3228  0866  2856               	goto	l2331
  3229  0867                     u3000:
  3230  0867  287F               	goto	l2341
  3231  0868                     l2333:
  3232  0868  3020               	movlw	32
  3233  0869  0252               	subwf	___fltol@exp1,w
  3234  086A  1C03               	skipc
  3235  086B  286D               	goto	u3011
  3236  086C  286E               	goto	u3010
  3237  086D                     u3011:
  3238  086D  287A               	goto	l509
  3239  086E                     u3010:
  3240  086E  2821               	goto	l2311
  3241  086F                     l2339:
  3242  086F  3001               	movlw	1
  3243  0870  00CC               	movwf	??___fltol
  3244  0871                     u3025:
  3245  0871  1003               	clrc
  3246  0872  0DC8               	rlf	___fltol@f1,f
  3247  0873  0DC9               	rlf	___fltol@f1+1,f
  3248  0874  0DCA               	rlf	___fltol@f1+2,f
  3249  0875  0DCB               	rlf	___fltol@f1+3,f
  3250  0876  0BCC               	decfsz	??___fltol,f
  3251  0877  2871               	goto	u3025
  3252  0878  3001               	movlw	1
  3253  0879  02D2               	subwf	___fltol@exp1,f
  3254  087A                     l509:
  3255  087A  0852               	movf	___fltol@exp1,w
  3256  087B  1D03               	btfss	3,2
  3257  087C  287E               	goto	u3031
  3258  087D  287F               	goto	u3030
  3259  087E                     u3031:
  3260  087E  286F               	goto	l2339
  3261  087F                     u3030:
  3262  087F                     l2341:
  3263  087F  0851               	movf	___fltol@sign1,w
  3264  0880  1903               	btfsc	3,2
  3265  0881  2883               	goto	u3041
  3266  0882  2884               	goto	u3040
  3267  0883                     u3041:
  3268  0883  288F               	goto	l512
  3269  0884                     u3040:
  3270  0884                     l2343:
  3271  0884  09C8               	comf	___fltol@f1,f
  3272  0885  09C9               	comf	___fltol@f1+1,f
  3273  0886  09CA               	comf	___fltol@f1+2,f
  3274  0887  09CB               	comf	___fltol@f1+3,f
  3275  0888  0AC8               	incf	___fltol@f1,f
  3276  0889  1903               	skipnz
  3277  088A  0AC9               	incf	___fltol@f1+1,f
  3278  088B  1903               	skipnz
  3279  088C  0ACA               	incf	___fltol@f1+2,f
  3280  088D  1903               	skipnz
  3281  088E  0ACB               	incf	___fltol@f1+3,f
  3282  088F                     l512:
  3283  088F                     l502:
  3284  088F  0008               	return
  3285  0890                     __end_of___fltol:
  3286                           
  3287                           	psect	text8
  3288  1271                     __ptext8:	
  3289 ;; *************** function ___flsub *****************
  3290 ;; Defined at:
  3291 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  a               4   60[BANK0 ] long 
  3294 ;;  b               4   64[BANK0 ] long 
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  4   60[BANK0 ] long 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3306 ;;      Params:         0       8       0       0       0
  3307 ;;      Locals:         0       0       0       0       0
  3308 ;;      Temps:          0       0       0       0       0
  3309 ;;      Totals:         0       8       0       0       0
  3310 ;;Total ram usage:        8 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    2
  3313 ;; This function calls:
  3314 ;;		___fladd
  3315 ;; This function is called by:
  3316 ;;		_ftoa
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           
  3321                           ;psect for function ___flsub
  3322  1271                     ___flsub:
  3323  1271                     l2345:	
  3324                           ;incstack = 0
  3325                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3326                           
  3327  1271  3080               	movlw	128
  3328  1272  1283               	bcf	3,5	;RP0=0, select bank0
  3329  1273  1303               	bcf	3,6	;RP1=0, select bank0
  3330  1274  06DF               	xorwf	___flsub@a+3,f
  3331  1275                     l2347:
  3332  1275  0863               	movf	___flsub@b+3,w
  3333  1276  00CB               	movwf	___fladd@b+3
  3334  1277  0862               	movf	___flsub@b+2,w
  3335  1278  00CA               	movwf	___fladd@b+2
  3336  1279  0861               	movf	___flsub@b+1,w
  3337  127A  00C9               	movwf	___fladd@b+1
  3338  127B  0860               	movf	___flsub@b,w
  3339  127C  00C8               	movwf	___fladd@b
  3340  127D  085F               	movf	___flsub@a+3,w
  3341  127E  00CF               	movwf	___fladd@a+3
  3342  127F  085E               	movf	___flsub@a+2,w
  3343  1280  00CE               	movwf	___fladd@a+2
  3344  1281  085D               	movf	___flsub@a+1,w
  3345  1282  00CD               	movwf	___fladd@a+1
  3346  1283  085C               	movf	___flsub@a,w
  3347  1284  00CC               	movwf	___fladd@a
  3348  1285  120A  158A  2578  160A  118A  	fcall	___fladd
  3349  128A  1283               	bcf	3,5	;RP0=0, select bank0
  3350  128B  1303               	bcf	3,6	;RP1=0, select bank0
  3351  128C  084B               	movf	?___fladd+3,w
  3352  128D  00DF               	movwf	?___flsub+3
  3353  128E  084A               	movf	?___fladd+2,w
  3354  128F  00DE               	movwf	?___flsub+2
  3355  1290  0849               	movf	?___fladd+1,w
  3356  1291  00DD               	movwf	?___flsub+1
  3357  1292  0848               	movf	?___fladd,w
  3358  1293  00DC               	movwf	?___flsub
  3359  1294                     l655:
  3360  1294  0008               	return
  3361  1295                     __end_of___flsub:
  3362                           
  3363                           	psect	text9
  3364  1240                     __ptext9:	
  3365 ;; *************** function ___flneg *****************
  3366 ;; Defined at:
  3367 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;  f1              4    0[BANK0 ] long 
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  4    0[BANK0 ] long 
  3374 ;; Registers used:
  3375 ;;		wreg
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3381 ;;      Params:         0       4       0       0       0
  3382 ;;      Locals:         0       0       0       0       0
  3383 ;;      Temps:          0       0       0       0       0
  3384 ;;      Totals:         0       4       0       0       0
  3385 ;;Total ram usage:        4 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; Hardware stack levels required when called:    1
  3388 ;; This function calls:
  3389 ;;		Nothing
  3390 ;; This function is called by:
  3391 ;;		_ftoa
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           
  3396                           ;psect for function ___flneg
  3397  1240                     ___flneg:
  3398  1240                     l2301:	
  3399                           ;incstack = 0
  3400                           ; Regs used in ___flneg: [wreg]
  3401                           
  3402  1240  1283               	bcf	3,5	;RP0=0, select bank0
  3403  1241  1303               	bcf	3,6	;RP1=0, select bank0
  3404  1242  0823               	movf	___flneg@f1+3,w
  3405  1243  0422               	iorwf	___flneg@f1+2,w
  3406  1244  0421               	iorwf	___flneg@f1+1,w
  3407  1245  0420               	iorwf	___flneg@f1,w
  3408  1246  1903               	skipnz
  3409  1247  2A49               	goto	u2941
  3410  1248  2A4A               	goto	u2940
  3411  1249                     u2941:
  3412  1249  2A4C               	goto	l2305
  3413  124A                     u2940:
  3414  124A                     l2303:
  3415  124A  3080               	movlw	128
  3416  124B  06A3               	xorwf	___flneg@f1+3,f
  3417  124C                     l2305:
  3418  124C                     l498:
  3419  124C  0008               	return
  3420  124D                     __end_of___flneg:
  3421                           
  3422                           	psect	text10
  3423  1504                     __ptext10:	
  3424 ;; *************** function ___flge *****************
  3425 ;; Defined at:
  3426 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;  ff1             4    0[BANK0 ] long 
  3429 ;;  ff2             4    4[BANK0 ] long 
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;		None
  3432 ;; Return value:  Size  Location     Type
  3433 ;;		None               void
  3434 ;; Registers used:
  3435 ;;		wreg, status,2, status,0
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3441 ;;      Params:         0       8       0       0       0
  3442 ;;      Locals:         0       0       0       0       0
  3443 ;;      Temps:          0       4       0       0       0
  3444 ;;      Totals:         0      12       0       0       0
  3445 ;;Total ram usage:       12 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; Hardware stack levels required when called:    1
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_ftoa
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           
  3456                           ;psect for function ___flge
  3457  1504                     ___flge:
  3458  1504                     l2281:	
  3459                           ;incstack = 0
  3460                           ; Regs used in ___flge: [wreg+status,2+status,0]
  3461                           
  3462  1504  3000               	movlw	0
  3463  1505  1283               	bcf	3,5	;RP0=0, select bank0
  3464  1506  1303               	bcf	3,6	;RP1=0, select bank0
  3465  1507  0520               	andwf	___flge@ff1,w
  3466  1508  00A8               	movwf	??___flge
  3467  1509  3000               	movlw	0
  3468  150A  0521               	andwf	___flge@ff1+1,w
  3469  150B  00A9               	movwf	??___flge+1
  3470  150C  3080               	movlw	128
  3471  150D  0522               	andwf	___flge@ff1+2,w
  3472  150E  00AA               	movwf	??___flge+2
  3473  150F  307F               	movlw	127
  3474  1510  0523               	andwf	___flge@ff1+3,w
  3475  1511  00AB               	movwf	??___flge+3
  3476  1512  082B               	movf	??___flge+3,w
  3477  1513  042A               	iorwf	??___flge+2,w
  3478  1514  0429               	iorwf	??___flge+1,w
  3479  1515  0428               	iorwf	??___flge,w
  3480  1516  1D03               	skipz
  3481  1517  2D19               	goto	u2871
  3482  1518  2D1A               	goto	u2870
  3483  1519                     u2871:
  3484  1519  2D22               	goto	l490
  3485  151A                     u2870:
  3486  151A                     l2283:
  3487  151A  3000               	movlw	0
  3488  151B  00A3               	movwf	___flge@ff1+3
  3489  151C  3000               	movlw	0
  3490  151D  00A2               	movwf	___flge@ff1+2
  3491  151E  3000               	movlw	0
  3492  151F  00A1               	movwf	___flge@ff1+1
  3493  1520  3000               	movlw	0
  3494  1521  00A0               	movwf	___flge@ff1
  3495  1522                     l490:
  3496  1522  3000               	movlw	0
  3497  1523  0524               	andwf	___flge@ff2,w
  3498  1524  00A8               	movwf	??___flge
  3499  1525  3000               	movlw	0
  3500  1526  0525               	andwf	___flge@ff2+1,w
  3501  1527  00A9               	movwf	??___flge+1
  3502  1528  3080               	movlw	128
  3503  1529  0526               	andwf	___flge@ff2+2,w
  3504  152A  00AA               	movwf	??___flge+2
  3505  152B  307F               	movlw	127
  3506  152C  0527               	andwf	___flge@ff2+3,w
  3507  152D  00AB               	movwf	??___flge+3
  3508  152E  082B               	movf	??___flge+3,w
  3509  152F  042A               	iorwf	??___flge+2,w
  3510  1530  0429               	iorwf	??___flge+1,w
  3511  1531  0428               	iorwf	??___flge,w
  3512  1532  1D03               	skipz
  3513  1533  2D35               	goto	u2881
  3514  1534  2D36               	goto	u2880
  3515  1535                     u2881:
  3516  1535  2D3E               	goto	l2287
  3517  1536                     u2880:
  3518  1536                     l2285:
  3519  1536  3000               	movlw	0
  3520  1537  00A7               	movwf	___flge@ff2+3
  3521  1538  3000               	movlw	0
  3522  1539  00A6               	movwf	___flge@ff2+2
  3523  153A  3000               	movlw	0
  3524  153B  00A5               	movwf	___flge@ff2+1
  3525  153C  3000               	movlw	0
  3526  153D  00A4               	movwf	___flge@ff2
  3527  153E                     l2287:
  3528  153E  1FA3               	btfss	___flge@ff1+3,7
  3529  153F  2D41               	goto	u2891
  3530  1540  2D42               	goto	u2890
  3531  1541                     u2891:
  3532  1541  2D66               	goto	l2291
  3533  1542                     u2890:
  3534  1542                     l2289:
  3535  1542  3000               	movlw	0
  3536  1543  00A8               	movwf	??___flge
  3537  1544  3000               	movlw	0
  3538  1545  00A9               	movwf	??___flge+1
  3539  1546  3000               	movlw	0
  3540  1547  00AA               	movwf	??___flge+2
  3541  1548  3080               	movlw	128
  3542  1549  00AB               	movwf	??___flge+3
  3543  154A  0820               	movf	___flge@ff1,w
  3544  154B  02A8               	subwf	??___flge,f
  3545  154C  0821               	movf	___flge@ff1+1,w
  3546  154D  1C03               	skipc
  3547  154E  0F21               	incfsz	___flge@ff1+1,w
  3548  154F  2D51               	goto	u2901
  3549  1550  2D52               	goto	u2902
  3550  1551                     u2901:
  3551  1551  02A9               	subwf	??___flge+1,f
  3552  1552                     u2902:
  3553  1552  0822               	movf	___flge@ff1+2,w
  3554  1553  1C03               	skipc
  3555  1554  0F22               	incfsz	___flge@ff1+2,w
  3556  1555  2D57               	goto	u2903
  3557  1556  2D58               	goto	u2904
  3558  1557                     u2903:
  3559  1557  02AA               	subwf	??___flge+2,f
  3560  1558                     u2904:
  3561  1558  0823               	movf	___flge@ff1+3,w
  3562  1559  1C03               	skipc
  3563  155A  0F23               	incfsz	___flge@ff1+3,w
  3564  155B  2D5D               	goto	u2905
  3565  155C  2D5E               	goto	u2906
  3566  155D                     u2905:
  3567  155D  02AB               	subwf	??___flge+3,f
  3568  155E                     u2906:
  3569  155E  082B               	movf	??___flge+3,w
  3570  155F  00A3               	movwf	___flge@ff1+3
  3571  1560  082A               	movf	??___flge+2,w
  3572  1561  00A2               	movwf	___flge@ff1+2
  3573  1562  0829               	movf	??___flge+1,w
  3574  1563  00A1               	movwf	___flge@ff1+1
  3575  1564  0828               	movf	??___flge,w
  3576  1565  00A0               	movwf	___flge@ff1
  3577  1566                     l2291:
  3578  1566  1FA7               	btfss	___flge@ff2+3,7
  3579  1567  2D69               	goto	u2911
  3580  1568  2D6A               	goto	u2910
  3581  1569                     u2911:
  3582  1569  2D8E               	goto	l493
  3583  156A                     u2910:
  3584  156A                     l2293:
  3585  156A  3000               	movlw	0
  3586  156B  00A8               	movwf	??___flge
  3587  156C  3000               	movlw	0
  3588  156D  00A9               	movwf	??___flge+1
  3589  156E  3000               	movlw	0
  3590  156F  00AA               	movwf	??___flge+2
  3591  1570  3080               	movlw	128
  3592  1571  00AB               	movwf	??___flge+3
  3593  1572  0824               	movf	___flge@ff2,w
  3594  1573  02A8               	subwf	??___flge,f
  3595  1574  0825               	movf	___flge@ff2+1,w
  3596  1575  1C03               	skipc
  3597  1576  0F25               	incfsz	___flge@ff2+1,w
  3598  1577  2D79               	goto	u2921
  3599  1578  2D7A               	goto	u2922
  3600  1579                     u2921:
  3601  1579  02A9               	subwf	??___flge+1,f
  3602  157A                     u2922:
  3603  157A  0826               	movf	___flge@ff2+2,w
  3604  157B  1C03               	skipc
  3605  157C  0F26               	incfsz	___flge@ff2+2,w
  3606  157D  2D7F               	goto	u2923
  3607  157E  2D80               	goto	u2924
  3608  157F                     u2923:
  3609  157F  02AA               	subwf	??___flge+2,f
  3610  1580                     u2924:
  3611  1580  0827               	movf	___flge@ff2+3,w
  3612  1581  1C03               	skipc
  3613  1582  0F27               	incfsz	___flge@ff2+3,w
  3614  1583  2D85               	goto	u2925
  3615  1584  2D86               	goto	u2926
  3616  1585                     u2925:
  3617  1585  02AB               	subwf	??___flge+3,f
  3618  1586                     u2926:
  3619  1586  082B               	movf	??___flge+3,w
  3620  1587  00A7               	movwf	___flge@ff2+3
  3621  1588  082A               	movf	??___flge+2,w
  3622  1589  00A6               	movwf	___flge@ff2+2
  3623  158A  0829               	movf	??___flge+1,w
  3624  158B  00A5               	movwf	___flge@ff2+1
  3625  158C  0828               	movf	??___flge,w
  3626  158D  00A4               	movwf	___flge@ff2
  3627  158E                     l493:
  3628  158E  3080               	movlw	128
  3629  158F  06A3               	xorwf	___flge@ff1+3,f
  3630  1590  3080               	movlw	128
  3631  1591  06A7               	xorwf	___flge@ff2+3,f
  3632  1592  0827               	movf	___flge@ff2+3,w
  3633  1593  0223               	subwf	___flge@ff1+3,w
  3634  1594  1D03               	skipz
  3635  1595  2DA0               	goto	u2935
  3636  1596  0826               	movf	___flge@ff2+2,w
  3637  1597  0222               	subwf	___flge@ff1+2,w
  3638  1598  1D03               	skipz
  3639  1599  2DA0               	goto	u2935
  3640  159A  0825               	movf	___flge@ff2+1,w
  3641  159B  0221               	subwf	___flge@ff1+1,w
  3642  159C  1D03               	skipz
  3643  159D  2DA0               	goto	u2935
  3644  159E  0824               	movf	___flge@ff2,w
  3645  159F  0220               	subwf	___flge@ff1,w
  3646  15A0                     u2935:
  3647  15A0  1803               	skipnc
  3648  15A1  2DA3               	goto	u2931
  3649  15A2  2DA4               	goto	u2930
  3650  15A3                     u2931:
  3651  15A3  2DA6               	goto	l2297
  3652  15A4                     u2930:
  3653  15A4                     l2295:
  3654  15A4  1003               	clrc
  3655  15A5  2DA7               	goto	l494
  3656  15A6                     l2297:
  3657  15A6  1403               	setc
  3658  15A7                     l494:
  3659  15A7  0008               	return
  3660  15A8                     __end_of___flge:
  3661                           
  3662                           	psect	text11
  3663  13D2                     __ptext11:	
  3664 ;; *************** function _UARTSendString *****************
  3665 ;; Defined at:
  3666 ;;		line 49 in file "UART.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;  str             2    0[BANK0 ] PTR const unsigned char 
  3669 ;;		 -> NULL(0), ftoa@buf(17), STR_6(2), STR_5(2), 
  3670 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
  3671 ;;  max_length      1    2[BANK0 ] const unsigned char 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  i               2    6[BANK0 ] int 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  1    wreg      void 
  3676 ;; Registers used:
  3677 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3683 ;;      Params:         0       3       0       0       0
  3684 ;;      Locals:         0       2       0       0       0
  3685 ;;      Temps:          0       3       0       0       0
  3686 ;;      Totals:         0       8       0       0       0
  3687 ;;Total ram usage:        8 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:    2
  3690 ;; This function calls:
  3691 ;;		_UARTSendChar
  3692 ;; This function is called by:
  3693 ;;		_sendMPU
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           
  3698                           ;psect for function _UARTSendString
  3699  13D2                     _UARTSendString:
  3700  13D2                     l2697:	
  3701                           ;incstack = 0
  3702                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3703                           
  3704                           
  3705                           ;UART.c: 50:     int i = 0;
  3706  13D2  1283               	bcf	3,5	;RP0=0, select bank0
  3707  13D3  1303               	bcf	3,6	;RP1=0, select bank0
  3708  13D4  01A6               	clrf	UARTSendString@i
  3709  13D5  01A7               	clrf	UARTSendString@i+1
  3710                           
  3711                           ;UART.c: 51:     for (i=0 ; i<max_length && str[i]!='\0' ; i++) {
  3712  13D6  01A6               	clrf	UARTSendString@i
  3713  13D7  01A7               	clrf	UARTSendString@i+1
  3714  13D8  2BFD               	goto	l2703
  3715  13D9                     l2699:
  3716                           
  3717                           ;UART.c: 52:         UARTSendChar(str[i]);
  3718  13D9  0826               	movf	UARTSendString@i,w
  3719  13DA  0720               	addwf	UARTSendString@str,w
  3720  13DB  00A4               	movwf	??_UARTSendString+1
  3721  13DC  0821               	movf	UARTSendString@str+1,w
  3722  13DD  00A3               	movwf	??_UARTSendString
  3723  13DE  1803               	skipnc
  3724  13DF  0AA3               	incf	??_UARTSendString,f
  3725  13E0  1FA6               	btfss	UARTSendString@i,7
  3726  13E1  2BE3               	goto	u3790
  3727  13E2  03A3               	decf	??_UARTSendString,f
  3728  13E3                     u3790:
  3729  13E3  1283               	bcf	3,5	;RP0=0, select bank0
  3730  13E4  1303               	bcf	3,6	;RP1=0, select bank0
  3731  13E5  0823               	movf	??_UARTSendString,w
  3732  13E6  00A5               	movwf	??_UARTSendString+2
  3733  13E7  0825               	movf	??_UARTSendString+2,w
  3734  13E8  00FF               	movwf	btemp+1
  3735  13E9  0824               	movf	??_UARTSendString+1,w
  3736  13EA  0084               	movwf	4
  3737  13EB  120A  118A  27B5  160A  118A  	fcall	stringtab
  3738  13F0  160A  118A  221A  160A  118A  	fcall	_UARTSendChar
  3739  13F5                     l2701:
  3740                           
  3741                           ;UART.c: 53:     }
  3742  13F5  3001               	movlw	1
  3743  13F6  1283               	bcf	3,5	;RP0=0, select bank0
  3744  13F7  1303               	bcf	3,6	;RP1=0, select bank0
  3745  13F8  07A6               	addwf	UARTSendString@i,f
  3746  13F9  1803               	skipnc
  3747  13FA  0AA7               	incf	UARTSendString@i+1,f
  3748  13FB  3000               	movlw	0
  3749  13FC  07A7               	addwf	UARTSendString@i+1,f
  3750  13FD                     l2703:
  3751  13FD  0827               	movf	UARTSendString@i+1,w
  3752  13FE  3A80               	xorlw	128
  3753  13FF  00A3               	movwf	??_UARTSendString
  3754  1400  3080               	movlw	128
  3755  1401  0223               	subwf	??_UARTSendString,w
  3756  1402  1D03               	skipz
  3757  1403  2C06               	goto	u3805
  3758  1404  0822               	movf	UARTSendString@max_length,w
  3759  1405  0226               	subwf	UARTSendString@i,w
  3760  1406                     u3805:
  3761  1406  1803               	skipnc
  3762  1407  2C09               	goto	u3801
  3763  1408  2C0A               	goto	u3800
  3764  1409                     u3801:
  3765  1409  2C28               	goto	l184
  3766  140A                     u3800:
  3767  140A                     l2705:
  3768  140A  1283               	bcf	3,5	;RP0=0, select bank0
  3769  140B  1303               	bcf	3,6	;RP1=0, select bank0
  3770  140C  0826               	movf	UARTSendString@i,w
  3771  140D  0720               	addwf	UARTSendString@str,w
  3772  140E  00A4               	movwf	??_UARTSendString+1
  3773  140F  0821               	movf	UARTSendString@str+1,w
  3774  1410  00A3               	movwf	??_UARTSendString
  3775  1411  1803               	skipnc
  3776  1412  0AA3               	incf	??_UARTSendString,f
  3777  1413  1FA6               	btfss	UARTSendString@i,7
  3778  1414  2C16               	goto	u3810
  3779  1415  03A3               	decf	??_UARTSendString,f
  3780  1416                     u3810:
  3781  1416  1283               	bcf	3,5	;RP0=0, select bank0
  3782  1417  1303               	bcf	3,6	;RP1=0, select bank0
  3783  1418  0823               	movf	??_UARTSendString,w
  3784  1419  00A5               	movwf	??_UARTSendString+2
  3785  141A  0825               	movf	??_UARTSendString+2,w
  3786  141B  00FF               	movwf	btemp+1
  3787  141C  0824               	movf	??_UARTSendString+1,w
  3788  141D  0084               	movwf	4
  3789  141E  120A  118A  27B5  160A  118A  	fcall	stringtab
  3790  1423  3A00               	xorlw	0
  3791  1424  1D03               	skipz
  3792  1425  2C27               	goto	u3821
  3793  1426  2C28               	goto	u3820
  3794  1427                     u3821:
  3795  1427  2BD9               	goto	l2699
  3796  1428                     u3820:
  3797  1428                     l184:
  3798  1428  0008               	return
  3799  1429                     __end_of_UARTSendString:
  3800                           
  3801                           	psect	text12
  3802  121A                     __ptext12:	
  3803 ;; *************** function _UARTSendChar *****************
  3804 ;; Defined at:
  3805 ;;		line 39 in file "UART.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;  c               1    wreg     const unsigned char 
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;  c               1    6[COMMON] const unsigned char 
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  1    wreg      void 
  3812 ;; Registers used:
  3813 ;;		wreg
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3819 ;;      Params:         0       0       0       0       0
  3820 ;;      Locals:         1       0       0       0       0
  3821 ;;      Temps:          0       0       0       0       0
  3822 ;;      Totals:         1       0       0       0       0
  3823 ;;Total ram usage:        1 bytes
  3824 ;; Hardware stack levels used:    1
  3825 ;; Hardware stack levels required when called:    1
  3826 ;; This function calls:
  3827 ;;		Nothing
  3828 ;; This function is called by:
  3829 ;;		_sendMPU
  3830 ;;		_UARTSendString
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           
  3835                           ;psect for function _UARTSendChar
  3836  121A                     _UARTSendChar:
  3837                           
  3838                           ;incstack = 0
  3839                           ; Regs used in _UARTSendChar: [wreg]
  3840                           ;UARTSendChar@c stored from wreg
  3841  121A  00F6               	movwf	UARTSendChar@c
  3842  121B                     l2277:
  3843  121B                     l173:	
  3844                           ;UART.c: 40:     while (TXSTAbits.TRMT == 0);
  3845                           
  3846  121B  1683               	bsf	3,5	;RP0=1, select bank1
  3847  121C  1303               	bcf	3,6	;RP1=0, select bank1
  3848  121D  1C98               	btfss	24,1	;volatile
  3849  121E  2A20               	goto	u2861
  3850  121F  2A21               	goto	u2860
  3851  1220                     u2861:
  3852  1220  2A1B               	goto	l173
  3853  1221                     u2860:
  3854  1221                     l2279:
  3855                           
  3856                           ;UART.c: 41:     TXREG = c;
  3857  1221  0876               	movf	UARTSendChar@c,w
  3858  1222  1283               	bcf	3,5	;RP0=0, select bank0
  3859  1223  1303               	bcf	3,6	;RP1=0, select bank0
  3860  1224  0099               	movwf	25	;volatile
  3861  1225                     l176:
  3862  1225  0008               	return
  3863  1226                     __end_of_UARTSendChar:
  3864                           
  3865                           	psect	text13
  3866  0383                     __ptext13:	
  3867 ;; *************** function _readMPU *****************
  3868 ;; Defined at:
  3869 ;;		line 28 in file "MPU6050.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  datos           1    wreg     PTR float 
  3872 ;;		 -> datos(28), 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  datos           1   30[BANK1 ] PTR float 
  3875 ;;		 -> datos(28), 
  3876 ;;  i               2   28[BANK1 ] int 
  3877 ;;  valores        14    0[BANK1 ] unsigned char [14]
  3878 ;;  guardar        14   14[BANK1 ] int [7]
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  1    wreg      void 
  3881 ;; Registers used:
  3882 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3888 ;;      Params:         0       0       0       0       0
  3889 ;;      Locals:         0       0      31       0       0
  3890 ;;      Temps:          0       4       0       0       0
  3891 ;;      Totals:         0       4      31       0       0
  3892 ;;Total ram usage:       35 bytes
  3893 ;; Hardware stack levels used:    1
  3894 ;; Hardware stack levels required when called:    4
  3895 ;; This function calls:
  3896 ;;		_I2C_Master_RepeatedStart
  3897 ;;		_I2C_Master_Stop
  3898 ;;		_I2C_Master_Write
  3899 ;;		_I2C_Read
  3900 ;;		_I2C_Start
  3901 ;;		___fladd
  3902 ;;		___fldiv
  3903 ;;		___flmul
  3904 ;;		___xxtofl
  3905 ;; This function is called by:
  3906 ;;		_main
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           
  3911                           ;psect for function _readMPU
  3912  0383                     _readMPU:
  3913                           
  3914                           ;incstack = 0
  3915                           ; Regs used in _readMPU: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3916                           ;readMPU@datos stored from wreg
  3917  0383  1683               	bsf	3,5	;RP0=1, select bank1
  3918  0384  1303               	bcf	3,6	;RP1=0, select bank1
  3919  0385  00ED               	movwf	readMPU@datos^(0+128)
  3920  0386                     l3405:
  3921                           
  3922                           ;MPU6050.c: 29:     char valores[14];;MPU6050.c: 30:     int guardar[7];;MPU6050.c: 31: 
      +                              I2C_Start(0xD0);
  3923  0386  30D0               	movlw	208
  3924  0387  160A  118A  225D  120A  118A  	fcall	_I2C_Start
  3925  038C                     l219:	
  3926                           ;MPU6050.c: 32:     while (SSPCON2bits.ACKSTAT);
  3927                           
  3928  038C  1683               	bsf	3,5	;RP0=1, select bank1
  3929  038D  1303               	bcf	3,6	;RP1=0, select bank1
  3930  038E  1B11               	btfsc	17,6	;volatile
  3931  038F  2B91               	goto	u4971
  3932  0390  2B92               	goto	u4970
  3933  0391                     u4971:
  3934  0391  2B8C               	goto	l219
  3935  0392                     u4970:
  3936  0392                     l3407:
  3937                           
  3938                           ;MPU6050.c: 33:     I2C_Master_Write(0x3B);
  3939  0392  303B               	movlw	59
  3940  0393  160A  118A  224D  120A  118A  	fcall	_I2C_Master_Write
  3941  0398                     l222:	
  3942                           ;MPU6050.c: 34:     while (SSPCON2bits.ACKSTAT);
  3943                           
  3944  0398  1683               	bsf	3,5	;RP0=1, select bank1
  3945  0399  1303               	bcf	3,6	;RP1=0, select bank1
  3946  039A  1B11               	btfsc	17,6	;volatile
  3947  039B  2B9D               	goto	u4981
  3948  039C  2B9E               	goto	u4980
  3949  039D                     u4981:
  3950  039D  2B98               	goto	l222
  3951  039E                     u4980:
  3952  039E                     l3409:
  3953                           
  3954                           ;MPU6050.c: 35:     I2C_Master_RepeatedStart();
  3955  039E  160A  118A  21FF  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3956                           
  3957                           ;MPU6050.c: 36:     I2C_Master_Write(0xD1);
  3958  03A3  30D1               	movlw	209
  3959  03A4  160A  118A  224D  120A  118A  	fcall	_I2C_Master_Write
  3960  03A9                     l3411:
  3961                           
  3962                           ;MPU6050.c: 37:     for (int i = 0; i < 13; i++) valores[i] = I2C_Read(0);
  3963  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  3964  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  3965  03AB  01EB               	clrf	readMPU@i^(0+128)
  3966  03AC  01EC               	clrf	(readMPU@i+1)^(0+128)
  3967  03AD                     l3417:
  3968  03AD  3000               	movlw	0
  3969  03AE  160A  118A  230C  120A  118A  	fcall	_I2C_Read
  3970  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  3971  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  3972  03B5  00DC               	movwf	??_readMPU
  3973  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  3974  03B7  1303               	bcf	3,6	;RP1=0, select bank1
  3975  03B8  086B               	movf	readMPU@i^(0+128),w
  3976  03B9  3ECF               	addlw	(low (readMPU@valores| 0))& (0+255)
  3977  03BA  0084               	movwf	4
  3978  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  3979  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  3980  03BD  085C               	movf	??_readMPU,w
  3981  03BE  1383               	bcf	3,7	;select IRP bank1
  3982  03BF  0080               	movwf	0
  3983  03C0                     l3419:
  3984  03C0  3001               	movlw	1
  3985  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  3986  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  3987  03C3  07EB               	addwf	readMPU@i^(0+128),f
  3988  03C4  1803               	skipnc
  3989  03C5  0AEC               	incf	(readMPU@i+1)^(0+128),f
  3990  03C6  3000               	movlw	0
  3991  03C7  07EC               	addwf	(readMPU@i+1)^(0+128),f
  3992  03C8                     l3421:
  3993  03C8  086C               	movf	(readMPU@i+1)^(0+128),w
  3994  03C9  3A80               	xorlw	128
  3995  03CA  00FF               	movwf	btemp+1
  3996  03CB  3080               	movlw	128
  3997  03CC  027F               	subwf	btemp+1,w
  3998  03CD  1D03               	skipz
  3999  03CE  2BD1               	goto	u4995
  4000  03CF  300D               	movlw	13
  4001  03D0  026B               	subwf	readMPU@i^(0+128),w
  4002  03D1                     u4995:
  4003  03D1  1C03               	skipc
  4004  03D2  2BD4               	goto	u4991
  4005  03D3  2BD5               	goto	u4990
  4006  03D4                     u4991:
  4007  03D4  2BAD               	goto	l3417
  4008  03D5                     u4990:
  4009  03D5                     l3423:
  4010                           
  4011                           ;MPU6050.c: 38:     valores[13] = I2C_Read(1);
  4012  03D5  3001               	movlw	1
  4013  03D6  160A  118A  230C  120A  118A  	fcall	_I2C_Read
  4014  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  4015  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  4016  03DD  00DC               	movwf	??_readMPU
  4017  03DE  085C               	movf	??_readMPU,w
  4018  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  4019  03E0  1303               	bcf	3,6	;RP1=0, select bank1
  4020  03E1  00DC               	movwf	(readMPU@valores^(0+128)+13)
  4021                           
  4022                           ;MPU6050.c: 39:     I2C_Master_Stop();
  4023  03E2  160A  118A  21F6  120A  118A  	fcall	_I2C_Master_Stop
  4024  03E7                     l3425:
  4025                           
  4026                           ;MPU6050.c: 42:     guardar[0] = ((int) valores[0] << 8) | ((int) valores[1]);
  4027  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  4028  03E8  1303               	bcf	3,6	;RP1=0, select bank1
  4029  03E9  0850               	movf	(readMPU@valores^(0+128)+1),w
  4030  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  4031  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  4032  03EC  00DC               	movwf	??_readMPU
  4033  03ED  01DD               	clrf	??_readMPU+1
  4034  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  4035  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  4036  03F0  084F               	movf	readMPU@valores^(0+128),w
  4037  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  4038  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  4039  03F3  00DE               	movwf	??_readMPU+2
  4040  03F4  01DF               	clrf	??_readMPU+3
  4041  03F5  085E               	movf	??_readMPU+2,w
  4042  03F6  00DF               	movwf	??_readMPU+3
  4043  03F7  01DE               	clrf	??_readMPU+2
  4044  03F8  085C               	movf	??_readMPU,w
  4045  03F9  045E               	iorwf	??_readMPU+2,w
  4046  03FA  1683               	bsf	3,5	;RP0=1, select bank1
  4047  03FB  1303               	bcf	3,6	;RP1=0, select bank1
  4048  03FC  00DD               	movwf	readMPU@guardar^(0+128)
  4049  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  4050  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  4051  03FF  085D               	movf	??_readMPU+1,w
  4052  0400  045F               	iorwf	??_readMPU+3,w
  4053  0401  1683               	bsf	3,5	;RP0=1, select bank1
  4054  0402  1303               	bcf	3,6	;RP1=0, select bank1
  4055  0403  00DE               	movwf	(readMPU@guardar+1)^(0+128)
  4056  0404                     l3427:
  4057                           
  4058                           ;MPU6050.c: 43:     guardar[1] = ((int) valores[2] << 8) | ((int) valores[3]);
  4059  0404  0852               	movf	(readMPU@valores^(0+128)+3),w
  4060  0405  1283               	bcf	3,5	;RP0=0, select bank0
  4061  0406  1303               	bcf	3,6	;RP1=0, select bank0
  4062  0407  00DC               	movwf	??_readMPU
  4063  0408  01DD               	clrf	??_readMPU+1
  4064  0409  1683               	bsf	3,5	;RP0=1, select bank1
  4065  040A  1303               	bcf	3,6	;RP1=0, select bank1
  4066  040B  0851               	movf	(readMPU@valores^(0+128)+2),w
  4067  040C  1283               	bcf	3,5	;RP0=0, select bank0
  4068  040D  1303               	bcf	3,6	;RP1=0, select bank0
  4069  040E  00DE               	movwf	??_readMPU+2
  4070  040F  01DF               	clrf	??_readMPU+3
  4071  0410  085E               	movf	??_readMPU+2,w
  4072  0411  00DF               	movwf	??_readMPU+3
  4073  0412  01DE               	clrf	??_readMPU+2
  4074  0413  085C               	movf	??_readMPU,w
  4075  0414  045E               	iorwf	??_readMPU+2,w
  4076  0415  1683               	bsf	3,5	;RP0=1, select bank1
  4077  0416  1303               	bcf	3,6	;RP1=0, select bank1
  4078  0417  00DF               	movwf	(readMPU@guardar^(0+128)+2)
  4079  0418  1283               	bcf	3,5	;RP0=0, select bank0
  4080  0419  1303               	bcf	3,6	;RP1=0, select bank0
  4081  041A  085D               	movf	??_readMPU+1,w
  4082  041B  045F               	iorwf	??_readMPU+3,w
  4083  041C  1683               	bsf	3,5	;RP0=1, select bank1
  4084  041D  1303               	bcf	3,6	;RP1=0, select bank1
  4085  041E  00E0               	movwf	((readMPU@guardar+1)^(0+128)+2)
  4086  041F                     l3429:
  4087                           
  4088                           ;MPU6050.c: 44:     guardar[2] = ((int) valores[4] << 8) | ((int) valores[5]);
  4089  041F  0854               	movf	(readMPU@valores^(0+128)+5),w
  4090  0420  1283               	bcf	3,5	;RP0=0, select bank0
  4091  0421  1303               	bcf	3,6	;RP1=0, select bank0
  4092  0422  00DC               	movwf	??_readMPU
  4093  0423  01DD               	clrf	??_readMPU+1
  4094  0424  1683               	bsf	3,5	;RP0=1, select bank1
  4095  0425  1303               	bcf	3,6	;RP1=0, select bank1
  4096  0426  0853               	movf	(readMPU@valores^(0+128)+4),w
  4097  0427  1283               	bcf	3,5	;RP0=0, select bank0
  4098  0428  1303               	bcf	3,6	;RP1=0, select bank0
  4099  0429  00DE               	movwf	??_readMPU+2
  4100  042A  01DF               	clrf	??_readMPU+3
  4101  042B  085E               	movf	??_readMPU+2,w
  4102  042C  00DF               	movwf	??_readMPU+3
  4103  042D  01DE               	clrf	??_readMPU+2
  4104  042E  085C               	movf	??_readMPU,w
  4105  042F  045E               	iorwf	??_readMPU+2,w
  4106  0430  1683               	bsf	3,5	;RP0=1, select bank1
  4107  0431  1303               	bcf	3,6	;RP1=0, select bank1
  4108  0432  00E1               	movwf	(readMPU@guardar^(0+128)+4)
  4109  0433  1283               	bcf	3,5	;RP0=0, select bank0
  4110  0434  1303               	bcf	3,6	;RP1=0, select bank0
  4111  0435  085D               	movf	??_readMPU+1,w
  4112  0436  045F               	iorwf	??_readMPU+3,w
  4113  0437  1683               	bsf	3,5	;RP0=1, select bank1
  4114  0438  1303               	bcf	3,6	;RP1=0, select bank1
  4115  0439  00E2               	movwf	((readMPU@guardar+1)^(0+128)+4)
  4116  043A                     l3431:
  4117                           
  4118                           ;MPU6050.c: 45:     guardar[3] = ((int) valores[6] << 8) | ((int) valores[7]);
  4119  043A  0856               	movf	(readMPU@valores^(0+128)+7),w
  4120  043B  1283               	bcf	3,5	;RP0=0, select bank0
  4121  043C  1303               	bcf	3,6	;RP1=0, select bank0
  4122  043D  00DC               	movwf	??_readMPU
  4123  043E  01DD               	clrf	??_readMPU+1
  4124  043F  1683               	bsf	3,5	;RP0=1, select bank1
  4125  0440  1303               	bcf	3,6	;RP1=0, select bank1
  4126  0441  0855               	movf	(readMPU@valores^(0+128)+6),w
  4127  0442  1283               	bcf	3,5	;RP0=0, select bank0
  4128  0443  1303               	bcf	3,6	;RP1=0, select bank0
  4129  0444  00DE               	movwf	??_readMPU+2
  4130  0445  01DF               	clrf	??_readMPU+3
  4131  0446  085E               	movf	??_readMPU+2,w
  4132  0447  00DF               	movwf	??_readMPU+3
  4133  0448  01DE               	clrf	??_readMPU+2
  4134  0449  085C               	movf	??_readMPU,w
  4135  044A  045E               	iorwf	??_readMPU+2,w
  4136  044B  1683               	bsf	3,5	;RP0=1, select bank1
  4137  044C  1303               	bcf	3,6	;RP1=0, select bank1
  4138  044D  00E3               	movwf	(readMPU@guardar^(0+128)+6)
  4139  044E  1283               	bcf	3,5	;RP0=0, select bank0
  4140  044F  1303               	bcf	3,6	;RP1=0, select bank0
  4141  0450  085D               	movf	??_readMPU+1,w
  4142  0451  045F               	iorwf	??_readMPU+3,w
  4143  0452  1683               	bsf	3,5	;RP0=1, select bank1
  4144  0453  1303               	bcf	3,6	;RP1=0, select bank1
  4145  0454  00E4               	movwf	((readMPU@guardar+1)^(0+128)+6)
  4146  0455                     l3433:
  4147                           
  4148                           ;MPU6050.c: 46:     guardar[4] = ((int) valores[8] << 8) | ((int) valores[9]);
  4149  0455  0858               	movf	(readMPU@valores^(0+128)+9),w
  4150  0456  1283               	bcf	3,5	;RP0=0, select bank0
  4151  0457  1303               	bcf	3,6	;RP1=0, select bank0
  4152  0458  00DC               	movwf	??_readMPU
  4153  0459  01DD               	clrf	??_readMPU+1
  4154  045A  1683               	bsf	3,5	;RP0=1, select bank1
  4155  045B  1303               	bcf	3,6	;RP1=0, select bank1
  4156  045C  0857               	movf	(readMPU@valores^(0+128)+8),w
  4157  045D  1283               	bcf	3,5	;RP0=0, select bank0
  4158  045E  1303               	bcf	3,6	;RP1=0, select bank0
  4159  045F  00DE               	movwf	??_readMPU+2
  4160  0460  01DF               	clrf	??_readMPU+3
  4161  0461  085E               	movf	??_readMPU+2,w
  4162  0462  00DF               	movwf	??_readMPU+3
  4163  0463  01DE               	clrf	??_readMPU+2
  4164  0464  085C               	movf	??_readMPU,w
  4165  0465  045E               	iorwf	??_readMPU+2,w
  4166  0466  1683               	bsf	3,5	;RP0=1, select bank1
  4167  0467  1303               	bcf	3,6	;RP1=0, select bank1
  4168  0468  00E5               	movwf	(readMPU@guardar^(0+128)+8)
  4169  0469  1283               	bcf	3,5	;RP0=0, select bank0
  4170  046A  1303               	bcf	3,6	;RP1=0, select bank0
  4171  046B  085D               	movf	??_readMPU+1,w
  4172  046C  045F               	iorwf	??_readMPU+3,w
  4173  046D  1683               	bsf	3,5	;RP0=1, select bank1
  4174  046E  1303               	bcf	3,6	;RP1=0, select bank1
  4175  046F  00E6               	movwf	((readMPU@guardar+1)^(0+128)+8)
  4176  0470                     l3435:
  4177                           
  4178                           ;MPU6050.c: 47:     guardar[5] = ((int) valores[10] << 8) | ((int) valores[11]);
  4179  0470  085A               	movf	(readMPU@valores^(0+128)+11),w
  4180  0471  1283               	bcf	3,5	;RP0=0, select bank0
  4181  0472  1303               	bcf	3,6	;RP1=0, select bank0
  4182  0473  00DC               	movwf	??_readMPU
  4183  0474  01DD               	clrf	??_readMPU+1
  4184  0475  1683               	bsf	3,5	;RP0=1, select bank1
  4185  0476  1303               	bcf	3,6	;RP1=0, select bank1
  4186  0477  0859               	movf	(readMPU@valores^(0+128)+10),w
  4187  0478  1283               	bcf	3,5	;RP0=0, select bank0
  4188  0479  1303               	bcf	3,6	;RP1=0, select bank0
  4189  047A  00DE               	movwf	??_readMPU+2
  4190  047B  01DF               	clrf	??_readMPU+3
  4191  047C  085E               	movf	??_readMPU+2,w
  4192  047D  00DF               	movwf	??_readMPU+3
  4193  047E  01DE               	clrf	??_readMPU+2
  4194  047F  085C               	movf	??_readMPU,w
  4195  0480  045E               	iorwf	??_readMPU+2,w
  4196  0481  1683               	bsf	3,5	;RP0=1, select bank1
  4197  0482  1303               	bcf	3,6	;RP1=0, select bank1
  4198  0483  00E7               	movwf	(readMPU@guardar^(0+128)+10)
  4199  0484  1283               	bcf	3,5	;RP0=0, select bank0
  4200  0485  1303               	bcf	3,6	;RP1=0, select bank0
  4201  0486  085D               	movf	??_readMPU+1,w
  4202  0487  045F               	iorwf	??_readMPU+3,w
  4203  0488  1683               	bsf	3,5	;RP0=1, select bank1
  4204  0489  1303               	bcf	3,6	;RP1=0, select bank1
  4205  048A  00E8               	movwf	((readMPU@guardar+1)^(0+128)+10)
  4206  048B                     l3437:
  4207                           
  4208                           ;MPU6050.c: 48:     guardar[6] = ((int) valores[12] << 8) | ((int) valores[13]);
  4209  048B  085C               	movf	(readMPU@valores^(0+128)+13),w
  4210  048C  1283               	bcf	3,5	;RP0=0, select bank0
  4211  048D  1303               	bcf	3,6	;RP1=0, select bank0
  4212  048E  00DC               	movwf	??_readMPU
  4213  048F  01DD               	clrf	??_readMPU+1
  4214  0490  1683               	bsf	3,5	;RP0=1, select bank1
  4215  0491  1303               	bcf	3,6	;RP1=0, select bank1
  4216  0492  085B               	movf	(readMPU@valores^(0+128)+12),w
  4217  0493  1283               	bcf	3,5	;RP0=0, select bank0
  4218  0494  1303               	bcf	3,6	;RP1=0, select bank0
  4219  0495  00DE               	movwf	??_readMPU+2
  4220  0496  01DF               	clrf	??_readMPU+3
  4221  0497  085E               	movf	??_readMPU+2,w
  4222  0498  00DF               	movwf	??_readMPU+3
  4223  0499  01DE               	clrf	??_readMPU+2
  4224  049A  085C               	movf	??_readMPU,w
  4225  049B  045E               	iorwf	??_readMPU+2,w
  4226  049C  1683               	bsf	3,5	;RP0=1, select bank1
  4227  049D  1303               	bcf	3,6	;RP1=0, select bank1
  4228  049E  00E9               	movwf	(readMPU@guardar^(0+128)+12)
  4229  049F  1283               	bcf	3,5	;RP0=0, select bank0
  4230  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  4231  04A1  085D               	movf	??_readMPU+1,w
  4232  04A2  045F               	iorwf	??_readMPU+3,w
  4233  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  4234  04A4  1303               	bcf	3,6	;RP1=0, select bank1
  4235  04A5  00EA               	movwf	((readMPU@guardar+1)^(0+128)+12)
  4236  04A6                     l3439:
  4237                           
  4238                           ;MPU6050.c: 50:     datos[0] = ((float) guardar[0]) * 0.0005982;
  4239  04A6  303A               	movlw	58
  4240  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  4241  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  4242  04A9  00B1               	movwf	___flmul@b+3
  4243  04AA  301C               	movlw	28
  4244  04AB  00B0               	movwf	___flmul@b+2
  4245  04AC  30D0               	movlw	208
  4246  04AD  00AF               	movwf	___flmul@b+1
  4247  04AE  3086               	movlw	134
  4248  04AF  00AE               	movwf	___flmul@b
  4249  04B0  1683               	bsf	3,5	;RP0=1, select bank1
  4250  04B1  1303               	bcf	3,6	;RP1=0, select bank1
  4251  04B2  085D               	movf	readMPU@guardar^(0+128),w
  4252  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  4253  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  4254  04B5  00A0               	movwf	___xxtofl@val
  4255  04B6  1683               	bsf	3,5	;RP0=1, select bank1
  4256  04B7  1303               	bcf	3,6	;RP1=0, select bank1
  4257  04B8  085E               	movf	(readMPU@guardar+1)^(0+128),w
  4258  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  4259  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  4260  04BB  00A1               	movwf	___xxtofl@val+1
  4261  04BC  3000               	movlw	0
  4262  04BD  1BA1               	btfsc	___xxtofl@val+1,7
  4263  04BE  30FF               	movlw	255
  4264  04BF  00A2               	movwf	___xxtofl@val+2
  4265  04C0  00A3               	movwf	___xxtofl@val+3
  4266  04C1  3001               	movlw	1
  4267  04C2  160A  118A  25A8  120A  118A  	fcall	___xxtofl
  4268  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  4269  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  4270  04C9  0823               	movf	?___xxtofl+3,w
  4271  04CA  00B5               	movwf	___flmul@a+3
  4272  04CB  0822               	movf	?___xxtofl+2,w
  4273  04CC  00B4               	movwf	___flmul@a+2
  4274  04CD  0821               	movf	?___xxtofl+1,w
  4275  04CE  00B3               	movwf	___flmul@a+1
  4276  04CF  0820               	movf	?___xxtofl,w
  4277  04D0  00B2               	movwf	___flmul@a
  4278  04D1  120A  118A  2022  120A  118A  	fcall	___flmul
  4279  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  4280  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  4281  04D8  086D               	movf	readMPU@datos^(0+128),w
  4282  04D9  0084               	movwf	4
  4283  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  4284  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  4285  04DC  082E               	movf	?___flmul,w
  4286  04DD  1383               	bcf	3,7	;select IRP bank0
  4287  04DE  0080               	movwf	0
  4288  04DF  0A84               	incf	4,f
  4289  04E0  082F               	movf	?___flmul+1,w
  4290  04E1  0080               	movwf	0
  4291  04E2  0A84               	incf	4,f
  4292  04E3  0830               	movf	?___flmul+2,w
  4293  04E4  0080               	movwf	0
  4294  04E5  0A84               	incf	4,f
  4295  04E6  0831               	movf	?___flmul+3,w
  4296  04E7  0080               	movwf	0
  4297  04E8                     l3441:
  4298                           
  4299                           ;MPU6050.c: 51:     datos[1] = ((float) guardar[1]) * 0.0005982;
  4300  04E8  303A               	movlw	58
  4301  04E9  00B1               	movwf	___flmul@b+3
  4302  04EA  301C               	movlw	28
  4303  04EB  00B0               	movwf	___flmul@b+2
  4304  04EC  30D0               	movlw	208
  4305  04ED  00AF               	movwf	___flmul@b+1
  4306  04EE  3086               	movlw	134
  4307  04EF  00AE               	movwf	___flmul@b
  4308  04F0  1683               	bsf	3,5	;RP0=1, select bank1
  4309  04F1  1303               	bcf	3,6	;RP1=0, select bank1
  4310  04F2  085F               	movf	(readMPU@guardar^(0+128)+2),w
  4311  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  4312  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  4313  04F5  00A0               	movwf	___xxtofl@val
  4314  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  4315  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  4316  04F8  0860               	movf	((readMPU@guardar+1)^(0+128)+2),w
  4317  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  4318  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  4319  04FB  00A1               	movwf	___xxtofl@val+1
  4320  04FC  3000               	movlw	0
  4321  04FD  1BA1               	btfsc	___xxtofl@val+1,7
  4322  04FE  30FF               	movlw	255
  4323  04FF  00A2               	movwf	___xxtofl@val+2
  4324  0500  00A3               	movwf	___xxtofl@val+3
  4325  0501  3001               	movlw	1
  4326  0502  160A  118A  25A8  120A  118A  	fcall	___xxtofl
  4327  0507  1283               	bcf	3,5	;RP0=0, select bank0
  4328  0508  1303               	bcf	3,6	;RP1=0, select bank0
  4329  0509  0823               	movf	?___xxtofl+3,w
  4330  050A  00B5               	movwf	___flmul@a+3
  4331  050B  0822               	movf	?___xxtofl+2,w
  4332  050C  00B4               	movwf	___flmul@a+2
  4333  050D  0821               	movf	?___xxtofl+1,w
  4334  050E  00B3               	movwf	___flmul@a+1
  4335  050F  0820               	movf	?___xxtofl,w
  4336  0510  00B2               	movwf	___flmul@a
  4337  0511  120A  118A  2022  120A  118A  	fcall	___flmul
  4338  0516  1683               	bsf	3,5	;RP0=1, select bank1
  4339  0517  1303               	bcf	3,6	;RP1=0, select bank1
  4340  0518  086D               	movf	readMPU@datos^(0+128),w
  4341  0519  3E04               	addlw	4
  4342  051A  0084               	movwf	4
  4343  051B  1283               	bcf	3,5	;RP0=0, select bank0
  4344  051C  1303               	bcf	3,6	;RP1=0, select bank0
  4345  051D  082E               	movf	?___flmul,w
  4346  051E  1383               	bcf	3,7	;select IRP bank0
  4347  051F  0080               	movwf	0
  4348  0520  0A84               	incf	4,f
  4349  0521  082F               	movf	?___flmul+1,w
  4350  0522  0080               	movwf	0
  4351  0523  0A84               	incf	4,f
  4352  0524  0830               	movf	?___flmul+2,w
  4353  0525  0080               	movwf	0
  4354  0526  0A84               	incf	4,f
  4355  0527  0831               	movf	?___flmul+3,w
  4356  0528  0080               	movwf	0
  4357  0529                     l3443:
  4358                           
  4359                           ;MPU6050.c: 52:     datos[2] = ((float) guardar[2]) * 0.0005982;
  4360  0529  303A               	movlw	58
  4361  052A  00B1               	movwf	___flmul@b+3
  4362  052B  301C               	movlw	28
  4363  052C  00B0               	movwf	___flmul@b+2
  4364  052D  30D0               	movlw	208
  4365  052E  00AF               	movwf	___flmul@b+1
  4366  052F  3086               	movlw	134
  4367  0530  00AE               	movwf	___flmul@b
  4368  0531  1683               	bsf	3,5	;RP0=1, select bank1
  4369  0532  1303               	bcf	3,6	;RP1=0, select bank1
  4370  0533  0861               	movf	(readMPU@guardar^(0+128)+4),w
  4371  0534  1283               	bcf	3,5	;RP0=0, select bank0
  4372  0535  1303               	bcf	3,6	;RP1=0, select bank0
  4373  0536  00A0               	movwf	___xxtofl@val
  4374  0537  1683               	bsf	3,5	;RP0=1, select bank1
  4375  0538  1303               	bcf	3,6	;RP1=0, select bank1
  4376  0539  0862               	movf	((readMPU@guardar+1)^(0+128)+4),w
  4377  053A  1283               	bcf	3,5	;RP0=0, select bank0
  4378  053B  1303               	bcf	3,6	;RP1=0, select bank0
  4379  053C  00A1               	movwf	___xxtofl@val+1
  4380  053D  3000               	movlw	0
  4381  053E  1BA1               	btfsc	___xxtofl@val+1,7
  4382  053F  30FF               	movlw	255
  4383  0540  00A2               	movwf	___xxtofl@val+2
  4384  0541  00A3               	movwf	___xxtofl@val+3
  4385  0542  3001               	movlw	1
  4386  0543  160A  118A  25A8  120A  118A  	fcall	___xxtofl
  4387  0548  1283               	bcf	3,5	;RP0=0, select bank0
  4388  0549  1303               	bcf	3,6	;RP1=0, select bank0
  4389  054A  0823               	movf	?___xxtofl+3,w
  4390  054B  00B5               	movwf	___flmul@a+3
  4391  054C  0822               	movf	?___xxtofl+2,w
  4392  054D  00B4               	movwf	___flmul@a+2
  4393  054E  0821               	movf	?___xxtofl+1,w
  4394  054F  00B3               	movwf	___flmul@a+1
  4395  0550  0820               	movf	?___xxtofl,w
  4396  0551  00B2               	movwf	___flmul@a
  4397  0552  120A  118A  2022  120A  118A  	fcall	___flmul
  4398  0557  1683               	bsf	3,5	;RP0=1, select bank1
  4399  0558  1303               	bcf	3,6	;RP1=0, select bank1
  4400  0559  086D               	movf	readMPU@datos^(0+128),w
  4401  055A  3E08               	addlw	8
  4402  055B  0084               	movwf	4
  4403  055C  1283               	bcf	3,5	;RP0=0, select bank0
  4404  055D  1303               	bcf	3,6	;RP1=0, select bank0
  4405  055E  082E               	movf	?___flmul,w
  4406  055F  1383               	bcf	3,7	;select IRP bank0
  4407  0560  0080               	movwf	0
  4408  0561  0A84               	incf	4,f
  4409  0562  082F               	movf	?___flmul+1,w
  4410  0563  0080               	movwf	0
  4411  0564  0A84               	incf	4,f
  4412  0565  0830               	movf	?___flmul+2,w
  4413  0566  0080               	movwf	0
  4414  0567  0A84               	incf	4,f
  4415  0568  0831               	movf	?___flmul+3,w
  4416  0569  0080               	movwf	0
  4417  056A                     l3445:
  4418                           
  4419                           ;MPU6050.c: 53:     datos[3] = ((float) guardar[3])/340 + 36.53;
  4420  056A  3042               	movlw	66
  4421  056B  00CB               	movwf	___fladd@b+3
  4422  056C  3012               	movlw	18
  4423  056D  00CA               	movwf	___fladd@b+2
  4424  056E  301E               	movlw	30
  4425  056F  00C9               	movwf	___fladd@b+1
  4426  0570  30B8               	movlw	184
  4427  0571  00C8               	movwf	___fladd@b
  4428  0572  3043               	movlw	67
  4429  0573  00B1               	movwf	___fldiv@a+3
  4430  0574  30AA               	movlw	170
  4431  0575  00B0               	movwf	___fldiv@a+2
  4432  0576  3000               	movlw	0
  4433  0577  00AF               	movwf	___fldiv@a+1
  4434  0578  3000               	movlw	0
  4435  0579  00AE               	movwf	___fldiv@a
  4436  057A  1683               	bsf	3,5	;RP0=1, select bank1
  4437  057B  1303               	bcf	3,6	;RP1=0, select bank1
  4438  057C  0863               	movf	(readMPU@guardar^(0+128)+6),w
  4439  057D  1283               	bcf	3,5	;RP0=0, select bank0
  4440  057E  1303               	bcf	3,6	;RP1=0, select bank0
  4441  057F  00A0               	movwf	___xxtofl@val
  4442  0580  1683               	bsf	3,5	;RP0=1, select bank1
  4443  0581  1303               	bcf	3,6	;RP1=0, select bank1
  4444  0582  0864               	movf	((readMPU@guardar+1)^(0+128)+6),w
  4445  0583  1283               	bcf	3,5	;RP0=0, select bank0
  4446  0584  1303               	bcf	3,6	;RP1=0, select bank0
  4447  0585  00A1               	movwf	___xxtofl@val+1
  4448  0586  3000               	movlw	0
  4449  0587  1BA1               	btfsc	___xxtofl@val+1,7
  4450  0588  30FF               	movlw	255
  4451  0589  00A2               	movwf	___xxtofl@val+2
  4452  058A  00A3               	movwf	___xxtofl@val+3
  4453  058B  3001               	movlw	1
  4454  058C  160A  118A  25A8  120A  118A  	fcall	___xxtofl
  4455  0591  1283               	bcf	3,5	;RP0=0, select bank0
  4456  0592  1303               	bcf	3,6	;RP1=0, select bank0
  4457  0593  0823               	movf	?___xxtofl+3,w
  4458  0594  00B5               	movwf	___fldiv@b+3
  4459  0595  0822               	movf	?___xxtofl+2,w
  4460  0596  00B4               	movwf	___fldiv@b+2
  4461  0597  0821               	movf	?___xxtofl+1,w
  4462  0598  00B3               	movwf	___fldiv@b+1
  4463  0599  0820               	movf	?___xxtofl,w
  4464  059A  00B2               	movwf	___fldiv@b
  4465  059B  120A  158A  214F  120A  118A  	fcall	___fldiv
  4466  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  4467  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  4468  05A2  0831               	movf	?___fldiv+3,w
  4469  05A3  00CF               	movwf	___fladd@a+3
  4470  05A4  0830               	movf	?___fldiv+2,w
  4471  05A5  00CE               	movwf	___fladd@a+2
  4472  05A6  082F               	movf	?___fldiv+1,w
  4473  05A7  00CD               	movwf	___fladd@a+1
  4474  05A8  082E               	movf	?___fldiv,w
  4475  05A9  00CC               	movwf	___fladd@a
  4476  05AA  120A  158A  2578  120A  118A  	fcall	___fladd
  4477  05AF  1683               	bsf	3,5	;RP0=1, select bank1
  4478  05B0  1303               	bcf	3,6	;RP1=0, select bank1
  4479  05B1  086D               	movf	readMPU@datos^(0+128),w
  4480  05B2  3E0C               	addlw	12
  4481  05B3  0084               	movwf	4
  4482  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  4483  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  4484  05B6  0848               	movf	?___fladd,w
  4485  05B7  1383               	bcf	3,7	;select IRP bank0
  4486  05B8  0080               	movwf	0
  4487  05B9  0A84               	incf	4,f
  4488  05BA  0849               	movf	?___fladd+1,w
  4489  05BB  0080               	movwf	0
  4490  05BC  0A84               	incf	4,f
  4491  05BD  084A               	movf	?___fladd+2,w
  4492  05BE  0080               	movwf	0
  4493  05BF  0A84               	incf	4,f
  4494  05C0  084B               	movf	?___fladd+3,w
  4495  05C1  0080               	movwf	0
  4496  05C2                     l3447:
  4497                           
  4498                           ;MPU6050.c: 54:     datos[4] = ((float) guardar[4]) * 0.00763;
  4499  05C2  303B               	movlw	59
  4500  05C3  00B1               	movwf	___flmul@b+3
  4501  05C4  30FA               	movlw	250
  4502  05C5  00B0               	movwf	___flmul@b+2
  4503  05C6  3005               	movlw	5
  4504  05C7  00AF               	movwf	___flmul@b+1
  4505  05C8  3014               	movlw	20
  4506  05C9  00AE               	movwf	___flmul@b
  4507  05CA  1683               	bsf	3,5	;RP0=1, select bank1
  4508  05CB  1303               	bcf	3,6	;RP1=0, select bank1
  4509  05CC  0865               	movf	(readMPU@guardar^(0+128)+8),w
  4510  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  4511  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  4512  05CF  00A0               	movwf	___xxtofl@val
  4513  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  4514  05D1  1303               	bcf	3,6	;RP1=0, select bank1
  4515  05D2  0866               	movf	((readMPU@guardar+1)^(0+128)+8),w
  4516  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  4517  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  4518  05D5  00A1               	movwf	___xxtofl@val+1
  4519  05D6  3000               	movlw	0
  4520  05D7  1BA1               	btfsc	___xxtofl@val+1,7
  4521  05D8  30FF               	movlw	255
  4522  05D9  00A2               	movwf	___xxtofl@val+2
  4523  05DA  00A3               	movwf	___xxtofl@val+3
  4524  05DB  3001               	movlw	1
  4525  05DC  160A  118A  25A8  120A  118A  	fcall	___xxtofl
  4526  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  4527  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  4528  05E3  0823               	movf	?___xxtofl+3,w
  4529  05E4  00B5               	movwf	___flmul@a+3
  4530  05E5  0822               	movf	?___xxtofl+2,w
  4531  05E6  00B4               	movwf	___flmul@a+2
  4532  05E7  0821               	movf	?___xxtofl+1,w
  4533  05E8  00B3               	movwf	___flmul@a+1
  4534  05E9  0820               	movf	?___xxtofl,w
  4535  05EA  00B2               	movwf	___flmul@a
  4536  05EB  120A  118A  2022  120A  118A  	fcall	___flmul
  4537  05F0  1683               	bsf	3,5	;RP0=1, select bank1
  4538  05F1  1303               	bcf	3,6	;RP1=0, select bank1
  4539  05F2  086D               	movf	readMPU@datos^(0+128),w
  4540  05F3  3E10               	addlw	16
  4541  05F4  0084               	movwf	4
  4542  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  4543  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  4544  05F7  082E               	movf	?___flmul,w
  4545  05F8  1383               	bcf	3,7	;select IRP bank0
  4546  05F9  0080               	movwf	0
  4547  05FA  0A84               	incf	4,f
  4548  05FB  082F               	movf	?___flmul+1,w
  4549  05FC  0080               	movwf	0
  4550  05FD  0A84               	incf	4,f
  4551  05FE  0830               	movf	?___flmul+2,w
  4552  05FF  0080               	movwf	0
  4553  0600  0A84               	incf	4,f
  4554  0601  0831               	movf	?___flmul+3,w
  4555  0602  0080               	movwf	0
  4556  0603                     l3449:
  4557                           
  4558                           ;MPU6050.c: 55:     datos[5] = ((float) guardar[5]) * 0.00763;
  4559  0603  303B               	movlw	59
  4560  0604  00B1               	movwf	___flmul@b+3
  4561  0605  30FA               	movlw	250
  4562  0606  00B0               	movwf	___flmul@b+2
  4563  0607  3005               	movlw	5
  4564  0608  00AF               	movwf	___flmul@b+1
  4565  0609  3014               	movlw	20
  4566  060A  00AE               	movwf	___flmul@b
  4567  060B  1683               	bsf	3,5	;RP0=1, select bank1
  4568  060C  1303               	bcf	3,6	;RP1=0, select bank1
  4569  060D  0867               	movf	(readMPU@guardar^(0+128)+10),w
  4570  060E  1283               	bcf	3,5	;RP0=0, select bank0
  4571  060F  1303               	bcf	3,6	;RP1=0, select bank0
  4572  0610  00A0               	movwf	___xxtofl@val
  4573  0611  1683               	bsf	3,5	;RP0=1, select bank1
  4574  0612  1303               	bcf	3,6	;RP1=0, select bank1
  4575  0613  0868               	movf	((readMPU@guardar+1)^(0+128)+10),w
  4576  0614  1283               	bcf	3,5	;RP0=0, select bank0
  4577  0615  1303               	bcf	3,6	;RP1=0, select bank0
  4578  0616  00A1               	movwf	___xxtofl@val+1
  4579  0617  3000               	movlw	0
  4580  0618  1BA1               	btfsc	___xxtofl@val+1,7
  4581  0619  30FF               	movlw	255
  4582  061A  00A2               	movwf	___xxtofl@val+2
  4583  061B  00A3               	movwf	___xxtofl@val+3
  4584  061C  3001               	movlw	1
  4585  061D  160A  118A  25A8  120A  118A  	fcall	___xxtofl
  4586  0622  1283               	bcf	3,5	;RP0=0, select bank0
  4587  0623  1303               	bcf	3,6	;RP1=0, select bank0
  4588  0624  0823               	movf	?___xxtofl+3,w
  4589  0625  00B5               	movwf	___flmul@a+3
  4590  0626  0822               	movf	?___xxtofl+2,w
  4591  0627  00B4               	movwf	___flmul@a+2
  4592  0628  0821               	movf	?___xxtofl+1,w
  4593  0629  00B3               	movwf	___flmul@a+1
  4594  062A  0820               	movf	?___xxtofl,w
  4595  062B  00B2               	movwf	___flmul@a
  4596  062C  120A  118A  2022  120A  118A  	fcall	___flmul
  4597  0631  1683               	bsf	3,5	;RP0=1, select bank1
  4598  0632  1303               	bcf	3,6	;RP1=0, select bank1
  4599  0633  086D               	movf	readMPU@datos^(0+128),w
  4600  0634  3E14               	addlw	20
  4601  0635  0084               	movwf	4
  4602  0636  1283               	bcf	3,5	;RP0=0, select bank0
  4603  0637  1303               	bcf	3,6	;RP1=0, select bank0
  4604  0638  082E               	movf	?___flmul,w
  4605  0639  1383               	bcf	3,7	;select IRP bank0
  4606  063A  0080               	movwf	0
  4607  063B  0A84               	incf	4,f
  4608  063C  082F               	movf	?___flmul+1,w
  4609  063D  0080               	movwf	0
  4610  063E  0A84               	incf	4,f
  4611  063F  0830               	movf	?___flmul+2,w
  4612  0640  0080               	movwf	0
  4613  0641  0A84               	incf	4,f
  4614  0642  0831               	movf	?___flmul+3,w
  4615  0643  0080               	movwf	0
  4616  0644                     l3451:
  4617                           
  4618                           ;MPU6050.c: 56:     datos[6] = ((float) guardar[6]) * 0.00763;
  4619  0644  303B               	movlw	59
  4620  0645  00B1               	movwf	___flmul@b+3
  4621  0646  30FA               	movlw	250
  4622  0647  00B0               	movwf	___flmul@b+2
  4623  0648  3005               	movlw	5
  4624  0649  00AF               	movwf	___flmul@b+1
  4625  064A  3014               	movlw	20
  4626  064B  00AE               	movwf	___flmul@b
  4627  064C  1683               	bsf	3,5	;RP0=1, select bank1
  4628  064D  1303               	bcf	3,6	;RP1=0, select bank1
  4629  064E  0869               	movf	(readMPU@guardar^(0+128)+12),w
  4630  064F  1283               	bcf	3,5	;RP0=0, select bank0
  4631  0650  1303               	bcf	3,6	;RP1=0, select bank0
  4632  0651  00A0               	movwf	___xxtofl@val
  4633  0652  1683               	bsf	3,5	;RP0=1, select bank1
  4634  0653  1303               	bcf	3,6	;RP1=0, select bank1
  4635  0654  086A               	movf	((readMPU@guardar+1)^(0+128)+12),w
  4636  0655  1283               	bcf	3,5	;RP0=0, select bank0
  4637  0656  1303               	bcf	3,6	;RP1=0, select bank0
  4638  0657  00A1               	movwf	___xxtofl@val+1
  4639  0658  3000               	movlw	0
  4640  0659  1BA1               	btfsc	___xxtofl@val+1,7
  4641  065A  30FF               	movlw	255
  4642  065B  00A2               	movwf	___xxtofl@val+2
  4643  065C  00A3               	movwf	___xxtofl@val+3
  4644  065D  3001               	movlw	1
  4645  065E  160A  118A  25A8  120A  118A  	fcall	___xxtofl
  4646  0663  1283               	bcf	3,5	;RP0=0, select bank0
  4647  0664  1303               	bcf	3,6	;RP1=0, select bank0
  4648  0665  0823               	movf	?___xxtofl+3,w
  4649  0666  00B5               	movwf	___flmul@a+3
  4650  0667  0822               	movf	?___xxtofl+2,w
  4651  0668  00B4               	movwf	___flmul@a+2
  4652  0669  0821               	movf	?___xxtofl+1,w
  4653  066A  00B3               	movwf	___flmul@a+1
  4654  066B  0820               	movf	?___xxtofl,w
  4655  066C  00B2               	movwf	___flmul@a
  4656  066D  120A  118A  2022  120A  118A  	fcall	___flmul
  4657  0672  1683               	bsf	3,5	;RP0=1, select bank1
  4658  0673  1303               	bcf	3,6	;RP1=0, select bank1
  4659  0674  086D               	movf	readMPU@datos^(0+128),w
  4660  0675  3E18               	addlw	24
  4661  0676  0084               	movwf	4
  4662  0677  1283               	bcf	3,5	;RP0=0, select bank0
  4663  0678  1303               	bcf	3,6	;RP1=0, select bank0
  4664  0679  082E               	movf	?___flmul,w
  4665  067A  1383               	bcf	3,7	;select IRP bank0
  4666  067B  0080               	movwf	0
  4667  067C  0A84               	incf	4,f
  4668  067D  082F               	movf	?___flmul+1,w
  4669  067E  0080               	movwf	0
  4670  067F  0A84               	incf	4,f
  4671  0680  0830               	movf	?___flmul+2,w
  4672  0681  0080               	movwf	0
  4673  0682  0A84               	incf	4,f
  4674  0683  0831               	movf	?___flmul+3,w
  4675  0684  0080               	movwf	0
  4676  0685                     l227:
  4677  0685  0008               	return
  4678  0686                     __end_of_readMPU:
  4679                           
  4680                           	psect	text14
  4681  15A8                     __ptext14:	
  4682 ;; *************** function ___xxtofl *****************
  4683 ;; Defined at:
  4684 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;  sign            1    wreg     unsigned char 
  4687 ;;  val             4    0[BANK0 ] long 
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;  sign            1    8[BANK0 ] unsigned char 
  4690 ;;  arg             4   10[BANK0 ] unsigned long 
  4691 ;;  exp             1    9[BANK0 ] unsigned char 
  4692 ;; Return value:  Size  Location     Type
  4693 ;;                  4    0[BANK0 ] unsigned char 
  4694 ;; Registers used:
  4695 ;;		wreg, status,2, status,0
  4696 ;; Tracked objects:
  4697 ;;		On entry : 0/0
  4698 ;;		On exit  : 0/0
  4699 ;;		Unchanged: 0/0
  4700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4701 ;;      Params:         0       4       0       0       0
  4702 ;;      Locals:         0       6       0       0       0
  4703 ;;      Temps:          0       4       0       0       0
  4704 ;;      Totals:         0      14       0       0       0
  4705 ;;Total ram usage:       14 bytes
  4706 ;; Hardware stack levels used:    1
  4707 ;; Hardware stack levels required when called:    1
  4708 ;; This function calls:
  4709 ;;		Nothing
  4710 ;; This function is called by:
  4711 ;;		_readMPU
  4712 ;;		_ftoa
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           
  4717                           ;psect for function ___xxtofl
  4718  15A8                     ___xxtofl:
  4719                           
  4720                           ;incstack = 0
  4721                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4722                           ;___xxtofl@sign stored from wreg
  4723  15A8  1283               	bcf	3,5	;RP0=0, select bank0
  4724  15A9  1303               	bcf	3,6	;RP1=0, select bank0
  4725  15AA  00A8               	movwf	___xxtofl@sign
  4726  15AB                     l2491:
  4727  15AB  0828               	movf	___xxtofl@sign,w
  4728  15AC  1903               	btfsc	3,2
  4729  15AD  2DAF               	goto	u3421
  4730  15AE  2DB0               	goto	u3420
  4731  15AF                     u3421:
  4732  15AF  2DC4               	goto	l2497
  4733  15B0                     u3420:
  4734  15B0                     l2493:
  4735  15B0  1FA3               	btfss	___xxtofl@val+3,7
  4736  15B1  2DB3               	goto	u3431
  4737  15B2  2DB4               	goto	u3430
  4738  15B3                     u3431:
  4739  15B3  2DC4               	goto	l2497
  4740  15B4                     u3430:
  4741  15B4                     l2495:
  4742  15B4  0920               	comf	___xxtofl@val,w
  4743  15B5  00AA               	movwf	___xxtofl@arg
  4744  15B6  0921               	comf	___xxtofl@val+1,w
  4745  15B7  00AB               	movwf	___xxtofl@arg+1
  4746  15B8  0922               	comf	___xxtofl@val+2,w
  4747  15B9  00AC               	movwf	___xxtofl@arg+2
  4748  15BA  0923               	comf	___xxtofl@val+3,w
  4749  15BB  00AD               	movwf	___xxtofl@arg+3
  4750  15BC  0AAA               	incf	___xxtofl@arg,f
  4751  15BD  1903               	skipnz
  4752  15BE  0AAB               	incf	___xxtofl@arg+1,f
  4753  15BF  1903               	skipnz
  4754  15C0  0AAC               	incf	___xxtofl@arg+2,f
  4755  15C1  1903               	skipnz
  4756  15C2  0AAD               	incf	___xxtofl@arg+3,f
  4757  15C3  2DCC               	goto	l749
  4758  15C4                     l2497:
  4759  15C4  0823               	movf	___xxtofl@val+3,w
  4760  15C5  00AD               	movwf	___xxtofl@arg+3
  4761  15C6  0822               	movf	___xxtofl@val+2,w
  4762  15C7  00AC               	movwf	___xxtofl@arg+2
  4763  15C8  0821               	movf	___xxtofl@val+1,w
  4764  15C9  00AB               	movwf	___xxtofl@arg+1
  4765  15CA  0820               	movf	___xxtofl@val,w
  4766  15CB  00AA               	movwf	___xxtofl@arg
  4767  15CC                     l749:
  4768  15CC  0823               	movf	___xxtofl@val+3,w
  4769  15CD  0422               	iorwf	___xxtofl@val+2,w
  4770  15CE  0421               	iorwf	___xxtofl@val+1,w
  4771  15CF  0420               	iorwf	___xxtofl@val,w
  4772  15D0  1D03               	skipz
  4773  15D1  2DD3               	goto	u3441
  4774  15D2  2DD4               	goto	u3440
  4775  15D3                     u3441:
  4776  15D3  2DDD               	goto	l2503
  4777  15D4                     u3440:
  4778  15D4                     l2499:
  4779  15D4  3000               	movlw	0
  4780  15D5  00A3               	movwf	?___xxtofl+3
  4781  15D6  3000               	movlw	0
  4782  15D7  00A2               	movwf	?___xxtofl+2
  4783  15D8  3000               	movlw	0
  4784  15D9  00A1               	movwf	?___xxtofl+1
  4785  15DA  3000               	movlw	0
  4786  15DB  00A0               	movwf	?___xxtofl
  4787  15DC  2E63               	goto	l751
  4788  15DD                     l2503:
  4789  15DD  3096               	movlw	150
  4790  15DE  00A4               	movwf	??___xxtofl
  4791  15DF  0824               	movf	??___xxtofl,w
  4792  15E0  00A9               	movwf	___xxtofl@exp
  4793  15E1  2DEF               	goto	l2507
  4794  15E2                     l2505:
  4795  15E2  3001               	movlw	1
  4796  15E3  00A4               	movwf	??___xxtofl
  4797  15E4  0824               	movf	??___xxtofl,w
  4798  15E5  07A9               	addwf	___xxtofl@exp,f
  4799  15E6  3001               	movlw	1
  4800  15E7                     u3455:
  4801  15E7  1003               	clrc
  4802  15E8  0CAD               	rrf	___xxtofl@arg+3,f
  4803  15E9  0CAC               	rrf	___xxtofl@arg+2,f
  4804  15EA  0CAB               	rrf	___xxtofl@arg+1,f
  4805  15EB  0CAA               	rrf	___xxtofl@arg,f
  4806  15EC  3EFF               	addlw	-1
  4807  15ED  1D03               	skipz
  4808  15EE  2DE7               	goto	u3455
  4809  15EF                     l2507:
  4810  15EF  30FE               	movlw	254
  4811  15F0  052D               	andwf	___xxtofl@arg+3,w
  4812  15F1  1D03               	btfss	3,2
  4813  15F2  2DF4               	goto	u3461
  4814  15F3  2DF5               	goto	u3460
  4815  15F4                     u3461:
  4816  15F4  2DE2               	goto	l2505
  4817  15F5                     u3460:
  4818  15F5  2E11               	goto	l755
  4819  15F6                     l2509:
  4820  15F6  3001               	movlw	1
  4821  15F7  00A4               	movwf	??___xxtofl
  4822  15F8  0824               	movf	??___xxtofl,w
  4823  15F9  07A9               	addwf	___xxtofl@exp,f
  4824  15FA                     l2511:
  4825  15FA  3001               	movlw	1
  4826  15FB  07AA               	addwf	___xxtofl@arg,f
  4827  15FC  3000               	movlw	0
  4828  15FD  1803               	skipnc
  4829  15FE  3001               	movlw	1
  4830  15FF  07AB               	addwf	___xxtofl@arg+1,f
  4831  1600  3000               	movlw	0
  4832  1601  1803               	skipnc
  4833  1602  3001               	movlw	1
  4834  1603  07AC               	addwf	___xxtofl@arg+2,f
  4835  1604  3000               	movlw	0
  4836  1605  1803               	skipnc
  4837  1606  3001               	movlw	1
  4838  1607  07AD               	addwf	___xxtofl@arg+3,f
  4839  1608                     l2513:
  4840  1608  3001               	movlw	1
  4841  1609                     u3475:
  4842  1609  1003               	clrc
  4843  160A  0CAD               	rrf	___xxtofl@arg+3,f
  4844  160B  0CAC               	rrf	___xxtofl@arg+2,f
  4845  160C  0CAB               	rrf	___xxtofl@arg+1,f
  4846  160D  0CAA               	rrf	___xxtofl@arg,f
  4847  160E  3EFF               	addlw	-1
  4848  160F  1D03               	skipz
  4849  1610  2E09               	goto	u3475
  4850  1611                     l755:
  4851  1611  30FF               	movlw	255
  4852  1612  052D               	andwf	___xxtofl@arg+3,w
  4853  1613  1D03               	btfss	3,2
  4854  1614  2E16               	goto	u3481
  4855  1615  2E17               	goto	u3480
  4856  1616                     u3481:
  4857  1616  2DF6               	goto	l2509
  4858  1617                     u3480:
  4859  1617  2E23               	goto	l2517
  4860  1618                     l2515:
  4861  1618  3001               	movlw	1
  4862  1619  02A9               	subwf	___xxtofl@exp,f
  4863  161A  3001               	movlw	1
  4864  161B  00A4               	movwf	??___xxtofl
  4865  161C                     u3495:
  4866  161C  1003               	clrc
  4867  161D  0DAA               	rlf	___xxtofl@arg,f
  4868  161E  0DAB               	rlf	___xxtofl@arg+1,f
  4869  161F  0DAC               	rlf	___xxtofl@arg+2,f
  4870  1620  0DAD               	rlf	___xxtofl@arg+3,f
  4871  1621  0BA4               	decfsz	??___xxtofl,f
  4872  1622  2E1C               	goto	u3495
  4873  1623                     l2517:
  4874  1623  1BAC               	btfsc	___xxtofl@arg+2,7
  4875  1624  2E26               	goto	u3501
  4876  1625  2E27               	goto	u3500
  4877  1626                     u3501:
  4878  1626  2E2D               	goto	l762
  4879  1627                     u3500:
  4880  1627                     l2519:
  4881  1627  3002               	movlw	2
  4882  1628  0229               	subwf	___xxtofl@exp,w
  4883  1629  1803               	skipnc
  4884  162A  2E2C               	goto	u3511
  4885  162B  2E2D               	goto	u3510
  4886  162C                     u3511:
  4887  162C  2E18               	goto	l2515
  4888  162D                     u3510:
  4889  162D                     l762:
  4890  162D  1829               	btfsc	___xxtofl@exp,0
  4891  162E  2E30               	goto	u3521
  4892  162F  2E31               	goto	u3520
  4893  1630                     u3521:
  4894  1630  2E39               	goto	l763
  4895  1631                     u3520:
  4896  1631                     l2521:
  4897  1631  30FF               	movlw	255
  4898  1632  05AA               	andwf	___xxtofl@arg,f
  4899  1633  30FF               	movlw	255
  4900  1634  05AB               	andwf	___xxtofl@arg+1,f
  4901  1635  307F               	movlw	127
  4902  1636  05AC               	andwf	___xxtofl@arg+2,f
  4903  1637  30FF               	movlw	255
  4904  1638  05AD               	andwf	___xxtofl@arg+3,f
  4905  1639                     l763:
  4906  1639  1003               	clrc
  4907  163A  0CA9               	rrf	___xxtofl@exp,f
  4908  163B                     l2523:
  4909  163B  0829               	movf	___xxtofl@exp,w
  4910  163C  00A4               	movwf	??___xxtofl
  4911  163D  01A5               	clrf	??___xxtofl+1
  4912  163E  01A6               	clrf	??___xxtofl+2
  4913  163F  01A7               	clrf	??___xxtofl+3
  4914  1640  3018               	movlw	24
  4915  1641                     u3535:
  4916  1641  1003               	clrc
  4917  1642  0DA4               	rlf	??___xxtofl,f
  4918  1643  0DA5               	rlf	??___xxtofl+1,f
  4919  1644  0DA6               	rlf	??___xxtofl+2,f
  4920  1645  0DA7               	rlf	??___xxtofl+3,f
  4921  1646                     u3530:
  4922  1646  3EFF               	addlw	-1
  4923  1647  1D03               	skipz
  4924  1648  2E41               	goto	u3535
  4925  1649  0824               	movf	??___xxtofl,w
  4926  164A  04AA               	iorwf	___xxtofl@arg,f
  4927  164B  0825               	movf	??___xxtofl+1,w
  4928  164C  04AB               	iorwf	___xxtofl@arg+1,f
  4929  164D  0826               	movf	??___xxtofl+2,w
  4930  164E  04AC               	iorwf	___xxtofl@arg+2,f
  4931  164F  0827               	movf	??___xxtofl+3,w
  4932  1650  04AD               	iorwf	___xxtofl@arg+3,f
  4933  1651                     l2525:
  4934  1651  0828               	movf	___xxtofl@sign,w
  4935  1652  1903               	btfsc	3,2
  4936  1653  2E55               	goto	u3541
  4937  1654  2E56               	goto	u3540
  4938  1655                     u3541:
  4939  1655  2E5B               	goto	l2531
  4940  1656                     u3540:
  4941  1656                     l2527:
  4942  1656  1FA3               	btfss	___xxtofl@val+3,7
  4943  1657  2E59               	goto	u3551
  4944  1658  2E5A               	goto	u3550
  4945  1659                     u3551:
  4946  1659  2E5B               	goto	l2531
  4947  165A                     u3550:
  4948  165A                     l2529:
  4949  165A  17AD               	bsf	___xxtofl@arg+3,7
  4950  165B                     l2531:
  4951  165B  082D               	movf	___xxtofl@arg+3,w
  4952  165C  00A3               	movwf	?___xxtofl+3
  4953  165D  082C               	movf	___xxtofl@arg+2,w
  4954  165E  00A2               	movwf	?___xxtofl+2
  4955  165F  082B               	movf	___xxtofl@arg+1,w
  4956  1660  00A1               	movwf	?___xxtofl+1
  4957  1661  082A               	movf	___xxtofl@arg,w
  4958  1662  00A0               	movwf	?___xxtofl
  4959  1663                     l751:
  4960  1663  0008               	return
  4961  1664                     __end_of___xxtofl:
  4962                           
  4963                           	psect	text15
  4964  0022                     __ptext15:	
  4965 ;; *************** function ___flmul *****************
  4966 ;; Defined at:
  4967 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  b               4   14[BANK0 ] unsigned char 
  4970 ;;  a               4   18[BANK0 ] unsigned char 
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;  prod            4   34[BANK0 ] struct .
  4973 ;;  grs             4   29[BANK0 ] unsigned long 
  4974 ;;  temp            2   38[BANK0 ] struct .
  4975 ;;  bexp            1   33[BANK0 ] unsigned char 
  4976 ;;  aexp            1   28[BANK0 ] unsigned char 
  4977 ;;  sign            1   27[BANK0 ] unsigned char 
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  4   14[BANK0 ] unsigned char 
  4980 ;; Registers used:
  4981 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4987 ;;      Params:         0       8       0       0       0
  4988 ;;      Locals:         0      13       0       0       0
  4989 ;;      Temps:          0       5       0       0       0
  4990 ;;      Totals:         0      26       0       0       0
  4991 ;;Total ram usage:       26 bytes
  4992 ;; Hardware stack levels used:    1
  4993 ;; Hardware stack levels required when called:    2
  4994 ;; This function calls:
  4995 ;;		__Umul8_16
  4996 ;; This function is called by:
  4997 ;;		_readMPU
  4998 ;;		_ftoa
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002                           
  5003                           ;psect for function ___flmul
  5004  0022                     ___flmul:
  5005  0022                     l3099:	
  5006                           ;incstack = 0
  5007                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5008                           
  5009  0022  1283               	bcf	3,5	;RP0=0, select bank0
  5010  0023  1303               	bcf	3,6	;RP1=0, select bank0
  5011  0024  0831               	movf	___flmul@b+3,w
  5012  0025  3980               	andlw	128
  5013  0026  00B6               	movwf	??___flmul
  5014  0027  0836               	movf	??___flmul,w
  5015  0028  00BB               	movwf	___flmul@sign
  5016  0029                     l3101:
  5017  0029  0831               	movf	___flmul@b+3,w
  5018  002A  00B6               	movwf	??___flmul
  5019  002B  0736               	addwf	??___flmul,w
  5020  002C  00B7               	movwf	??___flmul+1
  5021  002D  0837               	movf	??___flmul+1,w
  5022  002E  00C1               	movwf	___flmul@bexp
  5023  002F                     l3103:
  5024  002F  1FB0               	btfss	___flmul@b+2,7
  5025  0030  2832               	goto	u4371
  5026  0031  2833               	goto	u4370
  5027  0032                     u4371:
  5028  0032  2834               	goto	l3107
  5029  0033                     u4370:
  5030  0033                     l3105:
  5031  0033  1441               	bsf	___flmul@bexp,0
  5032  0034                     l3107:
  5033  0034  0841               	movf	___flmul@bexp,w
  5034  0035  1903               	btfsc	3,2
  5035  0036  2838               	goto	u4381
  5036  0037  2839               	goto	u4380
  5037  0038                     u4381:
  5038  0038  2848               	goto	l3115
  5039  0039                     u4380:
  5040  0039                     l3109:
  5041  0039  0A41               	incf	___flmul@bexp,w
  5042  003A  1D03               	btfss	3,2
  5043  003B  283D               	goto	u4391
  5044  003C  283E               	goto	u4390
  5045  003D                     u4391:
  5046  003D  2846               	goto	l3113
  5047  003E                     u4390:
  5048  003E                     l3111:
  5049  003E  3000               	movlw	0
  5050  003F  00B1               	movwf	___flmul@b+3
  5051  0040  3000               	movlw	0
  5052  0041  00B0               	movwf	___flmul@b+2
  5053  0042  3000               	movlw	0
  5054  0043  00AF               	movwf	___flmul@b+1
  5055  0044  3000               	movlw	0
  5056  0045  00AE               	movwf	___flmul@b
  5057  0046                     l3113:
  5058  0046  17B0               	bsf	___flmul@b+2,7
  5059  0047  2850               	goto	l3117
  5060  0048                     l3115:
  5061  0048  3000               	movlw	0
  5062  0049  00B1               	movwf	___flmul@b+3
  5063  004A  3000               	movlw	0
  5064  004B  00B0               	movwf	___flmul@b+2
  5065  004C  3000               	movlw	0
  5066  004D  00AF               	movwf	___flmul@b+1
  5067  004E  3000               	movlw	0
  5068  004F  00AE               	movwf	___flmul@b
  5069  0050                     l3117:
  5070  0050  0835               	movf	___flmul@a+3,w
  5071  0051  3980               	andlw	128
  5072  0052  00B6               	movwf	??___flmul
  5073  0053  0836               	movf	??___flmul,w
  5074  0054  06BB               	xorwf	___flmul@sign,f
  5075  0055                     l3119:
  5076  0055  0835               	movf	___flmul@a+3,w
  5077  0056  00B6               	movwf	??___flmul
  5078  0057  0736               	addwf	??___flmul,w
  5079  0058  00B7               	movwf	??___flmul+1
  5080  0059  0837               	movf	??___flmul+1,w
  5081  005A  00BC               	movwf	___flmul@aexp
  5082  005B                     l3121:
  5083  005B  1FB4               	btfss	___flmul@a+2,7
  5084  005C  285E               	goto	u4401
  5085  005D  285F               	goto	u4400
  5086  005E                     u4401:
  5087  005E  2860               	goto	l3125
  5088  005F                     u4400:
  5089  005F                     l3123:
  5090  005F  143C               	bsf	___flmul@aexp,0
  5091  0060                     l3125:
  5092  0060  083C               	movf	___flmul@aexp,w
  5093  0061  1903               	btfsc	3,2
  5094  0062  2864               	goto	u4411
  5095  0063  2865               	goto	u4410
  5096  0064                     u4411:
  5097  0064  2874               	goto	l3133
  5098  0065                     u4410:
  5099  0065                     l3127:
  5100  0065  0A3C               	incf	___flmul@aexp,w
  5101  0066  1D03               	btfss	3,2
  5102  0067  2869               	goto	u4421
  5103  0068  286A               	goto	u4420
  5104  0069                     u4421:
  5105  0069  2872               	goto	l3131
  5106  006A                     u4420:
  5107  006A                     l3129:
  5108  006A  3000               	movlw	0
  5109  006B  00B5               	movwf	___flmul@a+3
  5110  006C  3000               	movlw	0
  5111  006D  00B4               	movwf	___flmul@a+2
  5112  006E  3000               	movlw	0
  5113  006F  00B3               	movwf	___flmul@a+1
  5114  0070  3000               	movlw	0
  5115  0071  00B2               	movwf	___flmul@a
  5116  0072                     l3131:
  5117  0072  17B4               	bsf	___flmul@a+2,7
  5118  0073  287C               	goto	l3135
  5119  0074                     l3133:
  5120  0074  3000               	movlw	0
  5121  0075  00B5               	movwf	___flmul@a+3
  5122  0076  3000               	movlw	0
  5123  0077  00B4               	movwf	___flmul@a+2
  5124  0078  3000               	movlw	0
  5125  0079  00B3               	movwf	___flmul@a+1
  5126  007A  3000               	movlw	0
  5127  007B  00B2               	movwf	___flmul@a
  5128  007C                     l3135:
  5129  007C  083C               	movf	___flmul@aexp,w
  5130  007D  1903               	btfsc	3,2
  5131  007E  2880               	goto	u4431
  5132  007F  2881               	goto	u4430
  5133  0080                     u4431:
  5134  0080  2886               	goto	l3139
  5135  0081                     u4430:
  5136  0081                     l3137:
  5137  0081  0841               	movf	___flmul@bexp,w
  5138  0082  1D03               	btfss	3,2
  5139  0083  2885               	goto	u4441
  5140  0084  2886               	goto	u4440
  5141  0085                     u4441:
  5142  0085  288F               	goto	l3143
  5143  0086                     u4440:
  5144  0086                     l3139:
  5145  0086  3000               	movlw	0
  5146  0087  00B1               	movwf	?___flmul+3
  5147  0088  3000               	movlw	0
  5148  0089  00B0               	movwf	?___flmul+2
  5149  008A  3000               	movlw	0
  5150  008B  00AF               	movwf	?___flmul+1
  5151  008C  3000               	movlw	0
  5152  008D  00AE               	movwf	?___flmul
  5153  008E  2B82               	goto	l705
  5154  008F                     l3143:
  5155  008F  082E               	movf	___flmul@b,w
  5156  0090  00B6               	movwf	??___flmul
  5157  0091  0836               	movf	??___flmul,w
  5158  0092  00A0               	movwf	__Umul8_16@multiplicand
  5159  0093  0834               	movf	___flmul@a+2,w
  5160  0094  160A  118A  22E3  120A  118A  	fcall	__Umul8_16
  5161  0099  1283               	bcf	3,5	;RP0=0, select bank0
  5162  009A  1303               	bcf	3,6	;RP1=0, select bank0
  5163  009B  0821               	movf	?__Umul8_16+1,w
  5164  009C  00C7               	movwf	___flmul@temp+1
  5165  009D  0820               	movf	?__Umul8_16,w
  5166  009E  00C6               	movwf	___flmul@temp
  5167  009F                     l3145:
  5168  009F  0846               	movf	___flmul@temp,w
  5169  00A0  00B6               	movwf	??___flmul
  5170  00A1  01B7               	clrf	??___flmul+1
  5171  00A2  01B8               	clrf	??___flmul+2
  5172  00A3  01B9               	clrf	??___flmul+3
  5173  00A4  0839               	movf	??___flmul+3,w
  5174  00A5  00C0               	movwf	___flmul@grs+3
  5175  00A6  0838               	movf	??___flmul+2,w
  5176  00A7  00BF               	movwf	___flmul@grs+2
  5177  00A8  0837               	movf	??___flmul+1,w
  5178  00A9  00BE               	movwf	___flmul@grs+1
  5179  00AA  0836               	movf	??___flmul,w
  5180  00AB  00BD               	movwf	___flmul@grs
  5181  00AC                     l3147:
  5182  00AC  0847               	movf	___flmul@temp+1,w
  5183  00AD  00B6               	movwf	??___flmul
  5184  00AE  01B7               	clrf	??___flmul+1
  5185  00AF  01B8               	clrf	??___flmul+2
  5186  00B0  01B9               	clrf	??___flmul+3
  5187  00B1  0839               	movf	??___flmul+3,w
  5188  00B2  00C5               	movwf	___flmul@prod+3
  5189  00B3  0838               	movf	??___flmul+2,w
  5190  00B4  00C4               	movwf	___flmul@prod+2
  5191  00B5  0837               	movf	??___flmul+1,w
  5192  00B6  00C3               	movwf	___flmul@prod+1
  5193  00B7  0836               	movf	??___flmul,w
  5194  00B8  00C2               	movwf	___flmul@prod
  5195  00B9  082F               	movf	___flmul@b+1,w
  5196  00BA  00B6               	movwf	??___flmul
  5197  00BB  0836               	movf	??___flmul,w
  5198  00BC  00A0               	movwf	__Umul8_16@multiplicand
  5199  00BD  0833               	movf	___flmul@a+1,w
  5200  00BE  160A  118A  22E3  120A  118A  	fcall	__Umul8_16
  5201  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  5202  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  5203  00C5  0821               	movf	?__Umul8_16+1,w
  5204  00C6  00C7               	movwf	___flmul@temp+1
  5205  00C7  0820               	movf	?__Umul8_16,w
  5206  00C8  00C6               	movwf	___flmul@temp
  5207  00C9                     l3149:
  5208  00C9  0846               	movf	___flmul@temp,w
  5209  00CA  00B6               	movwf	??___flmul
  5210  00CB  01B7               	clrf	??___flmul+1
  5211  00CC  01B8               	clrf	??___flmul+2
  5212  00CD  01B9               	clrf	??___flmul+3
  5213  00CE  0836               	movf	??___flmul,w
  5214  00CF  07BD               	addwf	___flmul@grs,f
  5215  00D0  0837               	movf	??___flmul+1,w
  5216  00D1  1103               	clrz
  5217  00D2  1803               	skipnc
  5218  00D3  3E01               	addlw	1
  5219  00D4  1903               	skipnz
  5220  00D5  28D7               	goto	u4451
  5221  00D6  07BE               	addwf	___flmul@grs+1,f
  5222  00D7                     u4451:
  5223  00D7  0838               	movf	??___flmul+2,w
  5224  00D8  1103               	clrz
  5225  00D9  1803               	skipnc
  5226  00DA  3E01               	addlw	1
  5227  00DB  1903               	skipnz
  5228  00DC  28DE               	goto	u4452
  5229  00DD  07BF               	addwf	___flmul@grs+2,f
  5230  00DE                     u4452:
  5231  00DE  0839               	movf	??___flmul+3,w
  5232  00DF  1103               	clrz
  5233  00E0  1803               	skipnc
  5234  00E1  3E01               	addlw	1
  5235  00E2  1903               	skipnz
  5236  00E3  28E5               	goto	u4453
  5237  00E4  07C0               	addwf	___flmul@grs+3,f
  5238  00E5                     u4453:
  5239  00E5                     l3151:
  5240  00E5  0847               	movf	___flmul@temp+1,w
  5241  00E6  00B6               	movwf	??___flmul
  5242  00E7  01B7               	clrf	??___flmul+1
  5243  00E8  01B8               	clrf	??___flmul+2
  5244  00E9  01B9               	clrf	??___flmul+3
  5245  00EA  0836               	movf	??___flmul,w
  5246  00EB  07C2               	addwf	___flmul@prod,f
  5247  00EC  0837               	movf	??___flmul+1,w
  5248  00ED  1103               	clrz
  5249  00EE  1803               	skipnc
  5250  00EF  3E01               	addlw	1
  5251  00F0  1903               	skipnz
  5252  00F1  28F3               	goto	u4461
  5253  00F2  07C3               	addwf	___flmul@prod+1,f
  5254  00F3                     u4461:
  5255  00F3  0838               	movf	??___flmul+2,w
  5256  00F4  1103               	clrz
  5257  00F5  1803               	skipnc
  5258  00F6  3E01               	addlw	1
  5259  00F7  1903               	skipnz
  5260  00F8  28FA               	goto	u4462
  5261  00F9  07C4               	addwf	___flmul@prod+2,f
  5262  00FA                     u4462:
  5263  00FA  0839               	movf	??___flmul+3,w
  5264  00FB  1103               	clrz
  5265  00FC  1803               	skipnc
  5266  00FD  3E01               	addlw	1
  5267  00FE  1903               	skipnz
  5268  00FF  2901               	goto	u4463
  5269  0100  07C5               	addwf	___flmul@prod+3,f
  5270  0101                     u4463:
  5271  0101  0830               	movf	___flmul@b+2,w
  5272  0102  00B6               	movwf	??___flmul
  5273  0103  0836               	movf	??___flmul,w
  5274  0104  00A0               	movwf	__Umul8_16@multiplicand
  5275  0105  0832               	movf	___flmul@a,w
  5276  0106  160A  118A  22E3  120A  118A  	fcall	__Umul8_16
  5277  010B  1283               	bcf	3,5	;RP0=0, select bank0
  5278  010C  1303               	bcf	3,6	;RP1=0, select bank0
  5279  010D  0821               	movf	?__Umul8_16+1,w
  5280  010E  00C7               	movwf	___flmul@temp+1
  5281  010F  0820               	movf	?__Umul8_16,w
  5282  0110  00C6               	movwf	___flmul@temp
  5283  0111                     l3153:
  5284  0111  0846               	movf	___flmul@temp,w
  5285  0112  00B6               	movwf	??___flmul
  5286  0113  01B7               	clrf	??___flmul+1
  5287  0114  01B8               	clrf	??___flmul+2
  5288  0115  01B9               	clrf	??___flmul+3
  5289  0116  0836               	movf	??___flmul,w
  5290  0117  07BD               	addwf	___flmul@grs,f
  5291  0118  0837               	movf	??___flmul+1,w
  5292  0119  1103               	clrz
  5293  011A  1803               	skipnc
  5294  011B  3E01               	addlw	1
  5295  011C  1903               	skipnz
  5296  011D  291F               	goto	u4471
  5297  011E  07BE               	addwf	___flmul@grs+1,f
  5298  011F                     u4471:
  5299  011F  0838               	movf	??___flmul+2,w
  5300  0120  1103               	clrz
  5301  0121  1803               	skipnc
  5302  0122  3E01               	addlw	1
  5303  0123  1903               	skipnz
  5304  0124  2926               	goto	u4472
  5305  0125  07BF               	addwf	___flmul@grs+2,f
  5306  0126                     u4472:
  5307  0126  0839               	movf	??___flmul+3,w
  5308  0127  1103               	clrz
  5309  0128  1803               	skipnc
  5310  0129  3E01               	addlw	1
  5311  012A  1903               	skipnz
  5312  012B  292D               	goto	u4473
  5313  012C  07C0               	addwf	___flmul@grs+3,f
  5314  012D                     u4473:
  5315  012D                     l3155:
  5316  012D  0847               	movf	___flmul@temp+1,w
  5317  012E  00B6               	movwf	??___flmul
  5318  012F  01B7               	clrf	??___flmul+1
  5319  0130  01B8               	clrf	??___flmul+2
  5320  0131  01B9               	clrf	??___flmul+3
  5321  0132  0836               	movf	??___flmul,w
  5322  0133  07C2               	addwf	___flmul@prod,f
  5323  0134  0837               	movf	??___flmul+1,w
  5324  0135  1103               	clrz
  5325  0136  1803               	skipnc
  5326  0137  3E01               	addlw	1
  5327  0138  1903               	skipnz
  5328  0139  293B               	goto	u4481
  5329  013A  07C3               	addwf	___flmul@prod+1,f
  5330  013B                     u4481:
  5331  013B  0838               	movf	??___flmul+2,w
  5332  013C  1103               	clrz
  5333  013D  1803               	skipnc
  5334  013E  3E01               	addlw	1
  5335  013F  1903               	skipnz
  5336  0140  2942               	goto	u4482
  5337  0141  07C4               	addwf	___flmul@prod+2,f
  5338  0142                     u4482:
  5339  0142  0839               	movf	??___flmul+3,w
  5340  0143  1103               	clrz
  5341  0144  1803               	skipnc
  5342  0145  3E01               	addlw	1
  5343  0146  1903               	skipnz
  5344  0147  2949               	goto	u4483
  5345  0148  07C5               	addwf	___flmul@prod+3,f
  5346  0149                     u4483:
  5347  0149                     l3157:
  5348  0149  3008               	movlw	8
  5349  014A  00B6               	movwf	??___flmul
  5350  014B                     u4495:
  5351  014B  1003               	clrc
  5352  014C  0DBD               	rlf	___flmul@grs,f
  5353  014D  0DBE               	rlf	___flmul@grs+1,f
  5354  014E  0DBF               	rlf	___flmul@grs+2,f
  5355  014F  0DC0               	rlf	___flmul@grs+3,f
  5356  0150  0BB6               	decfsz	??___flmul,f
  5357  0151  294B               	goto	u4495
  5358  0152                     l3159:
  5359  0152  082F               	movf	___flmul@b+1,w
  5360  0153  00B6               	movwf	??___flmul
  5361  0154  0836               	movf	??___flmul,w
  5362  0155  00A0               	movwf	__Umul8_16@multiplicand
  5363  0156  0832               	movf	___flmul@a,w
  5364  0157  160A  118A  22E3  120A  118A  	fcall	__Umul8_16
  5365  015C  1283               	bcf	3,5	;RP0=0, select bank0
  5366  015D  1303               	bcf	3,6	;RP1=0, select bank0
  5367  015E  0821               	movf	?__Umul8_16+1,w
  5368  015F  00C7               	movwf	___flmul@temp+1
  5369  0160  0820               	movf	?__Umul8_16,w
  5370  0161  00C6               	movwf	___flmul@temp
  5371  0162                     l3161:
  5372  0162  0846               	movf	___flmul@temp,w
  5373  0163  00B6               	movwf	??___flmul
  5374  0164  0847               	movf	___flmul@temp+1,w
  5375  0165  00B7               	movwf	??___flmul+1
  5376  0166  01B8               	clrf	??___flmul+2
  5377  0167  01B9               	clrf	??___flmul+3
  5378  0168  0836               	movf	??___flmul,w
  5379  0169  07BD               	addwf	___flmul@grs,f
  5380  016A  0837               	movf	??___flmul+1,w
  5381  016B  1103               	clrz
  5382  016C  1803               	skipnc
  5383  016D  3E01               	addlw	1
  5384  016E  1903               	skipnz
  5385  016F  2971               	goto	u4501
  5386  0170  07BE               	addwf	___flmul@grs+1,f
  5387  0171                     u4501:
  5388  0171  0838               	movf	??___flmul+2,w
  5389  0172  1103               	clrz
  5390  0173  1803               	skipnc
  5391  0174  3E01               	addlw	1
  5392  0175  1903               	skipnz
  5393  0176  2978               	goto	u4502
  5394  0177  07BF               	addwf	___flmul@grs+2,f
  5395  0178                     u4502:
  5396  0178  0839               	movf	??___flmul+3,w
  5397  0179  1103               	clrz
  5398  017A  1803               	skipnc
  5399  017B  3E01               	addlw	1
  5400  017C  1903               	skipnz
  5401  017D  297F               	goto	u4503
  5402  017E  07C0               	addwf	___flmul@grs+3,f
  5403  017F                     u4503:
  5404  017F                     l3163:
  5405  017F  082E               	movf	___flmul@b,w
  5406  0180  00B6               	movwf	??___flmul
  5407  0181  0836               	movf	??___flmul,w
  5408  0182  00A0               	movwf	__Umul8_16@multiplicand
  5409  0183  0833               	movf	___flmul@a+1,w
  5410  0184  160A  118A  22E3  120A  118A  	fcall	__Umul8_16
  5411  0189  1283               	bcf	3,5	;RP0=0, select bank0
  5412  018A  1303               	bcf	3,6	;RP1=0, select bank0
  5413  018B  0821               	movf	?__Umul8_16+1,w
  5414  018C  00C7               	movwf	___flmul@temp+1
  5415  018D  0820               	movf	?__Umul8_16,w
  5416  018E  00C6               	movwf	___flmul@temp
  5417  018F                     l3165:
  5418  018F  0846               	movf	___flmul@temp,w
  5419  0190  00B6               	movwf	??___flmul
  5420  0191  0847               	movf	___flmul@temp+1,w
  5421  0192  00B7               	movwf	??___flmul+1
  5422  0193  01B8               	clrf	??___flmul+2
  5423  0194  01B9               	clrf	??___flmul+3
  5424  0195  0836               	movf	??___flmul,w
  5425  0196  07BD               	addwf	___flmul@grs,f
  5426  0197  0837               	movf	??___flmul+1,w
  5427  0198  1103               	clrz
  5428  0199  1803               	skipnc
  5429  019A  3E01               	addlw	1
  5430  019B  1903               	skipnz
  5431  019C  299E               	goto	u4511
  5432  019D  07BE               	addwf	___flmul@grs+1,f
  5433  019E                     u4511:
  5434  019E  0838               	movf	??___flmul+2,w
  5435  019F  1103               	clrz
  5436  01A0  1803               	skipnc
  5437  01A1  3E01               	addlw	1
  5438  01A2  1903               	skipnz
  5439  01A3  29A5               	goto	u4512
  5440  01A4  07BF               	addwf	___flmul@grs+2,f
  5441  01A5                     u4512:
  5442  01A5  0839               	movf	??___flmul+3,w
  5443  01A6  1103               	clrz
  5444  01A7  1803               	skipnc
  5445  01A8  3E01               	addlw	1
  5446  01A9  1903               	skipnz
  5447  01AA  29AC               	goto	u4513
  5448  01AB  07C0               	addwf	___flmul@grs+3,f
  5449  01AC                     u4513:
  5450  01AC                     l3167:
  5451  01AC  3008               	movlw	8
  5452  01AD  00B6               	movwf	??___flmul
  5453  01AE                     u4525:
  5454  01AE  1003               	clrc
  5455  01AF  0DBD               	rlf	___flmul@grs,f
  5456  01B0  0DBE               	rlf	___flmul@grs+1,f
  5457  01B1  0DBF               	rlf	___flmul@grs+2,f
  5458  01B2  0DC0               	rlf	___flmul@grs+3,f
  5459  01B3  0BB6               	decfsz	??___flmul,f
  5460  01B4  29AE               	goto	u4525
  5461  01B5  082E               	movf	___flmul@b,w
  5462  01B6  00B6               	movwf	??___flmul
  5463  01B7  0836               	movf	??___flmul,w
  5464  01B8  00A0               	movwf	__Umul8_16@multiplicand
  5465  01B9  0832               	movf	___flmul@a,w
  5466  01BA  160A  118A  22E3  120A  118A  	fcall	__Umul8_16
  5467  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  5468  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  5469  01C1  0821               	movf	?__Umul8_16+1,w
  5470  01C2  00C7               	movwf	___flmul@temp+1
  5471  01C3  0820               	movf	?__Umul8_16,w
  5472  01C4  00C6               	movwf	___flmul@temp
  5473  01C5                     l3169:
  5474  01C5  0846               	movf	___flmul@temp,w
  5475  01C6  00B6               	movwf	??___flmul
  5476  01C7  0847               	movf	___flmul@temp+1,w
  5477  01C8  00B7               	movwf	??___flmul+1
  5478  01C9  01B8               	clrf	??___flmul+2
  5479  01CA  01B9               	clrf	??___flmul+3
  5480  01CB  0836               	movf	??___flmul,w
  5481  01CC  07BD               	addwf	___flmul@grs,f
  5482  01CD  0837               	movf	??___flmul+1,w
  5483  01CE  1103               	clrz
  5484  01CF  1803               	skipnc
  5485  01D0  3E01               	addlw	1
  5486  01D1  1903               	skipnz
  5487  01D2  29D4               	goto	u4531
  5488  01D3  07BE               	addwf	___flmul@grs+1,f
  5489  01D4                     u4531:
  5490  01D4  0838               	movf	??___flmul+2,w
  5491  01D5  1103               	clrz
  5492  01D6  1803               	skipnc
  5493  01D7  3E01               	addlw	1
  5494  01D8  1903               	skipnz
  5495  01D9  29DB               	goto	u4532
  5496  01DA  07BF               	addwf	___flmul@grs+2,f
  5497  01DB                     u4532:
  5498  01DB  0839               	movf	??___flmul+3,w
  5499  01DC  1103               	clrz
  5500  01DD  1803               	skipnc
  5501  01DE  3E01               	addlw	1
  5502  01DF  1903               	skipnz
  5503  01E0  29E2               	goto	u4533
  5504  01E1  07C0               	addwf	___flmul@grs+3,f
  5505  01E2                     u4533:
  5506  01E2                     l3171:
  5507  01E2  082F               	movf	___flmul@b+1,w
  5508  01E3  00B6               	movwf	??___flmul
  5509  01E4  0836               	movf	??___flmul,w
  5510  01E5  00A0               	movwf	__Umul8_16@multiplicand
  5511  01E6  0834               	movf	___flmul@a+2,w
  5512  01E7  160A  118A  22E3  120A  118A  	fcall	__Umul8_16
  5513  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  5514  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  5515  01EE  0821               	movf	?__Umul8_16+1,w
  5516  01EF  00C7               	movwf	___flmul@temp+1
  5517  01F0  0820               	movf	?__Umul8_16,w
  5518  01F1  00C6               	movwf	___flmul@temp
  5519  01F2  0846               	movf	___flmul@temp,w
  5520  01F3  00B6               	movwf	??___flmul
  5521  01F4  0847               	movf	___flmul@temp+1,w
  5522  01F5  00B7               	movwf	??___flmul+1
  5523  01F6  01B8               	clrf	??___flmul+2
  5524  01F7  01B9               	clrf	??___flmul+3
  5525  01F8  0836               	movf	??___flmul,w
  5526  01F9  07C2               	addwf	___flmul@prod,f
  5527  01FA  0837               	movf	??___flmul+1,w
  5528  01FB  1103               	clrz
  5529  01FC  1803               	skipnc
  5530  01FD  3E01               	addlw	1
  5531  01FE  1903               	skipnz
  5532  01FF  2A01               	goto	u4541
  5533  0200  07C3               	addwf	___flmul@prod+1,f
  5534  0201                     u4541:
  5535  0201  0838               	movf	??___flmul+2,w
  5536  0202  1103               	clrz
  5537  0203  1803               	skipnc
  5538  0204  3E01               	addlw	1
  5539  0205  1903               	skipnz
  5540  0206  2A08               	goto	u4542
  5541  0207  07C4               	addwf	___flmul@prod+2,f
  5542  0208                     u4542:
  5543  0208  0839               	movf	??___flmul+3,w
  5544  0209  1103               	clrz
  5545  020A  1803               	skipnc
  5546  020B  3E01               	addlw	1
  5547  020C  1903               	skipnz
  5548  020D  2A0F               	goto	u4543
  5549  020E  07C5               	addwf	___flmul@prod+3,f
  5550  020F                     u4543:
  5551  020F                     l3173:
  5552  020F  0830               	movf	___flmul@b+2,w
  5553  0210  00B6               	movwf	??___flmul
  5554  0211  0836               	movf	??___flmul,w
  5555  0212  00A0               	movwf	__Umul8_16@multiplicand
  5556  0213  0833               	movf	___flmul@a+1,w
  5557  0214  160A  118A  22E3  120A  118A  	fcall	__Umul8_16
  5558  0219  1283               	bcf	3,5	;RP0=0, select bank0
  5559  021A  1303               	bcf	3,6	;RP1=0, select bank0
  5560  021B  0821               	movf	?__Umul8_16+1,w
  5561  021C  00C7               	movwf	___flmul@temp+1
  5562  021D  0820               	movf	?__Umul8_16,w
  5563  021E  00C6               	movwf	___flmul@temp
  5564  021F                     l3175:
  5565  021F  0846               	movf	___flmul@temp,w
  5566  0220  00B6               	movwf	??___flmul
  5567  0221  0847               	movf	___flmul@temp+1,w
  5568  0222  00B7               	movwf	??___flmul+1
  5569  0223  01B8               	clrf	??___flmul+2
  5570  0224  01B9               	clrf	??___flmul+3
  5571  0225  0836               	movf	??___flmul,w
  5572  0226  07C2               	addwf	___flmul@prod,f
  5573  0227  0837               	movf	??___flmul+1,w
  5574  0228  1103               	clrz
  5575  0229  1803               	skipnc
  5576  022A  3E01               	addlw	1
  5577  022B  1903               	skipnz
  5578  022C  2A2E               	goto	u4551
  5579  022D  07C3               	addwf	___flmul@prod+1,f
  5580  022E                     u4551:
  5581  022E  0838               	movf	??___flmul+2,w
  5582  022F  1103               	clrz
  5583  0230  1803               	skipnc
  5584  0231  3E01               	addlw	1
  5585  0232  1903               	skipnz
  5586  0233  2A35               	goto	u4552
  5587  0234  07C4               	addwf	___flmul@prod+2,f
  5588  0235                     u4552:
  5589  0235  0839               	movf	??___flmul+3,w
  5590  0236  1103               	clrz
  5591  0237  1803               	skipnc
  5592  0238  3E01               	addlw	1
  5593  0239  1903               	skipnz
  5594  023A  2A3C               	goto	u4553
  5595  023B  07C5               	addwf	___flmul@prod+3,f
  5596  023C                     u4553:
  5597  023C  0830               	movf	___flmul@b+2,w
  5598  023D  00B6               	movwf	??___flmul
  5599  023E  0836               	movf	??___flmul,w
  5600  023F  00A0               	movwf	__Umul8_16@multiplicand
  5601  0240  0834               	movf	___flmul@a+2,w
  5602  0241  160A  118A  22E3  120A  118A  	fcall	__Umul8_16
  5603  0246  1283               	bcf	3,5	;RP0=0, select bank0
  5604  0247  1303               	bcf	3,6	;RP1=0, select bank0
  5605  0248  0821               	movf	?__Umul8_16+1,w
  5606  0249  00C7               	movwf	___flmul@temp+1
  5607  024A  0820               	movf	?__Umul8_16,w
  5608  024B  00C6               	movwf	___flmul@temp
  5609  024C                     l3177:
  5610  024C  0846               	movf	___flmul@temp,w
  5611  024D  00B6               	movwf	??___flmul
  5612  024E  0847               	movf	___flmul@temp+1,w
  5613  024F  00B7               	movwf	??___flmul+1
  5614  0250  01B8               	clrf	??___flmul+2
  5615  0251  01B9               	clrf	??___flmul+3
  5616  0252  3008               	movlw	8
  5617  0253                     u4565:
  5618  0253  1003               	clrc
  5619  0254  0DB6               	rlf	??___flmul,f
  5620  0255  0DB7               	rlf	??___flmul+1,f
  5621  0256  0DB8               	rlf	??___flmul+2,f
  5622  0257  0DB9               	rlf	??___flmul+3,f
  5623  0258                     u4560:
  5624  0258  3EFF               	addlw	-1
  5625  0259  1D03               	skipz
  5626  025A  2A53               	goto	u4565
  5627  025B  0836               	movf	??___flmul,w
  5628  025C  07C2               	addwf	___flmul@prod,f
  5629  025D  0837               	movf	??___flmul+1,w
  5630  025E  1103               	clrz
  5631  025F  1803               	skipnc
  5632  0260  3E01               	addlw	1
  5633  0261  1903               	skipnz
  5634  0262  2A64               	goto	u4571
  5635  0263  07C3               	addwf	___flmul@prod+1,f
  5636  0264                     u4571:
  5637  0264  0838               	movf	??___flmul+2,w
  5638  0265  1103               	clrz
  5639  0266  1803               	skipnc
  5640  0267  3E01               	addlw	1
  5641  0268  1903               	skipnz
  5642  0269  2A6B               	goto	u4572
  5643  026A  07C4               	addwf	___flmul@prod+2,f
  5644  026B                     u4572:
  5645  026B  0839               	movf	??___flmul+3,w
  5646  026C  1103               	clrz
  5647  026D  1803               	skipnc
  5648  026E  3E01               	addlw	1
  5649  026F  1903               	skipnz
  5650  0270  2A72               	goto	u4573
  5651  0271  07C5               	addwf	___flmul@prod+3,f
  5652  0272                     u4573:
  5653  0272                     l3179:
  5654  0272  083D               	movf	___flmul@grs,w
  5655  0273  00B6               	movwf	??___flmul
  5656  0274  083E               	movf	___flmul@grs+1,w
  5657  0275  00B7               	movwf	??___flmul+1
  5658  0276  083F               	movf	___flmul@grs+2,w
  5659  0277  00B8               	movwf	??___flmul+2
  5660  0278  0840               	movf	___flmul@grs+3,w
  5661  0279  00B9               	movwf	??___flmul+3
  5662  027A  3018               	movlw	24
  5663  027B                     u4585:
  5664  027B  1003               	clrc
  5665  027C  0CB9               	rrf	??___flmul+3,f
  5666  027D  0CB8               	rrf	??___flmul+2,f
  5667  027E  0CB7               	rrf	??___flmul+1,f
  5668  027F  0CB6               	rrf	??___flmul,f
  5669  0280                     u4580:
  5670  0280  3EFF               	addlw	-1
  5671  0281  1D03               	skipz
  5672  0282  2A7B               	goto	u4585
  5673  0283  0836               	movf	??___flmul,w
  5674  0284  07C2               	addwf	___flmul@prod,f
  5675  0285  0837               	movf	??___flmul+1,w
  5676  0286  1103               	clrz
  5677  0287  1803               	skipnc
  5678  0288  3E01               	addlw	1
  5679  0289  1903               	skipnz
  5680  028A  2A8C               	goto	u4591
  5681  028B  07C3               	addwf	___flmul@prod+1,f
  5682  028C                     u4591:
  5683  028C  0838               	movf	??___flmul+2,w
  5684  028D  1103               	clrz
  5685  028E  1803               	skipnc
  5686  028F  3E01               	addlw	1
  5687  0290  1903               	skipnz
  5688  0291  2A93               	goto	u4592
  5689  0292  07C4               	addwf	___flmul@prod+2,f
  5690  0293                     u4592:
  5691  0293  0839               	movf	??___flmul+3,w
  5692  0294  1103               	clrz
  5693  0295  1803               	skipnc
  5694  0296  3E01               	addlw	1
  5695  0297  1903               	skipnz
  5696  0298  2A9A               	goto	u4593
  5697  0299  07C5               	addwf	___flmul@prod+3,f
  5698  029A                     u4593:
  5699  029A                     l3181:
  5700  029A  3008               	movlw	8
  5701  029B  00B6               	movwf	??___flmul
  5702  029C                     u4605:
  5703  029C  1003               	clrc
  5704  029D  0DBD               	rlf	___flmul@grs,f
  5705  029E  0DBE               	rlf	___flmul@grs+1,f
  5706  029F  0DBF               	rlf	___flmul@grs+2,f
  5707  02A0  0DC0               	rlf	___flmul@grs+3,f
  5708  02A1  0BB6               	decfsz	??___flmul,f
  5709  02A2  2A9C               	goto	u4605
  5710  02A3                     l3183:
  5711  02A3  0841               	movf	___flmul@bexp,w
  5712  02A4  073C               	addwf	___flmul@aexp,w
  5713  02A5  00B6               	movwf	??___flmul
  5714  02A6  01B7               	clrf	??___flmul+1
  5715  02A7  0DB7               	rlf	??___flmul+1,f
  5716  02A8  0836               	movf	??___flmul,w
  5717  02A9  3E82               	addlw	130
  5718  02AA  00C6               	movwf	___flmul@temp
  5719  02AB  0837               	movf	??___flmul+1,w
  5720  02AC  1803               	skipnc
  5721  02AD  3E01               	addlw	1
  5722  02AE  3EFF               	addlw	255
  5723  02AF  00C7               	movwf	___flmul@temp+1
  5724  02B0  2ACE               	goto	l3195
  5725  02B1                     l3185:
  5726  02B1  3001               	movlw	1
  5727  02B2  00B6               	movwf	??___flmul
  5728  02B3                     u4615:
  5729  02B3  1003               	clrc
  5730  02B4  0DC2               	rlf	___flmul@prod,f
  5731  02B5  0DC3               	rlf	___flmul@prod+1,f
  5732  02B6  0DC4               	rlf	___flmul@prod+2,f
  5733  02B7  0DC5               	rlf	___flmul@prod+3,f
  5734  02B8  0BB6               	decfsz	??___flmul,f
  5735  02B9  2AB3               	goto	u4615
  5736  02BA                     l3187:
  5737  02BA  1FC0               	btfss	___flmul@grs+3,7
  5738  02BB  2ABD               	goto	u4621
  5739  02BC  2ABE               	goto	u4620
  5740  02BD                     u4621:
  5741  02BD  2ABF               	goto	l3191
  5742  02BE                     u4620:
  5743  02BE                     l3189:
  5744  02BE  1442               	bsf	___flmul@prod,0
  5745  02BF                     l3191:
  5746  02BF  3001               	movlw	1
  5747  02C0  00B6               	movwf	??___flmul
  5748  02C1                     u4635:
  5749  02C1  1003               	clrc
  5750  02C2  0DBD               	rlf	___flmul@grs,f
  5751  02C3  0DBE               	rlf	___flmul@grs+1,f
  5752  02C4  0DBF               	rlf	___flmul@grs+2,f
  5753  02C5  0DC0               	rlf	___flmul@grs+3,f
  5754  02C6  0BB6               	decfsz	??___flmul,f
  5755  02C7  2AC1               	goto	u4635
  5756  02C8                     l3193:
  5757  02C8  30FF               	movlw	255
  5758  02C9  07C6               	addwf	___flmul@temp,f
  5759  02CA  1803               	skipnc
  5760  02CB  0AC7               	incf	___flmul@temp+1,f
  5761  02CC  30FF               	movlw	255
  5762  02CD  07C7               	addwf	___flmul@temp+1,f
  5763  02CE                     l3195:
  5764  02CE  1FC4               	btfss	___flmul@prod+2,7
  5765  02CF  2AD1               	goto	u4641
  5766  02D0  2AD2               	goto	u4640
  5767  02D1                     u4641:
  5768  02D1  2AB1               	goto	l3185
  5769  02D2                     u4640:
  5770  02D2                     l3197:
  5771  02D2  01BC               	clrf	___flmul@aexp
  5772  02D3                     l3199:
  5773  02D3  1FC0               	btfss	___flmul@grs+3,7
  5774  02D4  2AD6               	goto	u4651
  5775  02D5  2AD7               	goto	u4650
  5776  02D6                     u4651:
  5777  02D6  2AF3               	goto	l3207
  5778  02D7                     u4650:
  5779  02D7                     l3201:
  5780  02D7  30FF               	movlw	255
  5781  02D8  053D               	andwf	___flmul@grs,w
  5782  02D9  00B6               	movwf	??___flmul
  5783  02DA  30FF               	movlw	255
  5784  02DB  053E               	andwf	___flmul@grs+1,w
  5785  02DC  00B7               	movwf	??___flmul+1
  5786  02DD  30FF               	movlw	255
  5787  02DE  053F               	andwf	___flmul@grs+2,w
  5788  02DF  00B8               	movwf	??___flmul+2
  5789  02E0  307F               	movlw	127
  5790  02E1  0540               	andwf	___flmul@grs+3,w
  5791  02E2  00B9               	movwf	??___flmul+3
  5792  02E3  0839               	movf	??___flmul+3,w
  5793  02E4  0438               	iorwf	??___flmul+2,w
  5794  02E5  0437               	iorwf	??___flmul+1,w
  5795  02E6  0436               	iorwf	??___flmul,w
  5796  02E7  1903               	skipnz
  5797  02E8  2AEA               	goto	u4661
  5798  02E9  2AEB               	goto	u4660
  5799  02EA                     u4661:
  5800  02EA  2AEE               	goto	l711
  5801  02EB                     u4660:
  5802  02EB                     l3203:
  5803  02EB  01BC               	clrf	___flmul@aexp
  5804  02EC  0ABC               	incf	___flmul@aexp,f
  5805  02ED  2AF3               	goto	l3207
  5806  02EE                     l711:
  5807  02EE  1C42               	btfss	___flmul@prod,0
  5808  02EF  2AF1               	goto	u4671
  5809  02F0  2AF2               	goto	u4670
  5810  02F1                     u4671:
  5811  02F1  2AF3               	goto	l3207
  5812  02F2                     u4670:
  5813  02F2  2AEB               	goto	l3203
  5814  02F3                     l3207:
  5815  02F3  083C               	movf	___flmul@aexp,w
  5816  02F4  1903               	btfsc	3,2
  5817  02F5  2AF7               	goto	u4681
  5818  02F6  2AF8               	goto	u4680
  5819  02F7                     u4681:
  5820  02F7  2B29               	goto	l3217
  5821  02F8                     u4680:
  5822  02F8                     l3209:
  5823  02F8  3001               	movlw	1
  5824  02F9  07C2               	addwf	___flmul@prod,f
  5825  02FA  3000               	movlw	0
  5826  02FB  1803               	skipnc
  5827  02FC  3001               	movlw	1
  5828  02FD  07C3               	addwf	___flmul@prod+1,f
  5829  02FE  3000               	movlw	0
  5830  02FF  1803               	skipnc
  5831  0300  3001               	movlw	1
  5832  0301  07C4               	addwf	___flmul@prod+2,f
  5833  0302  3000               	movlw	0
  5834  0303  1803               	skipnc
  5835  0304  3001               	movlw	1
  5836  0305  07C5               	addwf	___flmul@prod+3,f
  5837  0306                     l3211:
  5838  0306  1C45               	btfss	___flmul@prod+3,0
  5839  0307  2B09               	goto	u4691
  5840  0308  2B0A               	goto	u4690
  5841  0309                     u4691:
  5842  0309  2B29               	goto	l3217
  5843  030A                     u4690:
  5844  030A                     l3213:
  5845  030A  0842               	movf	___flmul@prod,w
  5846  030B  00B6               	movwf	??___flmul
  5847  030C  0843               	movf	___flmul@prod+1,w
  5848  030D  00B7               	movwf	??___flmul+1
  5849  030E  0844               	movf	___flmul@prod+2,w
  5850  030F  00B8               	movwf	??___flmul+2
  5851  0310  0845               	movf	___flmul@prod+3,w
  5852  0311  00B9               	movwf	??___flmul+3
  5853  0312  3001               	movlw	1
  5854  0313  00BA               	movwf	??___flmul+4
  5855  0314                     u4705:
  5856  0314  0D39               	rlf	??___flmul+3,w
  5857  0315  0CB9               	rrf	??___flmul+3,f
  5858  0316  0CB8               	rrf	??___flmul+2,f
  5859  0317  0CB7               	rrf	??___flmul+1,f
  5860  0318  0CB6               	rrf	??___flmul,f
  5861  0319                     u4700:
  5862  0319  0BBA               	decfsz	??___flmul+4,f
  5863  031A  2B14               	goto	u4705
  5864  031B  0839               	movf	??___flmul+3,w
  5865  031C  00C5               	movwf	___flmul@prod+3
  5866  031D  0838               	movf	??___flmul+2,w
  5867  031E  00C4               	movwf	___flmul@prod+2
  5868  031F  0837               	movf	??___flmul+1,w
  5869  0320  00C3               	movwf	___flmul@prod+1
  5870  0321  0836               	movf	??___flmul,w
  5871  0322  00C2               	movwf	___flmul@prod
  5872  0323                     l3215:
  5873  0323  3001               	movlw	1
  5874  0324  07C6               	addwf	___flmul@temp,f
  5875  0325  1803               	skipnc
  5876  0326  0AC7               	incf	___flmul@temp+1,f
  5877  0327  3000               	movlw	0
  5878  0328  07C7               	addwf	___flmul@temp+1,f
  5879  0329                     l3217:
  5880  0329  0847               	movf	___flmul@temp+1,w
  5881  032A  3A80               	xorlw	128
  5882  032B  00FF               	movwf	btemp+1
  5883  032C  3080               	movlw	128
  5884  032D  027F               	subwf	btemp+1,w
  5885  032E  1D03               	skipz
  5886  032F  2B32               	goto	u4715
  5887  0330  30FF               	movlw	255
  5888  0331  0246               	subwf	___flmul@temp,w
  5889  0332                     u4715:
  5890  0332  1C03               	skipc
  5891  0333  2B35               	goto	u4711
  5892  0334  2B36               	goto	u4710
  5893  0335                     u4711:
  5894  0335  2B41               	goto	l3221
  5895  0336                     u4710:
  5896  0336                     l3219:
  5897  0336  307F               	movlw	127
  5898  0337  1283               	bcf	3,5	;RP0=0, select bank0
  5899  0338  1303               	bcf	3,6	;RP1=0, select bank0
  5900  0339  00C5               	movwf	___flmul@prod+3
  5901  033A  3080               	movlw	128
  5902  033B  00C4               	movwf	___flmul@prod+2
  5903  033C  3000               	movlw	0
  5904  033D  00C3               	movwf	___flmul@prod+1
  5905  033E  3000               	movlw	0
  5906  033F  00C2               	movwf	___flmul@prod
  5907  0340  2B76               	goto	l717
  5908  0341                     l3221:
  5909  0341  1283               	bcf	3,5	;RP0=0, select bank0
  5910  0342  1303               	bcf	3,6	;RP1=0, select bank0
  5911  0343  0847               	movf	___flmul@temp+1,w
  5912  0344  3A80               	xorlw	128
  5913  0345  00FF               	movwf	btemp+1
  5914  0346  3080               	movlw	128
  5915  0347  027F               	subwf	btemp+1,w
  5916  0348  1D03               	skipz
  5917  0349  2B4C               	goto	u4725
  5918  034A  3001               	movlw	1
  5919  034B  0246               	subwf	___flmul@temp,w
  5920  034C                     u4725:
  5921  034C  1803               	skipnc
  5922  034D  2B4F               	goto	u4721
  5923  034E  2B50               	goto	u4720
  5924  034F                     u4721:
  5925  034F  2B5C               	goto	l3227
  5926  0350                     u4720:
  5927  0350                     l3223:
  5928  0350  3000               	movlw	0
  5929  0351  1283               	bcf	3,5	;RP0=0, select bank0
  5930  0352  1303               	bcf	3,6	;RP1=0, select bank0
  5931  0353  00C5               	movwf	___flmul@prod+3
  5932  0354  3000               	movlw	0
  5933  0355  00C4               	movwf	___flmul@prod+2
  5934  0356  3000               	movlw	0
  5935  0357  00C3               	movwf	___flmul@prod+1
  5936  0358  3000               	movlw	0
  5937  0359  00C2               	movwf	___flmul@prod
  5938  035A                     l3225:
  5939  035A  01BB               	clrf	___flmul@sign
  5940  035B  2B76               	goto	l717
  5941  035C                     l3227:
  5942  035C  1283               	bcf	3,5	;RP0=0, select bank0
  5943  035D  1303               	bcf	3,6	;RP1=0, select bank0
  5944  035E  0846               	movf	___flmul@temp,w
  5945  035F  00B6               	movwf	??___flmul
  5946  0360  0836               	movf	??___flmul,w
  5947  0361  00C1               	movwf	___flmul@bexp
  5948  0362  30FF               	movlw	255
  5949  0363  05C2               	andwf	___flmul@prod,f
  5950  0364  30FF               	movlw	255
  5951  0365  05C3               	andwf	___flmul@prod+1,f
  5952  0366  307F               	movlw	127
  5953  0367  05C4               	andwf	___flmul@prod+2,f
  5954  0368  3000               	movlw	0
  5955  0369  05C5               	andwf	___flmul@prod+3,f
  5956  036A                     l3229:
  5957  036A  1C41               	btfss	___flmul@bexp,0
  5958  036B  2B6D               	goto	u4731
  5959  036C  2B6E               	goto	u4730
  5960  036D                     u4731:
  5961  036D  2B6F               	goto	l3233
  5962  036E                     u4730:
  5963  036E                     l3231:
  5964  036E  17C4               	bsf	___flmul@prod+2,7
  5965  036F                     l3233:
  5966  036F  0841               	movf	___flmul@bexp,w
  5967  0370  00B6               	movwf	??___flmul
  5968  0371  1003               	clrc
  5969  0372  0C36               	rrf	??___flmul,w
  5970  0373  00B7               	movwf	??___flmul+1
  5971  0374  0837               	movf	??___flmul+1,w
  5972  0375  00C5               	movwf	___flmul@prod+3
  5973  0376                     l717:
  5974  0376  083B               	movf	___flmul@sign,w
  5975  0377  00B6               	movwf	??___flmul
  5976  0378  0836               	movf	??___flmul,w
  5977  0379  04C5               	iorwf	___flmul@prod+3,f
  5978  037A                     l3235:
  5979  037A  0845               	movf	___flmul@prod+3,w
  5980  037B  00B1               	movwf	?___flmul+3
  5981  037C  0844               	movf	___flmul@prod+2,w
  5982  037D  00B0               	movwf	?___flmul+2
  5983  037E  0843               	movf	___flmul@prod+1,w
  5984  037F  00AF               	movwf	?___flmul+1
  5985  0380  0842               	movf	___flmul@prod,w
  5986  0381  00AE               	movwf	?___flmul
  5987  0382                     l705:
  5988  0382  0008               	return
  5989  0383                     __end_of___flmul:
  5990                           
  5991                           	psect	text16
  5992  12E3                     __ptext16:	
  5993 ;; *************** function __Umul8_16 *****************
  5994 ;; Defined at:
  5995 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5996 ;; Parameters:    Size  Location     Type
  5997 ;;  multiplier      1    wreg     unsigned char 
  5998 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;  multiplier      1    8[BANK0 ] unsigned char 
  6001 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  6002 ;;  product         2    4[BANK0 ] unsigned int 
  6003 ;; Return value:  Size  Location     Type
  6004 ;;                  2    0[BANK0 ] unsigned int 
  6005 ;; Registers used:
  6006 ;;		wreg, status,2, status,0
  6007 ;; Tracked objects:
  6008 ;;		On entry : 0/0
  6009 ;;		On exit  : 0/0
  6010 ;;		Unchanged: 0/0
  6011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6012 ;;      Params:         0       2       0       0       0
  6013 ;;      Locals:         0       5       0       0       0
  6014 ;;      Temps:          0       2       0       0       0
  6015 ;;      Totals:         0       9       0       0       0
  6016 ;;Total ram usage:        9 bytes
  6017 ;; Hardware stack levels used:    1
  6018 ;; Hardware stack levels required when called:    1
  6019 ;; This function calls:
  6020 ;;		Nothing
  6021 ;; This function is called by:
  6022 ;;		___flmul
  6023 ;; This function uses a non-reentrant model
  6024 ;;
  6025                           
  6026                           
  6027                           ;psect for function __Umul8_16
  6028  12E3                     __Umul8_16:
  6029                           
  6030                           ;incstack = 0
  6031                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6032                           ;__Umul8_16@multiplier stored from wreg
  6033  12E3  1283               	bcf	3,5	;RP0=0, select bank0
  6034  12E4  1303               	bcf	3,6	;RP1=0, select bank0
  6035  12E5  00A8               	movwf	__Umul8_16@multiplier
  6036  12E6                     l3069:
  6037  12E6  01A4               	clrf	__Umul8_16@product
  6038  12E7  01A5               	clrf	__Umul8_16@product+1
  6039  12E8                     l3071:
  6040  12E8  0820               	movf	__Umul8_16@multiplicand,w
  6041  12E9  00A2               	movwf	??__Umul8_16
  6042  12EA  01A3               	clrf	??__Umul8_16+1
  6043  12EB  0822               	movf	??__Umul8_16,w
  6044  12EC  00A6               	movwf	__Umul8_16@word_mpld
  6045  12ED  0823               	movf	??__Umul8_16+1,w
  6046  12EE  00A7               	movwf	__Umul8_16@word_mpld+1
  6047  12EF                     l3073:
  6048  12EF  1C28               	btfss	__Umul8_16@multiplier,0
  6049  12F0  2AF2               	goto	u4311
  6050  12F1  2AF3               	goto	u4310
  6051  12F2                     u4311:
  6052  12F2  2AF9               	goto	l724
  6053  12F3                     u4310:
  6054  12F3                     l3075:
  6055  12F3  0826               	movf	__Umul8_16@word_mpld,w
  6056  12F4  07A4               	addwf	__Umul8_16@product,f
  6057  12F5  1803               	skipnc
  6058  12F6  0AA5               	incf	__Umul8_16@product+1,f
  6059  12F7  0827               	movf	__Umul8_16@word_mpld+1,w
  6060  12F8  07A5               	addwf	__Umul8_16@product+1,f
  6061  12F9                     l724:
  6062  12F9  3001               	movlw	1
  6063  12FA                     u4325:
  6064  12FA  1003               	clrc
  6065  12FB  0DA6               	rlf	__Umul8_16@word_mpld,f
  6066  12FC  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  6067  12FD  3EFF               	addlw	-1
  6068  12FE  1D03               	skipz
  6069  12FF  2AFA               	goto	u4325
  6070  1300  1003               	clrc
  6071  1301  0CA8               	rrf	__Umul8_16@multiplier,f
  6072  1302                     l3077:
  6073  1302  0828               	movf	__Umul8_16@multiplier,w
  6074  1303  1D03               	btfss	3,2
  6075  1304  2B06               	goto	u4331
  6076  1305  2B07               	goto	u4330
  6077  1306                     u4331:
  6078  1306  2AEF               	goto	l3073
  6079  1307                     u4330:
  6080  1307                     l3079:
  6081  1307  0825               	movf	__Umul8_16@product+1,w
  6082  1308  00A1               	movwf	?__Umul8_16+1
  6083  1309  0824               	movf	__Umul8_16@product,w
  6084  130A  00A0               	movwf	?__Umul8_16
  6085  130B                     l726:
  6086  130B  0008               	return
  6087  130C                     __end_of__Umul8_16:
  6088                           
  6089                           	psect	text17
  6090  094F                     __ptext17:	
  6091 ;; *************** function ___fldiv *****************
  6092 ;; Defined at:
  6093 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  a               4   14[BANK0 ] unsigned int 
  6096 ;;  b               4   18[BANK0 ] unsigned int 
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;  grs             4   34[BANK0 ] unsigned long 
  6099 ;;  rem             4   27[BANK0 ] unsigned long 
  6100 ;;  new_exp         2   32[BANK0 ] int 
  6101 ;;  aexp            1   39[BANK0 ] unsigned char 
  6102 ;;  bexp            1   38[BANK0 ] unsigned char 
  6103 ;;  sign            1   31[BANK0 ] unsigned char 
  6104 ;; Return value:  Size  Location     Type
  6105 ;;                  4   14[BANK0 ] unsigned char 
  6106 ;; Registers used:
  6107 ;;		wreg, status,2, status,0, btemp+1
  6108 ;; Tracked objects:
  6109 ;;		On entry : 0/0
  6110 ;;		On exit  : 0/0
  6111 ;;		Unchanged: 0/0
  6112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6113 ;;      Params:         0       8       0       0       0
  6114 ;;      Locals:         0      13       0       0       0
  6115 ;;      Temps:          0       5       0       0       0
  6116 ;;      Totals:         0      26       0       0       0
  6117 ;;Total ram usage:       26 bytes
  6118 ;; Hardware stack levels used:    1
  6119 ;; Hardware stack levels required when called:    1
  6120 ;; This function calls:
  6121 ;;		Nothing
  6122 ;; This function is called by:
  6123 ;;		_readMPU
  6124 ;; This function uses a non-reentrant model
  6125 ;;
  6126                           
  6127                           
  6128                           ;psect for function ___fldiv
  6129  094F                     ___fldiv:
  6130  094F                     l2707:	
  6131                           ;incstack = 0
  6132                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6133                           
  6134  094F  1283               	bcf	3,5	;RP0=0, select bank0
  6135  0950  1303               	bcf	3,6	;RP1=0, select bank0
  6136  0951  0835               	movf	___fldiv@b+3,w
  6137  0952  3980               	andlw	128
  6138  0953  00B6               	movwf	??___fldiv
  6139  0954  0836               	movf	??___fldiv,w
  6140  0955  00BF               	movwf	___fldiv@sign
  6141  0956                     l2709:
  6142  0956  0835               	movf	___fldiv@b+3,w
  6143  0957  00B6               	movwf	??___fldiv
  6144  0958  0736               	addwf	??___fldiv,w
  6145  0959  00B7               	movwf	??___fldiv+1
  6146  095A  0837               	movf	??___fldiv+1,w
  6147  095B  00C6               	movwf	___fldiv@bexp
  6148  095C                     l2711:
  6149  095C  1FB4               	btfss	___fldiv@b+2,7
  6150  095D  295F               	goto	u3831
  6151  095E  2960               	goto	u3830
  6152  095F                     u3831:
  6153  095F  2961               	goto	l2715
  6154  0960                     u3830:
  6155  0960                     l2713:
  6156  0960  1446               	bsf	___fldiv@bexp,0
  6157  0961                     l2715:
  6158  0961  0846               	movf	___fldiv@bexp,w
  6159  0962  1903               	btfsc	3,2
  6160  0963  2965               	goto	u3841
  6161  0964  2966               	goto	u3840
  6162  0965                     u3841:
  6163  0965  2976               	goto	l2725
  6164  0966                     u3840:
  6165  0966                     l2717:
  6166  0966  0A46               	incf	___fldiv@bexp,w
  6167  0967  1D03               	btfss	3,2
  6168  0968  296A               	goto	u3851
  6169  0969  296B               	goto	u3850
  6170  096A                     u3851:
  6171  096A  2973               	goto	l2721
  6172  096B                     u3850:
  6173  096B                     l2719:
  6174  096B  3000               	movlw	0
  6175  096C  00B5               	movwf	___fldiv@b+3
  6176  096D  3000               	movlw	0
  6177  096E  00B4               	movwf	___fldiv@b+2
  6178  096F  3000               	movlw	0
  6179  0970  00B3               	movwf	___fldiv@b+1
  6180  0971  3000               	movlw	0
  6181  0972  00B2               	movwf	___fldiv@b
  6182  0973                     l2721:
  6183  0973  17B4               	bsf	___fldiv@b+2,7
  6184  0974                     l2723:
  6185  0974  01B5               	clrf	___fldiv@b+3
  6186  0975  297E               	goto	l2727
  6187  0976                     l2725:
  6188  0976  3000               	movlw	0
  6189  0977  00B5               	movwf	___fldiv@b+3
  6190  0978  3000               	movlw	0
  6191  0979  00B4               	movwf	___fldiv@b+2
  6192  097A  3000               	movlw	0
  6193  097B  00B3               	movwf	___fldiv@b+1
  6194  097C  3000               	movlw	0
  6195  097D  00B2               	movwf	___fldiv@b
  6196  097E                     l2727:
  6197  097E  0831               	movf	___fldiv@a+3,w
  6198  097F  3980               	andlw	128
  6199  0980  00B6               	movwf	??___fldiv
  6200  0981  0836               	movf	??___fldiv,w
  6201  0982  06BF               	xorwf	___fldiv@sign,f
  6202  0983                     l2729:
  6203  0983  0831               	movf	___fldiv@a+3,w
  6204  0984  00B6               	movwf	??___fldiv
  6205  0985  0736               	addwf	??___fldiv,w
  6206  0986  00B7               	movwf	??___fldiv+1
  6207  0987  0837               	movf	??___fldiv+1,w
  6208  0988  00C7               	movwf	___fldiv@aexp
  6209  0989                     l2731:
  6210  0989  1FB0               	btfss	___fldiv@a+2,7
  6211  098A  298C               	goto	u3861
  6212  098B  298D               	goto	u3860
  6213  098C                     u3861:
  6214  098C  298E               	goto	l2735
  6215  098D                     u3860:
  6216  098D                     l2733:
  6217  098D  1447               	bsf	___fldiv@aexp,0
  6218  098E                     l2735:
  6219  098E  0847               	movf	___fldiv@aexp,w
  6220  098F  1903               	btfsc	3,2
  6221  0990  2992               	goto	u3871
  6222  0991  2993               	goto	u3870
  6223  0992                     u3871:
  6224  0992  29A3               	goto	l2745
  6225  0993                     u3870:
  6226  0993                     l2737:
  6227  0993  0A47               	incf	___fldiv@aexp,w
  6228  0994  1D03               	btfss	3,2
  6229  0995  2997               	goto	u3881
  6230  0996  2998               	goto	u3880
  6231  0997                     u3881:
  6232  0997  29A0               	goto	l2741
  6233  0998                     u3880:
  6234  0998                     l2739:
  6235  0998  3000               	movlw	0
  6236  0999  00B1               	movwf	___fldiv@a+3
  6237  099A  3000               	movlw	0
  6238  099B  00B0               	movwf	___fldiv@a+2
  6239  099C  3000               	movlw	0
  6240  099D  00AF               	movwf	___fldiv@a+1
  6241  099E  3000               	movlw	0
  6242  099F  00AE               	movwf	___fldiv@a
  6243  09A0                     l2741:
  6244  09A0  17B0               	bsf	___fldiv@a+2,7
  6245  09A1                     l2743:
  6246  09A1  01B1               	clrf	___fldiv@a+3
  6247  09A2  29AB               	goto	l665
  6248  09A3                     l2745:
  6249  09A3  3000               	movlw	0
  6250  09A4  00B1               	movwf	___fldiv@a+3
  6251  09A5  3000               	movlw	0
  6252  09A6  00B0               	movwf	___fldiv@a+2
  6253  09A7  3000               	movlw	0
  6254  09A8  00AF               	movwf	___fldiv@a+1
  6255  09A9  3000               	movlw	0
  6256  09AA  00AE               	movwf	___fldiv@a
  6257  09AB                     l665:
  6258  09AB  0831               	movf	___fldiv@a+3,w
  6259  09AC  0430               	iorwf	___fldiv@a+2,w
  6260  09AD  042F               	iorwf	___fldiv@a+1,w
  6261  09AE  042E               	iorwf	___fldiv@a,w
  6262  09AF  1D03               	skipz
  6263  09B0  29B2               	goto	u3891
  6264  09B1  29B3               	goto	u3890
  6265  09B2                     u3891:
  6266  09B2  29CC               	goto	l2755
  6267  09B3                     u3890:
  6268  09B3                     l2747:
  6269  09B3  3000               	movlw	0
  6270  09B4  00B5               	movwf	___fldiv@b+3
  6271  09B5  3000               	movlw	0
  6272  09B6  00B4               	movwf	___fldiv@b+2
  6273  09B7  3000               	movlw	0
  6274  09B8  00B3               	movwf	___fldiv@b+1
  6275  09B9  3000               	movlw	0
  6276  09BA  00B2               	movwf	___fldiv@b
  6277  09BB  3080               	movlw	128
  6278  09BC  04B4               	iorwf	___fldiv@b+2,f
  6279  09BD  307F               	movlw	127
  6280  09BE  04B5               	iorwf	___fldiv@b+3,f
  6281  09BF                     l2749:
  6282  09BF  083F               	movf	___fldiv@sign,w
  6283  09C0  00B6               	movwf	??___fldiv
  6284  09C1  0836               	movf	??___fldiv,w
  6285  09C2  04B5               	iorwf	___fldiv@b+3,f
  6286  09C3                     l2751:
  6287  09C3  0835               	movf	___fldiv@b+3,w
  6288  09C4  00B1               	movwf	?___fldiv+3
  6289  09C5  0834               	movf	___fldiv@b+2,w
  6290  09C6  00B0               	movwf	?___fldiv+2
  6291  09C7  0833               	movf	___fldiv@b+1,w
  6292  09C8  00AF               	movwf	?___fldiv+1
  6293  09C9  0832               	movf	___fldiv@b,w
  6294  09CA  00AE               	movwf	?___fldiv
  6295  09CB  2B2B               	goto	l667
  6296  09CC                     l2755:
  6297  09CC  0846               	movf	___fldiv@bexp,w
  6298  09CD  1D03               	btfss	3,2
  6299  09CE  29D0               	goto	u3901
  6300  09CF  29D1               	goto	u3900
  6301  09D0                     u3901:
  6302  09D0  29DA               	goto	l2761
  6303  09D1                     u3900:
  6304  09D1                     l2757:
  6305  09D1  3000               	movlw	0
  6306  09D2  00B1               	movwf	?___fldiv+3
  6307  09D3  3000               	movlw	0
  6308  09D4  00B0               	movwf	?___fldiv+2
  6309  09D5  3000               	movlw	0
  6310  09D6  00AF               	movwf	?___fldiv+1
  6311  09D7  3000               	movlw	0
  6312  09D8  00AE               	movwf	?___fldiv
  6313  09D9  2B2B               	goto	l667
  6314  09DA                     l2761:
  6315  09DA  0846               	movf	___fldiv@bexp,w
  6316  09DB  00B6               	movwf	??___fldiv
  6317  09DC  01B7               	clrf	??___fldiv+1
  6318  09DD  0837               	movf	??___fldiv+1,w
  6319  09DE  00B9               	movwf	??___fldiv+3
  6320  09DF  0847               	movf	___fldiv@aexp,w
  6321  09E0  0236               	subwf	??___fldiv,w
  6322  09E1  00B8               	movwf	??___fldiv+2
  6323  09E2  1C03               	skipc
  6324  09E3  03B9               	decf	??___fldiv+3,f
  6325  09E4  0838               	movf	??___fldiv+2,w
  6326  09E5  3E7F               	addlw	127
  6327  09E6  00C0               	movwf	___fldiv@new_exp
  6328  09E7  0839               	movf	??___fldiv+3,w
  6329  09E8  1803               	skipnc
  6330  09E9  3E01               	addlw	1
  6331  09EA  3E00               	addlw	0
  6332  09EB  00C1               	movwf	___fldiv@new_exp+1
  6333  09EC                     l2763:
  6334  09EC  0835               	movf	___fldiv@b+3,w
  6335  09ED  00BE               	movwf	___fldiv@rem+3
  6336  09EE  0834               	movf	___fldiv@b+2,w
  6337  09EF  00BD               	movwf	___fldiv@rem+2
  6338  09F0  0833               	movf	___fldiv@b+1,w
  6339  09F1  00BC               	movwf	___fldiv@rem+1
  6340  09F2  0832               	movf	___fldiv@b,w
  6341  09F3  00BB               	movwf	___fldiv@rem
  6342  09F4                     l2765:
  6343  09F4  3000               	movlw	0
  6344  09F5  00B5               	movwf	___fldiv@b+3
  6345  09F6  3000               	movlw	0
  6346  09F7  00B4               	movwf	___fldiv@b+2
  6347  09F8  3000               	movlw	0
  6348  09F9  00B3               	movwf	___fldiv@b+1
  6349  09FA  3000               	movlw	0
  6350  09FB  00B2               	movwf	___fldiv@b
  6351  09FC                     l2767:
  6352  09FC  3000               	movlw	0
  6353  09FD  00C5               	movwf	___fldiv@grs+3
  6354  09FE  3000               	movlw	0
  6355  09FF  00C4               	movwf	___fldiv@grs+2
  6356  0A00  3000               	movlw	0
  6357  0A01  00C3               	movwf	___fldiv@grs+1
  6358  0A02  3000               	movlw	0
  6359  0A03  00C2               	movwf	___fldiv@grs
  6360  0A04                     l2769:
  6361  0A04  01C7               	clrf	___fldiv@aexp
  6362  0A05  2A50               	goto	l2789
  6363  0A06                     l2771:
  6364  0A06  0847               	movf	___fldiv@aexp,w
  6365  0A07  1903               	btfsc	3,2
  6366  0A08  2A0A               	goto	u3911
  6367  0A09  2A0B               	goto	u3910
  6368  0A0A                     u3911:
  6369  0A0A  2A2B               	goto	l2781
  6370  0A0B                     u3910:
  6371  0A0B                     l2773:
  6372  0A0B  3001               	movlw	1
  6373  0A0C  00B6               	movwf	??___fldiv
  6374  0A0D                     u3925:
  6375  0A0D  1003               	clrc
  6376  0A0E  0DBB               	rlf	___fldiv@rem,f
  6377  0A0F  0DBC               	rlf	___fldiv@rem+1,f
  6378  0A10  0DBD               	rlf	___fldiv@rem+2,f
  6379  0A11  0DBE               	rlf	___fldiv@rem+3,f
  6380  0A12  0BB6               	decfsz	??___fldiv,f
  6381  0A13  2A0D               	goto	u3925
  6382  0A14  3001               	movlw	1
  6383  0A15  00B6               	movwf	??___fldiv
  6384  0A16                     u3935:
  6385  0A16  1003               	clrc
  6386  0A17  0DB2               	rlf	___fldiv@b,f
  6387  0A18  0DB3               	rlf	___fldiv@b+1,f
  6388  0A19  0DB4               	rlf	___fldiv@b+2,f
  6389  0A1A  0DB5               	rlf	___fldiv@b+3,f
  6390  0A1B  0BB6               	decfsz	??___fldiv,f
  6391  0A1C  2A16               	goto	u3935
  6392  0A1D                     l2775:
  6393  0A1D  1FC5               	btfss	___fldiv@grs+3,7
  6394  0A1E  2A20               	goto	u3941
  6395  0A1F  2A21               	goto	u3940
  6396  0A20                     u3941:
  6397  0A20  2A22               	goto	l2779
  6398  0A21                     u3940:
  6399  0A21                     l2777:
  6400  0A21  1432               	bsf	___fldiv@b,0
  6401  0A22                     l2779:
  6402  0A22  3001               	movlw	1
  6403  0A23  00B6               	movwf	??___fldiv
  6404  0A24                     u3955:
  6405  0A24  1003               	clrc
  6406  0A25  0DC2               	rlf	___fldiv@grs,f
  6407  0A26  0DC3               	rlf	___fldiv@grs+1,f
  6408  0A27  0DC4               	rlf	___fldiv@grs+2,f
  6409  0A28  0DC5               	rlf	___fldiv@grs+3,f
  6410  0A29  0BB6               	decfsz	??___fldiv,f
  6411  0A2A  2A24               	goto	u3955
  6412  0A2B                     l2781:
  6413  0A2B  0831               	movf	___fldiv@a+3,w
  6414  0A2C  023E               	subwf	___fldiv@rem+3,w
  6415  0A2D  1D03               	skipz
  6416  0A2E  2A39               	goto	u3965
  6417  0A2F  0830               	movf	___fldiv@a+2,w
  6418  0A30  023D               	subwf	___fldiv@rem+2,w
  6419  0A31  1D03               	skipz
  6420  0A32  2A39               	goto	u3965
  6421  0A33  082F               	movf	___fldiv@a+1,w
  6422  0A34  023C               	subwf	___fldiv@rem+1,w
  6423  0A35  1D03               	skipz
  6424  0A36  2A39               	goto	u3965
  6425  0A37  082E               	movf	___fldiv@a,w
  6426  0A38  023B               	subwf	___fldiv@rem,w
  6427  0A39                     u3965:
  6428  0A39  1C03               	skipc
  6429  0A3A  2A3C               	goto	u3961
  6430  0A3B  2A3D               	goto	u3960
  6431  0A3C                     u3961:
  6432  0A3C  2A4C               	goto	l2787
  6433  0A3D                     u3960:
  6434  0A3D                     l2783:
  6435  0A3D  1745               	bsf	___fldiv@grs+3,6
  6436  0A3E                     l2785:
  6437  0A3E  082E               	movf	___fldiv@a,w
  6438  0A3F  02BB               	subwf	___fldiv@rem,f
  6439  0A40  082F               	movf	___fldiv@a+1,w
  6440  0A41  1C03               	skipc
  6441  0A42  0F2F               	incfsz	___fldiv@a+1,w
  6442  0A43  02BC               	subwf	___fldiv@rem+1,f
  6443  0A44  0830               	movf	___fldiv@a+2,w
  6444  0A45  1C03               	skipc
  6445  0A46  0F30               	incfsz	___fldiv@a+2,w
  6446  0A47  02BD               	subwf	___fldiv@rem+2,f
  6447  0A48  0831               	movf	___fldiv@a+3,w
  6448  0A49  1C03               	skipc
  6449  0A4A  0F31               	incfsz	___fldiv@a+3,w
  6450  0A4B  02BE               	subwf	___fldiv@rem+3,f
  6451  0A4C                     l2787:
  6452  0A4C  3001               	movlw	1
  6453  0A4D  00B6               	movwf	??___fldiv
  6454  0A4E  0836               	movf	??___fldiv,w
  6455  0A4F  07C7               	addwf	___fldiv@aexp,f
  6456  0A50                     l2789:
  6457  0A50  301A               	movlw	26
  6458  0A51  0247               	subwf	___fldiv@aexp,w
  6459  0A52  1C03               	skipc
  6460  0A53  2A55               	goto	u3971
  6461  0A54  2A56               	goto	u3970
  6462  0A55                     u3971:
  6463  0A55  2A06               	goto	l2771
  6464  0A56                     u3970:
  6465  0A56                     l2791:
  6466  0A56  083E               	movf	___fldiv@rem+3,w
  6467  0A57  043D               	iorwf	___fldiv@rem+2,w
  6468  0A58  043C               	iorwf	___fldiv@rem+1,w
  6469  0A59  043B               	iorwf	___fldiv@rem,w
  6470  0A5A  1903               	skipnz
  6471  0A5B  2A5D               	goto	u3981
  6472  0A5C  2A5E               	goto	u3980
  6473  0A5D                     u3981:
  6474  0A5D  2A7D               	goto	l2805
  6475  0A5E                     u3980:
  6476  0A5E                     l2793:
  6477  0A5E  1442               	bsf	___fldiv@grs,0
  6478  0A5F  2A7D               	goto	l2805
  6479  0A60                     l2795:
  6480  0A60  3001               	movlw	1
  6481  0A61  00B6               	movwf	??___fldiv
  6482  0A62                     u3995:
  6483  0A62  1003               	clrc
  6484  0A63  0DB2               	rlf	___fldiv@b,f
  6485  0A64  0DB3               	rlf	___fldiv@b+1,f
  6486  0A65  0DB4               	rlf	___fldiv@b+2,f
  6487  0A66  0DB5               	rlf	___fldiv@b+3,f
  6488  0A67  0BB6               	decfsz	??___fldiv,f
  6489  0A68  2A62               	goto	u3995
  6490  0A69                     l2797:
  6491  0A69  1FC5               	btfss	___fldiv@grs+3,7
  6492  0A6A  2A6C               	goto	u4001
  6493  0A6B  2A6D               	goto	u4000
  6494  0A6C                     u4001:
  6495  0A6C  2A6E               	goto	l2801
  6496  0A6D                     u4000:
  6497  0A6D                     l2799:
  6498  0A6D  1432               	bsf	___fldiv@b,0
  6499  0A6E                     l2801:
  6500  0A6E  3001               	movlw	1
  6501  0A6F  00B6               	movwf	??___fldiv
  6502  0A70                     u4015:
  6503  0A70  1003               	clrc
  6504  0A71  0DC2               	rlf	___fldiv@grs,f
  6505  0A72  0DC3               	rlf	___fldiv@grs+1,f
  6506  0A73  0DC4               	rlf	___fldiv@grs+2,f
  6507  0A74  0DC5               	rlf	___fldiv@grs+3,f
  6508  0A75  0BB6               	decfsz	??___fldiv,f
  6509  0A76  2A70               	goto	u4015
  6510  0A77                     l2803:
  6511  0A77  30FF               	movlw	255
  6512  0A78  07C0               	addwf	___fldiv@new_exp,f
  6513  0A79  1803               	skipnc
  6514  0A7A  0AC1               	incf	___fldiv@new_exp+1,f
  6515  0A7B  30FF               	movlw	255
  6516  0A7C  07C1               	addwf	___fldiv@new_exp+1,f
  6517  0A7D                     l2805:
  6518  0A7D  1FB4               	btfss	___fldiv@b+2,7
  6519  0A7E  2A80               	goto	u4021
  6520  0A7F  2A81               	goto	u4020
  6521  0A80                     u4021:
  6522  0A80  2A60               	goto	l2795
  6523  0A81                     u4020:
  6524  0A81                     l2807:
  6525  0A81  01C7               	clrf	___fldiv@aexp
  6526  0A82                     l2809:
  6527  0A82  1FC5               	btfss	___fldiv@grs+3,7
  6528  0A83  2A85               	goto	u4031
  6529  0A84  2A86               	goto	u4030
  6530  0A85                     u4031:
  6531  0A85  2AA2               	goto	l2817
  6532  0A86                     u4030:
  6533  0A86                     l2811:
  6534  0A86  30FF               	movlw	255
  6535  0A87  0542               	andwf	___fldiv@grs,w
  6536  0A88  00B6               	movwf	??___fldiv
  6537  0A89  30FF               	movlw	255
  6538  0A8A  0543               	andwf	___fldiv@grs+1,w
  6539  0A8B  00B7               	movwf	??___fldiv+1
  6540  0A8C  30FF               	movlw	255
  6541  0A8D  0544               	andwf	___fldiv@grs+2,w
  6542  0A8E  00B8               	movwf	??___fldiv+2
  6543  0A8F  307F               	movlw	127
  6544  0A90  0545               	andwf	___fldiv@grs+3,w
  6545  0A91  00B9               	movwf	??___fldiv+3
  6546  0A92  0839               	movf	??___fldiv+3,w
  6547  0A93  0438               	iorwf	??___fldiv+2,w
  6548  0A94  0437               	iorwf	??___fldiv+1,w
  6549  0A95  0436               	iorwf	??___fldiv,w
  6550  0A96  1903               	skipnz
  6551  0A97  2A99               	goto	u4041
  6552  0A98  2A9A               	goto	u4040
  6553  0A99                     u4041:
  6554  0A99  2A9D               	goto	l681
  6555  0A9A                     u4040:
  6556  0A9A                     l2813:
  6557  0A9A  01C7               	clrf	___fldiv@aexp
  6558  0A9B  0AC7               	incf	___fldiv@aexp,f
  6559  0A9C  2AA2               	goto	l2817
  6560  0A9D                     l681:
  6561  0A9D  1C32               	btfss	___fldiv@b,0
  6562  0A9E  2AA0               	goto	u4051
  6563  0A9F  2AA1               	goto	u4050
  6564  0AA0                     u4051:
  6565  0AA0  2AA2               	goto	l2817
  6566  0AA1                     u4050:
  6567  0AA1  2A9A               	goto	l2813
  6568  0AA2                     l2817:
  6569  0AA2  0847               	movf	___fldiv@aexp,w
  6570  0AA3  1903               	btfsc	3,2
  6571  0AA4  2AA6               	goto	u4061
  6572  0AA5  2AA7               	goto	u4060
  6573  0AA6                     u4061:
  6574  0AA6  2AD8               	goto	l2827
  6575  0AA7                     u4060:
  6576  0AA7                     l2819:
  6577  0AA7  3001               	movlw	1
  6578  0AA8  07B2               	addwf	___fldiv@b,f
  6579  0AA9  3000               	movlw	0
  6580  0AAA  1803               	skipnc
  6581  0AAB  3001               	movlw	1
  6582  0AAC  07B3               	addwf	___fldiv@b+1,f
  6583  0AAD  3000               	movlw	0
  6584  0AAE  1803               	skipnc
  6585  0AAF  3001               	movlw	1
  6586  0AB0  07B4               	addwf	___fldiv@b+2,f
  6587  0AB1  3000               	movlw	0
  6588  0AB2  1803               	skipnc
  6589  0AB3  3001               	movlw	1
  6590  0AB4  07B5               	addwf	___fldiv@b+3,f
  6591  0AB5                     l2821:
  6592  0AB5  1C35               	btfss	___fldiv@b+3,0
  6593  0AB6  2AB8               	goto	u4071
  6594  0AB7  2AB9               	goto	u4070
  6595  0AB8                     u4071:
  6596  0AB8  2AD8               	goto	l2827
  6597  0AB9                     u4070:
  6598  0AB9                     l2823:
  6599  0AB9  0832               	movf	___fldiv@b,w
  6600  0ABA  00B6               	movwf	??___fldiv
  6601  0ABB  0833               	movf	___fldiv@b+1,w
  6602  0ABC  00B7               	movwf	??___fldiv+1
  6603  0ABD  0834               	movf	___fldiv@b+2,w
  6604  0ABE  00B8               	movwf	??___fldiv+2
  6605  0ABF  0835               	movf	___fldiv@b+3,w
  6606  0AC0  00B9               	movwf	??___fldiv+3
  6607  0AC1  3001               	movlw	1
  6608  0AC2  00BA               	movwf	??___fldiv+4
  6609  0AC3                     u4085:
  6610  0AC3  0D39               	rlf	??___fldiv+3,w
  6611  0AC4  0CB9               	rrf	??___fldiv+3,f
  6612  0AC5  0CB8               	rrf	??___fldiv+2,f
  6613  0AC6  0CB7               	rrf	??___fldiv+1,f
  6614  0AC7  0CB6               	rrf	??___fldiv,f
  6615  0AC8                     u4080:
  6616  0AC8  0BBA               	decfsz	??___fldiv+4,f
  6617  0AC9  2AC3               	goto	u4085
  6618  0ACA  0839               	movf	??___fldiv+3,w
  6619  0ACB  00B5               	movwf	___fldiv@b+3
  6620  0ACC  0838               	movf	??___fldiv+2,w
  6621  0ACD  00B4               	movwf	___fldiv@b+2
  6622  0ACE  0837               	movf	??___fldiv+1,w
  6623  0ACF  00B3               	movwf	___fldiv@b+1
  6624  0AD0  0836               	movf	??___fldiv,w
  6625  0AD1  00B2               	movwf	___fldiv@b
  6626  0AD2                     l2825:
  6627  0AD2  3001               	movlw	1
  6628  0AD3  07C0               	addwf	___fldiv@new_exp,f
  6629  0AD4  1803               	skipnc
  6630  0AD5  0AC1               	incf	___fldiv@new_exp+1,f
  6631  0AD6  3000               	movlw	0
  6632  0AD7  07C1               	addwf	___fldiv@new_exp+1,f
  6633  0AD8                     l2827:
  6634  0AD8  0841               	movf	___fldiv@new_exp+1,w
  6635  0AD9  3A80               	xorlw	128
  6636  0ADA  00FF               	movwf	btemp+1
  6637  0ADB  3080               	movlw	128
  6638  0ADC  027F               	subwf	btemp+1,w
  6639  0ADD  1D03               	skipz
  6640  0ADE  2AE1               	goto	u4095
  6641  0ADF  30FF               	movlw	255
  6642  0AE0  0240               	subwf	___fldiv@new_exp,w
  6643  0AE1                     u4095:
  6644  0AE1  1C03               	skipc
  6645  0AE2  2AE4               	goto	u4091
  6646  0AE3  2AE5               	goto	u4090
  6647  0AE4                     u4091:
  6648  0AE4  2AF3               	goto	l2831
  6649  0AE5                     u4090:
  6650  0AE5                     l2829:
  6651  0AE5  30FF               	movlw	255
  6652  0AE6  1283               	bcf	3,5	;RP0=0, select bank0
  6653  0AE7  1303               	bcf	3,6	;RP1=0, select bank0
  6654  0AE8  00C0               	movwf	___fldiv@new_exp
  6655  0AE9  3000               	movlw	0
  6656  0AEA  00C1               	movwf	___fldiv@new_exp+1
  6657  0AEB  3000               	movlw	0
  6658  0AEC  00B5               	movwf	___fldiv@b+3
  6659  0AED  3000               	movlw	0
  6660  0AEE  00B4               	movwf	___fldiv@b+2
  6661  0AEF  3000               	movlw	0
  6662  0AF0  00B3               	movwf	___fldiv@b+1
  6663  0AF1  3000               	movlw	0
  6664  0AF2  00B2               	movwf	___fldiv@b
  6665  0AF3                     l2831:
  6666  0AF3  1283               	bcf	3,5	;RP0=0, select bank0
  6667  0AF4  1303               	bcf	3,6	;RP1=0, select bank0
  6668  0AF5  0841               	movf	___fldiv@new_exp+1,w
  6669  0AF6  3A80               	xorlw	128
  6670  0AF7  00FF               	movwf	btemp+1
  6671  0AF8  3080               	movlw	128
  6672  0AF9  027F               	subwf	btemp+1,w
  6673  0AFA  1D03               	skipz
  6674  0AFB  2AFE               	goto	u4105
  6675  0AFC  3001               	movlw	1
  6676  0AFD  0240               	subwf	___fldiv@new_exp,w
  6677  0AFE                     u4105:
  6678  0AFE  1803               	skipnc
  6679  0AFF  2B01               	goto	u4101
  6680  0B00  2B02               	goto	u4100
  6681  0B01                     u4101:
  6682  0B01  2B0F               	goto	l687
  6683  0B02                     u4100:
  6684  0B02                     l2833:
  6685  0B02  1283               	bcf	3,5	;RP0=0, select bank0
  6686  0B03  1303               	bcf	3,6	;RP1=0, select bank0
  6687  0B04  01C0               	clrf	___fldiv@new_exp
  6688  0B05  01C1               	clrf	___fldiv@new_exp+1
  6689  0B06                     l2835:
  6690  0B06  3000               	movlw	0
  6691  0B07  00B5               	movwf	___fldiv@b+3
  6692  0B08  3000               	movlw	0
  6693  0B09  00B4               	movwf	___fldiv@b+2
  6694  0B0A  3000               	movlw	0
  6695  0B0B  00B3               	movwf	___fldiv@b+1
  6696  0B0C  3000               	movlw	0
  6697  0B0D  00B2               	movwf	___fldiv@b
  6698  0B0E                     l2837:
  6699  0B0E  01BF               	clrf	___fldiv@sign
  6700  0B0F                     l687:
  6701  0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  6702  0B10  1303               	bcf	3,6	;RP1=0, select bank0
  6703  0B11  0840               	movf	___fldiv@new_exp,w
  6704  0B12  00B6               	movwf	??___fldiv
  6705  0B13  0836               	movf	??___fldiv,w
  6706  0B14  00C6               	movwf	___fldiv@bexp
  6707  0B15                     l2839:
  6708  0B15  1C46               	btfss	___fldiv@bexp,0
  6709  0B16  2B18               	goto	u4111
  6710  0B17  2B19               	goto	u4110
  6711  0B18                     u4111:
  6712  0B18  2B1B               	goto	l2843
  6713  0B19                     u4110:
  6714  0B19                     l2841:
  6715  0B19  17B4               	bsf	___fldiv@b+2,7
  6716  0B1A  2B1F               	goto	l689
  6717  0B1B                     l2843:
  6718  0B1B  307F               	movlw	127
  6719  0B1C  00B6               	movwf	??___fldiv
  6720  0B1D  0836               	movf	??___fldiv,w
  6721  0B1E  05B4               	andwf	___fldiv@b+2,f
  6722  0B1F                     l689:
  6723  0B1F  0846               	movf	___fldiv@bexp,w
  6724  0B20  00B6               	movwf	??___fldiv
  6725  0B21  1003               	clrc
  6726  0B22  0C36               	rrf	??___fldiv,w
  6727  0B23  00B7               	movwf	??___fldiv+1
  6728  0B24  0837               	movf	??___fldiv+1,w
  6729  0B25  00B5               	movwf	___fldiv@b+3
  6730  0B26  083F               	movf	___fldiv@sign,w
  6731  0B27  00B6               	movwf	??___fldiv
  6732  0B28  0836               	movf	??___fldiv,w
  6733  0B29  04B5               	iorwf	___fldiv@b+3,f
  6734  0B2A  29C3               	goto	l2751
  6735  0B2B                     l667:
  6736  0B2B  0008               	return
  6737  0B2C                     __end_of___fldiv:
  6738                           
  6739                           	psect	text18
  6740  0D78                     __ptext18:	
  6741 ;; *************** function ___fladd *****************
  6742 ;; Defined at:
  6743 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6744 ;; Parameters:    Size  Location     Type
  6745 ;;  b               4   40[BANK0 ] unsigned char 
  6746 ;;  a               4   44[BANK0 ] unsigned char 
  6747 ;; Auto vars:     Size  Location     Type
  6748 ;;  grs             1   59[BANK0 ] unsigned char 
  6749 ;;  bexp            1   58[BANK0 ] unsigned char 
  6750 ;;  aexp            1   57[BANK0 ] unsigned char 
  6751 ;;  signs           1   56[BANK0 ] unsigned char 
  6752 ;; Return value:  Size  Location     Type
  6753 ;;                  4   40[BANK0 ] unsigned char 
  6754 ;; Registers used:
  6755 ;;		wreg, status,2, status,0, btemp+1
  6756 ;; Tracked objects:
  6757 ;;		On entry : 0/0
  6758 ;;		On exit  : 0/0
  6759 ;;		Unchanged: 0/0
  6760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6761 ;;      Params:         0       8       0       0       0
  6762 ;;      Locals:         0       4       0       0       0
  6763 ;;      Temps:          0       8       0       0       0
  6764 ;;      Totals:         0      20       0       0       0
  6765 ;;Total ram usage:       20 bytes
  6766 ;; Hardware stack levels used:    1
  6767 ;; Hardware stack levels required when called:    1
  6768 ;; This function calls:
  6769 ;;		Nothing
  6770 ;; This function is called by:
  6771 ;;		_readMPU
  6772 ;;		___flsub
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           
  6777                           ;psect for function ___fladd
  6778  0D78                     ___fladd:
  6779  0D78                     l2049:	
  6780                           ;incstack = 0
  6781                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6782                           
  6783  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  6784  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  6785  0D7A  084B               	movf	___fladd@b+3,w
  6786  0D7B  3980               	andlw	128
  6787  0D7C  00D0               	movwf	??___fladd
  6788  0D7D  0850               	movf	??___fladd,w
  6789  0D7E  00D8               	movwf	___fladd@signs
  6790  0D7F                     l2051:
  6791  0D7F  084B               	movf	___fladd@b+3,w
  6792  0D80  00D0               	movwf	??___fladd
  6793  0D81  0750               	addwf	??___fladd,w
  6794  0D82  00D1               	movwf	??___fladd+1
  6795  0D83  0851               	movf	??___fladd+1,w
  6796  0D84  00DA               	movwf	___fladd@bexp
  6797  0D85                     l2053:
  6798  0D85  1FCA               	btfss	___fladd@b+2,7
  6799  0D86  2D88               	goto	u2321
  6800  0D87  2D89               	goto	u2320
  6801  0D88                     u2321:
  6802  0D88  2D8A               	goto	l2057
  6803  0D89                     u2320:
  6804  0D89                     l2055:
  6805  0D89  145A               	bsf	___fladd@bexp,0
  6806  0D8A                     l2057:
  6807  0D8A  085A               	movf	___fladd@bexp,w
  6808  0D8B  1903               	btfsc	3,2
  6809  0D8C  2D8E               	goto	u2331
  6810  0D8D  2D8F               	goto	u2330
  6811  0D8E                     u2331:
  6812  0D8E  2D9F               	goto	l2067
  6813  0D8F                     u2330:
  6814  0D8F                     l2059:
  6815  0D8F  0A5A               	incf	___fladd@bexp,w
  6816  0D90  1D03               	btfss	3,2
  6817  0D91  2D93               	goto	u2341
  6818  0D92  2D94               	goto	u2340
  6819  0D93                     u2341:
  6820  0D93  2D9C               	goto	l2063
  6821  0D94                     u2340:
  6822  0D94                     l2061:
  6823  0D94  3000               	movlw	0
  6824  0D95  00CB               	movwf	___fladd@b+3
  6825  0D96  3000               	movlw	0
  6826  0D97  00CA               	movwf	___fladd@b+2
  6827  0D98  3000               	movlw	0
  6828  0D99  00C9               	movwf	___fladd@b+1
  6829  0D9A  3000               	movlw	0
  6830  0D9B  00C8               	movwf	___fladd@b
  6831  0D9C                     l2063:
  6832  0D9C  17CA               	bsf	___fladd@b+2,7
  6833  0D9D                     l2065:
  6834  0D9D  01CB               	clrf	___fladd@b+3
  6835  0D9E  2DA7               	goto	l2069
  6836  0D9F                     l2067:
  6837  0D9F  3000               	movlw	0
  6838  0DA0  00CB               	movwf	___fladd@b+3
  6839  0DA1  3000               	movlw	0
  6840  0DA2  00CA               	movwf	___fladd@b+2
  6841  0DA3  3000               	movlw	0
  6842  0DA4  00C9               	movwf	___fladd@b+1
  6843  0DA5  3000               	movlw	0
  6844  0DA6  00C8               	movwf	___fladd@b
  6845  0DA7                     l2069:
  6846  0DA7  084F               	movf	___fladd@a+3,w
  6847  0DA8  3980               	andlw	128
  6848  0DA9  00D0               	movwf	??___fladd
  6849  0DAA  0850               	movf	??___fladd,w
  6850  0DAB  00D9               	movwf	___fladd@aexp
  6851  0DAC                     l2071:
  6852  0DAC  0859               	movf	___fladd@aexp,w
  6853  0DAD  0658               	xorwf	___fladd@signs,w
  6854  0DAE  1903               	skipnz
  6855  0DAF  2DB1               	goto	u2351
  6856  0DB0  2DB2               	goto	u2350
  6857  0DB1                     u2351:
  6858  0DB1  2DB3               	goto	l2075
  6859  0DB2                     u2350:
  6860  0DB2                     l2073:
  6861  0DB2  1758               	bsf	___fladd@signs,6
  6862  0DB3                     l2075:
  6863  0DB3  084F               	movf	___fladd@a+3,w
  6864  0DB4  00D0               	movwf	??___fladd
  6865  0DB5  0750               	addwf	??___fladd,w
  6866  0DB6  00D1               	movwf	??___fladd+1
  6867  0DB7  0851               	movf	??___fladd+1,w
  6868  0DB8  00D9               	movwf	___fladd@aexp
  6869  0DB9                     l2077:
  6870  0DB9  1FCE               	btfss	___fladd@a+2,7
  6871  0DBA  2DBC               	goto	u2361
  6872  0DBB  2DBD               	goto	u2360
  6873  0DBC                     u2361:
  6874  0DBC  2DBE               	goto	l2081
  6875  0DBD                     u2360:
  6876  0DBD                     l2079:
  6877  0DBD  1459               	bsf	___fladd@aexp,0
  6878  0DBE                     l2081:
  6879  0DBE  0859               	movf	___fladd@aexp,w
  6880  0DBF  1903               	btfsc	3,2
  6881  0DC0  2DC2               	goto	u2371
  6882  0DC1  2DC3               	goto	u2370
  6883  0DC2                     u2371:
  6884  0DC2  2DD3               	goto	l2091
  6885  0DC3                     u2370:
  6886  0DC3                     l2083:
  6887  0DC3  0A59               	incf	___fladd@aexp,w
  6888  0DC4  1D03               	btfss	3,2
  6889  0DC5  2DC7               	goto	u2381
  6890  0DC6  2DC8               	goto	u2380
  6891  0DC7                     u2381:
  6892  0DC7  2DD0               	goto	l2087
  6893  0DC8                     u2380:
  6894  0DC8                     l2085:
  6895  0DC8  3000               	movlw	0
  6896  0DC9  00CF               	movwf	___fladd@a+3
  6897  0DCA  3000               	movlw	0
  6898  0DCB  00CE               	movwf	___fladd@a+2
  6899  0DCC  3000               	movlw	0
  6900  0DCD  00CD               	movwf	___fladd@a+1
  6901  0DCE  3000               	movlw	0
  6902  0DCF  00CC               	movwf	___fladd@a
  6903  0DD0                     l2087:
  6904  0DD0  17CE               	bsf	___fladd@a+2,7
  6905  0DD1                     l2089:
  6906  0DD1  01CF               	clrf	___fladd@a+3
  6907  0DD2  2DDB               	goto	l609
  6908  0DD3                     l2091:
  6909  0DD3  3000               	movlw	0
  6910  0DD4  00CF               	movwf	___fladd@a+3
  6911  0DD5  3000               	movlw	0
  6912  0DD6  00CE               	movwf	___fladd@a+2
  6913  0DD7  3000               	movlw	0
  6914  0DD8  00CD               	movwf	___fladd@a+1
  6915  0DD9  3000               	movlw	0
  6916  0DDA  00CC               	movwf	___fladd@a
  6917  0DDB                     l609:
  6918  0DDB  085A               	movf	___fladd@bexp,w
  6919  0DDC  0259               	subwf	___fladd@aexp,w
  6920  0DDD  1803               	skipnc
  6921  0DDE  2DE0               	goto	u2391
  6922  0DDF  2DE1               	goto	u2390
  6923  0DE0                     u2391:
  6924  0DE0  2E25               	goto	l2127
  6925  0DE1                     u2390:
  6926  0DE1                     l2093:
  6927  0DE1  1F58               	btfss	___fladd@signs,6
  6928  0DE2  2DE4               	goto	u2401
  6929  0DE3  2DE5               	goto	u2400
  6930  0DE4                     u2401:
  6931  0DE4  2DE9               	goto	l2097
  6932  0DE5                     u2400:
  6933  0DE5                     l2095:
  6934  0DE5  3080               	movlw	128
  6935  0DE6  00D0               	movwf	??___fladd
  6936  0DE7  0850               	movf	??___fladd,w
  6937  0DE8  06D8               	xorwf	___fladd@signs,f
  6938  0DE9                     l2097:
  6939  0DE9  085A               	movf	___fladd@bexp,w
  6940  0DEA  00D0               	movwf	??___fladd
  6941  0DEB  0850               	movf	??___fladd,w
  6942  0DEC  00DB               	movwf	___fladd@grs
  6943  0DED                     l2099:
  6944  0DED  0859               	movf	___fladd@aexp,w
  6945  0DEE  00D0               	movwf	??___fladd
  6946  0DEF  0850               	movf	??___fladd,w
  6947  0DF0  00DA               	movwf	___fladd@bexp
  6948  0DF1                     l2101:
  6949  0DF1  085B               	movf	___fladd@grs,w
  6950  0DF2  00D0               	movwf	??___fladd
  6951  0DF3  0850               	movf	??___fladd,w
  6952  0DF4  00D9               	movwf	___fladd@aexp
  6953  0DF5                     l2103:
  6954  0DF5  0848               	movf	___fladd@b,w
  6955  0DF6  00D0               	movwf	??___fladd
  6956  0DF7  0850               	movf	??___fladd,w
  6957  0DF8  00DB               	movwf	___fladd@grs
  6958  0DF9                     l2105:
  6959  0DF9  084C               	movf	___fladd@a,w
  6960  0DFA  00D0               	movwf	??___fladd
  6961  0DFB  0850               	movf	??___fladd,w
  6962  0DFC  00C8               	movwf	___fladd@b
  6963  0DFD                     l2107:
  6964  0DFD  085B               	movf	___fladd@grs,w
  6965  0DFE  00D0               	movwf	??___fladd
  6966  0DFF  0850               	movf	??___fladd,w
  6967  0E00  00CC               	movwf	___fladd@a
  6968  0E01                     l2109:
  6969  0E01  0849               	movf	___fladd@b+1,w
  6970  0E02  00D0               	movwf	??___fladd
  6971  0E03  0850               	movf	??___fladd,w
  6972  0E04  00DB               	movwf	___fladd@grs
  6973  0E05                     l2111:
  6974  0E05  084D               	movf	___fladd@a+1,w
  6975  0E06  00D0               	movwf	??___fladd
  6976  0E07  0850               	movf	??___fladd,w
  6977  0E08  00C9               	movwf	___fladd@b+1
  6978  0E09                     l2113:
  6979  0E09  085B               	movf	___fladd@grs,w
  6980  0E0A  00D0               	movwf	??___fladd
  6981  0E0B  0850               	movf	??___fladd,w
  6982  0E0C  00CD               	movwf	___fladd@a+1
  6983  0E0D                     l2115:
  6984  0E0D  084A               	movf	___fladd@b+2,w
  6985  0E0E  00D0               	movwf	??___fladd
  6986  0E0F  0850               	movf	??___fladd,w
  6987  0E10  00DB               	movwf	___fladd@grs
  6988  0E11                     l2117:
  6989  0E11  084E               	movf	___fladd@a+2,w
  6990  0E12  00D0               	movwf	??___fladd
  6991  0E13  0850               	movf	??___fladd,w
  6992  0E14  00CA               	movwf	___fladd@b+2
  6993  0E15                     l2119:
  6994  0E15  085B               	movf	___fladd@grs,w
  6995  0E16  00D0               	movwf	??___fladd
  6996  0E17  0850               	movf	??___fladd,w
  6997  0E18  00CE               	movwf	___fladd@a+2
  6998  0E19                     l2121:
  6999  0E19  084B               	movf	___fladd@b+3,w
  7000  0E1A  00D0               	movwf	??___fladd
  7001  0E1B  0850               	movf	??___fladd,w
  7002  0E1C  00DB               	movwf	___fladd@grs
  7003  0E1D                     l2123:
  7004  0E1D  084F               	movf	___fladd@a+3,w
  7005  0E1E  00D0               	movwf	??___fladd
  7006  0E1F  0850               	movf	??___fladd,w
  7007  0E20  00CB               	movwf	___fladd@b+3
  7008  0E21                     l2125:
  7009  0E21  085B               	movf	___fladd@grs,w
  7010  0E22  00D0               	movwf	??___fladd
  7011  0E23  0850               	movf	??___fladd,w
  7012  0E24  00CF               	movwf	___fladd@a+3
  7013  0E25                     l2127:
  7014  0E25  01DB               	clrf	___fladd@grs
  7015  0E26                     l2129:
  7016  0E26  0859               	movf	___fladd@aexp,w
  7017  0E27  00D0               	movwf	??___fladd
  7018  0E28  01D1               	clrf	??___fladd+1
  7019  0E29  0851               	movf	??___fladd+1,w
  7020  0E2A  00D3               	movwf	??___fladd+3
  7021  0E2B  085A               	movf	___fladd@bexp,w
  7022  0E2C  0250               	subwf	??___fladd,w
  7023  0E2D  00D2               	movwf	??___fladd+2
  7024  0E2E  1C03               	skipc
  7025  0E2F  03D3               	decf	??___fladd+3,f
  7026  0E30  0853               	movf	??___fladd+3,w
  7027  0E31  3A80               	xorlw	128
  7028  0E32  00FF               	movwf	btemp+1
  7029  0E33  3080               	movlw	128
  7030  0E34  027F               	subwf	btemp+1,w
  7031  0E35  1D03               	skipz
  7032  0E36  2E39               	goto	u2415
  7033  0E37  301A               	movlw	26
  7034  0E38  0252               	subwf	??___fladd+2,w
  7035  0E39                     u2415:
  7036  0E39  1C03               	skipc
  7037  0E3A  2E3C               	goto	u2411
  7038  0E3B  2E3D               	goto	u2410
  7039  0E3C                     u2411:
  7040  0E3C  2E7A               	goto	l2145
  7041  0E3D                     u2410:
  7042  0E3D                     l2131:
  7043  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  7044  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  7045  0E3F  084B               	movf	___fladd@b+3,w
  7046  0E40  044A               	iorwf	___fladd@b+2,w
  7047  0E41  0449               	iorwf	___fladd@b+1,w
  7048  0E42  0448               	iorwf	___fladd@b,w
  7049  0E43  1D03               	skipz
  7050  0E44  2E46               	goto	u2421
  7051  0E45  2E48               	goto	u2420
  7052  0E46                     u2421:
  7053  0E46  3001               	movlw	1
  7054  0E47  2E49               	goto	u2430
  7055  0E48                     u2420:
  7056  0E48  3000               	movlw	0
  7057  0E49                     u2430:
  7058  0E49  00D0               	movwf	??___fladd
  7059  0E4A  0850               	movf	??___fladd,w
  7060  0E4B  00DB               	movwf	___fladd@grs
  7061  0E4C  3000               	movlw	0
  7062  0E4D  00CB               	movwf	___fladd@b+3
  7063  0E4E  3000               	movlw	0
  7064  0E4F  00CA               	movwf	___fladd@b+2
  7065  0E50  3000               	movlw	0
  7066  0E51  00C9               	movwf	___fladd@b+1
  7067  0E52  3000               	movlw	0
  7068  0E53  00C8               	movwf	___fladd@b
  7069  0E54  0859               	movf	___fladd@aexp,w
  7070  0E55  00D0               	movwf	??___fladd
  7071  0E56  0850               	movf	??___fladd,w
  7072  0E57  00DA               	movwf	___fladd@bexp
  7073  0E58  2E82               	goto	l613
  7074  0E59                     l615:
  7075  0E59  1C5B               	btfss	___fladd@grs,0
  7076  0E5A  2E5C               	goto	u2441
  7077  0E5B  2E5D               	goto	u2440
  7078  0E5C                     u2441:
  7079  0E5C  2E66               	goto	l2135
  7080  0E5D                     u2440:
  7081  0E5D                     l2133:
  7082  0E5D  085B               	movf	___fladd@grs,w
  7083  0E5E  00D0               	movwf	??___fladd
  7084  0E5F  1003               	clrc
  7085  0E60  0C50               	rrf	??___fladd,w
  7086  0E61  3801               	iorlw	1
  7087  0E62  00D1               	movwf	??___fladd+1
  7088  0E63  0851               	movf	??___fladd+1,w
  7089  0E64  00DB               	movwf	___fladd@grs
  7090  0E65  2E68               	goto	l2137
  7091  0E66                     l2135:
  7092  0E66  1003               	clrc
  7093  0E67  0CDB               	rrf	___fladd@grs,f
  7094  0E68                     l2137:
  7095  0E68  1C48               	btfss	___fladd@b,0
  7096  0E69  2E6B               	goto	u2451
  7097  0E6A  2E6C               	goto	u2450
  7098  0E6B                     u2451:
  7099  0E6B  2E6D               	goto	l2141
  7100  0E6C                     u2450:
  7101  0E6C                     l2139:
  7102  0E6C  17DB               	bsf	___fladd@grs,7
  7103  0E6D                     l2141:
  7104  0E6D  3001               	movlw	1
  7105  0E6E  00D0               	movwf	??___fladd
  7106  0E6F                     u2465:
  7107  0E6F  0D4B               	rlf	___fladd@b+3,w
  7108  0E70  0CCB               	rrf	___fladd@b+3,f
  7109  0E71  0CCA               	rrf	___fladd@b+2,f
  7110  0E72  0CC9               	rrf	___fladd@b+1,f
  7111  0E73  0CC8               	rrf	___fladd@b,f
  7112  0E74  0BD0               	decfsz	??___fladd& (0+127),f
  7113  0E75  2E6F               	goto	u2465
  7114  0E76                     l2143:
  7115  0E76  3001               	movlw	1
  7116  0E77  00D0               	movwf	??___fladd
  7117  0E78  0850               	movf	??___fladd,w
  7118  0E79  07DA               	addwf	___fladd@bexp,f
  7119  0E7A                     l2145:
  7120  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  7121  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  7122  0E7C  0859               	movf	___fladd@aexp,w
  7123  0E7D  025A               	subwf	___fladd@bexp,w
  7124  0E7E  1C03               	skipc
  7125  0E7F  2E81               	goto	u2471
  7126  0E80  2E82               	goto	u2470
  7127  0E81                     u2471:
  7128  0E81  2E59               	goto	l615
  7129  0E82                     u2470:
  7130  0E82                     l613:
  7131  0E82  1B58               	btfsc	___fladd@signs,6
  7132  0E83  2E85               	goto	u2481
  7133  0E84  2E86               	goto	u2480
  7134  0E85                     u2481:
  7135  0E85  2ED1               	goto	l2171
  7136  0E86                     u2480:
  7137  0E86                     l2147:
  7138  0E86  085A               	movf	___fladd@bexp,w
  7139  0E87  1D03               	btfss	3,2
  7140  0E88  2E8A               	goto	u2491
  7141  0E89  2E8B               	goto	u2490
  7142  0E8A                     u2491:
  7143  0E8A  2E94               	goto	l2153
  7144  0E8B                     u2490:
  7145  0E8B                     l2149:
  7146  0E8B  3000               	movlw	0
  7147  0E8C  00CB               	movwf	?___fladd+3
  7148  0E8D  3000               	movlw	0
  7149  0E8E  00CA               	movwf	?___fladd+2
  7150  0E8F  3000               	movlw	0
  7151  0E90  00C9               	movwf	?___fladd+1
  7152  0E91  3000               	movlw	0
  7153  0E92  00C8               	movwf	?___fladd
  7154  0E93  2FFF               	goto	l622
  7155  0E94                     l2153:
  7156  0E94  084C               	movf	___fladd@a,w
  7157  0E95  07C8               	addwf	___fladd@b,f
  7158  0E96  084D               	movf	___fladd@a+1,w
  7159  0E97  1103               	clrz
  7160  0E98  1803               	skipnc
  7161  0E99  3E01               	addlw	1
  7162  0E9A  1903               	skipnz
  7163  0E9B  2E9D               	goto	u2501
  7164  0E9C  07C9               	addwf	___fladd@b+1,f
  7165  0E9D                     u2501:
  7166  0E9D  084E               	movf	___fladd@a+2,w
  7167  0E9E  1103               	clrz
  7168  0E9F  1803               	skipnc
  7169  0EA0  3E01               	addlw	1
  7170  0EA1  1903               	skipnz
  7171  0EA2  2EA4               	goto	u2502
  7172  0EA3  07CA               	addwf	___fladd@b+2,f
  7173  0EA4                     u2502:
  7174  0EA4  084F               	movf	___fladd@a+3,w
  7175  0EA5  1103               	clrz
  7176  0EA6  1803               	skipnc
  7177  0EA7  3E01               	addlw	1
  7178  0EA8  1903               	skipnz
  7179  0EA9  2EAB               	goto	u2503
  7180  0EAA  07CB               	addwf	___fladd@b+3,f
  7181  0EAB                     u2503:
  7182  0EAB                     l2155:
  7183  0EAB  1C4B               	btfss	___fladd@b+3,0
  7184  0EAC  2EAE               	goto	u2511
  7185  0EAD  2EAF               	goto	u2510
  7186  0EAE                     u2511:
  7187  0EAE  2F85               	goto	l2205
  7188  0EAF                     u2510:
  7189  0EAF                     l2157:
  7190  0EAF  1C5B               	btfss	___fladd@grs,0
  7191  0EB0  2EB2               	goto	u2521
  7192  0EB1  2EB3               	goto	u2520
  7193  0EB2                     u2521:
  7194  0EB2  2EBC               	goto	l2161
  7195  0EB3                     u2520:
  7196  0EB3                     l2159:
  7197  0EB3  085B               	movf	___fladd@grs,w
  7198  0EB4  00D0               	movwf	??___fladd
  7199  0EB5  1003               	clrc
  7200  0EB6  0C50               	rrf	??___fladd,w
  7201  0EB7  3801               	iorlw	1
  7202  0EB8  00D1               	movwf	??___fladd+1
  7203  0EB9  0851               	movf	??___fladd+1,w
  7204  0EBA  00DB               	movwf	___fladd@grs
  7205  0EBB  2EBE               	goto	l2163
  7206  0EBC                     l2161:
  7207  0EBC  1003               	clrc
  7208  0EBD  0CDB               	rrf	___fladd@grs,f
  7209  0EBE                     l2163:
  7210  0EBE  1C48               	btfss	___fladd@b,0
  7211  0EBF  2EC1               	goto	u2531
  7212  0EC0  2EC2               	goto	u2530
  7213  0EC1                     u2531:
  7214  0EC1  2EC3               	goto	l2167
  7215  0EC2                     u2530:
  7216  0EC2                     l2165:
  7217  0EC2  17DB               	bsf	___fladd@grs,7
  7218  0EC3                     l2167:
  7219  0EC3  3001               	movlw	1
  7220  0EC4  00D0               	movwf	??___fladd
  7221  0EC5                     u2545:
  7222  0EC5  0D4B               	rlf	___fladd@b+3,w
  7223  0EC6  0CCB               	rrf	___fladd@b+3,f
  7224  0EC7  0CCA               	rrf	___fladd@b+2,f
  7225  0EC8  0CC9               	rrf	___fladd@b+1,f
  7226  0EC9  0CC8               	rrf	___fladd@b,f
  7227  0ECA  0BD0               	decfsz	??___fladd& (0+127),f
  7228  0ECB  2EC5               	goto	u2545
  7229  0ECC                     l2169:
  7230  0ECC  3001               	movlw	1
  7231  0ECD  00D0               	movwf	??___fladd
  7232  0ECE  0850               	movf	??___fladd,w
  7233  0ECF  07DA               	addwf	___fladd@bexp,f
  7234  0ED0  2F85               	goto	l2205
  7235  0ED1                     l2171:
  7236  0ED1  084B               	movf	___fladd@b+3,w
  7237  0ED2  3A80               	xorlw	128
  7238  0ED3  00FF               	movwf	btemp+1
  7239  0ED4  084F               	movf	___fladd@a+3,w
  7240  0ED5  3A80               	xorlw	128
  7241  0ED6  027F               	subwf	btemp+1,w
  7242  0ED7  1D03               	skipz
  7243  0ED8  2EE3               	goto	u2553
  7244  0ED9  084E               	movf	___fladd@a+2,w
  7245  0EDA  024A               	subwf	___fladd@b+2,w
  7246  0EDB  1D03               	skipz
  7247  0EDC  2EE3               	goto	u2553
  7248  0EDD  084D               	movf	___fladd@a+1,w
  7249  0EDE  0249               	subwf	___fladd@b+1,w
  7250  0EDF  1D03               	skipz
  7251  0EE0  2EE3               	goto	u2553
  7252  0EE1  084C               	movf	___fladd@a,w
  7253  0EE2  0248               	subwf	___fladd@b,w
  7254  0EE3                     u2553:
  7255  0EE3  1803               	skipnc
  7256  0EE4  2EE6               	goto	u2551
  7257  0EE5  2EE7               	goto	u2550
  7258  0EE6                     u2551:
  7259  0EE6  2F3F               	goto	l2181
  7260  0EE7                     u2550:
  7261  0EE7                     l2173:
  7262  0EE7  30FF               	movlw	255
  7263  0EE8  00D0               	movwf	??___fladd
  7264  0EE9  30FF               	movlw	255
  7265  0EEA  00D1               	movwf	??___fladd+1
  7266  0EEB  30FF               	movlw	255
  7267  0EEC  00D2               	movwf	??___fladd+2
  7268  0EED  30FF               	movlw	255
  7269  0EEE  00D3               	movwf	??___fladd+3
  7270  0EEF  084C               	movf	___fladd@a,w
  7271  0EF0  00D4               	movwf	??___fladd+4
  7272  0EF1  084D               	movf	___fladd@a+1,w
  7273  0EF2  00D5               	movwf	??___fladd+5
  7274  0EF3  084E               	movf	___fladd@a+2,w
  7275  0EF4  00D6               	movwf	??___fladd+6
  7276  0EF5  084F               	movf	___fladd@a+3,w
  7277  0EF6  00D7               	movwf	??___fladd+7
  7278  0EF7  0848               	movf	___fladd@b,w
  7279  0EF8  02D4               	subwf	??___fladd+4,f
  7280  0EF9  0849               	movf	___fladd@b+1,w
  7281  0EFA  1C03               	skipc
  7282  0EFB  0F49               	incfsz	___fladd@b+1,w
  7283  0EFC  2EFE               	goto	u2561
  7284  0EFD  2EFF               	goto	u2562
  7285  0EFE                     u2561:
  7286  0EFE  02D5               	subwf	??___fladd+5,f
  7287  0EFF                     u2562:
  7288  0EFF  084A               	movf	___fladd@b+2,w
  7289  0F00  1C03               	skipc
  7290  0F01  0F4A               	incfsz	___fladd@b+2,w
  7291  0F02  2F04               	goto	u2563
  7292  0F03  2F05               	goto	u2564
  7293  0F04                     u2563:
  7294  0F04  02D6               	subwf	??___fladd+6,f
  7295  0F05                     u2564:
  7296  0F05  084B               	movf	___fladd@b+3,w
  7297  0F06  1C03               	skipc
  7298  0F07  0F4B               	incfsz	___fladd@b+3,w
  7299  0F08  2F0A               	goto	u2565
  7300  0F09  2F0B               	goto	u2566
  7301  0F0A                     u2565:
  7302  0F0A  02D7               	subwf	??___fladd+7,f
  7303  0F0B                     u2566:
  7304  0F0B  0854               	movf	??___fladd+4,w
  7305  0F0C  07D0               	addwf	??___fladd,f
  7306  0F0D  0855               	movf	??___fladd+5,w
  7307  0F0E  1803               	skipnc
  7308  0F0F  0F55               	incfsz	??___fladd+5,w
  7309  0F10  2F12               	goto	u2570
  7310  0F11  2F13               	goto	u2571
  7311  0F12                     u2570:
  7312  0F12  07D1               	addwf	??___fladd+1,f
  7313  0F13                     u2571:
  7314  0F13  0856               	movf	??___fladd+6,w
  7315  0F14  1803               	skipnc
  7316  0F15  0F56               	incfsz	??___fladd+6,w
  7317  0F16  2F18               	goto	u2572
  7318  0F17  2F19               	goto	u2573
  7319  0F18                     u2572:
  7320  0F18  07D2               	addwf	??___fladd+2,f
  7321  0F19                     u2573:
  7322  0F19  0857               	movf	??___fladd+7,w
  7323  0F1A  1803               	skipnc
  7324  0F1B  0A57               	incf	??___fladd+7,w
  7325  0F1C  07D3               	addwf	??___fladd+3,f
  7326  0F1D  0853               	movf	??___fladd+3,w
  7327  0F1E  00CB               	movwf	___fladd@b+3
  7328  0F1F  0852               	movf	??___fladd+2,w
  7329  0F20  00CA               	movwf	___fladd@b+2
  7330  0F21  0851               	movf	??___fladd+1,w
  7331  0F22  00C9               	movwf	___fladd@b+1
  7332  0F23  0850               	movf	??___fladd,w
  7333  0F24  00C8               	movwf	___fladd@b
  7334  0F25                     l2175:
  7335  0F25  3080               	movlw	128
  7336  0F26  00D0               	movwf	??___fladd
  7337  0F27  0850               	movf	??___fladd,w
  7338  0F28  06D8               	xorwf	___fladd@signs,f
  7339  0F29  09DB               	comf	___fladd@grs,f
  7340  0F2A  0ADB               	incf	___fladd@grs,f
  7341  0F2B                     l2177:
  7342  0F2B  085B               	movf	___fladd@grs,w
  7343  0F2C  1D03               	btfss	3,2
  7344  0F2D  2F2F               	goto	u2581
  7345  0F2E  2F30               	goto	u2580
  7346  0F2F                     u2581:
  7347  0F2F  2F4D               	goto	l630
  7348  0F30                     u2580:
  7349  0F30                     l2179:
  7350  0F30  3001               	movlw	1
  7351  0F31  07C8               	addwf	___fladd@b,f
  7352  0F32  3000               	movlw	0
  7353  0F33  1803               	skipnc
  7354  0F34  3001               	movlw	1
  7355  0F35  07C9               	addwf	___fladd@b+1,f
  7356  0F36  3000               	movlw	0
  7357  0F37  1803               	skipnc
  7358  0F38  3001               	movlw	1
  7359  0F39  07CA               	addwf	___fladd@b+2,f
  7360  0F3A  3000               	movlw	0
  7361  0F3B  1803               	skipnc
  7362  0F3C  3001               	movlw	1
  7363  0F3D  07CB               	addwf	___fladd@b+3,f
  7364  0F3E  2F4D               	goto	l630
  7365  0F3F                     l2181:
  7366  0F3F  084C               	movf	___fladd@a,w
  7367  0F40  02C8               	subwf	___fladd@b,f
  7368  0F41  084D               	movf	___fladd@a+1,w
  7369  0F42  1C03               	skipc
  7370  0F43  0F4D               	incfsz	___fladd@a+1,w
  7371  0F44  02C9               	subwf	___fladd@b+1,f
  7372  0F45  084E               	movf	___fladd@a+2,w
  7373  0F46  1C03               	skipc
  7374  0F47  0F4E               	incfsz	___fladd@a+2,w
  7375  0F48  02CA               	subwf	___fladd@b+2,f
  7376  0F49  084F               	movf	___fladd@a+3,w
  7377  0F4A  1C03               	skipc
  7378  0F4B  0F4F               	incfsz	___fladd@a+3,w
  7379  0F4C  02CB               	subwf	___fladd@b+3,f
  7380  0F4D                     l630:
  7381  0F4D  084B               	movf	___fladd@b+3,w
  7382  0F4E  044A               	iorwf	___fladd@b+2,w
  7383  0F4F  0449               	iorwf	___fladd@b+1,w
  7384  0F50  0448               	iorwf	___fladd@b,w
  7385  0F51  1D03               	skipz
  7386  0F52  2F54               	goto	u2591
  7387  0F53  2F55               	goto	u2590
  7388  0F54                     u2591:
  7389  0F54  2F81               	goto	l2203
  7390  0F55                     u2590:
  7391  0F55                     l2183:
  7392  0F55  085B               	movf	___fladd@grs,w
  7393  0F56  1D03               	btfss	3,2
  7394  0F57  2F59               	goto	u2601
  7395  0F58  2F5A               	goto	u2600
  7396  0F59                     u2601:
  7397  0F59  2F81               	goto	l2203
  7398  0F5A                     u2600:
  7399  0F5A                     l2185:
  7400  0F5A  3000               	movlw	0
  7401  0F5B  00CB               	movwf	?___fladd+3
  7402  0F5C  3000               	movlw	0
  7403  0F5D  00CA               	movwf	?___fladd+2
  7404  0F5E  3000               	movlw	0
  7405  0F5F  00C9               	movwf	?___fladd+1
  7406  0F60  3000               	movlw	0
  7407  0F61  00C8               	movwf	?___fladd
  7408  0F62  2FFF               	goto	l622
  7409  0F63                     l2189:
  7410  0F63  3001               	movlw	1
  7411  0F64  00D0               	movwf	??___fladd
  7412  0F65                     u2615:
  7413  0F65  1003               	clrc
  7414  0F66  0DC8               	rlf	___fladd@b,f
  7415  0F67  0DC9               	rlf	___fladd@b+1,f
  7416  0F68  0DCA               	rlf	___fladd@b+2,f
  7417  0F69  0DCB               	rlf	___fladd@b+3,f
  7418  0F6A  0BD0               	decfsz	??___fladd,f
  7419  0F6B  2F65               	goto	u2615
  7420  0F6C                     l2191:
  7421  0F6C  1FDB               	btfss	___fladd@grs,7
  7422  0F6D  2F6F               	goto	u2621
  7423  0F6E  2F70               	goto	u2620
  7424  0F6F                     u2621:
  7425  0F6F  2F71               	goto	l634
  7426  0F70                     u2620:
  7427  0F70                     l2193:
  7428  0F70  1448               	bsf	___fladd@b,0
  7429  0F71                     l634:
  7430  0F71  1C5B               	btfss	___fladd@grs,0
  7431  0F72  2F74               	goto	u2631
  7432  0F73  2F75               	goto	u2630
  7433  0F74                     u2631:
  7434  0F74  2F78               	goto	l2197
  7435  0F75                     u2630:
  7436  0F75                     l2195:
  7437  0F75  1403               	setc
  7438  0F76  0DDB               	rlf	___fladd@grs,f
  7439  0F77  2F7A               	goto	l2199
  7440  0F78                     l2197:
  7441  0F78  1003               	clrc
  7442  0F79  0DDB               	rlf	___fladd@grs,f
  7443  0F7A                     l2199:
  7444  0F7A  085A               	movf	___fladd@bexp,w
  7445  0F7B  1903               	btfsc	3,2
  7446  0F7C  2F7E               	goto	u2641
  7447  0F7D  2F7F               	goto	u2640
  7448  0F7E                     u2641:
  7449  0F7E  2F81               	goto	l2203
  7450  0F7F                     u2640:
  7451  0F7F                     l2201:
  7452  0F7F  3001               	movlw	1
  7453  0F80  02DA               	subwf	___fladd@bexp,f
  7454  0F81                     l2203:
  7455  0F81  1FCA               	btfss	___fladd@b+2,7
  7456  0F82  2F84               	goto	u2651
  7457  0F83  2F85               	goto	u2650
  7458  0F84                     u2651:
  7459  0F84  2F63               	goto	l2189
  7460  0F85                     u2650:
  7461  0F85                     l2205:
  7462  0F85  01D9               	clrf	___fladd@aexp
  7463  0F86                     l2207:
  7464  0F86  1FDB               	btfss	___fladd@grs,7
  7465  0F87  2F89               	goto	u2661
  7466  0F88  2F8A               	goto	u2660
  7467  0F89                     u2661:
  7468  0F89  2F98               	goto	l2215
  7469  0F8A                     u2660:
  7470  0F8A                     l2209:
  7471  0F8A  085B               	movf	___fladd@grs,w
  7472  0F8B  397F               	andlw	127
  7473  0F8C  1903               	btfsc	3,2
  7474  0F8D  2F8F               	goto	u2671
  7475  0F8E  2F90               	goto	u2670
  7476  0F8F                     u2671:
  7477  0F8F  2F93               	goto	l640
  7478  0F90                     u2670:
  7479  0F90                     l2211:
  7480  0F90  01D9               	clrf	___fladd@aexp
  7481  0F91  0AD9               	incf	___fladd@aexp,f
  7482  0F92  2F98               	goto	l2215
  7483  0F93                     l640:
  7484  0F93  1C48               	btfss	___fladd@b,0
  7485  0F94  2F96               	goto	u2681
  7486  0F95  2F97               	goto	u2680
  7487  0F96                     u2681:
  7488  0F96  2F98               	goto	l2215
  7489  0F97                     u2680:
  7490  0F97  2F90               	goto	l2211
  7491  0F98                     l2215:
  7492  0F98  0859               	movf	___fladd@aexp,w
  7493  0F99  1903               	btfsc	3,2
  7494  0F9A  2F9C               	goto	u2691
  7495  0F9B  2F9D               	goto	u2690
  7496  0F9C                     u2691:
  7497  0F9C  2FD1               	goto	l643
  7498  0F9D                     u2690:
  7499  0F9D                     l2217:
  7500  0F9D  3001               	movlw	1
  7501  0F9E  07C8               	addwf	___fladd@b,f
  7502  0F9F  3000               	movlw	0
  7503  0FA0  1803               	skipnc
  7504  0FA1  3001               	movlw	1
  7505  0FA2  07C9               	addwf	___fladd@b+1,f
  7506  0FA3  3000               	movlw	0
  7507  0FA4  1803               	skipnc
  7508  0FA5  3001               	movlw	1
  7509  0FA6  07CA               	addwf	___fladd@b+2,f
  7510  0FA7  3000               	movlw	0
  7511  0FA8  1803               	skipnc
  7512  0FA9  3001               	movlw	1
  7513  0FAA  07CB               	addwf	___fladd@b+3,f
  7514  0FAB                     l2219:
  7515  0FAB  1C4B               	btfss	___fladd@b+3,0
  7516  0FAC  2FAE               	goto	u2701
  7517  0FAD  2FAF               	goto	u2700
  7518  0FAE                     u2701:
  7519  0FAE  2FD1               	goto	l643
  7520  0FAF                     u2700:
  7521  0FAF                     l2221:
  7522  0FAF  0848               	movf	___fladd@b,w
  7523  0FB0  00D0               	movwf	??___fladd
  7524  0FB1  0849               	movf	___fladd@b+1,w
  7525  0FB2  00D1               	movwf	??___fladd+1
  7526  0FB3  084A               	movf	___fladd@b+2,w
  7527  0FB4  00D2               	movwf	??___fladd+2
  7528  0FB5  084B               	movf	___fladd@b+3,w
  7529  0FB6  00D3               	movwf	??___fladd+3
  7530  0FB7  3001               	movlw	1
  7531  0FB8  00D4               	movwf	??___fladd+4
  7532  0FB9                     u2715:
  7533  0FB9  0D53               	rlf	??___fladd+3,w
  7534  0FBA  0CD3               	rrf	??___fladd+3,f
  7535  0FBB  0CD2               	rrf	??___fladd+2,f
  7536  0FBC  0CD1               	rrf	??___fladd+1,f
  7537  0FBD  0CD0               	rrf	??___fladd,f
  7538  0FBE                     u2710:
  7539  0FBE  0BD4               	decfsz	??___fladd+4,f
  7540  0FBF  2FB9               	goto	u2715
  7541  0FC0  0853               	movf	??___fladd+3,w
  7542  0FC1  00CB               	movwf	___fladd@b+3
  7543  0FC2  0852               	movf	??___fladd+2,w
  7544  0FC3  00CA               	movwf	___fladd@b+2
  7545  0FC4  0851               	movf	??___fladd+1,w
  7546  0FC5  00C9               	movwf	___fladd@b+1
  7547  0FC6  0850               	movf	??___fladd,w
  7548  0FC7  00C8               	movwf	___fladd@b
  7549  0FC8  0A5A               	incf	___fladd@bexp,w
  7550  0FC9  1903               	btfsc	3,2
  7551  0FCA  2FCC               	goto	u2721
  7552  0FCB  2FCD               	goto	u2720
  7553  0FCC                     u2721:
  7554  0FCC  2FD1               	goto	l643
  7555  0FCD                     u2720:
  7556  0FCD                     l2223:
  7557  0FCD  3001               	movlw	1
  7558  0FCE  00D0               	movwf	??___fladd
  7559  0FCF  0850               	movf	??___fladd,w
  7560  0FD0  07DA               	addwf	___fladd@bexp,f
  7561  0FD1                     l643:
  7562  0FD1  0A5A               	incf	___fladd@bexp,w
  7563  0FD2  1903               	btfsc	3,2
  7564  0FD3  2FD5               	goto	u2731
  7565  0FD4  2FD6               	goto	u2730
  7566  0FD5                     u2731:
  7567  0FD5  2FDB               	goto	l2227
  7568  0FD6                     u2730:
  7569  0FD6                     l2225:
  7570  0FD6  085A               	movf	___fladd@bexp,w
  7571  0FD7  1D03               	btfss	3,2
  7572  0FD8  2FDA               	goto	u2741
  7573  0FD9  2FDB               	goto	u2740
  7574  0FDA                     u2741:
  7575  0FDA  2FE9               	goto	l2233
  7576  0FDB                     u2740:
  7577  0FDB                     l2227:
  7578  0FDB  3000               	movlw	0
  7579  0FDC  00CB               	movwf	___fladd@b+3
  7580  0FDD  3000               	movlw	0
  7581  0FDE  00CA               	movwf	___fladd@b+2
  7582  0FDF  3000               	movlw	0
  7583  0FE0  00C9               	movwf	___fladd@b+1
  7584  0FE1  3000               	movlw	0
  7585  0FE2  00C8               	movwf	___fladd@b
  7586  0FE3                     l2229:
  7587  0FE3  085A               	movf	___fladd@bexp,w
  7588  0FE4  1D03               	btfss	3,2
  7589  0FE5  2FE7               	goto	u2751
  7590  0FE6  2FE8               	goto	u2750
  7591  0FE7                     u2751:
  7592  0FE7  2FE9               	goto	l2233
  7593  0FE8                     u2750:
  7594  0FE8                     l2231:
  7595  0FE8  01D8               	clrf	___fladd@signs
  7596  0FE9                     l2233:
  7597  0FE9  1C5A               	btfss	___fladd@bexp,0
  7598  0FEA  2FEC               	goto	u2761
  7599  0FEB  2FED               	goto	u2760
  7600  0FEC                     u2761:
  7601  0FEC  2FEF               	goto	l2237
  7602  0FED                     u2760:
  7603  0FED                     l2235:
  7604  0FED  17CA               	bsf	___fladd@b+2,7
  7605  0FEE  2FF3               	goto	l651
  7606  0FEF                     l2237:
  7607  0FEF  307F               	movlw	127
  7608  0FF0  00D0               	movwf	??___fladd
  7609  0FF1  0850               	movf	??___fladd,w
  7610  0FF2  05CA               	andwf	___fladd@b+2,f
  7611  0FF3                     l651:
  7612  0FF3  085A               	movf	___fladd@bexp,w
  7613  0FF4  00D0               	movwf	??___fladd
  7614  0FF5  1003               	clrc
  7615  0FF6  0C50               	rrf	??___fladd,w
  7616  0FF7  00D1               	movwf	??___fladd+1
  7617  0FF8  0851               	movf	??___fladd+1,w
  7618  0FF9  00CB               	movwf	___fladd@b+3
  7619  0FFA                     l2239:
  7620  0FFA  1FD8               	btfss	___fladd@signs,7
  7621  0FFB  2FFD               	goto	u2771
  7622  0FFC  2FFE               	goto	u2770
  7623  0FFD                     u2771:
  7624  0FFD  2FFF               	goto	l652
  7625  0FFE                     u2770:
  7626  0FFE                     l2241:
  7627  0FFE  17CB               	bsf	___fladd@b+3,7
  7628  0FFF                     l652:
  7629  0FFF                     l622:
  7630  0FFF  0008               	return
  7631  1000                     __end_of___fladd:
  7632                           
  7633                           	psect	text19
  7634  125D                     __ptext19:	
  7635 ;; *************** function _I2C_Start *****************
  7636 ;; Defined at:
  7637 ;;		line 30 in file "I2C.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;  add             1    wreg     unsigned char 
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;  add             1    0[BANK0 ] unsigned char 
  7642 ;; Return value:  Size  Location     Type
  7643 ;;                  1    wreg      void 
  7644 ;; Registers used:
  7645 ;;		wreg, status,2, status,0, pclath, cstack
  7646 ;; Tracked objects:
  7647 ;;		On entry : 0/0
  7648 ;;		On exit  : 0/0
  7649 ;;		Unchanged: 0/0
  7650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7651 ;;      Params:         0       0       0       0       0
  7652 ;;      Locals:         0       1       0       0       0
  7653 ;;      Temps:          0       0       0       0       0
  7654 ;;      Totals:         0       1       0       0       0
  7655 ;;Total ram usage:        1 bytes
  7656 ;; Hardware stack levels used:    1
  7657 ;; Hardware stack levels required when called:    3
  7658 ;; This function calls:
  7659 ;;		_I2C_Master_Wait
  7660 ;;		_I2C_Master_Write
  7661 ;; This function is called by:
  7662 ;;		_readMPU
  7663 ;; This function uses a non-reentrant model
  7664 ;;
  7665                           
  7666                           
  7667                           ;psect for function _I2C_Start
  7668  125D                     _I2C_Start:
  7669                           
  7670                           ;incstack = 0
  7671                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  7672                           ;I2C_Start@add stored from wreg
  7673  125D  1283               	bcf	3,5	;RP0=0, select bank0
  7674  125E  1303               	bcf	3,6	;RP1=0, select bank0
  7675  125F  00A0               	movwf	I2C_Start@add
  7676  1260                     l3351:
  7677                           
  7678                           ;I2C.c: 30: void I2C_Start(char add);I2C.c: 31: {;I2C.c: 32:     I2C_Master_Wait();
  7679  1260  160A  118A  2233  160A  118A  	fcall	_I2C_Master_Wait
  7680  1265                     l3353:
  7681                           
  7682                           ;I2C.c: 33:     SEN = 1;
  7683  1265  1683               	bsf	3,5	;RP0=1, select bank1
  7684  1266  1303               	bcf	3,6	;RP1=0, select bank1
  7685  1267  1411               	bsf	17,0	;volatile
  7686                           
  7687                           ;I2C.c: 34:     I2C_Master_Write(add);
  7688  1268  1283               	bcf	3,5	;RP0=0, select bank0
  7689  1269  1303               	bcf	3,6	;RP1=0, select bank0
  7690  126A  0820               	movf	I2C_Start@add,w
  7691  126B  160A  118A  224D  160A  118A  	fcall	_I2C_Master_Write
  7692  1270                     l49:
  7693  1270  0008               	return
  7694  1271                     __end_of_I2C_Start:
  7695                           
  7696                           	psect	text20
  7697  130C                     __ptext20:	
  7698 ;; *************** function _I2C_Read *****************
  7699 ;; Defined at:
  7700 ;;		line 83 in file "I2C.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;  ACK_NACK        1    wreg     unsigned char 
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;  ACK_NACK        1    0[BANK0 ] unsigned char 
  7705 ;;  Data            1    1[BANK0 ] unsigned char 
  7706 ;; Return value:  Size  Location     Type
  7707 ;;                  1    wreg      unsigned char 
  7708 ;; Registers used:
  7709 ;;		wreg, status,2, status,0, pclath, cstack
  7710 ;; Tracked objects:
  7711 ;;		On entry : 0/0
  7712 ;;		On exit  : 0/0
  7713 ;;		Unchanged: 0/0
  7714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7715 ;;      Params:         0       0       0       0       0
  7716 ;;      Locals:         0       2       0       0       0
  7717 ;;      Temps:          1       0       0       0       0
  7718 ;;      Totals:         1       2       0       0       0
  7719 ;;Total ram usage:        3 bytes
  7720 ;; Hardware stack levels used:    1
  7721 ;; Hardware stack levels required when called:    2
  7722 ;; This function calls:
  7723 ;;		_I2C_ACK
  7724 ;;		_I2C_Master_Wait
  7725 ;;		_I2C_NACK
  7726 ;; This function is called by:
  7727 ;;		_readMPU
  7728 ;; This function uses a non-reentrant model
  7729 ;;
  7730                           
  7731                           
  7732                           ;psect for function _I2C_Read
  7733  130C                     _I2C_Read:
  7734                           
  7735                           ;incstack = 0
  7736                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  7737                           ;I2C_Read@ACK_NACK stored from wreg
  7738  130C  1283               	bcf	3,5	;RP0=0, select bank0
  7739  130D  1303               	bcf	3,6	;RP1=0, select bank0
  7740  130E  00A0               	movwf	I2C_Read@ACK_NACK
  7741  130F                     l3363:
  7742                           
  7743                           ;I2C.c: 83: unsigned char I2C_Read(unsigned char ACK_NACK);I2C.c: 84: { I2C_Master_Wait(
      +                          );
  7744  130F  160A  118A  2233  160A  118A  	fcall	_I2C_Master_Wait
  7745  1314                     l3365:
  7746                           
  7747                           ;I2C.c: 86:     unsigned char Data;;I2C.c: 87:     RCEN = 1;
  7748  1314  1683               	bsf	3,5	;RP0=1, select bank1
  7749  1315  1303               	bcf	3,6	;RP1=0, select bank1
  7750  1316  1591               	bsf	17,3	;volatile
  7751  1317                     l82:	
  7752                           ;I2C.c: 88:     while(!BF);
  7753                           
  7754  1317  1C14               	btfss	20,0	;volatile
  7755  1318  2B1A               	goto	u4931
  7756  1319  2B1B               	goto	u4930
  7757  131A                     u4931:
  7758  131A  2B17               	goto	l82
  7759  131B                     u4930:
  7760  131B                     l3367:
  7761                           
  7762                           ;I2C.c: 89:     Data = SSPBUF;
  7763  131B  1283               	bcf	3,5	;RP0=0, select bank0
  7764  131C  1303               	bcf	3,6	;RP1=0, select bank0
  7765  131D  0813               	movf	19,w	;volatile
  7766  131E  00F6               	movwf	??_I2C_Read
  7767  131F  0876               	movf	??_I2C_Read,w
  7768  1320  00A1               	movwf	I2C_Read@Data
  7769  1321                     l3369:
  7770                           
  7771                           ;I2C.c: 90:     if(ACK_NACK==0)
  7772  1321  0820               	movf	I2C_Read@ACK_NACK,w
  7773  1322  1D03               	btfss	3,2
  7774  1323  2B25               	goto	u4941
  7775  1324  2B26               	goto	u4940
  7776  1325                     u4941:
  7777  1325  2B2C               	goto	l3373
  7778  1326                     u4940:
  7779  1326                     l3371:
  7780                           
  7781                           ;I2C.c: 91:         I2C_ACK();
  7782  1326  160A  118A  2208  160A  118A  	fcall	_I2C_ACK
  7783  132B  2B31               	goto	l87
  7784  132C                     l3373:
  7785                           
  7786                           ;I2C.c: 93:         I2C_NACK();
  7787  132C  160A  118A  2211  160A  118A  	fcall	_I2C_NACK
  7788  1331                     l87:
  7789  1331  1283               	bcf	3,5	;RP0=0, select bank0
  7790  1332  1303               	bcf	3,6	;RP1=0, select bank0
  7791  1333  1D8C               	btfss	12,3	;volatile
  7792  1334  2B36               	goto	u4951
  7793  1335  2B37               	goto	u4950
  7794  1336                     u4951:
  7795  1336  2B31               	goto	l87
  7796  1337                     u4950:
  7797  1337                     l89:
  7798                           
  7799                           ;I2C.c: 95:     SSPIF=0;
  7800  1337  118C               	bcf	12,3	;volatile
  7801  1338                     l3375:
  7802                           
  7803                           ;I2C.c: 96:     return Data;
  7804  1338  0821               	movf	I2C_Read@Data,w
  7805  1339                     l90:
  7806  1339  0008               	return
  7807  133A                     __end_of_I2C_Read:
  7808                           
  7809                           	psect	text21
  7810  1211                     __ptext21:	
  7811 ;; *************** function _I2C_NACK *****************
  7812 ;; Defined at:
  7813 ;;		line 56 in file "I2C.c"
  7814 ;; Parameters:    Size  Location     Type
  7815 ;;		None
  7816 ;; Auto vars:     Size  Location     Type
  7817 ;;		None
  7818 ;; Return value:  Size  Location     Type
  7819 ;;                  1    wreg      void 
  7820 ;; Registers used:
  7821 ;;		None
  7822 ;; Tracked objects:
  7823 ;;		On entry : 0/0
  7824 ;;		On exit  : 0/0
  7825 ;;		Unchanged: 0/0
  7826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7827 ;;      Params:         0       0       0       0       0
  7828 ;;      Locals:         0       0       0       0       0
  7829 ;;      Temps:          0       0       0       0       0
  7830 ;;      Totals:         0       0       0       0       0
  7831 ;;Total ram usage:        0 bytes
  7832 ;; Hardware stack levels used:    1
  7833 ;; Hardware stack levels required when called:    1
  7834 ;; This function calls:
  7835 ;;		Nothing
  7836 ;; This function is called by:
  7837 ;;		_I2C_Read
  7838 ;; This function uses a non-reentrant model
  7839 ;;
  7840                           
  7841                           
  7842                           ;psect for function _I2C_NACK
  7843  1211                     _I2C_NACK:
  7844  1211                     l2275:	
  7845                           ;incstack = 0
  7846                           ; Regs used in _I2C_NACK: []
  7847                           
  7848                           
  7849                           ;I2C.c: 58:  ACKDT = 1;
  7850  1211  1683               	bsf	3,5	;RP0=1, select bank1
  7851  1212  1303               	bcf	3,6	;RP1=0, select bank1
  7852  1213  1691               	bsf	17,5	;volatile
  7853                           
  7854                           ;I2C.c: 59:  ACKEN = 1;
  7855  1214  1611               	bsf	17,4	;volatile
  7856  1215                     l64:	
  7857                           ;I2C.c: 60:     while(ACKEN);
  7858                           
  7859  1215  1A11               	btfsc	17,4	;volatile
  7860  1216  2A18               	goto	u2851
  7861  1217  2A19               	goto	u2850
  7862  1218                     u2851:
  7863  1218  2A15               	goto	l64
  7864  1219                     u2850:
  7865  1219                     l67:
  7866  1219  0008               	return
  7867  121A                     __end_of_I2C_NACK:
  7868                           
  7869                           	psect	text22
  7870  1208                     __ptext22:	
  7871 ;; *************** function _I2C_ACK *****************
  7872 ;; Defined at:
  7873 ;;		line 49 in file "I2C.c"
  7874 ;; Parameters:    Size  Location     Type
  7875 ;;		None
  7876 ;; Auto vars:     Size  Location     Type
  7877 ;;		None
  7878 ;; Return value:  Size  Location     Type
  7879 ;;                  1    wreg      void 
  7880 ;; Registers used:
  7881 ;;		None
  7882 ;; Tracked objects:
  7883 ;;		On entry : 0/0
  7884 ;;		On exit  : 0/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7887 ;;      Params:         0       0       0       0       0
  7888 ;;      Locals:         0       0       0       0       0
  7889 ;;      Temps:          0       0       0       0       0
  7890 ;;      Totals:         0       0       0       0       0
  7891 ;;Total ram usage:        0 bytes
  7892 ;; Hardware stack levels used:    1
  7893 ;; Hardware stack levels required when called:    1
  7894 ;; This function calls:
  7895 ;;		Nothing
  7896 ;; This function is called by:
  7897 ;;		_I2C_Read
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901                           
  7902                           ;psect for function _I2C_ACK
  7903  1208                     _I2C_ACK:
  7904  1208                     l2273:	
  7905                           ;incstack = 0
  7906                           ; Regs used in _I2C_ACK: []
  7907                           
  7908                           
  7909                           ;I2C.c: 51:  ACKDT = 0;
  7910  1208  1683               	bsf	3,5	;RP0=1, select bank1
  7911  1209  1303               	bcf	3,6	;RP1=0, select bank1
  7912  120A  1291               	bcf	17,5	;volatile
  7913                           
  7914                           ;I2C.c: 52:     ACKEN = 1;
  7915  120B  1611               	bsf	17,4	;volatile
  7916  120C                     l58:	
  7917                           ;I2C.c: 53:     while(ACKEN);
  7918                           
  7919  120C  1A11               	btfsc	17,4	;volatile
  7920  120D  2A0F               	goto	u2841
  7921  120E  2A10               	goto	u2840
  7922  120F                     u2841:
  7923  120F  2A0C               	goto	l58
  7924  1210                     u2840:
  7925  1210                     l61:
  7926  1210  0008               	return
  7927  1211                     __end_of_I2C_ACK:
  7928                           
  7929                           	psect	text23
  7930  11FF                     __ptext23:	
  7931 ;; *************** function _I2C_Master_RepeatedStart *****************
  7932 ;; Defined at:
  7933 ;;		line 37 in file "I2C.c"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;		None
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;		None
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  1    wreg      void 
  7940 ;; Registers used:
  7941 ;;		wreg, status,2, status,0, pclath, cstack
  7942 ;; Tracked objects:
  7943 ;;		On entry : 0/0
  7944 ;;		On exit  : 0/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7947 ;;      Params:         0       0       0       0       0
  7948 ;;      Locals:         0       0       0       0       0
  7949 ;;      Temps:          0       0       0       0       0
  7950 ;;      Totals:         0       0       0       0       0
  7951 ;;Total ram usage:        0 bytes
  7952 ;; Hardware stack levels used:    1
  7953 ;; Hardware stack levels required when called:    2
  7954 ;; This function calls:
  7955 ;;		_I2C_Master_Wait
  7956 ;; This function is called by:
  7957 ;;		_readMPU
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           
  7962                           ;psect for function _I2C_Master_RepeatedStart
  7963  11FF                     _I2C_Master_RepeatedStart:
  7964  11FF                     l3355:	
  7965                           ;incstack = 0
  7966                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  7967                           
  7968                           
  7969                           ;I2C.c: 39:     I2C_Master_Wait();
  7970  11FF  160A  118A  2233  160A  118A  	fcall	_I2C_Master_Wait
  7971  1204                     l3357:
  7972                           
  7973                           ;I2C.c: 40:     RSEN = 1;
  7974  1204  1683               	bsf	3,5	;RP0=1, select bank1
  7975  1205  1303               	bcf	3,6	;RP1=0, select bank1
  7976  1206  1491               	bsf	17,1	;volatile
  7977  1207                     l52:
  7978  1207  0008               	return
  7979  1208                     __end_of_I2C_Master_RepeatedStart:
  7980                           
  7981                           	psect	text24
  7982  0890                     __ptext24:	
  7983 ;; *************** function _confMPU *****************
  7984 ;; Defined at:
  7985 ;;		line 63 in file "MPU6050.c"
  7986 ;; Parameters:    Size  Location     Type
  7987 ;;		None
  7988 ;; Auto vars:     Size  Location     Type
  7989 ;;		None
  7990 ;; Return value:  Size  Location     Type
  7991 ;;                  1    wreg      void 
  7992 ;; Registers used:
  7993 ;;		wreg, status,2, status,0, pclath, cstack
  7994 ;; Tracked objects:
  7995 ;;		On entry : 0/0
  7996 ;;		On exit  : 0/0
  7997 ;;		Unchanged: 0/0
  7998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7999 ;;      Params:         0       0       0       0       0
  8000 ;;      Locals:         0       0       0       0       0
  8001 ;;      Temps:          0       0       0       0       0
  8002 ;;      Totals:         0       0       0       0       0
  8003 ;;Total ram usage:        0 bytes
  8004 ;; Hardware stack levels used:    1
  8005 ;; Hardware stack levels required when called:    3
  8006 ;; This function calls:
  8007 ;;		_I2C_Master_Start
  8008 ;;		_I2C_Master_Stop
  8009 ;;		_I2C_Master_Write
  8010 ;; This function is called by:
  8011 ;;		_main
  8012 ;; This function uses a non-reentrant model
  8013 ;;
  8014                           
  8015                           
  8016                           ;psect for function _confMPU
  8017  0890                     _confMPU:
  8018  0890                     l3401:	
  8019                           ;incstack = 0
  8020                           ; Regs used in _confMPU: [wreg+status,2+status,0+pclath+cstack]
  8021                           
  8022                           
  8023                           ;MPU6050.c: 65:     I2C_Master_Start();
  8024  0890  160A  118A  21ED  120A  158A  	fcall	_I2C_Master_Start
  8025                           
  8026                           ;MPU6050.c: 66:     I2C_Master_Write(0xD0);
  8027  0895  30D0               	movlw	208
  8028  0896  160A  118A  224D  120A  158A  	fcall	_I2C_Master_Write
  8029                           
  8030                           ;MPU6050.c: 67:     I2C_Master_Write(0x6B);
  8031  089B  306B               	movlw	107
  8032  089C  160A  118A  224D  120A  158A  	fcall	_I2C_Master_Write
  8033                           
  8034                           ;MPU6050.c: 68:     I2C_Master_Write(0x01);
  8035  08A1  3001               	movlw	1
  8036  08A2  160A  118A  224D  120A  158A  	fcall	_I2C_Master_Write
  8037                           
  8038                           ;MPU6050.c: 69:     I2C_Master_Stop();
  8039  08A7  160A  118A  21F6  120A  158A  	fcall	_I2C_Master_Stop
  8040                           
  8041                           ;MPU6050.c: 71:     I2C_Master_Start();
  8042  08AC  160A  118A  21ED  120A  158A  	fcall	_I2C_Master_Start
  8043                           
  8044                           ;MPU6050.c: 72:     I2C_Master_Write(0xD0);
  8045  08B1  30D0               	movlw	208
  8046  08B2  160A  118A  224D  120A  158A  	fcall	_I2C_Master_Write
  8047                           
  8048                           ;MPU6050.c: 73:     I2C_Master_Write(0x00);
  8049  08B7  3000               	movlw	0
  8050  08B8  160A  118A  224D  120A  158A  	fcall	_I2C_Master_Write
  8051                           
  8052                           ;MPU6050.c: 74:     I2C_Master_Stop();
  8053  08BD  160A  118A  21F6  120A  158A  	fcall	_I2C_Master_Stop
  8054                           
  8055                           ;MPU6050.c: 77:     I2C_Master_Start();
  8056  08C2  160A  118A  21ED  120A  158A  	fcall	_I2C_Master_Start
  8057                           
  8058                           ;MPU6050.c: 78:     I2C_Master_Write(0xD0);
  8059  08C7  30D0               	movlw	208
  8060  08C8  160A  118A  224D  120A  158A  	fcall	_I2C_Master_Write
  8061                           
  8062                           ;MPU6050.c: 79:     I2C_Master_Write(0x19);
  8063  08CD  3019               	movlw	25
  8064  08CE  160A  118A  224D  120A  158A  	fcall	_I2C_Master_Write
  8065                           
  8066                           ;MPU6050.c: 80:     I2C_Master_Write(0x08);
  8067  08D3  3008               	movlw	8
  8068  08D4  160A  118A  224D  120A  158A  	fcall	_I2C_Master_Write
  8069                           
  8070                           ;MPU6050.c: 81:     I2C_Master_Stop();
  8071  08D9  160A  118A  21F6  120A  158A  	fcall	_I2C_Master_Stop
  8072                           
  8073                           ;MPU6050.c: 83:     I2C_Master_Start();
  8074  08DE  160A  118A  21ED  120A  158A  	fcall	_I2C_Master_Start
  8075                           
  8076                           ;MPU6050.c: 84:     I2C_Master_Write(0xD0);
  8077  08E3  30D0               	movlw	208
  8078  08E4  160A  118A  224D  120A  158A  	fcall	_I2C_Master_Write
  8079                           
  8080                           ;MPU6050.c: 85:     I2C_Master_Write(0x1A);
  8081  08E9  301A               	movlw	26
  8082  08EA  160A  118A  224D  120A  158A  	fcall	_I2C_Master_Write
  8083                           
  8084                           ;MPU6050.c: 86:     I2C_Master_Write(0x00);
  8085  08EF  3000               	movlw	0
  8086  08F0  160A  118A  224D  120A  158A  	fcall	_I2C_Master_Write
  8087                           
  8088                           ;MPU6050.c: 87:     I2C_Master_Stop();
  8089  08F5  160A  118A  21F6  120A  158A  	fcall	_I2C_Master_Stop
  8090                           
  8091                           ;MPU6050.c: 89:     I2C_Master_Start();
  8092  08FA  160A  118A  21ED  120A  158A  	fcall	_I2C_Master_Start
  8093                           
  8094                           ;MPU6050.c: 90:     I2C_Master_Write(0xD0);
  8095  08FF  30D0               	movlw	208
  8096  0900  160A  118A  224D  120A  158A  	fcall	_I2C_Master_Write
  8097                           
  8098                           ;MPU6050.c: 91:     I2C_Master_Write(0x1B);
  8099  0905  301B               	movlw	27
  8100  0906  160A  118A  224D  120A  158A  	fcall	_I2C_Master_Write
  8101                           
  8102                           ;MPU6050.c: 92:     I2C_Master_Write(0x00);
  8103  090B  3000               	movlw	0
  8104  090C  160A  118A  224D  120A  158A  	fcall	_I2C_Master_Write
  8105                           
  8106                           ;MPU6050.c: 93:     I2C_Master_Stop();
  8107  0911  160A  118A  21F6  120A  158A  	fcall	_I2C_Master_Stop
  8108                           
  8109                           ;MPU6050.c: 95:     I2C_Master_Start();
  8110  0916  160A  118A  21ED  120A  158A  	fcall	_I2C_Master_Start
  8111                           
  8112                           ;MPU6050.c: 96:     I2C_Master_Write(0xD0);
  8113  091B  30D0               	movlw	208
  8114  091C  160A  118A  224D  120A  158A  	fcall	_I2C_Master_Write
  8115                           
  8116                           ;MPU6050.c: 97:     I2C_Master_Write(0x1C);
  8117  0921  301C               	movlw	28
  8118  0922  160A  118A  224D  120A  158A  	fcall	_I2C_Master_Write
  8119                           
  8120                           ;MPU6050.c: 98:     I2C_Master_Write(0x00);
  8121  0927  3000               	movlw	0
  8122  0928  160A  118A  224D  120A  158A  	fcall	_I2C_Master_Write
  8123                           
  8124                           ;MPU6050.c: 99:     I2C_Master_Stop();
  8125  092D  160A  118A  21F6  120A  158A  	fcall	_I2C_Master_Stop
  8126                           
  8127                           ;MPU6050.c: 103:     I2C_Master_Start();
  8128  0932  160A  118A  21ED  120A  158A  	fcall	_I2C_Master_Start
  8129                           
  8130                           ;MPU6050.c: 104:     I2C_Master_Write(0x68);
  8131  0937  3068               	movlw	104
  8132  0938  160A  118A  224D  120A  158A  	fcall	_I2C_Master_Write
  8133                           
  8134                           ;MPU6050.c: 105:     I2C_Master_Write(0x6C);
  8135  093D  306C               	movlw	108
  8136  093E  160A  118A  224D  120A  158A  	fcall	_I2C_Master_Write
  8137                           
  8138                           ;MPU6050.c: 106:     I2C_Master_Write(0x00);
  8139  0943  3000               	movlw	0
  8140  0944  160A  118A  224D  120A  158A  	fcall	_I2C_Master_Write
  8141                           
  8142                           ;MPU6050.c: 107:     I2C_Master_Stop();
  8143  0949  160A  118A  21F6  120A  158A  	fcall	_I2C_Master_Stop
  8144  094E                     l230:
  8145  094E  0008               	return
  8146  094F                     __end_of_confMPU:
  8147                           
  8148                           	psect	text25
  8149  124D                     __ptext25:	
  8150 ;; *************** function _I2C_Master_Write *****************
  8151 ;; Defined at:
  8152 ;;		line 63 in file "I2C.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;  data            1    wreg     unsigned char 
  8155 ;; Auto vars:     Size  Location     Type
  8156 ;;  data            1    6[COMMON] unsigned char 
  8157 ;; Return value:  Size  Location     Type
  8158 ;;                  1    wreg      unsigned char 
  8159 ;; Registers used:
  8160 ;;		wreg, status,2, status,0, pclath, cstack
  8161 ;; Tracked objects:
  8162 ;;		On entry : 0/0
  8163 ;;		On exit  : 0/0
  8164 ;;		Unchanged: 0/0
  8165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8166 ;;      Params:         0       0       0       0       0
  8167 ;;      Locals:         1       0       0       0       0
  8168 ;;      Temps:          0       0       0       0       0
  8169 ;;      Totals:         1       0       0       0       0
  8170 ;;Total ram usage:        1 bytes
  8171 ;; Hardware stack levels used:    1
  8172 ;; Hardware stack levels required when called:    2
  8173 ;; This function calls:
  8174 ;;		_I2C_Master_Wait
  8175 ;; This function is called by:
  8176 ;;		_I2C_Start
  8177 ;;		_readMPU
  8178 ;;		_confMPU
  8179 ;; This function uses a non-reentrant model
  8180 ;;
  8181                           
  8182                           
  8183                           ;psect for function _I2C_Master_Write
  8184  124D                     _I2C_Master_Write:
  8185                           
  8186                           ;incstack = 0
  8187                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  8188                           ;I2C_Master_Write@data stored from wreg
  8189  124D  00F6               	movwf	I2C_Master_Write@data
  8190  124E                     l3095:
  8191                           
  8192                           ;I2C.c: 63: unsigned char I2C_Master_Write(unsigned char data);I2C.c: 64: {;I2C.c: 65:  
      +                             I2C_Master_Wait();
  8193  124E  160A  118A  2233  160A  118A  	fcall	_I2C_Master_Wait
  8194  1253                     l3097:
  8195                           
  8196                           ;I2C.c: 66:     SSPBUF = data;
  8197  1253  0876               	movf	I2C_Master_Write@data,w
  8198  1254  1283               	bcf	3,5	;RP0=0, select bank0
  8199  1255  1303               	bcf	3,6	;RP1=0, select bank0
  8200  1256  0093               	movwf	19	;volatile
  8201  1257                     l70:	
  8202                           ;I2C.c: 67:     while(!SSPIF);
  8203                           
  8204  1257  1D8C               	btfss	12,3	;volatile
  8205  1258  2A5A               	goto	u4361
  8206  1259  2A5B               	goto	u4360
  8207  125A                     u4361:
  8208  125A  2A57               	goto	l70
  8209  125B                     u4360:
  8210  125B                     l72:
  8211                           
  8212                           ;I2C.c: 68:  SSPIF = 0;
  8213  125B  118C               	bcf	12,3	;volatile
  8214  125C                     l73:	
  8215                           ;I2C.c: 69:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  8216                           
  8217  125C  0008               	return
  8218  125D                     __end_of_I2C_Master_Write:
  8219                           
  8220                           	psect	text26
  8221  11F6                     __ptext26:	
  8222 ;; *************** function _I2C_Master_Stop *****************
  8223 ;; Defined at:
  8224 ;;		line 43 in file "I2C.c"
  8225 ;; Parameters:    Size  Location     Type
  8226 ;;		None
  8227 ;; Auto vars:     Size  Location     Type
  8228 ;;		None
  8229 ;; Return value:  Size  Location     Type
  8230 ;;                  1    wreg      void 
  8231 ;; Registers used:
  8232 ;;		wreg, status,2, status,0, pclath, cstack
  8233 ;; Tracked objects:
  8234 ;;		On entry : 0/0
  8235 ;;		On exit  : 0/0
  8236 ;;		Unchanged: 0/0
  8237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8238 ;;      Params:         0       0       0       0       0
  8239 ;;      Locals:         0       0       0       0       0
  8240 ;;      Temps:          0       0       0       0       0
  8241 ;;      Totals:         0       0       0       0       0
  8242 ;;Total ram usage:        0 bytes
  8243 ;; Hardware stack levels used:    1
  8244 ;; Hardware stack levels required when called:    2
  8245 ;; This function calls:
  8246 ;;		_I2C_Master_Wait
  8247 ;; This function is called by:
  8248 ;;		_readMPU
  8249 ;;		_confMPU
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           
  8254                           ;psect for function _I2C_Master_Stop
  8255  11F6                     _I2C_Master_Stop:
  8256  11F6                     l3359:	
  8257                           ;incstack = 0
  8258                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  8259                           
  8260                           
  8261                           ;I2C.c: 45:     I2C_Master_Wait();
  8262  11F6  160A  118A  2233  160A  118A  	fcall	_I2C_Master_Wait
  8263  11FB                     l3361:
  8264                           
  8265                           ;I2C.c: 46:     PEN = 1;
  8266  11FB  1683               	bsf	3,5	;RP0=1, select bank1
  8267  11FC  1303               	bcf	3,6	;RP1=0, select bank1
  8268  11FD  1511               	bsf	17,2	;volatile
  8269  11FE                     l55:
  8270  11FE  0008               	return
  8271  11FF                     __end_of_I2C_Master_Stop:
  8272                           
  8273                           	psect	text27
  8274  11ED                     __ptext27:	
  8275 ;; *************** function _I2C_Master_Start *****************
  8276 ;; Defined at:
  8277 ;;		line 24 in file "I2C.c"
  8278 ;; Parameters:    Size  Location     Type
  8279 ;;		None
  8280 ;; Auto vars:     Size  Location     Type
  8281 ;;		None
  8282 ;; Return value:  Size  Location     Type
  8283 ;;                  1    wreg      void 
  8284 ;; Registers used:
  8285 ;;		wreg, status,2, status,0, pclath, cstack
  8286 ;; Tracked objects:
  8287 ;;		On entry : 0/0
  8288 ;;		On exit  : 0/0
  8289 ;;		Unchanged: 0/0
  8290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8291 ;;      Params:         0       0       0       0       0
  8292 ;;      Locals:         0       0       0       0       0
  8293 ;;      Temps:          0       0       0       0       0
  8294 ;;      Totals:         0       0       0       0       0
  8295 ;;Total ram usage:        0 bytes
  8296 ;; Hardware stack levels used:    1
  8297 ;; Hardware stack levels required when called:    2
  8298 ;; This function calls:
  8299 ;;		_I2C_Master_Wait
  8300 ;; This function is called by:
  8301 ;;		_confMPU
  8302 ;; This function uses a non-reentrant model
  8303 ;;
  8304                           
  8305                           
  8306                           ;psect for function _I2C_Master_Start
  8307  11ED                     _I2C_Master_Start:
  8308  11ED                     l3347:	
  8309                           ;incstack = 0
  8310                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  8311                           
  8312                           
  8313                           ;I2C.c: 26:     I2C_Master_Wait();
  8314  11ED  160A  118A  2233  160A  118A  	fcall	_I2C_Master_Wait
  8315  11F2                     l3349:
  8316                           
  8317                           ;I2C.c: 27:     SEN = 1;
  8318  11F2  1683               	bsf	3,5	;RP0=1, select bank1
  8319  11F3  1303               	bcf	3,6	;RP1=0, select bank1
  8320  11F4  1411               	bsf	17,0	;volatile
  8321  11F5                     l46:
  8322  11F5  0008               	return
  8323  11F6                     __end_of_I2C_Master_Start:
  8324                           
  8325                           	psect	text28
  8326  1233                     __ptext28:	
  8327 ;; *************** function _I2C_Master_Wait *****************
  8328 ;; Defined at:
  8329 ;;		line 19 in file "I2C.c"
  8330 ;; Parameters:    Size  Location     Type
  8331 ;;		None
  8332 ;; Auto vars:     Size  Location     Type
  8333 ;;		None
  8334 ;; Return value:  Size  Location     Type
  8335 ;;                  1    wreg      void 
  8336 ;; Registers used:
  8337 ;;		wreg, status,2
  8338 ;; Tracked objects:
  8339 ;;		On entry : 0/0
  8340 ;;		On exit  : 0/0
  8341 ;;		Unchanged: 0/0
  8342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8343 ;;      Params:         0       0       0       0       0
  8344 ;;      Locals:         0       0       0       0       0
  8345 ;;      Temps:          0       0       0       0       0
  8346 ;;      Totals:         0       0       0       0       0
  8347 ;;Total ram usage:        0 bytes
  8348 ;; Hardware stack levels used:    1
  8349 ;; Hardware stack levels required when called:    1
  8350 ;; This function calls:
  8351 ;;		Nothing
  8352 ;; This function is called by:
  8353 ;;		_I2C_Master_Start
  8354 ;;		_I2C_Start
  8355 ;;		_I2C_Master_RepeatedStart
  8356 ;;		_I2C_Master_Stop
  8357 ;;		_I2C_Master_Write
  8358 ;;		_I2C_Read
  8359 ;;		_I2C_Read_Byte
  8360 ;; This function uses a non-reentrant model
  8361 ;;
  8362                           
  8363                           
  8364                           ;psect for function _I2C_Master_Wait
  8365  1233                     _I2C_Master_Wait:
  8366  1233                     l3031:	
  8367                           ;incstack = 0
  8368                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  8369                           
  8370  1233                     l40:	
  8371                           ;I2C.c: 21:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  8372                           
  8373  1233  1683               	bsf	3,5	;RP0=1, select bank1
  8374  1234  1303               	bcf	3,6	;RP1=0, select bank1
  8375  1235  1914               	btfsc	20,2	;volatile
  8376  1236  2A38               	goto	u4191
  8377  1237  2A39               	goto	u4190
  8378  1238                     u4191:
  8379  1238  2A33               	goto	l40
  8380  1239                     u4190:
  8381  1239                     l3033:
  8382  1239  0811               	movf	17,w	;volatile
  8383  123A  391F               	andlw	31
  8384  123B  1D03               	btfss	3,2
  8385  123C  2A3E               	goto	u4201
  8386  123D  2A3F               	goto	u4200
  8387  123E                     u4201:
  8388  123E  2A33               	goto	l40
  8389  123F                     u4200:
  8390  123F                     l43:
  8391  123F  0008               	return
  8392  1240                     __end_of_I2C_Master_Wait:
  8393                           
  8394                           	psect	text29
  8395  1491                     __ptext29:	
  8396 ;; *************** function _UARTInit *****************
  8397 ;; Defined at:
  8398 ;;		line 8 in file "UART.c"
  8399 ;; Parameters:    Size  Location     Type
  8400 ;;  baud_rate       4   13[BANK0 ] const unsigned long 
  8401 ;;  BRGH            1   17[BANK0 ] const unsigned char 
  8402 ;; Auto vars:     Size  Location     Type
  8403 ;;		None
  8404 ;; Return value:  Size  Location     Type
  8405 ;;                  1    wreg      void 
  8406 ;; Registers used:
  8407 ;;		wreg, status,2, status,0, pclath, cstack
  8408 ;; Tracked objects:
  8409 ;;		On entry : 0/0
  8410 ;;		On exit  : 0/0
  8411 ;;		Unchanged: 0/0
  8412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8413 ;;      Params:         0       5       0       0       0
  8414 ;;      Locals:         0       0       0       0       0
  8415 ;;      Temps:          0       4       0       0       0
  8416 ;;      Totals:         0       9       0       0       0
  8417 ;;Total ram usage:        9 bytes
  8418 ;; Hardware stack levels used:    1
  8419 ;; Hardware stack levels required when called:    2
  8420 ;; This function calls:
  8421 ;;		___lldiv
  8422 ;; This function is called by:
  8423 ;;		_main
  8424 ;; This function uses a non-reentrant model
  8425 ;;
  8426                           
  8427                           
  8428                           ;psect for function _UARTInit
  8429  1491                     _UARTInit:
  8430  1491                     l2859:	
  8431                           ;incstack = 0
  8432                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  8433                           
  8434                           
  8435                           ;UART.c: 10:     if (BRGH == 0) {
  8436  1491  1283               	bcf	3,5	;RP0=0, select bank0
  8437  1492  1303               	bcf	3,6	;RP1=0, select bank0
  8438  1493  0831               	movf	UARTInit@BRGH,w
  8439  1494  1D03               	btfss	3,2
  8440  1495  2C97               	goto	u4121
  8441  1496  2C98               	goto	u4120
  8442  1497                     u4121:
  8443  1497  2CC7               	goto	l2865
  8444  1498                     u4120:
  8445  1498                     l2861:
  8446                           
  8447                           ;UART.c: 11:         SPBRG = 4000000/(64*baud_rate) - 1;
  8448  1498  082D               	movf	UARTInit@baud_rate,w
  8449  1499  00B2               	movwf	??_UARTInit
  8450  149A  082E               	movf	UARTInit@baud_rate+1,w
  8451  149B  00B3               	movwf	??_UARTInit+1
  8452  149C  082F               	movf	UARTInit@baud_rate+2,w
  8453  149D  00B4               	movwf	??_UARTInit+2
  8454  149E  0830               	movf	UARTInit@baud_rate+3,w
  8455  149F  00B5               	movwf	??_UARTInit+3
  8456  14A0  3006               	movlw	6
  8457  14A1                     u4135:
  8458  14A1  1003               	clrc
  8459  14A2  0DB2               	rlf	??_UARTInit,f
  8460  14A3  0DB3               	rlf	??_UARTInit+1,f
  8461  14A4  0DB4               	rlf	??_UARTInit+2,f
  8462  14A5  0DB5               	rlf	??_UARTInit+3,f
  8463  14A6                     u4130:
  8464  14A6  3EFF               	addlw	-1
  8465  14A7  1D03               	skipz
  8466  14A8  2CA1               	goto	u4135
  8467  14A9  0835               	movf	??_UARTInit+3,w
  8468  14AA  00A3               	movwf	___lldiv@divisor+3
  8469  14AB  0834               	movf	??_UARTInit+2,w
  8470  14AC  00A2               	movwf	___lldiv@divisor+2
  8471  14AD  0833               	movf	??_UARTInit+1,w
  8472  14AE  00A1               	movwf	___lldiv@divisor+1
  8473  14AF  0832               	movf	??_UARTInit,w
  8474  14B0  00A0               	movwf	___lldiv@divisor
  8475  14B1  3000               	movlw	0
  8476  14B2  00A7               	movwf	___lldiv@dividend+3
  8477  14B3  303D               	movlw	61
  8478  14B4  00A6               	movwf	___lldiv@dividend+2
  8479  14B5  3009               	movlw	9
  8480  14B6  00A5               	movwf	___lldiv@dividend+1
  8481  14B7  3000               	movlw	0
  8482  14B8  00A4               	movwf	___lldiv@dividend
  8483  14B9  160A  118A  2429  160A  118A  	fcall	___lldiv
  8484  14BE  1283               	bcf	3,5	;RP0=0, select bank0
  8485  14BF  1303               	bcf	3,6	;RP1=0, select bank0
  8486  14C0  0820               	movf	?___lldiv,w
  8487  14C1  3EFF               	addlw	255
  8488  14C2  1683               	bsf	3,5	;RP0=1, select bank1
  8489  14C3  1303               	bcf	3,6	;RP1=0, select bank1
  8490  14C4  0099               	movwf	25	;volatile
  8491  14C5                     l2863:
  8492                           
  8493                           ;UART.c: 12:         TXSTAbits.BRGH = 0;
  8494  14C5  1118               	bcf	24,2	;volatile
  8495                           
  8496                           ;UART.c: 13:     } else {
  8497  14C6  2CF5               	goto	l2869
  8498  14C7                     l2865:
  8499                           
  8500                           ;UART.c: 14:         SPBRG = 4000000/(16*baud_rate) - 1;
  8501  14C7  082D               	movf	UARTInit@baud_rate,w
  8502  14C8  00B2               	movwf	??_UARTInit
  8503  14C9  082E               	movf	UARTInit@baud_rate+1,w
  8504  14CA  00B3               	movwf	??_UARTInit+1
  8505  14CB  082F               	movf	UARTInit@baud_rate+2,w
  8506  14CC  00B4               	movwf	??_UARTInit+2
  8507  14CD  0830               	movf	UARTInit@baud_rate+3,w
  8508  14CE  00B5               	movwf	??_UARTInit+3
  8509  14CF  3004               	movlw	4
  8510  14D0                     u4145:
  8511  14D0  1003               	clrc
  8512  14D1  0DB2               	rlf	??_UARTInit,f
  8513  14D2  0DB3               	rlf	??_UARTInit+1,f
  8514  14D3  0DB4               	rlf	??_UARTInit+2,f
  8515  14D4  0DB5               	rlf	??_UARTInit+3,f
  8516  14D5                     u4140:
  8517  14D5  3EFF               	addlw	-1
  8518  14D6  1D03               	skipz
  8519  14D7  2CD0               	goto	u4145
  8520  14D8  0835               	movf	??_UARTInit+3,w
  8521  14D9  00A3               	movwf	___lldiv@divisor+3
  8522  14DA  0834               	movf	??_UARTInit+2,w
  8523  14DB  00A2               	movwf	___lldiv@divisor+2
  8524  14DC  0833               	movf	??_UARTInit+1,w
  8525  14DD  00A1               	movwf	___lldiv@divisor+1
  8526  14DE  0832               	movf	??_UARTInit,w
  8527  14DF  00A0               	movwf	___lldiv@divisor
  8528  14E0  3000               	movlw	0
  8529  14E1  00A7               	movwf	___lldiv@dividend+3
  8530  14E2  303D               	movlw	61
  8531  14E3  00A6               	movwf	___lldiv@dividend+2
  8532  14E4  3009               	movlw	9
  8533  14E5  00A5               	movwf	___lldiv@dividend+1
  8534  14E6  3000               	movlw	0
  8535  14E7  00A4               	movwf	___lldiv@dividend
  8536  14E8  160A  118A  2429  160A  118A  	fcall	___lldiv
  8537  14ED  1283               	bcf	3,5	;RP0=0, select bank0
  8538  14EE  1303               	bcf	3,6	;RP1=0, select bank0
  8539  14EF  0820               	movf	?___lldiv,w
  8540  14F0  3EFF               	addlw	255
  8541  14F1  1683               	bsf	3,5	;RP0=1, select bank1
  8542  14F2  1303               	bcf	3,6	;RP1=0, select bank1
  8543  14F3  0099               	movwf	25	;volatile
  8544  14F4                     l2867:
  8545                           
  8546                           ;UART.c: 15:         TXSTAbits.BRGH = 1;
  8547  14F4  1518               	bsf	24,2	;volatile
  8548  14F5                     l2869:
  8549                           
  8550                           ;UART.c: 19:     TXSTAbits.TX9 = 0;
  8551  14F5  1318               	bcf	24,6	;volatile
  8552  14F6                     l2871:
  8553                           
  8554                           ;UART.c: 20:     TXSTAbits.TXEN = 1;
  8555  14F6  1698               	bsf	24,5	;volatile
  8556  14F7                     l2873:
  8557                           
  8558                           ;UART.c: 21:     TXSTAbits.SYNC = 0;
  8559  14F7  1218               	bcf	24,4	;volatile
  8560  14F8                     l2875:
  8561                           
  8562                           ;UART.c: 24:     RCSTAbits.SPEN = 1;
  8563  14F8  1283               	bcf	3,5	;RP0=0, select bank0
  8564  14F9  1303               	bcf	3,6	;RP1=0, select bank0
  8565  14FA  1798               	bsf	24,7	;volatile
  8566  14FB                     l2877:
  8567                           
  8568                           ;UART.c: 25:     RCSTAbits.RX9 = 0;
  8569  14FB  1318               	bcf	24,6	;volatile
  8570  14FC                     l2879:
  8571                           
  8572                           ;UART.c: 26:     RCSTAbits.CREN = 1;
  8573  14FC  1618               	bsf	24,4	;volatile
  8574  14FD                     l2881:
  8575                           
  8576                           ;UART.c: 27:     RCSTAbits.FERR = 0;
  8577  14FD  1118               	bcf	24,2	;volatile
  8578  14FE                     l2883:
  8579                           
  8580                           ;UART.c: 28:     RCSTAbits.OERR = 0;
  8581  14FE  1098               	bcf	24,1	;volatile
  8582  14FF                     l2885:
  8583                           
  8584                           ;UART.c: 31:     TRISCbits.TRISC7 = 1;
  8585  14FF  1683               	bsf	3,5	;RP0=1, select bank1
  8586  1500  1303               	bcf	3,6	;RP1=0, select bank1
  8587  1501  1787               	bsf	7,7	;volatile
  8588  1502                     l2887:
  8589                           
  8590                           ;UART.c: 32:     TRISCbits.TRISC6 = 0;
  8591  1502  1307               	bcf	7,6	;volatile
  8592  1503                     l170:
  8593  1503  0008               	return
  8594  1504                     __end_of_UARTInit:
  8595                           
  8596                           	psect	text30
  8597  1429                     __ptext30:	
  8598 ;; *************** function ___lldiv *****************
  8599 ;; Defined at:
  8600 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;  divisor         4    0[BANK0 ] unsigned long 
  8603 ;;  dividend        4    4[BANK0 ] unsigned long 
  8604 ;; Auto vars:     Size  Location     Type
  8605 ;;  quotient        4    8[BANK0 ] unsigned long 
  8606 ;;  counter         1   12[BANK0 ] unsigned char 
  8607 ;; Return value:  Size  Location     Type
  8608 ;;                  4    0[BANK0 ] unsigned long 
  8609 ;; Registers used:
  8610 ;;		wreg, status,2, status,0
  8611 ;; Tracked objects:
  8612 ;;		On entry : 0/0
  8613 ;;		On exit  : 0/0
  8614 ;;		Unchanged: 0/0
  8615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8616 ;;      Params:         0       8       0       0       0
  8617 ;;      Locals:         0       5       0       0       0
  8618 ;;      Temps:          1       0       0       0       0
  8619 ;;      Totals:         1      13       0       0       0
  8620 ;;Total ram usage:       14 bytes
  8621 ;; Hardware stack levels used:    1
  8622 ;; Hardware stack levels required when called:    1
  8623 ;; This function calls:
  8624 ;;		Nothing
  8625 ;; This function is called by:
  8626 ;;		_UARTInit
  8627 ;;		_sprintf
  8628 ;; This function uses a non-reentrant model
  8629 ;;
  8630                           
  8631                           
  8632                           ;psect for function ___lldiv
  8633  1429                     ___lldiv:
  8634  1429                     l2005:	
  8635                           ;incstack = 0
  8636                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8637                           
  8638  1429  3000               	movlw	0
  8639  142A  1283               	bcf	3,5	;RP0=0, select bank0
  8640  142B  1303               	bcf	3,6	;RP1=0, select bank0
  8641  142C  00AB               	movwf	___lldiv@quotient+3
  8642  142D  3000               	movlw	0
  8643  142E  00AA               	movwf	___lldiv@quotient+2
  8644  142F  3000               	movlw	0
  8645  1430  00A9               	movwf	___lldiv@quotient+1
  8646  1431  3000               	movlw	0
  8647  1432  00A8               	movwf	___lldiv@quotient
  8648  1433  0823               	movf	___lldiv@divisor+3,w
  8649  1434  0422               	iorwf	___lldiv@divisor+2,w
  8650  1435  0421               	iorwf	___lldiv@divisor+1,w
  8651  1436  0420               	iorwf	___lldiv@divisor,w
  8652  1437  1903               	skipnz
  8653  1438  2C3A               	goto	u2191
  8654  1439  2C3B               	goto	u2190
  8655  143A                     u2191:
  8656  143A  2C88               	goto	l2025
  8657  143B                     u2190:
  8658  143B                     l2007:
  8659  143B  01AC               	clrf	___lldiv@counter
  8660  143C  0AAC               	incf	___lldiv@counter,f
  8661  143D  2C4B               	goto	l2011
  8662  143E                     l2009:
  8663  143E  3001               	movlw	1
  8664  143F  00F6               	movwf	??___lldiv
  8665  1440                     u2205:
  8666  1440  1003               	clrc
  8667  1441  0DA0               	rlf	___lldiv@divisor,f
  8668  1442  0DA1               	rlf	___lldiv@divisor+1,f
  8669  1443  0DA2               	rlf	___lldiv@divisor+2,f
  8670  1444  0DA3               	rlf	___lldiv@divisor+3,f
  8671  1445  0BF6               	decfsz	??___lldiv,f
  8672  1446  2C40               	goto	u2205
  8673  1447  3001               	movlw	1
  8674  1448  00F6               	movwf	??___lldiv
  8675  1449  0876               	movf	??___lldiv,w
  8676  144A  07AC               	addwf	___lldiv@counter,f
  8677  144B                     l2011:
  8678  144B  1FA3               	btfss	___lldiv@divisor+3,7
  8679  144C  2C4E               	goto	u2211
  8680  144D  2C4F               	goto	u2210
  8681  144E                     u2211:
  8682  144E  2C3E               	goto	l2009
  8683  144F                     u2210:
  8684  144F                     l2013:
  8685  144F  3001               	movlw	1
  8686  1450  00F6               	movwf	??___lldiv
  8687  1451                     u2225:
  8688  1451  1003               	clrc
  8689  1452  0DA8               	rlf	___lldiv@quotient,f
  8690  1453  0DA9               	rlf	___lldiv@quotient+1,f
  8691  1454  0DAA               	rlf	___lldiv@quotient+2,f
  8692  1455  0DAB               	rlf	___lldiv@quotient+3,f
  8693  1456  0BF6               	decfsz	??___lldiv,f
  8694  1457  2C51               	goto	u2225
  8695  1458                     l2015:
  8696  1458  0823               	movf	___lldiv@divisor+3,w
  8697  1459  0227               	subwf	___lldiv@dividend+3,w
  8698  145A  1D03               	skipz
  8699  145B  2C66               	goto	u2235
  8700  145C  0822               	movf	___lldiv@divisor+2,w
  8701  145D  0226               	subwf	___lldiv@dividend+2,w
  8702  145E  1D03               	skipz
  8703  145F  2C66               	goto	u2235
  8704  1460  0821               	movf	___lldiv@divisor+1,w
  8705  1461  0225               	subwf	___lldiv@dividend+1,w
  8706  1462  1D03               	skipz
  8707  1463  2C66               	goto	u2235
  8708  1464  0820               	movf	___lldiv@divisor,w
  8709  1465  0224               	subwf	___lldiv@dividend,w
  8710  1466                     u2235:
  8711  1466  1C03               	skipc
  8712  1467  2C69               	goto	u2231
  8713  1468  2C6A               	goto	u2230
  8714  1469                     u2231:
  8715  1469  2C79               	goto	l2021
  8716  146A                     u2230:
  8717  146A                     l2017:
  8718  146A  0820               	movf	___lldiv@divisor,w
  8719  146B  02A4               	subwf	___lldiv@dividend,f
  8720  146C  0821               	movf	___lldiv@divisor+1,w
  8721  146D  1C03               	skipc
  8722  146E  0F21               	incfsz	___lldiv@divisor+1,w
  8723  146F  02A5               	subwf	___lldiv@dividend+1,f
  8724  1470  0822               	movf	___lldiv@divisor+2,w
  8725  1471  1C03               	skipc
  8726  1472  0F22               	incfsz	___lldiv@divisor+2,w
  8727  1473  02A6               	subwf	___lldiv@dividend+2,f
  8728  1474  0823               	movf	___lldiv@divisor+3,w
  8729  1475  1C03               	skipc
  8730  1476  0F23               	incfsz	___lldiv@divisor+3,w
  8731  1477  02A7               	subwf	___lldiv@dividend+3,f
  8732  1478                     l2019:
  8733  1478  1428               	bsf	___lldiv@quotient,0
  8734  1479                     l2021:
  8735  1479  3001               	movlw	1
  8736  147A                     u2245:
  8737  147A  1003               	clrc
  8738  147B  0CA3               	rrf	___lldiv@divisor+3,f
  8739  147C  0CA2               	rrf	___lldiv@divisor+2,f
  8740  147D  0CA1               	rrf	___lldiv@divisor+1,f
  8741  147E  0CA0               	rrf	___lldiv@divisor,f
  8742  147F  3EFF               	addlw	-1
  8743  1480  1D03               	skipz
  8744  1481  2C7A               	goto	u2245
  8745  1482                     l2023:
  8746  1482  3001               	movlw	1
  8747  1483  02AC               	subwf	___lldiv@counter,f
  8748  1484  1D03               	btfss	3,2
  8749  1485  2C87               	goto	u2251
  8750  1486  2C88               	goto	u2250
  8751  1487                     u2251:
  8752  1487  2C4F               	goto	l2013
  8753  1488                     u2250:
  8754  1488                     l2025:
  8755  1488  082B               	movf	___lldiv@quotient+3,w
  8756  1489  00A3               	movwf	?___lldiv+3
  8757  148A  082A               	movf	___lldiv@quotient+2,w
  8758  148B  00A2               	movwf	?___lldiv+2
  8759  148C  0829               	movf	___lldiv@quotient+1,w
  8760  148D  00A1               	movwf	?___lldiv+1
  8761  148E  0828               	movf	___lldiv@quotient,w
  8762  148F  00A0               	movwf	?___lldiv
  8763  1490                     l352:
  8764  1490  0008               	return
  8765  1491                     __end_of___lldiv:
  8766                           
  8767                           	psect	text31
  8768  1226                     __ptext31:	
  8769 ;; *************** function _I2C_Master_Init *****************
  8770 ;; Defined at:
  8771 ;;		line 9 in file "I2C.c"
  8772 ;; Parameters:    Size  Location     Type
  8773 ;;		None
  8774 ;; Auto vars:     Size  Location     Type
  8775 ;;		None
  8776 ;; Return value:  Size  Location     Type
  8777 ;;                  1    wreg      void 
  8778 ;; Registers used:
  8779 ;;		wreg, status,2
  8780 ;; Tracked objects:
  8781 ;;		On entry : 0/0
  8782 ;;		On exit  : 0/0
  8783 ;;		Unchanged: 0/0
  8784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8785 ;;      Params:         0       0       0       0       0
  8786 ;;      Locals:         0       0       0       0       0
  8787 ;;      Temps:          0       0       0       0       0
  8788 ;;      Totals:         0       0       0       0       0
  8789 ;;Total ram usage:        0 bytes
  8790 ;; Hardware stack levels used:    1
  8791 ;; Hardware stack levels required when called:    1
  8792 ;; This function calls:
  8793 ;;		Nothing
  8794 ;; This function is called by:
  8795 ;;		_main
  8796 ;; This function uses a non-reentrant model
  8797 ;;
  8798                           
  8799                           
  8800                           ;psect for function _I2C_Master_Init
  8801  1226                     _I2C_Master_Init:
  8802  1226                     l2849:	
  8803                           ;incstack = 0
  8804                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  8805                           
  8806                           
  8807                           ;I2C.c: 11:   SSPCON = 0x28;
  8808  1226  3028               	movlw	40
  8809  1227  1283               	bcf	3,5	;RP0=0, select bank0
  8810  1228  1303               	bcf	3,6	;RP1=0, select bank0
  8811  1229  0094               	movwf	20	;volatile
  8812  122A                     l2851:
  8813                           
  8814                           ;I2C.c: 12:   SSPCON2 = 0x00;
  8815  122A  1683               	bsf	3,5	;RP0=1, select bank1
  8816  122B  1303               	bcf	3,6	;RP1=0, select bank1
  8817  122C  0191               	clrf	17	;volatile
  8818  122D                     l2853:
  8819                           
  8820                           ;I2C.c: 13:   SSPSTAT = 0x00;
  8821  122D  0194               	clrf	20	;volatile
  8822                           
  8823                           ;I2C.c: 14:   SSPADD = ((4000000/4)/100000) - 1;
  8824  122E  3009               	movlw	9
  8825  122F  0093               	movwf	19	;volatile
  8826  1230                     l2855:
  8827                           
  8828                           ;I2C.c: 15:   TRISC3 = 1;
  8829  1230  1587               	bsf	7,3	;volatile
  8830  1231                     l2857:
  8831                           
  8832                           ;I2C.c: 16:   TRISC4 = 1;
  8833  1231  1607               	bsf	7,4	;volatile
  8834  1232                     l37:
  8835  1232  0008               	return
  8836  1233                     __end_of_I2C_Master_Init:
  8837                           
  8838                           	psect	text32
  8839  1295                     __ptext32:	
  8840 ;; *************** function _isr *****************
  8841 ;; Defined at:
  8842 ;;		line 99 in file "main.c"
  8843 ;; Parameters:    Size  Location     Type
  8844 ;;		None
  8845 ;; Auto vars:     Size  Location     Type
  8846 ;;  entrante        1    5[COMMON] unsigned char 
  8847 ;; Return value:  Size  Location     Type
  8848 ;;                  1    wreg      void 
  8849 ;; Registers used:
  8850 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8851 ;; Tracked objects:
  8852 ;;		On entry : 0/0
  8853 ;;		On exit  : 0/0
  8854 ;;		Unchanged: 0/0
  8855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8856 ;;      Params:         0       0       0       0       0
  8857 ;;      Locals:         1       0       0       0       0
  8858 ;;      Temps:          5       0       0       0       0
  8859 ;;      Totals:         6       0       0       0       0
  8860 ;;Total ram usage:        6 bytes
  8861 ;; Hardware stack levels used:    1
  8862 ;; This function calls:
  8863 ;;		Nothing
  8864 ;; This function is called by:
  8865 ;;		Interrupt level 1
  8866 ;; This function uses a non-reentrant model
  8867 ;;
  8868                           
  8869                           
  8870                           ;psect for function _isr
  8871  1295                     _isr:
  8872  1295                     i1l1901:
  8873                           
  8874                           ;main.c: 101:     if (PIR1bits.RCIF) {
  8875  1295  1283               	bcf	3,5	;RP0=0, select bank0
  8876  1296  1303               	bcf	3,6	;RP1=0, select bank0
  8877  1297  1E8C               	btfss	12,5	;volatile
  8878  1298  2A9A               	goto	u208_21
  8879  1299  2A9B               	goto	u208_20
  8880  129A                     u208_21:
  8881  129A  2AB3               	goto	i1l151
  8882  129B                     u208_20:
  8883  129B                     i1l1903:
  8884                           
  8885                           ;main.c: 102:         char entrante = RCREG;
  8886  129B  081A               	movf	26,w	;volatile
  8887  129C  00F0               	movwf	??_isr
  8888  129D  0870               	movf	??_isr,w
  8889  129E  00F5               	movwf	isr@entrante
  8890                           
  8891                           ;main.c: 103:         switch (entrante) {
  8892  129F  2AA6               	goto	i1l1909
  8893  12A0                     i1l1905:
  8894                           
  8895                           ;main.c: 105:                 banderas = banderas | 1;
  8896  12A0  0877               	movf	_banderas,w
  8897  12A1  3801               	iorlw	1
  8898  12A2  00F0               	movwf	??_isr
  8899  12A3  0870               	movf	??_isr,w
  8900  12A4  00F7               	movwf	_banderas
  8901                           
  8902                           ;main.c: 106:                 break;
  8903  12A5  2AB3               	goto	i1l151
  8904  12A6                     i1l1909:
  8905  12A6  0875               	movf	isr@entrante,w
  8906  12A7  00F0               	movwf	??_isr
  8907  12A8  01F1               	clrf	??_isr+1
  8908                           
  8909                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8910                           ; Switch size 1, requested type "simple"
  8911                           ; Number of cases is 1, Range of values is 0 to 0
  8912                           ; switch strategies available:
  8913                           ; Name         Instructions Cycles
  8914                           ; simple_byte            4     3 (average)
  8915                           ; direct_byte           11     8 (fixed)
  8916                           ; jumptable            260     6 (fixed)
  8917                           ;	Chosen strategy is simple_byte
  8918  12A9  0871               	movf	??_isr+1,w
  8919  12AA  3A00               	xorlw	0	; case 0
  8920  12AB  1903               	skipnz
  8921  12AC  2AAE               	goto	i1l3545
  8922  12AD  2AB3               	goto	i1l151
  8923  12AE                     i1l3545:
  8924                           
  8925                           ; Switch size 1, requested type "simple"
  8926                           ; Number of cases is 1, Range of values is 71 to 71
  8927                           ; switch strategies available:
  8928                           ; Name         Instructions Cycles
  8929                           ; simple_byte            4     3 (average)
  8930                           ; direct_byte           14    11 (fixed)
  8931                           ; jumptable            263     9 (fixed)
  8932                           ;	Chosen strategy is simple_byte
  8933  12AE  0870               	movf	??_isr,w
  8934  12AF  3A47               	xorlw	71	; case 71
  8935  12B0  1903               	skipnz
  8936  12B1  2AA0               	goto	i1l1905
  8937  12B2  2AB3               	goto	i1l151
  8938  12B3                     i1l151:
  8939  12B3  0874               	movf	??_isr+4,w
  8940  12B4  008A               	movwf	10
  8941  12B5  0873               	movf	??_isr+3,w
  8942  12B6  0084               	movwf	4
  8943  12B7  0E72               	swapf	??_isr+2,w
  8944  12B8  0083               	movwf	3
  8945  12B9  0EFE               	swapf	btemp,f
  8946  12BA  0E7E               	swapf	btemp,w
  8947  12BB  0009               	retfie
  8948  12BC                     __end_of_isr:
  8949  007E                     btemp	set	126	;btemp
  8950  007E                     wtemp0	set	126
  8951                           
  8952                           	psect	intentry
  8953  0004                     __pintentry:	
  8954                           ;incstack = 0
  8955                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  8956                           
  8957  0004                     interrupt_function:
  8958  007E                     saved_w	set	btemp
  8959  0004  00FE               	movwf	btemp
  8960  0005  0E03               	swapf	3,w
  8961  0006  00F2               	movwf	??_isr+2
  8962  0007  0804               	movf	4,w
  8963  0008  00F3               	movwf	??_isr+3
  8964  0009  080A               	movf	10,w
  8965  000A  00F4               	movwf	??_isr+4
  8966  000B  160A  118A  2A95   	ljmp	_isr
  8967                           
  8968                           	psect	config
  8969                           
  8970                           ;Config register CONFIG1 @ 0x2007
  8971                           ;	Oscillator Selection bits
  8972                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8973                           ;	Watchdog Timer Enable bit
  8974                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8975                           ;	Power-up Timer Enable bit
  8976                           ;	PWRTE = OFF, PWRT disabled
  8977                           ;	RE3/MCLR pin function select bit
  8978                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8979                           ;	Code Protection bit
  8980                           ;	CP = OFF, Program memory code protection is disabled
  8981                           ;	Data Code Protection bit
  8982                           ;	CPD = OFF, Data memory code protection is disabled
  8983                           ;	Brown Out Reset Selection bits
  8984                           ;	BOREN = OFF, BOR disabled
  8985                           ;	Internal External Switchover bit
  8986                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8987                           ;	Fail-Safe Clock Monitor Enabled bit
  8988                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8989                           ;	Low Voltage Programming Enable bit
  8990                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8991                           ;	In-Circuit Debugger Mode bit
  8992                           ;	DEBUG = 0x1, unprogrammed default
  8993  2007                     	org	8199
  8994  2007  20D4               	dw	8404
  8995                           
  8996                           ;Config register CONFIG2 @ 0x2008
  8997                           ;	Brown-out Reset Selection bit
  8998                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8999                           ;	Flash Program Memory Self Write Enable bits
  9000                           ;	WRT = OFF, Write protection off
  9001  2008                     	org	8200
  9002  2008  3FFF               	dw	16383

Data Sizes:
    Strings     13
    Constant    40
    Data        0
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80     78      79
    BANK1            80     31      78
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ftoa@status	PTR int  size(2) Largest target is 512
		 -> NULL(NULL[0]), RAM(DATA[512]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_7(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    ftoa@cp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    readMPU@datos	PTR float  size(1) Largest target is 28
		 -> datos(BANK1[28]), 

    UARTSendString@str	PTR const unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK1[17]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    buffer	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK1[17]), 


Critical Paths under _main in COMMON

    _sendMPU->_UARTSendChar
    _sprintf->___lldiv
    ___llmod->___lldiv
    _UARTSendString->_UARTSendChar
    _readMPU->_I2C_Master_Write
    _readMPU->_I2C_Read
    _I2C_Start->_I2C_Master_Write
    _confMPU->_I2C_Master_Write
    _UARTInit->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sendMPU
    _sendMPU->_ftoa
    _ftoa->___flsub
    _sprintf->___llmod
    ___llmod->___lldiv
    ___fltol->___flmul
    ___flsub->___fladd
    _readMPU->___fladd
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    ___fladd->___fldiv
    _UARTInit->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_readMPU
    _sendMPU->_ftoa

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   26822
                                             76 BANK0      2     2      0
                    _I2C_Master_Init
                           _UARTInit
                            _confMPU
                            _readMPU
                            _sendMPU
 ---------------------------------------------------------------------------------
 (1) _sendMPU                                              1     1      0   15514
                                             75 BANK0      1     1      0
                       _UARTSendChar
                     _UARTSendString
                               _ftoa
 ---------------------------------------------------------------------------------
 (2) _ftoa                                                16    10      6   13359
                                             68 BANK0      7     1      6
                                              0 BANK1      9     9      0
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             34    25      9    3087
                                             23 BANK0     26    17      9
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     496
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     412
                                             13 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     381
                                             40 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                             60 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     334
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _UARTSendString                                       8     5      3    2133
                                              0 BANK0      8     5      3
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (3) _UARTSendChar                                         1     1      0      22
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readMPU                                             35    35      0   10441
                                             60 BANK0      4     4      0
                                              0 BANK1     31    31      0
           _I2C_Master_RepeatedStart
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     930
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4433
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             40 BANK0     20    12      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      62
                                              0 BANK0      1     1      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      65
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                            _I2C_ACK
                    _I2C_Master_Wait
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _confMPU                                              0     0      0      31
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      31
                                              6 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             9     4      5     836
                                             13 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     618
                                              6 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  6     6      0      15
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _UARTInit
     ___lldiv
   _confMPU
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _readMPU
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read
       _I2C_ACK
       _I2C_Master_Wait
       _I2C_NACK
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl
   _sendMPU
     _UARTSendChar
     _UARTSendString
       _UARTSendChar
     _ftoa
       ___flge
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___xxtofl
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         _isdigit

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     1F      4E       7       97.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A5      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 03 18:19:01 2021

                UARTInit@baud_rate 002D                       ___fldiv@aexp 0047  
                     ___fldiv@bexp 0046                                  pc 0002  
                     ___fldiv@sign 003F                 __size_of_I2C_Start 0014  
                               _BF 04A0                                 l40 1233  
                               l43 123F                                 l52 1207  
                               l37 1232                                 l61 1210  
                               l46 11F5                                 l70 1257  
                               l55 11FE                                 l72 125B  
                               l64 1215                                 l73 125C  
                               l49 1270                                 l58 120C  
                               l90 1339                                 l82 1317  
                               l67 1219                                 l87 1331  
                               l89 1337                                 fsr 0004  
              ___wmul@multiplicand 0022                __Umul8_16@word_mpld 0026  
                              l141 17FF                                l230 094E  
                              l222 0398                                l170 1503  
                              l227 0685                                l219 038C  
                              l316 12CA                                l173 121B  
                              l502 088F                                l318 12E2  
                              l352 1490                                l176 1225  
                              l184 1428                                l512 088F  
                              l613 0E82                                l509 087A  
                              l630 0F4D                                l622 0FFF  
                              l615 0E59                                l711 02EE  
                              l640 0F93                                l609 0DDB  
                              l705 0382                                l801 0C14  
                              l634 0F71                                l490 1522  
                              l538 13D1                                l651 0FF3  
                              l643 0FD1                                l652 0FFF  
                              l724 12F9                                l820 0D77  
                              l717 0376                                l493 158E  
                              l726 130B                                l494 15A7  
                              l751 1663                                l655 1294  
                              l681 0A9D                                l665 09AB  
                              l825 0813                                l809 0CBE  
                              l762 162D                                l498 124C  
                              l667 0B2B                                l763 1639  
                              l755 1611                                l772 07B4  
                              l749 15CC                                l687 0B0F  
                              l689 0B1F                                l798 0BEE  
                              _PEN 048A                                _SEN 0488  
                  __end_of_I2C_ACK 1211                                _isr 1295  
                              fsr0 0004                                indf 0000  
                     ___flmul@aexp 003C                       ___flmul@bexp 0041  
                     ___flmul@sign 003B                       ___flmul@temp 0046  
                     ___flmul@prod 0042                       ___fltol@exp1 0052  
                             l2011 144B                               l2021 1479  
                             l2013 144F                               l2005 1429  
                             l2101 0DF1                               l2023 1482  
                             l2015 1458                               l2007 143B  
                             l2111 0E05                               l2103 0DF5  
                             l2017 146A                               l2009 143E  
                             l2025 1488                               l2201 0F7F  
                             l2121 0E19                               l2113 0E09  
                             l2105 0DF9                               l2019 1478  
                             l2211 0F90                               l2203 0F81  
                             l2131 0E3D                               l2123 0E1D  
                             l2115 0E0D                               l2107 0DFD  
                             l2051 0D7F                               l2221 0FAF  
                             l2205 0F85                               l2141 0E6D  
                             l2133 0E5D                               l2125 0E21  
                             l2117 0E11                               l2109 0E01  
                             l2061 0D94                               l2053 0D85  
                             l3101 0029                               l2301 1240  
                             l3031 1233                               l2231 0FE8  
                             l2223 0FCD                               l2215 0F98  
                             l2207 0F86                               l2143 0E76  
                             l2135 0E66                               l2119 0E15  
                             l2127 0E25                               l2071 0DAC  
                             l2063 0D9C                               l2055 0D89  
                             l3111 003E                               l3103 002F  
                             l2303 124A                               l2311 0821  
                             l3033 1239                               l2241 0FFE  
                             l2233 0FE9                               l2225 0FD6  
                             l2217 0F9D                               l2209 0F8A  
                             l2161 0EBC                               l2153 0E94  
                             l2137 0E68                               l2145 0E7A  
                             l2129 0E26                               l2081 0DBE  
                             l2073 0DB2                               l2065 0D9D  
                             l2057 0D8A                               l2049 0D78  
                             l3201 02D7                               l3121 005B  
                             l3113 0046                               l3105 0033  
                             l2305 124C                               l2321 0848  
                             l3041 12D1                               l2235 0FED  
                             l2227 0FDB                               l2219 0FAB  
                             l2163 0EBE                               l2155 0EAB  
                             l2147 0E86                               l2171 0ED1  
                             l2139 0E6C                               l2083 0DC3  
                             l2091 0DD3                               l2075 0DB3  
                             l2059 0D8F                               l2067 0D9F  
                             l3211 0306                               l3203 02EB  
                             l3131 0072                               l3123 005F  
                             l3115 0048                               l3107 0034  
                             l2331 0856                               l2323 084A  
                             l2315 082A                               l3051 1386  
                             l3043 12D8                               l3035 12BC  
                             l2237 0FEF                               l2229 0FE3  
                             l2173 0EE7                               l2181 0F3F  
                             l2165 0EC2                               l2157 0EAF  
                             l2149 0E8B                               l2093 0DE1  
                             l2085 0DC8                               l2077 0DB9  
                             l2069 0DA7                               l3221 0341  
                             l3213 030A                               l3133 0074  
                             l3125 0060                               l3117 0050  
                             l3109 0039                               l2341 087F  
                             l2325 084E                               l2333 0868  
                             l2317 083F                               l2309 0814  
                             l3061 13BA                               l3053 1389  
                             l3045 12DE                               l3037 12C0  
                             l2239 0FFA                               l2191 0F6C  
                             l2183 0F55                               l2175 0F25  
                             l2167 0EC3                               l2159 0EB3  
                             l2095 0DE5                               l2087 0DD0  
                             l2079 0DBD                               l3071 12E8  
                             l3231 036E                               l3223 0350  
                             l3215 0323                               l3207 02F3  
                             l3151 00E5                               l3143 008F  
                             l3135 007C                               l3127 0065  
                             l3119 0055                               l2511 15FA  
                             l2503 15DD                               l2343 0884  
                             l2319 0840                               l3063 13C3  
                             l3055 1396                               l3039 12C4  
                             l3311 0C9F                               l3303 0C53  
                             l3401 0890                               l2273 1208  
                             l2193 0F70                               l2185 0F5A  
                             l2177 0F2B                               l2169 0ECC  
                             l2097 0DE9                               l2089 0DD1  
                             l3073 12EF                               l3233 036F  
                             l3225 035A                               l3209 02F8  
                             l3217 0329                               l3161 0162  
                             l3153 0111                               l3145 009F  
                             l3137 0081                               l3129 006A  
                             l2521 1631                               l2513 1608  
                             l2505 15E2                               l2281 1504  
                             l2345 1271                               l3057 139A  
                             l3065 13C9                               l3049 137C  
                             l3321 0CDB                               l3313 0CA6  
                             l3241 0B34                               l2275 1211  
                             l2195 0F75                               l2179 0F30  
                             l2099 0DED                               l3075 12F3  
                             l3235 037A                               l3227 035C  
                             l3219 0336                               l3171 01E2  
                             l3163 017F                               l3155 012D  
                             l3147 00AC                               l3139 0086  
                             l2531 165B                               l2523 163B  
                             l2515 1618                               l2507 15EF  
                             l3411 03A9                               l2291 1566  
                             l2283 151A                               l2347 1275  
                             l2339 086F                               l3059 13AC  
                             l3091 0812                               l3083 0803  
                             l3331 0D48                               l3323 0CE1  
                             l3315 0CB5                               l3307 0C8A  
                             l3251 0B59                               l3243 0B3A  
                             l2197 0F78                               l2189 0F63  
                             l3077 1302                               l3069 12E6  
                             l3229 036A                               l3181 029A  
                             l3173 020F                               l3165 018F  
                             l3157 0149                               l3149 00C9  
                             l2525 1651                               l2517 1623  
                             l2509 15F6                               l3421 03C8  
                             l3405 0386                               l2277 121B  
                             l2701 13F5                               l2293 156A  
                             l2285 1536                               l3085 0804  
                             l3333 0D4F                               l3325 0CE8  
                             l3317 0CCB                               l3309 0C94  
                             l3253 0B5D                               l3261 0B99  
                             l3245 0B41                               l3095 124E  
                             l3351 1260                               l2199 0F7A  
                             l2711 095C                               l3079 1307  
                             l3191 02BF                               l3183 02A3  
                             l3175 021F                               l3167 01AC  
                             l3159 0152                               l2527 1656  
                             l2519 1627                               l3431 043A  
                             l3423 03D5                               l3407 0392  
                             l2279 1221                               l2703 13FD  
                             l2295 15A4                               l2287 153E  
                             l3087 080A                               l3327 0CEC  
                             l3335 0D53                               l3319 0CD7  
                             l3271 0BD6                               l3263 0BA7  
                             l3255 0B72                               l3247 0B46  
                             l3239 0B2F                               l3361 11FB  
                             l3097 1253                               l3353 1265  
                             l2801 0A6E                               l2721 0973  
                             l2713 0960                               l3193 02C8  
                             l3185 02B1                               l3177 024C  
                             l3169 01C5                               l2529 165A  
                             l3441 04E8                               l3433 0455  
                             l3425 03E7                               l3417 03AD  
                             l3409 039E                               l2705 140A  
                             l2297 15A6                               l2289 1542  
                             l3089 0810                               l3329 0CF9  
                             l3281 0BF5                               l3273 0BDA  
                             l3265 0BAB                               l3257 0B85  
                             l3249 0B49                               l3337 0D61  
                             l3347 11ED                               l3355 11FF  
                             l3371 1326                               l3363 130F  
                             l2811 0A86                               l2803 0A77  
                             l2731 0989                               l2723 0974  
                             l2715 0961                               l2707 094F  
                             l3187 02BA                               l3195 02CE  
                             l3179 0272                               l3099 0022  
                             l2491 15AB                               l3451 0644  
                             l3443 0529                               l3435 0470  
                             l3427 0404                               l3419 03C0  
                             l3291 0C3D                               l3283 0C18  
                             l3339 0D73                               l3267 0BAE  
                             l3275 0BEB                               l3259 0B89  
                             l3349 11F2                               l3357 1204  
                             l3373 132C                               l3365 1314  
                             l2821 0AB5                               l2813 0A9A  
                             l2805 0A7D                               l2741 09A0  
                             l2733 098D                               l2717 0966  
                             l2725 0976                               l2709 0956  
                             l3197 02D2                               l3189 02BE  
                             l2493 15B0                               l3445 056A  
                             l3437 048B                               l3429 041F  
                             l3293 0C43                               l3285 0C26  
                             l3277 0BF0                               l3269 0BC3  
                             l3381 068E                               l3359 11F6  
                             l3375 1338                               l3367 131B  
                             l2831 0AF3                               l2823 0AB9  
                             l2807 0A81                               l2751 09C3  
                             l2743 09A1                               l2735 098E  
                             l2727 097E                               l2719 096B  
                             l3199 02D3                               l2495 15B4  
                             l3447 05C2                               l3439 04A6  
                             l3295 0C4B                               l3287 0C2B  
                             l3543 0C09                               l3391 06FC  
                             l3383 06A9                               l3455 1664  
                             l3471 1344                               l3369 1321  
                             l2841 0B19                               l2833 0B02  
                             l2825 0AD2                               l2817 0AA2  
                             l2809 0A82                               l2761 09DA  
                             l2737 0993                               l2745 09A3  
                             l2729 0983                               l2497 15C4  
                             l3449 0603                               l3297 0C51  
                             l3289 0C39                               l3393 0739  
                             l3385 06B6                               l3457 17F9  
                             l3481 1363                               l3473 1347  
                             l2851 122A                               l2843 0B1B  
                             l2835 0B06                               l2819 0AA7  
                             l2827 0AD8                               l2771 0A06  
                             l2763 09EC                               l2747 09B3  
                             l2755 09CC                               l2739 0998  
                             l2499 15D4                               l3395 0775  
                             l3387 06BC                               l3379 0686  
                             l3491 1373                               l3483 1368  
                             l3475 134A                               l2853 122D  
                             l2861 1498                               l2837 0B0E  
                             l2829 0AE5                               l2773 0A0B  
                             l2781 0A2B                               l2765 09F4  
                             l2757 09D1                               l2749 09BF  
                             l3397 07B3                               l3389 06D5  
                             l3485 1369                               l3477 134D  
                             l3469 133A                               l2855 1230  
                             l2871 14F6                               l2863 14C5  
                             l2839 0B15                               l2791 0A56  
                             l2783 0A3D                               l2775 0A1D  
                             l2767 09FC                               l3487 136A  
                             l3479 1352                               l2857 1231  
                             l2849 1226                               l2881 14FD  
                             l2873 14F7                               l2865 14C7  
                             l2793 0A5E                               l2785 0A3E  
                             l2777 0A21                               l2769 0A04  
                             l2697 13D2                               l3489 136D  
                             l2883 14FE                               l2875 14F8  
                             l2867 14F4                               l2859 1491  
                             l2795 0A60                               l2787 0A4C  
                             l2779 0A22                               l2699 13D9  
                             l2885 14FF                               l2877 14FB  
                             l2869 14F5                               l2797 0A69  
                             l2789 0A50                               l2887 1502  
                             l2879 14FC                               l2799 0A6D  
                             ?_isr 0070                               STR_1 07F8  
                             STR_2 07F8                               STR_3 07F8  
                             STR_4 07F8                               STR_5 07F8  
                             STR_6 07F8                               STR_7 07ED  
                             u3000 0867                               u3001 0866  
                             u2210 144F                               u3010 086E  
                             u2211 144E                               u3011 086D  
                             u2205 1440                               u2230 146A  
                             u3030 087F                               u2231 1469  
                             u3031 087E                               u2400 0DE5  
                             u2320 0D89                               u4000 0A6D  
                             u3040 0884                               u2225 1451  
                             u2401 0DE4                               u2321 0D88  
                             u4001 0A6C                               u3041 0883  
                             u3025 0871                               u2250 1488  
                             u2410 0E3D                               u2330 0D8F  
                             u2251 1487                               u2235 1466  
                             u2411 0E3C                               u2331 0D8E  
                             u2420 0E48                               u2340 0D94  
                             u4100 0B02                               u4020 0A81  
                             u2245 147A                               u2501 0E9D  
                             u2421 0E46                               u2341 0D93  
                             u4101 0B01                               u4021 0A80  
                             u2190 143B                               u2510 0EAF  
                             u2502 0EA4                               u2430 0E49  
                             u2350 0DB2                               u4110 0B19  
                             u4030 0A86                               u2191 143A  
                             u2511 0EAE                               u2503 0EAB  
                             u2415 0E39                               u2351 0DB1  
                             u4111 0B18                               u4031 0A85  
                             u4015 0A70                               u4120 1498  
                             u4200 123F                               u2600 0F5A  
                             u2520 0EB3                               u2440 0E5D  
                             u2360 0DBD                               u4040 0A9A  
                             u4121 1497                               u4201 123E  
                             u2601 0F59                               u2521 0EB2  
                             u2441 0E5C                               u2361 0DBC  
                             u4105 0AFE                               u4041 0A99  
                             u4130 14A6                               u2530 0EC2  
                             u2450 0E6C                               u2370 0DC3  
                             u4050 0AA1                               u4210 12C4  
                             u2531 0EC1                               u2451 0E6B  
                             u2371 0DC2                               u4051 0AA0  
                             u4211 12C3                               u4140 14D5  
                             u2700 0FAF                               u2620 0F70  
                             u2380 0DC8                               u4060 0AA7  
                             u3500 1627                               u3420 15B0  
                             u4300 13C9                               u2701 0FAE  
                             u2621 0F6F                               u2381 0DC7  
                             u4061 0AA6                               u3501 1626  
                             u3421 15AF                               u4301 13C8  
                             u2710 0FBE                               u2630 0F75  
                             u2550 0EE7                               u2470 0E82  
                             u2390 0DE1                               u4070 0AB9  
                             u4310 12F3                               u3510 162D  
                             u3430 15B4                               u4135 14A1  
                             u2631 0F74                               u2615 0F65  
                             u2551 0EE6                               u2471 0E81  
                             u2391 0DE0                               u4071 0AB8  
                             u4311 12F2                               u3511 162C  
                             u3431 15B3                               u2720 0FCD  
                             u2640 0F7F                               u2480 0E86  
                             u4080 0AC8                               u4400 005F  
                             u3520 1631                               u3440 15D4  
                             u4240 12DE                               u4145 14D0  
                             u2721 0FCC                               u2641 0F7E  
                             u2561 0EFE                               u2553 0EE3  
                             u2545 0EC5                               u2481 0E85  
                             u2465 0E6F                               u4401 005E  
                             u3521 1630                               u3441 15D3  
                             u4241 12DD                               u4225 12CB  
                             u5017 1340                               u2730 0FD6  
                             u2650 0F85                               u2570 0F12  
                             u2562 0EFF                               u2490 0E8B  
                             u4090 0AE5                               u4330 1307  
                             u4410 0065                               u3530 1646  
                             u4250 1386                               u2731 0FD5  
                             u2715 0FB9                               u2651 0F84  
                             u2571 0F13                               u2563 0F04  
                             u2491 0E8A                               u4091 0AE4  
                             u4331 1306                               u4411 0064  
                             u4251 1385                               u4235 12D2  
                             u2740 0FDB                               u2660 0F8A  
                             u2580 0F30                               u2572 0F18  
                             u2564 0F05                               u4420 006A  
                             u3540 1656                               u3460 15F5  
                             u4340 080A                               u2741 0FDA  
                             u2661 0F89                               u2581 0F2F  
                             u2573 0F19                               u2565 0F0A  
                             u4085 0AC3                               u4325 12FA  
                             u4501 0171                               u4421 0069  
                             u3541 1655                               u3461 15F4  
                             u2901 1551                               u4341 0809  
                             u4190 1239                               u2750 0FE8  
                             u2670 0F90                               u2590 0F55  
                             u2566 0F0B                               u4502 0178  
                             u4430 0081                               u3550 165A  
                             u2910 156A                               u2902 1552  
                             u4270 139A                               u4350 0810  
                             u4191 1238                               u2751 0FE7  
                             u2671 0F8F                               u2591 0F54  
                             u4095 0AE1                               u4511 019E  
                             u4503 017F                               u4431 0080  
                             u3551 1659                               u3535 1641  
                             u3455 15E7                               u2911 1569  
                             u2903 1557                               u4271 1399  
                             u4351 080F                               u4360 125B  
                             u2840 1210                               u2760 0FED  
                             u2680 0F97                               u4512 01A5  
                             u4440 0086                               u3480 1617  
                             u3800 140A                               u2904 1558  
                             u4280 13AC                               u4361 125A  
                             u2841 120F                               u2761 0FEC  
                             u2681 0F96                               u4513 01AC  
                             u4441 0085                               u3481 1616  
                             u3801 1409                               u2921 1579  
                             u2905 155D                               u4281 13AB  
                             u4265 138B                               u2850 1219  
                             u2770 0FFE                               u2690 0F9D  
                             u4370 0033                               u3810 1416  
                             u2930 15A4                               u2922 157A  
                             u2906 155E                               u2851 1218  
                             u2771 0FFD                               u2691 0F9C  
                             u4531 01D4                               u4451 00D7  
                             u4371 0032                               u3475 1609  
                             u2931 15A3                               u2923 157F  
                             u3900 09D1                               u4700 0319  
                             u4620 02BE                               u4532 01DB  
                             u4452 00DE                               u4380 0039  
                             u2860 1221                               u3820 1428  
                             u2924 1580                               u2940 124A  
                             u3901 09D0                               u4621 02BD  
                             u4605 029C                               u4541 0201  
                             u4533 01E2                               u4525 01AE  
                             u4461 00F3                               u4453 00E5  
                             u4381 0038                               u2861 1220  
                             u3821 1427                               u3805 1406  
                             u2925 1585                               u2941 1249  
                             u4285 13A8                               u3910 0A0B  
                             u3830 0960                               u4710 0336  
                             u4542 0208                               u4462 00FA  
                             u4390 003E                               u2926 1586  
                             u2870 151A                               u2950 0821  
                             u3911 0A0A                               u3831 095F  
                             u4711 0335                               u4615 02B3  
                             u4551 022E                               u4543 020F  
                             u4471 011F                               u4463 0101  
                             u4391 003D                               u3495 161C  
                             u2935 15A0                               u2871 1519  
                             u2951 0820                               u4295 13BB  
                             u3840 0966                               u4720 0350  
                             u4640 02D2                               u4560 0258  
                             u4552 0235                               u4472 0126  
                             u2880 1536                               u2960 0838  
                             u4800 0C43                               u3841 0965  
                             u4721 034F                               u4705 0314  
                             u4641 02D1                               u4553 023C  
                             u4481 013B                               u4473 012D  
                             u2881 1535                               u4801 0C42  
                             u3850 096B                               u4730 036E  
                             u4650 02D7                               u4482 0142  
                             u2890 1542                               u2970 084E  
                             u4810 0C4B                               u3851 096A  
                             u4731 036D                               u4715 0332  
                             u4651 02D6                               u4635 02C1  
                             u4571 0264                               u4483 0149  
                             u2891 1541                               u2971 084D  
                             u4811 0C4A                               u3940 0A21  
                             u3860 098D                               u4660 02EB  
                             u4580 0280                               u4572 026B  
                             u2980 0855                               u4740 0B3A  
                             _RCEN 048B                               u3941 0A20  
                             u3925 0A0D                               u3861 098C  
                             u4725 034C                               u4661 02EA  
                             u4573 0272                               u4565 0253  
                             u2981 0854                               u2965 0833  
                             u4741 0B39                               u3870 0993  
                             u4670 02F2                               u3790 13E3  
                             u4910 0D61                               u4830 0C89  
                             u4750 0B59                               u3935 0A16  
                             u3871 0992                               u4671 02F1  
                             u4591 028C                               u4495 014B  
                             u4911 0D60                               u4831 0C88  
                             u4751 0B58                               u3960 0A3D  
                             u3880 0998                               u4680 02F8  
                             u4592 0293                               u4920 0D73  
                             u4840 0C94                               u4760 0B99  
                             u3961 0A3C                               u3881 0997  
                             u4681 02F7                               u4593 029A  
                             u4585 027B                               u4921 0D72  
                             u4905 0D04                               u4841 0C93  
                             u4825 0C56                               u4761 0B98  
                             u4930 131B                               u3970 0A56  
                             u3890 09B3                               u4690 030A  
                             u4850 0C9F                               u4770 0BA7  
                             u4931 131A                               u3971 0A55  
                             u3955 0A24                               u3891 09B2  
                             u4691 0309                               u2995 0857  
                             u4851 0C9E                               u4835 0C85  
                             u4771 0BA6                               u4940 1326  
                             u3980 0A5E                               u4860 0CB5  
                             u4780 0BEA                               u4941 1325  
                             u3981 0A5D                               u3965 0A39  
                             u4861 0CB4                               u4781 0BE9  
                             u4950 1337                               u4870 0CCB  
                             u4790 0C18                               u4951 1336  
                             u4871 0CCA                               u4855 0C9B  
                             u4791 0C17                               u4880 0CE1  
                             u4960 06A9                               u4881 0CE0  
                             u4865 0CB1                               u4961 06A8  
                             u4970 0392                               u4890 0CF8  
                             u3995 0A62                               u4971 0391  
                             u4891 0CF7                               u4875 0CC7  
                             u4980 039E                               u4981 039D  
                             u4990 03D5                               u4991 03D4  
                             u4995 03D1                               _RSEN 0489  
                 __end_of_I2C_NACK 121A   __end_of_I2C_Master_RepeatedStart 1208  
                             _main 133A                               _ftoa 0686  
                 __end_of_I2C_Read 133A                               btemp 007E  
                             start 000E                    ___fldiv@new_exp 0040  
                            ??_isr 0070                   ?_I2C_Master_Init 0070  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                    ___fltol@sign1 0051                    __end_of___fladd 1000  
                            ?_main 0070                              _ACKEN 048C  
                            ?_ftoa 0064                              _ACKDT 048D  
                  __end_of___fldiv 0B2C                    __end_of___flneg 124D  
                  __end_of___flmul 0383                    __end_of___flsub 1295  
                  __end_of___fltol 0890                              _ANSEL 0188  
                  __end_of___lldiv 1491                    __end_of___llmod 13D2  
                            i1l151 12B3                              _RCREG 001A  
                            _SPBRG 0099                              _PORTA 0005  
                            _TRISA 0085                              _SSPIF 0063  
                            _TXREG 0019                    __end_of_confMPU 094F  
                 __end_of_UARTInit 1504                              _datos 00A2  
                  __end_of_readMPU 0686                    __end_of_dpowers 07ED  
                  __end_of_isdigit 0814                    __end_of_sendMPU 1800  
                            ftoa@f 0064                              ftoa@l 00D3  
                __end_of_I2C_Start 1271                              pclath 000A  
                            status 0003                              wtemp0 007E  
                  __end_of_sprintf 0D78                    __initialization 0011  
                     __end_of_main 137C                       __end_of_ftoa 07B5  
                        ??_I2C_ACK 0076                             ??_main 006C  
                           ??_ftoa 006A                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0070                 ??_I2C_Master_Start 0076  
               ??_I2C_Master_Write 0076                   ___llmod@dividend 0031  
                           i1l1901 1295                             i1l1903 129B  
                           i1l1905 12A0                             i1l1909 12A6  
                           i1l3545 12AE                             u208_20 129B  
                           u208_21 129A                        isr@entrante 0075  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013                   __end_of___xxtofl 1664  
         _I2C_Master_RepeatedStart 11FF                             ___flge 1504  
                 I2C_Read@ACK_NACK 0020                          ??___fladd 0050  
                           ___wmul 12BC                          ??___fldiv 0036  
                        ??___flneg 0076                          ??___flmul 0036  
                   readMPU@guardar 00DD                          ??___flsub 0076  
                        ??___fltol 004C                          ??___lldiv 0076  
                        ??___llmod 0035                             _buffer 006E  
          __size_of_UARTSendString 0057                     readMPU@valores 00CF  
                        ??_confMPU 0077                             _status 00A0  
                           ftoa@cp 00D7                          ?_I2C_NACK 0070  
                        ??_readMPU 005C                          ??_isdigit 0076  
                        ?_I2C_Read 0070                 __size_of__Umul8_16 0029  
                        ??_sendMPU 006B                             saved_w 007E  
                        ??_sprintf 0040                         ___flge@ff1 0020  
                       ___flge@ff2 0024                       ___xxtofl@arg 002A  
                     ___xxtofl@exp 0029                       ___xxtofl@val 0020  
          __end_of__initialization 001E                         ___flneg@f1 0020  
                       ___fltol@f1 0048                     __pcstackCOMMON 0070  
                        ?_UARTInit 002D                         ??_I2C_NACK 0076  
                       ??_I2C_Read 0076           UARTSendString@max_length 0022  
                     readMPU@datos 00ED                       sprintf@width 004C  
                       __pbssBANK0 006E                         __pbssBANK1 00A0  
                     I2C_Read@Data 0021                  __end_of__Umul8_16 130C  
                       __pmaintext 133A                            ?___flge 0020  
                          ?___wmul 0020                         ??_UARTInit 0032  
                       __pintentry 0004                            _I2C_ACK 1208  
                          _ACKSTAT 048E                          ?___xxtofl 0020  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                       __stringtab 07B5                      ?_UARTSendChar 0070  
                     I2C_Start@add 0020                          _I2C_Start 125D  
                  __size_of___flge 00A4                            ___fladd 0D78  
                          ___fldiv 094F                            ___flneg 1240  
                          ___flmul 0022                            ___flsub 1271  
                          ___fltol 0814                            ___lldiv 1429  
                  __size_of___wmul 0027                            ___llmod 137C  
                   _UARTSendString 13D2                            _confMPU 0890  
                          __ptext1 1664                            __ptext2 0686  
                          __ptext3 0B2C                            __ptext4 0800  
                          __ptext5 12BC                            __ptext6 137C  
                          __ptext7 0814                            __ptext8 1271  
                          __ptext9 1240                            _readMPU 0383  
                          _dpowers 07C5                            _isdigit 0800  
                     __size_of_isr 0027                         ??___xxtofl 0024  
                          _sendMPU 1664           __size_of_I2C_Master_Init 000D  
         __size_of_I2C_Master_Wait 000D           __size_of_I2C_Master_Stop 0009  
                          _sprintf 0B2C                            clrloop0 11E6  
             end_of_initialization 001E                     ??_UARTSendChar 0076  
                          ftoa@buf 00BE                            ftoa@rem 00CF  
       ??_I2C_Master_RepeatedStart 0076                         ?_I2C_Start 0070  
        __size_of_I2C_Master_Start 0009          __size_of_I2C_Master_Write 0010  
                  ___lldiv@divisor 0020                    ___lldiv@counter 002C  
                        _RCSTAbits 0018             __end_of_UARTSendString 1429  
                      ___fladd@grs 005B                      ___xxtofl@sign 0028  
                __size_of_I2C_NACK 0009                          _TRISCbits 0087  
                __size_of_I2C_Read 002E                        ___fldiv@grs 0042  
                      ___fldiv@rem 003B                        ___flmul@grs 003D  
                        _TXSTAbits 0098                    ?_UARTSendString 0020  
                   __end_of___flge 15A8                     __end_of___wmul 12E3  
                __size_of_UARTInit 0073                start_initialization 0011  
                      __end_of_isr 12BC                         ftoa@status 0068  
                ??_I2C_Master_Init 0076                  ??_I2C_Master_Wait 0076  
                ??_I2C_Master_Stop 0076                    ___llmod@divisor 002D  
                      ??_I2C_Start 0077                    ___llmod@counter 0036  
                         ??___flge 0028                           ??___wmul 0076  
                        __Umul8_16 12E3                           ?_I2C_ACK 0070  
             __end_of_UARTSendChar 1226                          ___fladd@a 004C  
                        ___fladd@b 0048                          ___fldiv@a 002E  
                        ___fldiv@b 0032                          ___flmul@a 0032  
                        ___flmul@b 002E                        __pbssCOMMON 0077  
                        ___flsub@a 005C                          ___flsub@b 0060  
                        ___latbits 0002                      __pcstackBANK0 0020  
                    __pcstackBANK1 00CF                  __size_of___xxtofl 00BC  
                      sprintf@flag 0045                        sprintf@prec 004E  
                 _I2C_Master_Start 11ED                   _I2C_Master_Write 124D  
                    UARTSendChar@c 0076                           ?___fladd 0048  
                         ?___fldiv 002E                           ?___flneg 0020  
                         ?___flmul 002E                           ?___flsub 005C  
                         ?___fltol 0048                           ?___lldiv 0020  
                         ?___llmod 002D                         ?__Umul8_16 0020  
             I2C_Master_Write@data 0076                          __pstrings 07B5  
                         ?_confMPU 0070                           _I2C_NACK 1211  
                         ?_readMPU 0070                           ?_isdigit 0070  
                         _I2C_Read 130C                           ?_sendMPU 0070  
                         ?_sprintf 0037                  interrupt_function 0004  
                   ___wmul@product 0024                          clear_ram0 11E5  
                         _PIE1bits 008C                    UARTSendString@i 0026  
                         _PIR1bits 000C                           _UARTInit 1491  
                 __size_of_I2C_ACK 0009                        __stringbase 07C4  
                ___wmul@multiplier 0020                   ??_UARTSendString 0023  
            __size_of_UARTSendChar 000C                       UARTInit@BRGH 0031  
                      ??__Umul8_16 0022  __size_of_I2C_Master_RepeatedStart 0009  
                 __size_of___fladd 0288                   __size_of___fldiv 01DD  
                 __size_of___flneg 000D                   __size_of___flmul 0361  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___flsub 0024  
                 __size_of___fltol 007C                   __size_of___lldiv 0068  
                 __size_of___llmod 0056                 __end_of__stringtab 07C5  
                      _isdigit$895 0020                   __size_of_confMPU 00BF  
                         _banderas 0077                         sprintf@val 0047  
                  _I2C_Master_Init 1226                           ___xxtofl 15A8  
                  _I2C_Master_Wait 1233                   __size_of_readMPU 0303  
                  _I2C_Master_Stop 11F6                   __size_of_isdigit 0014  
                 __size_of_sendMPU 019C                           __ptext10 1504  
                         __ptext11 13D2                           __ptext20 130C  
                         __ptext12 121A                           __ptext21 1211  
                         __ptext13 0383                           __ptext30 1429  
                         __ptext22 1208                           __ptext14 15A8  
                         __ptext31 1226                           __ptext23 11FF  
                         __ptext15 0022                           __ptext32 1295  
                         __ptext24 0890                           __ptext16 12E3  
                         __ptext25 124D                           __ptext17 094F  
                         __ptext26 11F6                           __ptext18 0D78  
                         __ptext27 11ED                           __ptext19 125D  
                         __ptext28 1233                           __ptext29 1491  
                 __size_of_sprintf 024C                       _UARTSendChar 121A  
                    __size_of_main 0042                      __size_of_ftoa 012F  
         __end_of_I2C_Master_Start 11F6                           readMPU@i 00EB  
         __end_of_I2C_Master_Write 125D                         _INTCONbits 000B  
                         isdigit@c 0021                  UARTSendString@str 0020  
                         intlevel1 0000                          sprintf@ap 0046  
                        sprintf@sp 004B                   ___lldiv@dividend 0024  
                        stringcode 07BF            __end_of_I2C_Master_Init 1233  
          __end_of_I2C_Master_Wait 1240            __end_of_I2C_Master_Stop 11FF  
           __Umul8_16@multiplicand 0020                           sprintf@c 0050  
                         sprintf@f 0037                   ___lldiv@quotient 0028  
                         stringdir 07BF                           stringtab 07B5  
                      _SSPCON2bits 0091                      ___fladd@signs 0058  
                     ___fladd@aexp 0059                       ___fladd@bexp 005A  
             __Umul8_16@multiplier 0028                  __Umul8_16@product 0024  
