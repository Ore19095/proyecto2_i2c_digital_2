

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 03 13:29:41 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F887 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  008F                     	;# 
   123  0090                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0097                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009A                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  009F                     	;# 
   141  0105                     	;# 
   142  0107                     	;# 
   143  0108                     	;# 
   144  0109                     	;# 
   145  010C                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010F                     	;# 
   150  0185                     	;# 
   151  0187                     	;# 
   152  0188                     	;# 
   153  0189                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  0000                     	;# 
   157  0001                     	;# 
   158  0002                     	;# 
   159  0003                     	;# 
   160  0004                     	;# 
   161  0005                     	;# 
   162  0006                     	;# 
   163  0007                     	;# 
   164  0008                     	;# 
   165  0009                     	;# 
   166  000A                     	;# 
   167  000B                     	;# 
   168  000C                     	;# 
   169  000D                     	;# 
   170  000E                     	;# 
   171  000E                     	;# 
   172  000F                     	;# 
   173  0010                     	;# 
   174  0011                     	;# 
   175  0012                     	;# 
   176  0013                     	;# 
   177  0014                     	;# 
   178  0015                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001B                     	;# 
   186  001B                     	;# 
   187  001C                     	;# 
   188  001D                     	;# 
   189  001E                     	;# 
   190  001F                     	;# 
   191  0081                     	;# 
   192  0085                     	;# 
   193  0086                     	;# 
   194  0087                     	;# 
   195  0088                     	;# 
   196  0089                     	;# 
   197  008C                     	;# 
   198  008D                     	;# 
   199  008E                     	;# 
   200  008F                     	;# 
   201  0090                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0094                     	;# 
   208  0095                     	;# 
   209  0096                     	;# 
   210  0097                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009A                     	;# 
   214  009B                     	;# 
   215  009C                     	;# 
   216  009D                     	;# 
   217  009E                     	;# 
   218  009F                     	;# 
   219  0105                     	;# 
   220  0107                     	;# 
   221  0108                     	;# 
   222  0109                     	;# 
   223  010C                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  0185                     	;# 
   229  0187                     	;# 
   230  0188                     	;# 
   231  0189                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  000E                     	;# 
   249  000E                     	;# 
   250  000F                     	;# 
   251  0010                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001D                     	;# 
   267  001E                     	;# 
   268  001F                     	;# 
   269  0081                     	;# 
   270  0085                     	;# 
   271  0086                     	;# 
   272  0087                     	;# 
   273  0088                     	;# 
   274  0089                     	;# 
   275  008C                     	;# 
   276  008D                     	;# 
   277  008E                     	;# 
   278  008F                     	;# 
   279  0090                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0093                     	;# 
   285  0094                     	;# 
   286  0095                     	;# 
   287  0096                     	;# 
   288  0097                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009A                     	;# 
   292  009B                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  009F                     	;# 
   297  0105                     	;# 
   298  0107                     	;# 
   299  0108                     	;# 
   300  0109                     	;# 
   301  010C                     	;# 
   302  010C                     	;# 
   303  010D                     	;# 
   304  010E                     	;# 
   305  010F                     	;# 
   306  0185                     	;# 
   307  0187                     	;# 
   308  0188                     	;# 
   309  0189                     	;# 
   310  018C                     	;# 
   311  018D                     	;# 
   312  0000                     	;# 
   313  0001                     	;# 
   314  0002                     	;# 
   315  0003                     	;# 
   316  0004                     	;# 
   317  0005                     	;# 
   318  0006                     	;# 
   319  0007                     	;# 
   320  0008                     	;# 
   321  0009                     	;# 
   322  000A                     	;# 
   323  000B                     	;# 
   324  000C                     	;# 
   325  000D                     	;# 
   326  000E                     	;# 
   327  000E                     	;# 
   328  000F                     	;# 
   329  0010                     	;# 
   330  0011                     	;# 
   331  0012                     	;# 
   332  0013                     	;# 
   333  0014                     	;# 
   334  0015                     	;# 
   335  0015                     	;# 
   336  0016                     	;# 
   337  0017                     	;# 
   338  0018                     	;# 
   339  0019                     	;# 
   340  001A                     	;# 
   341  001B                     	;# 
   342  001B                     	;# 
   343  001C                     	;# 
   344  001D                     	;# 
   345  001E                     	;# 
   346  001F                     	;# 
   347  0081                     	;# 
   348  0085                     	;# 
   349  0086                     	;# 
   350  0087                     	;# 
   351  0088                     	;# 
   352  0089                     	;# 
   353  008C                     	;# 
   354  008D                     	;# 
   355  008E                     	;# 
   356  008F                     	;# 
   357  0090                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0093                     	;# 
   362  0093                     	;# 
   363  0094                     	;# 
   364  0095                     	;# 
   365  0096                     	;# 
   366  0097                     	;# 
   367  0098                     	;# 
   368  0099                     	;# 
   369  009A                     	;# 
   370  009B                     	;# 
   371  009C                     	;# 
   372  009D                     	;# 
   373  009E                     	;# 
   374  009F                     	;# 
   375  0105                     	;# 
   376  0107                     	;# 
   377  0108                     	;# 
   378  0109                     	;# 
   379  010C                     	;# 
   380  010C                     	;# 
   381  010D                     	;# 
   382  010E                     	;# 
   383  010F                     	;# 
   384  0185                     	;# 
   385  0187                     	;# 
   386  0188                     	;# 
   387  0189                     	;# 
   388  018C                     	;# 
   389  018D                     	;# 
   390  0000                     	;# 
   391  0001                     	;# 
   392  0002                     	;# 
   393  0003                     	;# 
   394  0004                     	;# 
   395  0005                     	;# 
   396  0006                     	;# 
   397  0007                     	;# 
   398  0008                     	;# 
   399  0009                     	;# 
   400  000A                     	;# 
   401  000B                     	;# 
   402  000C                     	;# 
   403  000D                     	;# 
   404  000E                     	;# 
   405  000E                     	;# 
   406  000F                     	;# 
   407  0010                     	;# 
   408  0011                     	;# 
   409  0012                     	;# 
   410  0013                     	;# 
   411  0014                     	;# 
   412  0015                     	;# 
   413  0015                     	;# 
   414  0016                     	;# 
   415  0017                     	;# 
   416  0018                     	;# 
   417  0019                     	;# 
   418  001A                     	;# 
   419  001B                     	;# 
   420  001B                     	;# 
   421  001C                     	;# 
   422  001D                     	;# 
   423  001E                     	;# 
   424  001F                     	;# 
   425  0081                     	;# 
   426  0085                     	;# 
   427  0086                     	;# 
   428  0087                     	;# 
   429  0088                     	;# 
   430  0089                     	;# 
   431  008C                     	;# 
   432  008D                     	;# 
   433  008E                     	;# 
   434  008F                     	;# 
   435  0090                     	;# 
   436  0091                     	;# 
   437  0092                     	;# 
   438  0093                     	;# 
   439  0093                     	;# 
   440  0093                     	;# 
   441  0094                     	;# 
   442  0095                     	;# 
   443  0096                     	;# 
   444  0097                     	;# 
   445  0098                     	;# 
   446  0099                     	;# 
   447  009A                     	;# 
   448  009B                     	;# 
   449  009C                     	;# 
   450  009D                     	;# 
   451  009E                     	;# 
   452  009F                     	;# 
   453  0105                     	;# 
   454  0107                     	;# 
   455  0108                     	;# 
   456  0109                     	;# 
   457  010C                     	;# 
   458  010C                     	;# 
   459  010D                     	;# 
   460  010E                     	;# 
   461  010F                     	;# 
   462  0185                     	;# 
   463  0187                     	;# 
   464  0188                     	;# 
   465  0189                     	;# 
   466  018C                     	;# 
   467  018D                     	;# 
   468                           
   469                           	psect	strings
   470  1000                     __pstrings:
   471  1000                     stringtab:
   472  1000                     __stringtab:
   473                           
   474                           ;	String table - string pointers are 1 byte each
   475  1000  1BFF               	btfsc	btemp+1,7
   476  1001  280A               	ljmp	stringcode
   477  1002  1383               	bcf	3,7
   478  1003  187F               	btfsc	btemp+1,0
   479  1004  1783               	bsf	3,7
   480  1005  0800               	movf	0,w
   481  1006  0A84               	incf	4,f
   482  1007  1903               	skipnz
   483  1008  0AFF               	incf	btemp+1,f
   484  1009  0008               	return
   485  100A                     stringcode:
   486  100A                     stringdir:
   487  100A  3010               	movlw	high stringdir
   488  100B  008A               	movwf	10
   489  100C  0804               	movf	4,w
   490  100D  0A84               	incf	4,f
   491  100E  0782               	addwf	2,f
   492  100F                     __stringbase:
   493  100F  3400               	retlw	0
   494  1010                     __end_of__stringtab:
   495  1010                     _dpowers:
   496  1010  3401               	retlw	1
   497  1011  3400               	retlw	0
   498  1012  3400               	retlw	0
   499  1013  3400               	retlw	0
   500  1014  340A               	retlw	10
   501  1015  3400               	retlw	0
   502  1016  3400               	retlw	0
   503  1017  3400               	retlw	0
   504  1018  3464               	retlw	100
   505  1019  3400               	retlw	0
   506  101A  3400               	retlw	0
   507  101B  3400               	retlw	0
   508  101C  34E8               	retlw	232
   509  101D  3403               	retlw	3
   510  101E  3400               	retlw	0
   511  101F  3400               	retlw	0
   512  1020  3410               	retlw	16
   513  1021  3427               	retlw	39
   514  1022  3400               	retlw	0
   515  1023  3400               	retlw	0
   516  1024  34A0               	retlw	160
   517  1025  3486               	retlw	134
   518  1026  3401               	retlw	1
   519  1027  3400               	retlw	0
   520  1028  3440               	retlw	64
   521  1029  3442               	retlw	66
   522  102A  340F               	retlw	15
   523  102B  3400               	retlw	0
   524  102C  3480               	retlw	128
   525  102D  3496               	retlw	150
   526  102E  3498               	retlw	152
   527  102F  3400               	retlw	0
   528  1030  3400               	retlw	0
   529  1031  34E1               	retlw	225
   530  1032  34F5               	retlw	245
   531  1033  3405               	retlw	5
   532  1034  3400               	retlw	0
   533  1035  34CA               	retlw	202
   534  1036  349A               	retlw	154
   535  1037  343B               	retlw	59
   536  1038                     __end_of_dpowers:
   537  001A                     _RCREG	set	26
   538  000C                     _PIR1bits	set	12
   539  0019                     _TXREG	set	25
   540  0018                     _RCSTAbits	set	24
   541  0005                     _PORTA	set	5
   542  0013                     _SSPBUF	set	19
   543  0014                     _SSPCON	set	20
   544  0063                     _SSPIF	set	99
   545  0087                     _TRISCbits	set	135
   546  0098                     _TXSTAbits	set	152
   547  0099                     _SPBRG	set	153
   548  0085                     _TRISA	set	133
   549  0093                     _SSPADD	set	147
   550  0094                     _SSPSTAT	set	148
   551  0091                     _SSPCON2	set	145
   552  04A0                     _BF	set	1184
   553  048B                     _RCEN	set	1163
   554  048E                     _ACKSTAT	set	1166
   555  048C                     _ACKEN	set	1164
   556  048D                     _ACKDT	set	1165
   557  048A                     _PEN	set	1162
   558  0489                     _RSEN	set	1161
   559  0488                     _SEN	set	1160
   560  043C                     _TRISC4	set	1084
   561  043B                     _TRISC3	set	1083
   562  0188                     _ANSEL	set	392
   563  1038                     STR_1:
   564  1038  3468               	retlw	104	;'h'
   565  1039  346F               	retlw	111	;'o'
   566  103A  346C               	retlw	108	;'l'
   567  103B  3461               	retlw	97	;'a'
   568  103C  3420               	retlw	32	;' '
   569  103D  3461               	retlw	97	;'a'
   570  103E  3420               	retlw	32	;' '
   571  103F  3474               	retlw	116	;'t'
   572  1040  346F               	retlw	111	;'o'
   573  1041  3464               	retlw	100	;'d'
   574  1042  346F               	retlw	111	;'o'
   575  1043  3473               	retlw	115	;'s'
   576  1044  340A               	retlw	10
   577  1045  3400               	retlw	0
   578  1046                     STR_9:
   579  1046  3425               	retlw	37	;'%'
   580  1047  346C               	retlw	108	;'l'
   581  1048  3475               	retlw	117	;'u'
   582  1049  342E               	retlw	46	;'.'
   583  104A  3425               	retlw	37	;'%'
   584  104B  3436               	retlw	54	;'6'
   585  104C  342E               	retlw	46	;'.'
   586  104D  3436               	retlw	54	;'6'
   587  104E  346C               	retlw	108	;'l'
   588  104F  3475               	retlw	117	;'u'
   589  1050  3400               	retlw	0
   590  1051                     STR_2:
   591  1051  3420               	retlw	32	;' '
   592  1052  3400               	retlw	0
   593  1051                     
   594                           	psect	cinit
   595  07F3                     start_initialization:	
   596                           ; #config settings
   597                           
   598  07F3                     __initialization:
   599                           
   600                           ; Clear objects allocated to BANK1
   601  07F3  1383               	bcf	3,7	;select IRP bank0
   602  07F4  30DE               	movlw	low __pbssBANK1
   603  07F5  0084               	movwf	4
   604  07F6  30EF               	movlw	low (__pbssBANK1+17)
   605  07F7  160A  118A  22AF  120A  118A  	fcall	clear_ram0
   606  07FC                     end_of_initialization:	
   607                           ;End of C runtime variable initialization code
   608                           
   609  07FC                     __end_of__initialization:
   610  07FC  0183               	clrf	3
   611  07FD  120A  158A  2B2C   	ljmp	_main	;jump to C main() function
   612                           
   613                           	psect	bssBANK1
   614  00DE                     __pbssBANK1:
   615  00DE                     ftoa@buf:
   616  00DE                     	ds	17
   617                           
   618                           	psect	clrtext
   619  12AF                     clear_ram0:	
   620                           ;	Called with FSR containing the base address, and
   621                           ;	W with the last address+1
   622                           
   623  12AF  0064               	clrwdt	;clear the watchdog before getting into this loop
   624  12B0                     clrloop0:
   625  12B0  0180               	clrf	0	;clear RAM location pointed to by FSR
   626  12B1  0A84               	incf	4,f	;increment pointer
   627  12B2  0604               	xorwf	4,w	;XOR with final address
   628  12B3  1903               	btfsc	3,2	;have we reached the end yet?
   629  12B4  3400               	retlw	0	;all done for this memory range, return
   630  12B5  0604               	xorwf	4,w	;XOR again to restore value
   631  12B6  2AB0               	goto	clrloop0	;do the next byte
   632                           
   633                           	psect	cstackBANK1
   634  00A0                     __pcstackBANK1:
   635  00A0                     readMPU@valores:
   636                           
   637                           ; 14 bytes @ 0x0
   638  00A0                     	ds	14
   639  00AE                     readMPU@guardar:
   640                           
   641                           ; 14 bytes @ 0xE
   642  00AE                     	ds	14
   643  00BC                     readMPU@i:
   644                           
   645                           ; 2 bytes @ 0x1C
   646  00BC                     	ds	2
   647  00BE                     readMPU@datos:
   648                           
   649                           ; 1 bytes @ 0x1E
   650  00BE                     	ds	1
   651  00BF                     main@datos:
   652                           
   653                           ; 28 bytes @ 0x1F
   654  00BF                     	ds	28
   655  00DB                     main@status:
   656                           
   657                           ; 2 bytes @ 0x3B
   658  00DB                     	ds	2
   659  00DD                     main@buffer:
   660                           
   661                           ; 1 bytes @ 0x3D
   662  00DD                     	ds	1
   663                           
   664                           	psect	cstackCOMMON
   665  0070                     __pcstackCOMMON:
   666  0070                     ?_isdigit:
   667  0070                     ?___flge:	
   668                           ; 1 bit 
   669                           
   670  0070                     ?_I2C_Master_Write:	
   671                           ; 1 bit 
   672                           
   673  0070                     ??_I2C_Master_Write:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_confMPU:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_readMPU:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_UARTSendChar:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ??_UARTSendChar:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ??_isdigit:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_I2C_Master_Init:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ??_I2C_Master_Init:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_I2C_Master_Wait:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ??_I2C_Master_Wait:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_I2C_Master_Start:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ??_I2C_Master_Start:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_I2C_Start:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_I2C_Master_Stop:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ??_I2C_Master_Stop:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ?_I2C_ACK:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ??_I2C_ACK:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?_I2C_NACK:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ??_I2C_NACK:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ?_I2C_Read:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ??_I2C_Read:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ?_main:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?__Umul8_16:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ?___wmul:	
   743                           ; 2 bytes @ 0x0
   744                           
   745  0070                     ?___lldiv:	
   746                           ; 2 bytes @ 0x0
   747                           
   748  0070                     ?___flneg:	
   749                           ; 4 bytes @ 0x0
   750                           
   751  0070                     ?___xxtofl:	
   752                           ; 4 bytes @ 0x0
   753                           
   754  0070                     I2C_Master_Write@data:	
   755                           ; 4 bytes @ 0x0
   756                           
   757  0070                     UARTSendChar@c:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     __Umul8_16@multiplicand:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     _isdigit$793:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ___wmul@multiplier:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ___lldiv@divisor:	
   770                           ; 2 bytes @ 0x0
   771                           
   772  0070                     ___flge@ff1:	
   773                           ; 4 bytes @ 0x0
   774                           
   775  0070                     ___flneg@f1:	
   776                           ; 4 bytes @ 0x0
   777                           
   778  0070                     ___xxtofl@val:	
   779                           ; 4 bytes @ 0x0
   780                           
   781                           
   782                           ; 4 bytes @ 0x0
   783  0070                     	ds	1
   784  0071                     ??_confMPU:
   785  0071                     ?_UARTSendString:	
   786                           ; 1 bytes @ 0x1
   787                           
   788  0071                     ??_I2C_Start:	
   789                           ; 1 bytes @ 0x1
   790                           
   791  0071                     I2C_Start@add:	
   792                           ; 1 bytes @ 0x1
   793                           
   794  0071                     I2C_Read@ACK_NACK:	
   795                           ; 1 bytes @ 0x1
   796                           
   797  0071                     isdigit@c:	
   798                           ; 1 bytes @ 0x1
   799                           
   800  0071                     UARTSendString@str:	
   801                           ; 1 bytes @ 0x1
   802                           
   803                           
   804                           ; 2 bytes @ 0x1
   805  0071                     	ds	1
   806  0072                     ??__Umul8_16:
   807  0072                     I2C_Read@Data:	
   808                           ; 1 bytes @ 0x2
   809                           
   810  0072                     ___wmul@multiplicand:	
   811                           ; 1 bytes @ 0x2
   812                           
   813                           
   814                           ; 2 bytes @ 0x2
   815  0072                     	ds	1
   816  0073                     UARTSendString@max_length:
   817                           
   818                           ; 1 bytes @ 0x3
   819  0073                     	ds	1
   820  0074                     ??_UARTSendString:
   821  0074                     ??___wmul:	
   822                           ; 1 bytes @ 0x4
   823                           
   824  0074                     ??___flneg:	
   825                           ; 1 bytes @ 0x4
   826                           
   827  0074                     ??___xxtofl:	
   828                           ; 1 bytes @ 0x4
   829                           
   830  0074                     ___wmul@product:	
   831                           ; 1 bytes @ 0x4
   832                           
   833  0074                     __Umul8_16@product:	
   834                           ; 2 bytes @ 0x4
   835                           
   836  0074                     ___lldiv@dividend:	
   837                           ; 2 bytes @ 0x4
   838                           
   839  0074                     ___flge@ff2:	
   840                           ; 4 bytes @ 0x4
   841                           
   842                           
   843                           ; 4 bytes @ 0x4
   844  0074                     	ds	2
   845  0076                     __Umul8_16@word_mpld:
   846                           
   847                           ; 2 bytes @ 0x6
   848  0076                     	ds	1
   849  0077                     UARTSendString@i:
   850                           
   851                           ; 2 bytes @ 0x7
   852  0077                     	ds	1
   853  0078                     ??___lldiv:
   854  0078                     ??___flge:	
   855                           ; 1 bytes @ 0x8
   856                           
   857  0078                     __Umul8_16@multiplier:	
   858                           ; 1 bytes @ 0x8
   859                           
   860  0078                     ___xxtofl@sign:	
   861                           ; 1 bytes @ 0x8
   862                           
   863                           
   864                           ; 1 bytes @ 0x8
   865  0078                     	ds	1
   866  0079                     ___xxtofl@exp:
   867  0079                     ___lldiv@quotient:	
   868                           ; 1 bytes @ 0x9
   869                           
   870                           
   871                           ; 4 bytes @ 0x9
   872  0079                     	ds	1
   873  007A                     ___xxtofl@arg:
   874                           
   875                           ; 4 bytes @ 0xA
   876  007A                     	ds	3
   877  007D                     ___lldiv@counter:
   878                           
   879                           ; 1 bytes @ 0xD
   880  007D                     	ds	1
   881  007E                     ??___flsub:
   882                           
   883                           	psect	cstackBANK0
   884  0020                     __pcstackBANK0:	
   885                           ; 1 bytes @ 0xE
   886                           
   887  0020                     ?_UARTInit:
   888  0020                     ?___llmod:	
   889                           ; 1 bytes @ 0x0
   890                           
   891  0020                     ?___fldiv:	
   892                           ; 4 bytes @ 0x0
   893                           
   894  0020                     ?___flmul:	
   895                           ; 4 bytes @ 0x0
   896                           
   897  0020                     UARTInit@baud_rate:	
   898                           ; 4 bytes @ 0x0
   899                           
   900  0020                     ___llmod@divisor:	
   901                           ; 4 bytes @ 0x0
   902                           
   903  0020                     ___fldiv@a:	
   904                           ; 4 bytes @ 0x0
   905                           
   906  0020                     ___flmul@b:	
   907                           ; 4 bytes @ 0x0
   908                           
   909                           
   910                           ; 4 bytes @ 0x0
   911  0020                     	ds	4
   912  0024                     UARTInit@BRGH:
   913  0024                     ___llmod@dividend:	
   914                           ; 1 bytes @ 0x4
   915                           
   916  0024                     ___fldiv@b:	
   917                           ; 4 bytes @ 0x4
   918                           
   919  0024                     ___flmul@a:	
   920                           ; 4 bytes @ 0x4
   921                           
   922                           
   923                           ; 4 bytes @ 0x4
   924  0024                     	ds	1
   925  0025                     ??_UARTInit:
   926                           
   927                           ; 1 bytes @ 0x5
   928  0025                     	ds	3
   929  0028                     ??___llmod:
   930  0028                     ??___fldiv:	
   931                           ; 1 bytes @ 0x8
   932                           
   933  0028                     ??___flmul:	
   934                           ; 1 bytes @ 0x8
   935                           
   936                           
   937                           ; 1 bytes @ 0x8
   938  0028                     	ds	1
   939  0029                     ___llmod@counter:
   940                           
   941                           ; 1 bytes @ 0x9
   942  0029                     	ds	1
   943  002A                     ?_sprintf:
   944  002A                     sprintf@f:	
   945                           ; 2 bytes @ 0xA
   946                           
   947                           
   948                           ; 1 bytes @ 0xA
   949  002A                     	ds	3
   950  002D                     ___flmul@sign:
   951  002D                     ___fldiv@rem:	
   952                           ; 1 bytes @ 0xD
   953                           
   954                           
   955                           ; 4 bytes @ 0xD
   956  002D                     	ds	1
   957  002E                     ___flmul@grs:
   958                           
   959                           ; 4 bytes @ 0xE
   960  002E                     	ds	3
   961  0031                     ___fldiv@sign:
   962                           
   963                           ; 1 bytes @ 0x11
   964  0031                     	ds	1
   965  0032                     ___flmul@aexp:
   966  0032                     ___fldiv@new_exp:	
   967                           ; 1 bytes @ 0x12
   968                           
   969                           
   970                           ; 2 bytes @ 0x12
   971  0032                     	ds	1
   972  0033                     ??_sprintf:
   973  0033                     ___flmul@bexp:	
   974                           ; 1 bytes @ 0x13
   975                           
   976                           
   977                           ; 1 bytes @ 0x13
   978  0033                     	ds	1
   979  0034                     ___fldiv@grs:
   980  0034                     ___flmul@prod:	
   981                           ; 4 bytes @ 0x14
   982                           
   983                           
   984                           ; 4 bytes @ 0x14
   985  0034                     	ds	4
   986  0038                     ___fldiv@bexp:
   987  0038                     sprintf@flag:	
   988                           ; 1 bytes @ 0x18
   989                           
   990  0038                     ___flmul@temp:	
   991                           ; 1 bytes @ 0x18
   992                           
   993                           
   994                           ; 2 bytes @ 0x18
   995  0038                     	ds	1
   996  0039                     ___fldiv@aexp:
   997  0039                     sprintf@ap:	
   998                           ; 1 bytes @ 0x19
   999                           
  1000                           
  1001                           ; 1 bytes @ 0x19
  1002  0039                     	ds	1
  1003  003A                     ?___fltol:
  1004  003A                     ?___fladd:	
  1005                           ; 4 bytes @ 0x1A
  1006                           
  1007  003A                     ___fltol@f1:	
  1008                           ; 4 bytes @ 0x1A
  1009                           
  1010  003A                     ___fladd@b:	
  1011                           ; 4 bytes @ 0x1A
  1012                           
  1013  003A                     sprintf@val:	
  1014                           ; 4 bytes @ 0x1A
  1015                           
  1016                           
  1017                           ; 4 bytes @ 0x1A
  1018  003A                     	ds	4
  1019  003E                     ??___fltol:
  1020  003E                     sprintf@sp:	
  1021                           ; 1 bytes @ 0x1E
  1022                           
  1023  003E                     ___fladd@a:	
  1024                           ; 1 bytes @ 0x1E
  1025                           
  1026                           
  1027                           ; 4 bytes @ 0x1E
  1028  003E                     	ds	1
  1029  003F                     sprintf@width:
  1030                           
  1031                           ; 2 bytes @ 0x1F
  1032  003F                     	ds	2
  1033  0041                     sprintf@prec:
  1034                           
  1035                           ; 2 bytes @ 0x21
  1036  0041                     	ds	1
  1037  0042                     ??___fladd:
  1038                           
  1039                           ; 1 bytes @ 0x22
  1040  0042                     	ds	1
  1041  0043                     ___fltol@sign1:
  1042  0043                     sprintf@c:	
  1043                           ; 1 bytes @ 0x23
  1044                           
  1045                           
  1046                           ; 1 bytes @ 0x23
  1047  0043                     	ds	1
  1048  0044                     ___fltol@exp1:
  1049                           
  1050                           ; 1 bytes @ 0x24
  1051  0044                     	ds	6
  1052  004A                     ___fladd@signs:
  1053                           
  1054                           ; 1 bytes @ 0x2A
  1055  004A                     	ds	1
  1056  004B                     ___fladd@aexp:
  1057                           
  1058                           ; 1 bytes @ 0x2B
  1059  004B                     	ds	1
  1060  004C                     ___fladd@bexp:
  1061                           
  1062                           ; 1 bytes @ 0x2C
  1063  004C                     	ds	1
  1064  004D                     ___fladd@grs:
  1065                           
  1066                           ; 1 bytes @ 0x2D
  1067  004D                     	ds	1
  1068  004E                     ??_readMPU:
  1069  004E                     ?___flsub:	
  1070                           ; 1 bytes @ 0x2E
  1071                           
  1072  004E                     ___flsub@a:	
  1073                           ; 4 bytes @ 0x2E
  1074                           
  1075                           
  1076                           ; 4 bytes @ 0x2E
  1077  004E                     	ds	4
  1078  0052                     ___flsub@b:
  1079                           
  1080                           ; 4 bytes @ 0x32
  1081  0052                     	ds	4
  1082  0056                     ?_ftoa:
  1083  0056                     ftoa@f:	
  1084                           ; 1 bytes @ 0x36
  1085                           
  1086                           
  1087                           ; 4 bytes @ 0x36
  1088  0056                     	ds	4
  1089  005A                     ftoa@status:
  1090                           
  1091                           ; 2 bytes @ 0x3A
  1092  005A                     	ds	2
  1093  005C                     ??_ftoa:
  1094                           
  1095                           ; 1 bytes @ 0x3C
  1096  005C                     	ds	1
  1097  005D                     ftoa@rem:
  1098                           
  1099                           ; 4 bytes @ 0x3D
  1100  005D                     	ds	4
  1101  0061                     ftoa@l:
  1102                           
  1103                           ; 4 bytes @ 0x41
  1104  0061                     	ds	4
  1105  0065                     ftoa@cp:
  1106                           
  1107                           ; 1 bytes @ 0x45
  1108  0065                     	ds	1
  1109  0066                     ??_main:
  1110                           
  1111                           ; 1 bytes @ 0x46
  1112  0066                     	ds	1
  1113                           
  1114                           	psect	maintext
  1115  0B2C                     __pmaintext:	
  1116 ;;
  1117 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1118 ;;
  1119 ;; *************** function _main *****************
  1120 ;; Defined at:
  1121 ;;		line 37 in file "main.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;  datos          28   31[BANK1 ] float [7]
  1126 ;;  status          2   59[BANK1 ] int 
  1127 ;;  buffer          1   61[BANK1 ] PTR unsigned char 
  1128 ;;		 -> ftoa@buf(17), 
  1129 ;;  comando         1    0        unsigned char 
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : B00/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1139 ;;      Params:         0       0       0       0       0
  1140 ;;      Locals:         0       0      31       0       0
  1141 ;;      Temps:          0       1       0       0       0
  1142 ;;      Totals:         0       1      31       0       0
  1143 ;;Total ram usage:       32 bytes
  1144 ;; Hardware stack levels required when called:    4
  1145 ;; This function calls:
  1146 ;;		_I2C_Master_Init
  1147 ;;		_UARTInit
  1148 ;;		_UARTSendChar
  1149 ;;		_UARTSendString
  1150 ;;		_confMPU
  1151 ;;		_ftoa
  1152 ;;		_readMPU
  1153 ;; This function is called by:
  1154 ;;		Startup code after reset
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           
  1159                           ;psect for function _main
  1160  0B2C                     _main:
  1161  0B2C                     l2886:	
  1162                           ;incstack = 0
  1163                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1164                           
  1165                           
  1166                           ;main.c: 38:     ANSEL = 0;
  1167  0B2C  1683               	bsf	3,5	;RP0=1, select bank3
  1168  0B2D  1703               	bsf	3,6	;RP1=1, select bank3
  1169  0B2E  0188               	clrf	8	;volatile
  1170                           
  1171                           ;main.c: 39:     TRISA = 0;
  1172  0B2F  1683               	bsf	3,5	;RP0=1, select bank1
  1173  0B30  1303               	bcf	3,6	;RP1=0, select bank1
  1174  0B31  0185               	clrf	5	;volatile
  1175                           
  1176                           ;main.c: 40:     PORTA = 0;
  1177  0B32  1283               	bcf	3,5	;RP0=0, select bank0
  1178  0B33  1303               	bcf	3,6	;RP1=0, select bank0
  1179  0B34  0185               	clrf	5	;volatile
  1180  0B35                     l2888:
  1181                           
  1182                           ;main.c: 41:     char* buffer;;main.c: 42:     char comando;;main.c: 44:     I2C_Master_
      +                          Init();
  1183  0B35  160A  118A  22F2  120A  158A  	fcall	_I2C_Master_Init
  1184  0B3A                     l2890:
  1185                           
  1186                           ;main.c: 45:     UARTInit(9600, 1);
  1187  0B3A  3000               	movlw	0
  1188  0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0B3C  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0B3D  00A3               	movwf	UARTInit@baud_rate+3
  1191  0B3E  3000               	movlw	0
  1192  0B3F  00A2               	movwf	UARTInit@baud_rate+2
  1193  0B40  3025               	movlw	37
  1194  0B41  00A1               	movwf	UARTInit@baud_rate+1
  1195  0B42  3080               	movlw	128
  1196  0B43  00A0               	movwf	UARTInit@baud_rate
  1197  0B44  01A4               	clrf	UARTInit@BRGH
  1198  0B45  0AA4               	incf	UARTInit@BRGH,f
  1199  0B46  160A  118A  2496  120A  158A  	fcall	_UARTInit
  1200  0B4B                     l2892:
  1201                           
  1202                           ;main.c: 46:     confMPU();
  1203  0B4B  120A  118A  2031  120A  158A  	fcall	_confMPU
  1204  0B50                     l2894:
  1205                           
  1206                           ;main.c: 54:         readMPU(datos);
  1207  0B50  30BF               	movlw	(low (main@datos| 0))& (0+255)
  1208  0B51  120A  118A  21C5  120A  158A  	fcall	_readMPU
  1209  0B56                     l2896:
  1210                           
  1211                           ;main.c: 57:         UARTSendString("hola a todos\n",13);
  1212  0B56  3029               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1213  0B57  00F1               	movwf	UARTSendString@str
  1214  0B58  3080               	movlw	128
  1215  0B59  00F2               	movwf	UARTSendString@str+1
  1216  0B5A  300D               	movlw	13
  1217  0B5B  1283               	bcf	3,5	;RP0=0, select bank0
  1218  0B5C  1303               	bcf	3,6	;RP1=0, select bank0
  1219  0B5D  00E6               	movwf	??_main
  1220  0B5E  0866               	movf	??_main,w
  1221  0B5F  00F3               	movwf	UARTSendString@max_length
  1222  0B60  160A  118A  2389  120A  158A  	fcall	_UARTSendString
  1223  0B65                     l2898:
  1224                           
  1225                           ;main.c: 58:         PORTA = ~PORTA;
  1226  0B65  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0B66  1303               	bcf	3,6	;RP1=0, select bank0
  1228  0B67  0985               	comf	5,f	;volatile
  1229  0B68                     l2900:
  1230                           
  1231                           ;main.c: 59:         buffer = ftoa(datos[0], status);
  1232  0B68  1683               	bsf	3,5	;RP0=1, select bank1
  1233  0B69  1303               	bcf	3,6	;RP1=0, select bank1
  1234  0B6A  0842               	movf	(main@datos+3)^(0+128),w
  1235  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  1237  0B6D  00D9               	movwf	ftoa@f+3
  1238  0B6E  1683               	bsf	3,5	;RP0=1, select bank1
  1239  0B6F  1303               	bcf	3,6	;RP1=0, select bank1
  1240  0B70  0841               	movf	(main@datos+2)^(0+128),w
  1241  0B71  1283               	bcf	3,5	;RP0=0, select bank0
  1242  0B72  1303               	bcf	3,6	;RP1=0, select bank0
  1243  0B73  00D8               	movwf	ftoa@f+2
  1244  0B74  1683               	bsf	3,5	;RP0=1, select bank1
  1245  0B75  1303               	bcf	3,6	;RP1=0, select bank1
  1246  0B76  0840               	movf	(main@datos+1)^(0+128),w
  1247  0B77  1283               	bcf	3,5	;RP0=0, select bank0
  1248  0B78  1303               	bcf	3,6	;RP1=0, select bank0
  1249  0B79  00D7               	movwf	ftoa@f+1
  1250  0B7A  1683               	bsf	3,5	;RP0=1, select bank1
  1251  0B7B  1303               	bcf	3,6	;RP1=0, select bank1
  1252  0B7C  083F               	movf	main@datos^(0+128),w
  1253  0B7D  1283               	bcf	3,5	;RP0=0, select bank0
  1254  0B7E  1303               	bcf	3,6	;RP1=0, select bank0
  1255  0B7F  00D6               	movwf	ftoa@f
  1256  0B80  1683               	bsf	3,5	;RP0=1, select bank1
  1257  0B81  1303               	bcf	3,6	;RP1=0, select bank1
  1258  0B82  085B               	movf	main@status^(0+128),w
  1259  0B83  1283               	bcf	3,5	;RP0=0, select bank0
  1260  0B84  1303               	bcf	3,6	;RP1=0, select bank0
  1261  0B85  00DA               	movwf	ftoa@status
  1262  0B86  1683               	bsf	3,5	;RP0=1, select bank1
  1263  0B87  1303               	bcf	3,6	;RP1=0, select bank1
  1264  0B88  085C               	movf	(main@status+1)^(0+128),w
  1265  0B89  1283               	bcf	3,5	;RP0=0, select bank0
  1266  0B8A  1303               	bcf	3,6	;RP1=0, select bank0
  1267  0B8B  00DB               	movwf	ftoa@status+1
  1268  0B8C  120A  118A  20F0  120A  158A  	fcall	_ftoa
  1269  0B91  1283               	bcf	3,5	;RP0=0, select bank0
  1270  0B92  1303               	bcf	3,6	;RP1=0, select bank0
  1271  0B93  00E6               	movwf	??_main
  1272  0B94  0866               	movf	??_main,w
  1273  0B95  1683               	bsf	3,5	;RP0=1, select bank1
  1274  0B96  1303               	bcf	3,6	;RP1=0, select bank1
  1275  0B97  00DD               	movwf	main@buffer^(0+128)
  1276  0B98                     l2902:
  1277                           
  1278                           ;main.c: 60:         UARTSendString(" ", 10);
  1279  0B98  3042               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1280  0B99  00F1               	movwf	UARTSendString@str
  1281  0B9A  3080               	movlw	128
  1282  0B9B  00F2               	movwf	UARTSendString@str+1
  1283  0B9C  300A               	movlw	10
  1284  0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  1285  0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  1286  0B9F  00E6               	movwf	??_main
  1287  0BA0  0866               	movf	??_main,w
  1288  0BA1  00F3               	movwf	UARTSendString@max_length
  1289  0BA2  160A  118A  2389  120A  158A  	fcall	_UARTSendString
  1290  0BA7                     l2904:
  1291                           
  1292                           ;main.c: 61:         UARTSendString(buffer, 6);
  1293  0BA7  1683               	bsf	3,5	;RP0=1, select bank1
  1294  0BA8  1303               	bcf	3,6	;RP1=0, select bank1
  1295  0BA9  085D               	movf	main@buffer^(0+128),w
  1296  0BAA  00F1               	movwf	UARTSendString@str
  1297  0BAB  3000               	movlw	0
  1298  0BAC  00F2               	movwf	UARTSendString@str+1
  1299  0BAD  3006               	movlw	6
  1300  0BAE  1283               	bcf	3,5	;RP0=0, select bank0
  1301  0BAF  1303               	bcf	3,6	;RP1=0, select bank0
  1302  0BB0  00E6               	movwf	??_main
  1303  0BB1  0866               	movf	??_main,w
  1304  0BB2  00F3               	movwf	UARTSendString@max_length
  1305  0BB3  160A  118A  2389  120A  158A  	fcall	_UARTSendString
  1306  0BB8                     l2906:
  1307                           
  1308                           ;main.c: 63:         buffer = ftoa(datos[1], status);
  1309  0BB8  3004               	movlw	4
  1310  0BB9  3EBF               	addlw	(low (main@datos| 0))& (0+255)
  1311  0BBA  0084               	movwf	4
  1312  0BBB  1383               	bcf	3,7	;select IRP bank1
  1313  0BBC  0800               	movf	0,w
  1314  0BBD  1283               	bcf	3,5	;RP0=0, select bank0
  1315  0BBE  1303               	bcf	3,6	;RP1=0, select bank0
  1316  0BBF  00D6               	movwf	ftoa@f
  1317  0BC0  0A84               	incf	4,f
  1318  0BC1  0800               	movf	0,w
  1319  0BC2  00D7               	movwf	ftoa@f+1
  1320  0BC3  0A84               	incf	4,f
  1321  0BC4  0800               	movf	0,w
  1322  0BC5  00D8               	movwf	ftoa@f+2
  1323  0BC6  0A84               	incf	4,f
  1324  0BC7  0800               	movf	0,w
  1325  0BC8  00D9               	movwf	ftoa@f+3
  1326  0BC9  1683               	bsf	3,5	;RP0=1, select bank1
  1327  0BCA  1303               	bcf	3,6	;RP1=0, select bank1
  1328  0BCB  085B               	movf	main@status^(0+128),w
  1329  0BCC  1283               	bcf	3,5	;RP0=0, select bank0
  1330  0BCD  1303               	bcf	3,6	;RP1=0, select bank0
  1331  0BCE  00DA               	movwf	ftoa@status
  1332  0BCF  1683               	bsf	3,5	;RP0=1, select bank1
  1333  0BD0  1303               	bcf	3,6	;RP1=0, select bank1
  1334  0BD1  085C               	movf	(main@status+1)^(0+128),w
  1335  0BD2  1283               	bcf	3,5	;RP0=0, select bank0
  1336  0BD3  1303               	bcf	3,6	;RP1=0, select bank0
  1337  0BD4  00DB               	movwf	ftoa@status+1
  1338  0BD5  120A  118A  20F0  120A  158A  	fcall	_ftoa
  1339  0BDA  1283               	bcf	3,5	;RP0=0, select bank0
  1340  0BDB  1303               	bcf	3,6	;RP1=0, select bank0
  1341  0BDC  00E6               	movwf	??_main
  1342  0BDD  0866               	movf	??_main,w
  1343  0BDE  1683               	bsf	3,5	;RP0=1, select bank1
  1344  0BDF  1303               	bcf	3,6	;RP1=0, select bank1
  1345  0BE0  00DD               	movwf	main@buffer^(0+128)
  1346  0BE1                     l2908:
  1347                           
  1348                           ;main.c: 64:         UARTSendString(" ", 10);
  1349  0BE1  3042               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1350  0BE2  00F1               	movwf	UARTSendString@str
  1351  0BE3  3080               	movlw	128
  1352  0BE4  00F2               	movwf	UARTSendString@str+1
  1353  0BE5  300A               	movlw	10
  1354  0BE6  1283               	bcf	3,5	;RP0=0, select bank0
  1355  0BE7  1303               	bcf	3,6	;RP1=0, select bank0
  1356  0BE8  00E6               	movwf	??_main
  1357  0BE9  0866               	movf	??_main,w
  1358  0BEA  00F3               	movwf	UARTSendString@max_length
  1359  0BEB  160A  118A  2389  120A  158A  	fcall	_UARTSendString
  1360  0BF0                     l2910:
  1361                           
  1362                           ;main.c: 65:         UARTSendString(buffer, 6);
  1363  0BF0  1683               	bsf	3,5	;RP0=1, select bank1
  1364  0BF1  1303               	bcf	3,6	;RP1=0, select bank1
  1365  0BF2  085D               	movf	main@buffer^(0+128),w
  1366  0BF3  00F1               	movwf	UARTSendString@str
  1367  0BF4  3000               	movlw	0
  1368  0BF5  00F2               	movwf	UARTSendString@str+1
  1369  0BF6  3006               	movlw	6
  1370  0BF7  1283               	bcf	3,5	;RP0=0, select bank0
  1371  0BF8  1303               	bcf	3,6	;RP1=0, select bank0
  1372  0BF9  00E6               	movwf	??_main
  1373  0BFA  0866               	movf	??_main,w
  1374  0BFB  00F3               	movwf	UARTSendString@max_length
  1375  0BFC  160A  118A  2389  120A  158A  	fcall	_UARTSendString
  1376  0C01                     l2912:
  1377                           
  1378                           ;main.c: 67:         buffer = ftoa(datos[2], status);
  1379  0C01  3008               	movlw	8
  1380  0C02  3EBF               	addlw	(low (main@datos| 0))& (0+255)
  1381  0C03  0084               	movwf	4
  1382  0C04  1383               	bcf	3,7	;select IRP bank1
  1383  0C05  0800               	movf	0,w
  1384  0C06  1283               	bcf	3,5	;RP0=0, select bank0
  1385  0C07  1303               	bcf	3,6	;RP1=0, select bank0
  1386  0C08  00D6               	movwf	ftoa@f
  1387  0C09  0A84               	incf	4,f
  1388  0C0A  0800               	movf	0,w
  1389  0C0B  00D7               	movwf	ftoa@f+1
  1390  0C0C  0A84               	incf	4,f
  1391  0C0D  0800               	movf	0,w
  1392  0C0E  00D8               	movwf	ftoa@f+2
  1393  0C0F  0A84               	incf	4,f
  1394  0C10  0800               	movf	0,w
  1395  0C11  00D9               	movwf	ftoa@f+3
  1396  0C12  1683               	bsf	3,5	;RP0=1, select bank1
  1397  0C13  1303               	bcf	3,6	;RP1=0, select bank1
  1398  0C14  085B               	movf	main@status^(0+128),w
  1399  0C15  1283               	bcf	3,5	;RP0=0, select bank0
  1400  0C16  1303               	bcf	3,6	;RP1=0, select bank0
  1401  0C17  00DA               	movwf	ftoa@status
  1402  0C18  1683               	bsf	3,5	;RP0=1, select bank1
  1403  0C19  1303               	bcf	3,6	;RP1=0, select bank1
  1404  0C1A  085C               	movf	(main@status+1)^(0+128),w
  1405  0C1B  1283               	bcf	3,5	;RP0=0, select bank0
  1406  0C1C  1303               	bcf	3,6	;RP1=0, select bank0
  1407  0C1D  00DB               	movwf	ftoa@status+1
  1408  0C1E  120A  118A  20F0  120A  158A  	fcall	_ftoa
  1409  0C23  1283               	bcf	3,5	;RP0=0, select bank0
  1410  0C24  1303               	bcf	3,6	;RP1=0, select bank0
  1411  0C25  00E6               	movwf	??_main
  1412  0C26  0866               	movf	??_main,w
  1413  0C27  1683               	bsf	3,5	;RP0=1, select bank1
  1414  0C28  1303               	bcf	3,6	;RP1=0, select bank1
  1415  0C29  00DD               	movwf	main@buffer^(0+128)
  1416  0C2A                     l2914:
  1417                           
  1418                           ;main.c: 68:         UARTSendString(" ", 6);
  1419  0C2A  3042               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1420  0C2B  00F1               	movwf	UARTSendString@str
  1421  0C2C  3080               	movlw	128
  1422  0C2D  00F2               	movwf	UARTSendString@str+1
  1423  0C2E  3006               	movlw	6
  1424  0C2F  1283               	bcf	3,5	;RP0=0, select bank0
  1425  0C30  1303               	bcf	3,6	;RP1=0, select bank0
  1426  0C31  00E6               	movwf	??_main
  1427  0C32  0866               	movf	??_main,w
  1428  0C33  00F3               	movwf	UARTSendString@max_length
  1429  0C34  160A  118A  2389  120A  158A  	fcall	_UARTSendString
  1430  0C39                     l2916:
  1431                           
  1432                           ;main.c: 69:         UARTSendString(buffer, 6);
  1433  0C39  1683               	bsf	3,5	;RP0=1, select bank1
  1434  0C3A  1303               	bcf	3,6	;RP1=0, select bank1
  1435  0C3B  085D               	movf	main@buffer^(0+128),w
  1436  0C3C  00F1               	movwf	UARTSendString@str
  1437  0C3D  3000               	movlw	0
  1438  0C3E  00F2               	movwf	UARTSendString@str+1
  1439  0C3F  3006               	movlw	6
  1440  0C40  1283               	bcf	3,5	;RP0=0, select bank0
  1441  0C41  1303               	bcf	3,6	;RP1=0, select bank0
  1442  0C42  00E6               	movwf	??_main
  1443  0C43  0866               	movf	??_main,w
  1444  0C44  00F3               	movwf	UARTSendString@max_length
  1445  0C45  160A  118A  2389  120A  158A  	fcall	_UARTSendString
  1446  0C4A                     l2918:
  1447                           
  1448                           ;main.c: 71:         buffer = ftoa(datos[3], status);
  1449  0C4A  300C               	movlw	12
  1450  0C4B  3EBF               	addlw	(low (main@datos| 0))& (0+255)
  1451  0C4C  0084               	movwf	4
  1452  0C4D  1383               	bcf	3,7	;select IRP bank1
  1453  0C4E  0800               	movf	0,w
  1454  0C4F  1283               	bcf	3,5	;RP0=0, select bank0
  1455  0C50  1303               	bcf	3,6	;RP1=0, select bank0
  1456  0C51  00D6               	movwf	ftoa@f
  1457  0C52  0A84               	incf	4,f
  1458  0C53  0800               	movf	0,w
  1459  0C54  00D7               	movwf	ftoa@f+1
  1460  0C55  0A84               	incf	4,f
  1461  0C56  0800               	movf	0,w
  1462  0C57  00D8               	movwf	ftoa@f+2
  1463  0C58  0A84               	incf	4,f
  1464  0C59  0800               	movf	0,w
  1465  0C5A  00D9               	movwf	ftoa@f+3
  1466  0C5B  1683               	bsf	3,5	;RP0=1, select bank1
  1467  0C5C  1303               	bcf	3,6	;RP1=0, select bank1
  1468  0C5D  085B               	movf	main@status^(0+128),w
  1469  0C5E  1283               	bcf	3,5	;RP0=0, select bank0
  1470  0C5F  1303               	bcf	3,6	;RP1=0, select bank0
  1471  0C60  00DA               	movwf	ftoa@status
  1472  0C61  1683               	bsf	3,5	;RP0=1, select bank1
  1473  0C62  1303               	bcf	3,6	;RP1=0, select bank1
  1474  0C63  085C               	movf	(main@status+1)^(0+128),w
  1475  0C64  1283               	bcf	3,5	;RP0=0, select bank0
  1476  0C65  1303               	bcf	3,6	;RP1=0, select bank0
  1477  0C66  00DB               	movwf	ftoa@status+1
  1478  0C67  120A  118A  20F0  120A  158A  	fcall	_ftoa
  1479  0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  1480  0C6D  1303               	bcf	3,6	;RP1=0, select bank0
  1481  0C6E  00E6               	movwf	??_main
  1482  0C6F  0866               	movf	??_main,w
  1483  0C70  1683               	bsf	3,5	;RP0=1, select bank1
  1484  0C71  1303               	bcf	3,6	;RP1=0, select bank1
  1485  0C72  00DD               	movwf	main@buffer^(0+128)
  1486  0C73                     l2920:
  1487                           
  1488                           ;main.c: 72:         UARTSendString(" ", 6);
  1489  0C73  3042               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1490  0C74  00F1               	movwf	UARTSendString@str
  1491  0C75  3080               	movlw	128
  1492  0C76  00F2               	movwf	UARTSendString@str+1
  1493  0C77  3006               	movlw	6
  1494  0C78  1283               	bcf	3,5	;RP0=0, select bank0
  1495  0C79  1303               	bcf	3,6	;RP1=0, select bank0
  1496  0C7A  00E6               	movwf	??_main
  1497  0C7B  0866               	movf	??_main,w
  1498  0C7C  00F3               	movwf	UARTSendString@max_length
  1499  0C7D  160A  118A  2389  120A  158A  	fcall	_UARTSendString
  1500  0C82                     l2922:
  1501                           
  1502                           ;main.c: 73:         UARTSendString(buffer, 6);
  1503  0C82  1683               	bsf	3,5	;RP0=1, select bank1
  1504  0C83  1303               	bcf	3,6	;RP1=0, select bank1
  1505  0C84  085D               	movf	main@buffer^(0+128),w
  1506  0C85  00F1               	movwf	UARTSendString@str
  1507  0C86  3000               	movlw	0
  1508  0C87  00F2               	movwf	UARTSendString@str+1
  1509  0C88  3006               	movlw	6
  1510  0C89  1283               	bcf	3,5	;RP0=0, select bank0
  1511  0C8A  1303               	bcf	3,6	;RP1=0, select bank0
  1512  0C8B  00E6               	movwf	??_main
  1513  0C8C  0866               	movf	??_main,w
  1514  0C8D  00F3               	movwf	UARTSendString@max_length
  1515  0C8E  160A  118A  2389  120A  158A  	fcall	_UARTSendString
  1516  0C93                     l2924:
  1517                           
  1518                           ;main.c: 75:         buffer = ftoa(datos[4], status);
  1519  0C93  3010               	movlw	16
  1520  0C94  3EBF               	addlw	(low (main@datos| 0))& (0+255)
  1521  0C95  0084               	movwf	4
  1522  0C96  1383               	bcf	3,7	;select IRP bank1
  1523  0C97  0800               	movf	0,w
  1524  0C98  1283               	bcf	3,5	;RP0=0, select bank0
  1525  0C99  1303               	bcf	3,6	;RP1=0, select bank0
  1526  0C9A  00D6               	movwf	ftoa@f
  1527  0C9B  0A84               	incf	4,f
  1528  0C9C  0800               	movf	0,w
  1529  0C9D  00D7               	movwf	ftoa@f+1
  1530  0C9E  0A84               	incf	4,f
  1531  0C9F  0800               	movf	0,w
  1532  0CA0  00D8               	movwf	ftoa@f+2
  1533  0CA1  0A84               	incf	4,f
  1534  0CA2  0800               	movf	0,w
  1535  0CA3  00D9               	movwf	ftoa@f+3
  1536  0CA4  1683               	bsf	3,5	;RP0=1, select bank1
  1537  0CA5  1303               	bcf	3,6	;RP1=0, select bank1
  1538  0CA6  085B               	movf	main@status^(0+128),w
  1539  0CA7  1283               	bcf	3,5	;RP0=0, select bank0
  1540  0CA8  1303               	bcf	3,6	;RP1=0, select bank0
  1541  0CA9  00DA               	movwf	ftoa@status
  1542  0CAA  1683               	bsf	3,5	;RP0=1, select bank1
  1543  0CAB  1303               	bcf	3,6	;RP1=0, select bank1
  1544  0CAC  085C               	movf	(main@status+1)^(0+128),w
  1545  0CAD  1283               	bcf	3,5	;RP0=0, select bank0
  1546  0CAE  1303               	bcf	3,6	;RP1=0, select bank0
  1547  0CAF  00DB               	movwf	ftoa@status+1
  1548  0CB0  120A  118A  20F0  120A  158A  	fcall	_ftoa
  1549  0CB5  1283               	bcf	3,5	;RP0=0, select bank0
  1550  0CB6  1303               	bcf	3,6	;RP1=0, select bank0
  1551  0CB7  00E6               	movwf	??_main
  1552  0CB8  0866               	movf	??_main,w
  1553  0CB9  1683               	bsf	3,5	;RP0=1, select bank1
  1554  0CBA  1303               	bcf	3,6	;RP1=0, select bank1
  1555  0CBB  00DD               	movwf	main@buffer^(0+128)
  1556  0CBC                     l2926:
  1557                           
  1558                           ;main.c: 76:         UARTSendString(" ", 6);
  1559  0CBC  3042               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1560  0CBD  00F1               	movwf	UARTSendString@str
  1561  0CBE  3080               	movlw	128
  1562  0CBF  00F2               	movwf	UARTSendString@str+1
  1563  0CC0  3006               	movlw	6
  1564  0CC1  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0CC2  1303               	bcf	3,6	;RP1=0, select bank0
  1566  0CC3  00E6               	movwf	??_main
  1567  0CC4  0866               	movf	??_main,w
  1568  0CC5  00F3               	movwf	UARTSendString@max_length
  1569  0CC6  160A  118A  2389  120A  158A  	fcall	_UARTSendString
  1570  0CCB                     l2928:
  1571                           
  1572                           ;main.c: 77:         UARTSendString(buffer, 6);
  1573  0CCB  1683               	bsf	3,5	;RP0=1, select bank1
  1574  0CCC  1303               	bcf	3,6	;RP1=0, select bank1
  1575  0CCD  085D               	movf	main@buffer^(0+128),w
  1576  0CCE  00F1               	movwf	UARTSendString@str
  1577  0CCF  3000               	movlw	0
  1578  0CD0  00F2               	movwf	UARTSendString@str+1
  1579  0CD1  3006               	movlw	6
  1580  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  1581  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  1582  0CD4  00E6               	movwf	??_main
  1583  0CD5  0866               	movf	??_main,w
  1584  0CD6  00F3               	movwf	UARTSendString@max_length
  1585  0CD7  160A  118A  2389  120A  158A  	fcall	_UARTSendString
  1586  0CDC                     l2930:
  1587                           
  1588                           ;main.c: 78:         buffer = ftoa(datos[5], status);
  1589  0CDC  3014               	movlw	20
  1590  0CDD  3EBF               	addlw	(low (main@datos| 0))& (0+255)
  1591  0CDE  0084               	movwf	4
  1592  0CDF  1383               	bcf	3,7	;select IRP bank1
  1593  0CE0  0800               	movf	0,w
  1594  0CE1  1283               	bcf	3,5	;RP0=0, select bank0
  1595  0CE2  1303               	bcf	3,6	;RP1=0, select bank0
  1596  0CE3  00D6               	movwf	ftoa@f
  1597  0CE4  0A84               	incf	4,f
  1598  0CE5  0800               	movf	0,w
  1599  0CE6  00D7               	movwf	ftoa@f+1
  1600  0CE7  0A84               	incf	4,f
  1601  0CE8  0800               	movf	0,w
  1602  0CE9  00D8               	movwf	ftoa@f+2
  1603  0CEA  0A84               	incf	4,f
  1604  0CEB  0800               	movf	0,w
  1605  0CEC  00D9               	movwf	ftoa@f+3
  1606  0CED  1683               	bsf	3,5	;RP0=1, select bank1
  1607  0CEE  1303               	bcf	3,6	;RP1=0, select bank1
  1608  0CEF  085B               	movf	main@status^(0+128),w
  1609  0CF0  1283               	bcf	3,5	;RP0=0, select bank0
  1610  0CF1  1303               	bcf	3,6	;RP1=0, select bank0
  1611  0CF2  00DA               	movwf	ftoa@status
  1612  0CF3  1683               	bsf	3,5	;RP0=1, select bank1
  1613  0CF4  1303               	bcf	3,6	;RP1=0, select bank1
  1614  0CF5  085C               	movf	(main@status+1)^(0+128),w
  1615  0CF6  1283               	bcf	3,5	;RP0=0, select bank0
  1616  0CF7  1303               	bcf	3,6	;RP1=0, select bank0
  1617  0CF8  00DB               	movwf	ftoa@status+1
  1618  0CF9  120A  118A  20F0  120A  158A  	fcall	_ftoa
  1619  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  1620  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  1621  0D00  00E6               	movwf	??_main
  1622  0D01  0866               	movf	??_main,w
  1623  0D02  1683               	bsf	3,5	;RP0=1, select bank1
  1624  0D03  1303               	bcf	3,6	;RP1=0, select bank1
  1625  0D04  00DD               	movwf	main@buffer^(0+128)
  1626  0D05                     l2932:
  1627                           
  1628                           ;main.c: 79:         UARTSendString(" ", 6);
  1629  0D05  3042               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1630  0D06  00F1               	movwf	UARTSendString@str
  1631  0D07  3080               	movlw	128
  1632  0D08  00F2               	movwf	UARTSendString@str+1
  1633  0D09  3006               	movlw	6
  1634  0D0A  1283               	bcf	3,5	;RP0=0, select bank0
  1635  0D0B  1303               	bcf	3,6	;RP1=0, select bank0
  1636  0D0C  00E6               	movwf	??_main
  1637  0D0D  0866               	movf	??_main,w
  1638  0D0E  00F3               	movwf	UARTSendString@max_length
  1639  0D0F  160A  118A  2389  120A  158A  	fcall	_UARTSendString
  1640  0D14                     l2934:
  1641                           
  1642                           ;main.c: 80:         UARTSendString(buffer, 6);
  1643  0D14  1683               	bsf	3,5	;RP0=1, select bank1
  1644  0D15  1303               	bcf	3,6	;RP1=0, select bank1
  1645  0D16  085D               	movf	main@buffer^(0+128),w
  1646  0D17  00F1               	movwf	UARTSendString@str
  1647  0D18  3000               	movlw	0
  1648  0D19  00F2               	movwf	UARTSendString@str+1
  1649  0D1A  3006               	movlw	6
  1650  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  1651  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  1652  0D1D  00E6               	movwf	??_main
  1653  0D1E  0866               	movf	??_main,w
  1654  0D1F  00F3               	movwf	UARTSendString@max_length
  1655  0D20  160A  118A  2389  120A  158A  	fcall	_UARTSendString
  1656  0D25                     l2936:
  1657                           
  1658                           ;main.c: 82:         buffer = ftoa(datos[6], status);
  1659  0D25  3018               	movlw	24
  1660  0D26  3EBF               	addlw	(low (main@datos| 0))& (0+255)
  1661  0D27  0084               	movwf	4
  1662  0D28  1383               	bcf	3,7	;select IRP bank1
  1663  0D29  0800               	movf	0,w
  1664  0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  1665  0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  1666  0D2C  00D6               	movwf	ftoa@f
  1667  0D2D  0A84               	incf	4,f
  1668  0D2E  0800               	movf	0,w
  1669  0D2F  00D7               	movwf	ftoa@f+1
  1670  0D30  0A84               	incf	4,f
  1671  0D31  0800               	movf	0,w
  1672  0D32  00D8               	movwf	ftoa@f+2
  1673  0D33  0A84               	incf	4,f
  1674  0D34  0800               	movf	0,w
  1675  0D35  00D9               	movwf	ftoa@f+3
  1676  0D36  1683               	bsf	3,5	;RP0=1, select bank1
  1677  0D37  1303               	bcf	3,6	;RP1=0, select bank1
  1678  0D38  085B               	movf	main@status^(0+128),w
  1679  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  1680  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  1681  0D3B  00DA               	movwf	ftoa@status
  1682  0D3C  1683               	bsf	3,5	;RP0=1, select bank1
  1683  0D3D  1303               	bcf	3,6	;RP1=0, select bank1
  1684  0D3E  085C               	movf	(main@status+1)^(0+128),w
  1685  0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  1686  0D40  1303               	bcf	3,6	;RP1=0, select bank0
  1687  0D41  00DB               	movwf	ftoa@status+1
  1688  0D42  120A  118A  20F0  120A  158A  	fcall	_ftoa
  1689  0D47  1283               	bcf	3,5	;RP0=0, select bank0
  1690  0D48  1303               	bcf	3,6	;RP1=0, select bank0
  1691  0D49  00E6               	movwf	??_main
  1692  0D4A  0866               	movf	??_main,w
  1693  0D4B  1683               	bsf	3,5	;RP0=1, select bank1
  1694  0D4C  1303               	bcf	3,6	;RP1=0, select bank1
  1695  0D4D  00DD               	movwf	main@buffer^(0+128)
  1696  0D4E                     l2938:
  1697                           
  1698                           ;main.c: 83:         UARTSendString(" ", 6);
  1699  0D4E  3042               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1700  0D4F  00F1               	movwf	UARTSendString@str
  1701  0D50  3080               	movlw	128
  1702  0D51  00F2               	movwf	UARTSendString@str+1
  1703  0D52  3006               	movlw	6
  1704  0D53  1283               	bcf	3,5	;RP0=0, select bank0
  1705  0D54  1303               	bcf	3,6	;RP1=0, select bank0
  1706  0D55  00E6               	movwf	??_main
  1707  0D56  0866               	movf	??_main,w
  1708  0D57  00F3               	movwf	UARTSendString@max_length
  1709  0D58  160A  118A  2389  120A  158A  	fcall	_UARTSendString
  1710  0D5D                     l2940:
  1711                           
  1712                           ;main.c: 84:         UARTSendString(buffer, 6);
  1713  0D5D  1683               	bsf	3,5	;RP0=1, select bank1
  1714  0D5E  1303               	bcf	3,6	;RP1=0, select bank1
  1715  0D5F  085D               	movf	main@buffer^(0+128),w
  1716  0D60  00F1               	movwf	UARTSendString@str
  1717  0D61  3000               	movlw	0
  1718  0D62  00F2               	movwf	UARTSendString@str+1
  1719  0D63  3006               	movlw	6
  1720  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  1721  0D65  1303               	bcf	3,6	;RP1=0, select bank0
  1722  0D66  00E6               	movwf	??_main
  1723  0D67  0866               	movf	??_main,w
  1724  0D68  00F3               	movwf	UARTSendString@max_length
  1725  0D69  160A  118A  2389  120A  158A  	fcall	_UARTSendString
  1726  0D6E                     l2942:
  1727                           
  1728                           ;main.c: 86:         UARTSendChar('\n');
  1729  0D6E  300A               	movlw	10
  1730  0D6F  160A  118A  22E6  120A  158A  	fcall	_UARTSendChar
  1731  0D74  2B50               	goto	l2894
  1732  0D75  120A  118A  2800   	ljmp	start
  1733  0D78                     __end_of_main:
  1734                           
  1735                           	psect	text1
  1736  01C5                     __ptext1:	
  1737 ;; *************** function _readMPU *****************
  1738 ;; Defined at:
  1739 ;;		line 28 in file "MPU6050.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;  datos           1    wreg     PTR float 
  1742 ;;		 -> main@datos(28), 
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  datos           1   30[BANK1 ] PTR float 
  1745 ;;		 -> main@datos(28), 
  1746 ;;  i               2   28[BANK1 ] int 
  1747 ;;  valores        14    0[BANK1 ] unsigned char [14]
  1748 ;;  guardar        14   14[BANK1 ] int [7]
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1758 ;;      Params:         0       0       0       0       0
  1759 ;;      Locals:         0       0      31       0       0
  1760 ;;      Temps:          0       4       0       0       0
  1761 ;;      Totals:         0       4      31       0       0
  1762 ;;Total ram usage:       35 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    3
  1765 ;; This function calls:
  1766 ;;		_I2C_Master_Start
  1767 ;;		_I2C_Master_Stop
  1768 ;;		_I2C_Master_Write
  1769 ;;		_I2C_Read
  1770 ;;		_I2C_Start
  1771 ;;		___fladd
  1772 ;;		___fldiv
  1773 ;;		___flmul
  1774 ;;		___xxtofl
  1775 ;; This function is called by:
  1776 ;;		_main
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           
  1781                           ;psect for function _readMPU
  1782  01C5                     _readMPU:
  1783                           
  1784                           ;incstack = 0
  1785                           ; Regs used in _readMPU: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1786                           ;readMPU@datos stored from wreg
  1787  01C5  1683               	bsf	3,5	;RP0=1, select bank1
  1788  01C6  1303               	bcf	3,6	;RP1=0, select bank1
  1789  01C7  00BE               	movwf	readMPU@datos^(0+128)
  1790  01C8                     l2794:
  1791                           
  1792                           ;MPU6050.c: 29:     char valores[14];;MPU6050.c: 30:     int guardar[7];;MPU6050.c: 32: 
      +                              I2C_Start(0xD0);
  1793  01C8  30D0               	movlw	208
  1794  01C9  160A  118A  231C  120A  118A  	fcall	_I2C_Start
  1795                           
  1796                           ;MPU6050.c: 34:     I2C_Master_Write(0x3B);
  1797  01CE  303B               	movlw	59
  1798  01CF  160A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  1799                           
  1800                           ;MPU6050.c: 36:     I2C_Master_Start();
  1801  01D4  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Start
  1802                           
  1803                           ;MPU6050.c: 37:     I2C_Master_Write(0xD1);
  1804  01D9  30D1               	movlw	209
  1805  01DA  160A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  1806  01DF                     l2796:
  1807                           
  1808                           ;MPU6050.c: 38:     for (int i = 0; i < 13; i++) valores[i] = I2C_Read(0);
  1809  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  1810  01E0  1303               	bcf	3,6	;RP1=0, select bank1
  1811  01E1  01BC               	clrf	readMPU@i^(0+128)
  1812  01E2  01BD               	clrf	(readMPU@i+1)^(0+128)
  1813  01E3                     l2802:
  1814  01E3  3000               	movlw	0
  1815  01E4  120A  118A  2005  120A  118A  	fcall	_I2C_Read
  1816  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  1817  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  1818  01EB  00CE               	movwf	??_readMPU
  1819  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  1820  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  1821  01EE  083C               	movf	readMPU@i^(0+128),w
  1822  01EF  3EA0               	addlw	(low (readMPU@valores| 0))& (0+255)
  1823  01F0  0084               	movwf	4
  1824  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1825  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  1826  01F3  084E               	movf	??_readMPU,w
  1827  01F4  1383               	bcf	3,7	;select IRP bank1
  1828  01F5  0080               	movwf	0
  1829  01F6                     l2804:
  1830  01F6  3001               	movlw	1
  1831  01F7  1683               	bsf	3,5	;RP0=1, select bank1
  1832  01F8  1303               	bcf	3,6	;RP1=0, select bank1
  1833  01F9  07BC               	addwf	readMPU@i^(0+128),f
  1834  01FA  1803               	skipnc
  1835  01FB  0ABD               	incf	(readMPU@i+1)^(0+128),f
  1836  01FC  3000               	movlw	0
  1837  01FD  07BD               	addwf	(readMPU@i+1)^(0+128),f
  1838  01FE                     l2806:
  1839  01FE  083D               	movf	(readMPU@i+1)^(0+128),w
  1840  01FF  3A80               	xorlw	128
  1841  0200  00FF               	movwf	btemp+1
  1842  0201  3080               	movlw	128
  1843  0202  027F               	subwf	btemp+1,w
  1844  0203  1D03               	skipz
  1845  0204  2A07               	goto	u4075
  1846  0205  300D               	movlw	13
  1847  0206  023C               	subwf	readMPU@i^(0+128),w
  1848  0207                     u4075:
  1849  0207  1C03               	skipc
  1850  0208  2A0A               	goto	u4071
  1851  0209  2A0B               	goto	u4070
  1852  020A                     u4071:
  1853  020A  29E3               	goto	l2802
  1854  020B                     u4070:
  1855  020B                     l2808:
  1856                           
  1857                           ;MPU6050.c: 39:     valores[13] = I2C_Read(1);
  1858  020B  3001               	movlw	1
  1859  020C  120A  118A  2005  120A  118A  	fcall	_I2C_Read
  1860  0211  1283               	bcf	3,5	;RP0=0, select bank0
  1861  0212  1303               	bcf	3,6	;RP1=0, select bank0
  1862  0213  00CE               	movwf	??_readMPU
  1863  0214  084E               	movf	??_readMPU,w
  1864  0215  1683               	bsf	3,5	;RP0=1, select bank1
  1865  0216  1303               	bcf	3,6	;RP1=0, select bank1
  1866  0217  00AD               	movwf	(readMPU@valores^(0+128)+13)
  1867                           
  1868                           ;MPU6050.c: 40:     I2C_Master_Stop();
  1869  0218  160A  118A  22C0  120A  118A  	fcall	_I2C_Master_Stop
  1870  021D                     l2810:
  1871                           
  1872                           ;MPU6050.c: 43:     guardar[0] = ((int) valores[0] << 8) | ((int) valores[1]);
  1873  021D  1683               	bsf	3,5	;RP0=1, select bank1
  1874  021E  1303               	bcf	3,6	;RP1=0, select bank1
  1875  021F  0821               	movf	(readMPU@valores^(0+128)+1),w
  1876  0220  1283               	bcf	3,5	;RP0=0, select bank0
  1877  0221  1303               	bcf	3,6	;RP1=0, select bank0
  1878  0222  00CE               	movwf	??_readMPU
  1879  0223  01CF               	clrf	??_readMPU+1
  1880  0224  1683               	bsf	3,5	;RP0=1, select bank1
  1881  0225  1303               	bcf	3,6	;RP1=0, select bank1
  1882  0226  0820               	movf	readMPU@valores^(0+128),w
  1883  0227  1283               	bcf	3,5	;RP0=0, select bank0
  1884  0228  1303               	bcf	3,6	;RP1=0, select bank0
  1885  0229  00D0               	movwf	??_readMPU+2
  1886  022A  01D1               	clrf	??_readMPU+3
  1887  022B  0850               	movf	??_readMPU+2,w
  1888  022C  00D1               	movwf	??_readMPU+3
  1889  022D  01D0               	clrf	??_readMPU+2
  1890  022E  084E               	movf	??_readMPU,w
  1891  022F  0450               	iorwf	??_readMPU+2,w
  1892  0230  1683               	bsf	3,5	;RP0=1, select bank1
  1893  0231  1303               	bcf	3,6	;RP1=0, select bank1
  1894  0232  00AE               	movwf	readMPU@guardar^(0+128)
  1895  0233  1283               	bcf	3,5	;RP0=0, select bank0
  1896  0234  1303               	bcf	3,6	;RP1=0, select bank0
  1897  0235  084F               	movf	??_readMPU+1,w
  1898  0236  0451               	iorwf	??_readMPU+3,w
  1899  0237  1683               	bsf	3,5	;RP0=1, select bank1
  1900  0238  1303               	bcf	3,6	;RP1=0, select bank1
  1901  0239  00AF               	movwf	(readMPU@guardar+1)^(0+128)
  1902  023A                     l2812:
  1903                           
  1904                           ;MPU6050.c: 44:     guardar[1] = ((int) valores[2] << 8) | ((int) valores[3]);
  1905  023A  0823               	movf	(readMPU@valores^(0+128)+3),w
  1906  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1907  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1908  023D  00CE               	movwf	??_readMPU
  1909  023E  01CF               	clrf	??_readMPU+1
  1910  023F  1683               	bsf	3,5	;RP0=1, select bank1
  1911  0240  1303               	bcf	3,6	;RP1=0, select bank1
  1912  0241  0822               	movf	(readMPU@valores^(0+128)+2),w
  1913  0242  1283               	bcf	3,5	;RP0=0, select bank0
  1914  0243  1303               	bcf	3,6	;RP1=0, select bank0
  1915  0244  00D0               	movwf	??_readMPU+2
  1916  0245  01D1               	clrf	??_readMPU+3
  1917  0246  0850               	movf	??_readMPU+2,w
  1918  0247  00D1               	movwf	??_readMPU+3
  1919  0248  01D0               	clrf	??_readMPU+2
  1920  0249  084E               	movf	??_readMPU,w
  1921  024A  0450               	iorwf	??_readMPU+2,w
  1922  024B  1683               	bsf	3,5	;RP0=1, select bank1
  1923  024C  1303               	bcf	3,6	;RP1=0, select bank1
  1924  024D  00B0               	movwf	(readMPU@guardar^(0+128)+2)
  1925  024E  1283               	bcf	3,5	;RP0=0, select bank0
  1926  024F  1303               	bcf	3,6	;RP1=0, select bank0
  1927  0250  084F               	movf	??_readMPU+1,w
  1928  0251  0451               	iorwf	??_readMPU+3,w
  1929  0252  1683               	bsf	3,5	;RP0=1, select bank1
  1930  0253  1303               	bcf	3,6	;RP1=0, select bank1
  1931  0254  00B1               	movwf	((readMPU@guardar+1)^(0+128)+2)
  1932  0255                     l2814:
  1933                           
  1934                           ;MPU6050.c: 45:     guardar[2] = ((int) valores[4] << 8) | ((int) valores[5]);
  1935  0255  0825               	movf	(readMPU@valores^(0+128)+5),w
  1936  0256  1283               	bcf	3,5	;RP0=0, select bank0
  1937  0257  1303               	bcf	3,6	;RP1=0, select bank0
  1938  0258  00CE               	movwf	??_readMPU
  1939  0259  01CF               	clrf	??_readMPU+1
  1940  025A  1683               	bsf	3,5	;RP0=1, select bank1
  1941  025B  1303               	bcf	3,6	;RP1=0, select bank1
  1942  025C  0824               	movf	(readMPU@valores^(0+128)+4),w
  1943  025D  1283               	bcf	3,5	;RP0=0, select bank0
  1944  025E  1303               	bcf	3,6	;RP1=0, select bank0
  1945  025F  00D0               	movwf	??_readMPU+2
  1946  0260  01D1               	clrf	??_readMPU+3
  1947  0261  0850               	movf	??_readMPU+2,w
  1948  0262  00D1               	movwf	??_readMPU+3
  1949  0263  01D0               	clrf	??_readMPU+2
  1950  0264  084E               	movf	??_readMPU,w
  1951  0265  0450               	iorwf	??_readMPU+2,w
  1952  0266  1683               	bsf	3,5	;RP0=1, select bank1
  1953  0267  1303               	bcf	3,6	;RP1=0, select bank1
  1954  0268  00B2               	movwf	(readMPU@guardar^(0+128)+4)
  1955  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1956  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1957  026B  084F               	movf	??_readMPU+1,w
  1958  026C  0451               	iorwf	??_readMPU+3,w
  1959  026D  1683               	bsf	3,5	;RP0=1, select bank1
  1960  026E  1303               	bcf	3,6	;RP1=0, select bank1
  1961  026F  00B3               	movwf	((readMPU@guardar+1)^(0+128)+4)
  1962  0270                     l2816:
  1963                           
  1964                           ;MPU6050.c: 46:     guardar[3] = ((int) valores[6] << 8) | ((int) valores[7]);
  1965  0270  0827               	movf	(readMPU@valores^(0+128)+7),w
  1966  0271  1283               	bcf	3,5	;RP0=0, select bank0
  1967  0272  1303               	bcf	3,6	;RP1=0, select bank0
  1968  0273  00CE               	movwf	??_readMPU
  1969  0274  01CF               	clrf	??_readMPU+1
  1970  0275  1683               	bsf	3,5	;RP0=1, select bank1
  1971  0276  1303               	bcf	3,6	;RP1=0, select bank1
  1972  0277  0826               	movf	(readMPU@valores^(0+128)+6),w
  1973  0278  1283               	bcf	3,5	;RP0=0, select bank0
  1974  0279  1303               	bcf	3,6	;RP1=0, select bank0
  1975  027A  00D0               	movwf	??_readMPU+2
  1976  027B  01D1               	clrf	??_readMPU+3
  1977  027C  0850               	movf	??_readMPU+2,w
  1978  027D  00D1               	movwf	??_readMPU+3
  1979  027E  01D0               	clrf	??_readMPU+2
  1980  027F  084E               	movf	??_readMPU,w
  1981  0280  0450               	iorwf	??_readMPU+2,w
  1982  0281  1683               	bsf	3,5	;RP0=1, select bank1
  1983  0282  1303               	bcf	3,6	;RP1=0, select bank1
  1984  0283  00B4               	movwf	(readMPU@guardar^(0+128)+6)
  1985  0284  1283               	bcf	3,5	;RP0=0, select bank0
  1986  0285  1303               	bcf	3,6	;RP1=0, select bank0
  1987  0286  084F               	movf	??_readMPU+1,w
  1988  0287  0451               	iorwf	??_readMPU+3,w
  1989  0288  1683               	bsf	3,5	;RP0=1, select bank1
  1990  0289  1303               	bcf	3,6	;RP1=0, select bank1
  1991  028A  00B5               	movwf	((readMPU@guardar+1)^(0+128)+6)
  1992  028B                     l2818:
  1993                           
  1994                           ;MPU6050.c: 47:     guardar[4] = ((int) valores[8] << 8) | ((int) valores[9]);
  1995  028B  0829               	movf	(readMPU@valores^(0+128)+9),w
  1996  028C  1283               	bcf	3,5	;RP0=0, select bank0
  1997  028D  1303               	bcf	3,6	;RP1=0, select bank0
  1998  028E  00CE               	movwf	??_readMPU
  1999  028F  01CF               	clrf	??_readMPU+1
  2000  0290  1683               	bsf	3,5	;RP0=1, select bank1
  2001  0291  1303               	bcf	3,6	;RP1=0, select bank1
  2002  0292  0828               	movf	(readMPU@valores^(0+128)+8),w
  2003  0293  1283               	bcf	3,5	;RP0=0, select bank0
  2004  0294  1303               	bcf	3,6	;RP1=0, select bank0
  2005  0295  00D0               	movwf	??_readMPU+2
  2006  0296  01D1               	clrf	??_readMPU+3
  2007  0297  0850               	movf	??_readMPU+2,w
  2008  0298  00D1               	movwf	??_readMPU+3
  2009  0299  01D0               	clrf	??_readMPU+2
  2010  029A  084E               	movf	??_readMPU,w
  2011  029B  0450               	iorwf	??_readMPU+2,w
  2012  029C  1683               	bsf	3,5	;RP0=1, select bank1
  2013  029D  1303               	bcf	3,6	;RP1=0, select bank1
  2014  029E  00B6               	movwf	(readMPU@guardar^(0+128)+8)
  2015  029F  1283               	bcf	3,5	;RP0=0, select bank0
  2016  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  2017  02A1  084F               	movf	??_readMPU+1,w
  2018  02A2  0451               	iorwf	??_readMPU+3,w
  2019  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2020  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  2021  02A5  00B7               	movwf	((readMPU@guardar+1)^(0+128)+8)
  2022  02A6                     l2820:
  2023                           
  2024                           ;MPU6050.c: 48:     guardar[5] = ((int) valores[10] << 8) | ((int) valores[11]);
  2025  02A6  082B               	movf	(readMPU@valores^(0+128)+11),w
  2026  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  2027  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  2028  02A9  00CE               	movwf	??_readMPU
  2029  02AA  01CF               	clrf	??_readMPU+1
  2030  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  2031  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  2032  02AD  082A               	movf	(readMPU@valores^(0+128)+10),w
  2033  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  2034  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  2035  02B0  00D0               	movwf	??_readMPU+2
  2036  02B1  01D1               	clrf	??_readMPU+3
  2037  02B2  0850               	movf	??_readMPU+2,w
  2038  02B3  00D1               	movwf	??_readMPU+3
  2039  02B4  01D0               	clrf	??_readMPU+2
  2040  02B5  084E               	movf	??_readMPU,w
  2041  02B6  0450               	iorwf	??_readMPU+2,w
  2042  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  2043  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  2044  02B9  00B8               	movwf	(readMPU@guardar^(0+128)+10)
  2045  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2046  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  2047  02BC  084F               	movf	??_readMPU+1,w
  2048  02BD  0451               	iorwf	??_readMPU+3,w
  2049  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  2050  02BF  1303               	bcf	3,6	;RP1=0, select bank1
  2051  02C0  00B9               	movwf	((readMPU@guardar+1)^(0+128)+10)
  2052  02C1                     l2822:
  2053                           
  2054                           ;MPU6050.c: 49:     guardar[6] = ((int) valores[12] << 8) | ((int) valores[13]);
  2055  02C1  082D               	movf	(readMPU@valores^(0+128)+13),w
  2056  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  2057  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  2058  02C4  00CE               	movwf	??_readMPU
  2059  02C5  01CF               	clrf	??_readMPU+1
  2060  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  2061  02C7  1303               	bcf	3,6	;RP1=0, select bank1
  2062  02C8  082C               	movf	(readMPU@valores^(0+128)+12),w
  2063  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  2064  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  2065  02CB  00D0               	movwf	??_readMPU+2
  2066  02CC  01D1               	clrf	??_readMPU+3
  2067  02CD  0850               	movf	??_readMPU+2,w
  2068  02CE  00D1               	movwf	??_readMPU+3
  2069  02CF  01D0               	clrf	??_readMPU+2
  2070  02D0  084E               	movf	??_readMPU,w
  2071  02D1  0450               	iorwf	??_readMPU+2,w
  2072  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  2073  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  2074  02D4  00BA               	movwf	(readMPU@guardar^(0+128)+12)
  2075  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2076  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2077  02D7  084F               	movf	??_readMPU+1,w
  2078  02D8  0451               	iorwf	??_readMPU+3,w
  2079  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2080  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  2081  02DB  00BB               	movwf	((readMPU@guardar+1)^(0+128)+12)
  2082  02DC                     l2824:
  2083                           
  2084                           ;MPU6050.c: 51:     datos[0] = ((float) guardar[0]) * 0.0005982;
  2085  02DC  303A               	movlw	58
  2086  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  2087  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  2088  02DF  00A3               	movwf	___flmul@b+3
  2089  02E0  301C               	movlw	28
  2090  02E1  00A2               	movwf	___flmul@b+2
  2091  02E2  30D0               	movlw	208
  2092  02E3  00A1               	movwf	___flmul@b+1
  2093  02E4  3086               	movlw	134
  2094  02E5  00A0               	movwf	___flmul@b
  2095  02E6  1683               	bsf	3,5	;RP0=1, select bank1
  2096  02E7  1303               	bcf	3,6	;RP1=0, select bank1
  2097  02E8  082E               	movf	readMPU@guardar^(0+128),w
  2098  02E9  00F0               	movwf	___xxtofl@val
  2099  02EA  082F               	movf	(readMPU@guardar+1)^(0+128),w
  2100  02EB  00F1               	movwf	___xxtofl@val+1
  2101  02EC  3000               	movlw	0
  2102  02ED  1BF1               	btfsc	___xxtofl@val+1,7
  2103  02EE  30FF               	movlw	255
  2104  02EF  00F2               	movwf	___xxtofl@val+2
  2105  02F0  00F3               	movwf	___xxtofl@val+3
  2106  02F1  3001               	movlw	1
  2107  02F2  120A  158A  2026  120A  118A  	fcall	___xxtofl
  2108  02F7  0873               	movf	?___xxtofl+3,w
  2109  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2110  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2111  02FA  00A7               	movwf	___flmul@a+3
  2112  02FB  0872               	movf	?___xxtofl+2,w
  2113  02FC  00A6               	movwf	___flmul@a+2
  2114  02FD  0871               	movf	?___xxtofl+1,w
  2115  02FE  00A5               	movwf	___flmul@a+1
  2116  02FF  0870               	movf	?___xxtofl,w
  2117  0300  00A4               	movwf	___flmul@a
  2118  0301  120A  118A  2492  120A  118A  	fcall	___flmul
  2119  0306  1683               	bsf	3,5	;RP0=1, select bank1
  2120  0307  1303               	bcf	3,6	;RP1=0, select bank1
  2121  0308  083E               	movf	readMPU@datos^(0+128),w
  2122  0309  0084               	movwf	4
  2123  030A  1283               	bcf	3,5	;RP0=0, select bank0
  2124  030B  1303               	bcf	3,6	;RP1=0, select bank0
  2125  030C  0820               	movf	?___flmul,w
  2126  030D  1383               	bcf	3,7	;select IRP bank0
  2127  030E  0080               	movwf	0
  2128  030F  0A84               	incf	4,f
  2129  0310  0821               	movf	?___flmul+1,w
  2130  0311  0080               	movwf	0
  2131  0312  0A84               	incf	4,f
  2132  0313  0822               	movf	?___flmul+2,w
  2133  0314  0080               	movwf	0
  2134  0315  0A84               	incf	4,f
  2135  0316  0823               	movf	?___flmul+3,w
  2136  0317  0080               	movwf	0
  2137  0318                     l2826:
  2138                           
  2139                           ;MPU6050.c: 52:     datos[1] = ((float) guardar[1]) * 0.0005982;
  2140  0318  303A               	movlw	58
  2141  0319  00A3               	movwf	___flmul@b+3
  2142  031A  301C               	movlw	28
  2143  031B  00A2               	movwf	___flmul@b+2
  2144  031C  30D0               	movlw	208
  2145  031D  00A1               	movwf	___flmul@b+1
  2146  031E  3086               	movlw	134
  2147  031F  00A0               	movwf	___flmul@b
  2148  0320  1683               	bsf	3,5	;RP0=1, select bank1
  2149  0321  1303               	bcf	3,6	;RP1=0, select bank1
  2150  0322  0830               	movf	(readMPU@guardar^(0+128)+2),w
  2151  0323  00F0               	movwf	___xxtofl@val
  2152  0324  0831               	movf	((readMPU@guardar+1)^(0+128)+2),w
  2153  0325  00F1               	movwf	___xxtofl@val+1
  2154  0326  3000               	movlw	0
  2155  0327  1BF1               	btfsc	___xxtofl@val+1,7
  2156  0328  30FF               	movlw	255
  2157  0329  00F2               	movwf	___xxtofl@val+2
  2158  032A  00F3               	movwf	___xxtofl@val+3
  2159  032B  3001               	movlw	1
  2160  032C  120A  158A  2026  120A  118A  	fcall	___xxtofl
  2161  0331  0873               	movf	?___xxtofl+3,w
  2162  0332  1283               	bcf	3,5	;RP0=0, select bank0
  2163  0333  1303               	bcf	3,6	;RP1=0, select bank0
  2164  0334  00A7               	movwf	___flmul@a+3
  2165  0335  0872               	movf	?___xxtofl+2,w
  2166  0336  00A6               	movwf	___flmul@a+2
  2167  0337  0871               	movf	?___xxtofl+1,w
  2168  0338  00A5               	movwf	___flmul@a+1
  2169  0339  0870               	movf	?___xxtofl,w
  2170  033A  00A4               	movwf	___flmul@a
  2171  033B  120A  118A  2492  120A  118A  	fcall	___flmul
  2172  0340  1683               	bsf	3,5	;RP0=1, select bank1
  2173  0341  1303               	bcf	3,6	;RP1=0, select bank1
  2174  0342  083E               	movf	readMPU@datos^(0+128),w
  2175  0343  3E04               	addlw	4
  2176  0344  0084               	movwf	4
  2177  0345  1283               	bcf	3,5	;RP0=0, select bank0
  2178  0346  1303               	bcf	3,6	;RP1=0, select bank0
  2179  0347  0820               	movf	?___flmul,w
  2180  0348  1383               	bcf	3,7	;select IRP bank0
  2181  0349  0080               	movwf	0
  2182  034A  0A84               	incf	4,f
  2183  034B  0821               	movf	?___flmul+1,w
  2184  034C  0080               	movwf	0
  2185  034D  0A84               	incf	4,f
  2186  034E  0822               	movf	?___flmul+2,w
  2187  034F  0080               	movwf	0
  2188  0350  0A84               	incf	4,f
  2189  0351  0823               	movf	?___flmul+3,w
  2190  0352  0080               	movwf	0
  2191  0353                     l2828:
  2192                           
  2193                           ;MPU6050.c: 53:     datos[2] = ((float) guardar[2]) * 0.0005982;
  2194  0353  303A               	movlw	58
  2195  0354  00A3               	movwf	___flmul@b+3
  2196  0355  301C               	movlw	28
  2197  0356  00A2               	movwf	___flmul@b+2
  2198  0357  30D0               	movlw	208
  2199  0358  00A1               	movwf	___flmul@b+1
  2200  0359  3086               	movlw	134
  2201  035A  00A0               	movwf	___flmul@b
  2202  035B  1683               	bsf	3,5	;RP0=1, select bank1
  2203  035C  1303               	bcf	3,6	;RP1=0, select bank1
  2204  035D  0832               	movf	(readMPU@guardar^(0+128)+4),w
  2205  035E  00F0               	movwf	___xxtofl@val
  2206  035F  0833               	movf	((readMPU@guardar+1)^(0+128)+4),w
  2207  0360  00F1               	movwf	___xxtofl@val+1
  2208  0361  3000               	movlw	0
  2209  0362  1BF1               	btfsc	___xxtofl@val+1,7
  2210  0363  30FF               	movlw	255
  2211  0364  00F2               	movwf	___xxtofl@val+2
  2212  0365  00F3               	movwf	___xxtofl@val+3
  2213  0366  3001               	movlw	1
  2214  0367  120A  158A  2026  120A  118A  	fcall	___xxtofl
  2215  036C  0873               	movf	?___xxtofl+3,w
  2216  036D  1283               	bcf	3,5	;RP0=0, select bank0
  2217  036E  1303               	bcf	3,6	;RP1=0, select bank0
  2218  036F  00A7               	movwf	___flmul@a+3
  2219  0370  0872               	movf	?___xxtofl+2,w
  2220  0371  00A6               	movwf	___flmul@a+2
  2221  0372  0871               	movf	?___xxtofl+1,w
  2222  0373  00A5               	movwf	___flmul@a+1
  2223  0374  0870               	movf	?___xxtofl,w
  2224  0375  00A4               	movwf	___flmul@a
  2225  0376  120A  118A  2492  120A  118A  	fcall	___flmul
  2226  037B  1683               	bsf	3,5	;RP0=1, select bank1
  2227  037C  1303               	bcf	3,6	;RP1=0, select bank1
  2228  037D  083E               	movf	readMPU@datos^(0+128),w
  2229  037E  3E08               	addlw	8
  2230  037F  0084               	movwf	4
  2231  0380  1283               	bcf	3,5	;RP0=0, select bank0
  2232  0381  1303               	bcf	3,6	;RP1=0, select bank0
  2233  0382  0820               	movf	?___flmul,w
  2234  0383  1383               	bcf	3,7	;select IRP bank0
  2235  0384  0080               	movwf	0
  2236  0385  0A84               	incf	4,f
  2237  0386  0821               	movf	?___flmul+1,w
  2238  0387  0080               	movwf	0
  2239  0388  0A84               	incf	4,f
  2240  0389  0822               	movf	?___flmul+2,w
  2241  038A  0080               	movwf	0
  2242  038B  0A84               	incf	4,f
  2243  038C  0823               	movf	?___flmul+3,w
  2244  038D  0080               	movwf	0
  2245  038E                     l2830:
  2246                           
  2247                           ;MPU6050.c: 54:     datos[3] = ((float) guardar[3])/340 + 36.53;
  2248  038E  3042               	movlw	66
  2249  038F  00BD               	movwf	___fladd@b+3
  2250  0390  3012               	movlw	18
  2251  0391  00BC               	movwf	___fladd@b+2
  2252  0392  301E               	movlw	30
  2253  0393  00BB               	movwf	___fladd@b+1
  2254  0394  30B8               	movlw	184
  2255  0395  00BA               	movwf	___fladd@b
  2256  0396  3043               	movlw	67
  2257  0397  00A3               	movwf	___fldiv@a+3
  2258  0398  30AA               	movlw	170
  2259  0399  00A2               	movwf	___fldiv@a+2
  2260  039A  3000               	movlw	0
  2261  039B  00A1               	movwf	___fldiv@a+1
  2262  039C  3000               	movlw	0
  2263  039D  00A0               	movwf	___fldiv@a
  2264  039E  1683               	bsf	3,5	;RP0=1, select bank1
  2265  039F  1303               	bcf	3,6	;RP1=0, select bank1
  2266  03A0  0834               	movf	(readMPU@guardar^(0+128)+6),w
  2267  03A1  00F0               	movwf	___xxtofl@val
  2268  03A2  0835               	movf	((readMPU@guardar+1)^(0+128)+6),w
  2269  03A3  00F1               	movwf	___xxtofl@val+1
  2270  03A4  3000               	movlw	0
  2271  03A5  1BF1               	btfsc	___xxtofl@val+1,7
  2272  03A6  30FF               	movlw	255
  2273  03A7  00F2               	movwf	___xxtofl@val+2
  2274  03A8  00F3               	movwf	___xxtofl@val+3
  2275  03A9  3001               	movlw	1
  2276  03AA  120A  158A  2026  120A  118A  	fcall	___xxtofl
  2277  03AF  0873               	movf	?___xxtofl+3,w
  2278  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2279  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2280  03B2  00A7               	movwf	___fldiv@b+3
  2281  03B3  0872               	movf	?___xxtofl+2,w
  2282  03B4  00A6               	movwf	___fldiv@b+2
  2283  03B5  0871               	movf	?___xxtofl+1,w
  2284  03B6  00A5               	movwf	___fldiv@b+1
  2285  03B7  0870               	movf	?___xxtofl,w
  2286  03B8  00A4               	movwf	___fldiv@b
  2287  03B9  160A  118A  2623  120A  118A  	fcall	___fldiv
  2288  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2289  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2290  03C0  0823               	movf	?___fldiv+3,w
  2291  03C1  00C1               	movwf	___fladd@a+3
  2292  03C2  0822               	movf	?___fldiv+2,w
  2293  03C3  00C0               	movwf	___fladd@a+2
  2294  03C4  0821               	movf	?___fldiv+1,w
  2295  03C5  00BF               	movwf	___fladd@a+1
  2296  03C6  0820               	movf	?___fldiv,w
  2297  03C7  00BE               	movwf	___fladd@a
  2298  03C8  120A  158A  2578  120A  118A  	fcall	___fladd
  2299  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  2300  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  2301  03CF  083E               	movf	readMPU@datos^(0+128),w
  2302  03D0  3E0C               	addlw	12
  2303  03D1  0084               	movwf	4
  2304  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  2305  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  2306  03D4  083A               	movf	?___fladd,w
  2307  03D5  1383               	bcf	3,7	;select IRP bank0
  2308  03D6  0080               	movwf	0
  2309  03D7  0A84               	incf	4,f
  2310  03D8  083B               	movf	?___fladd+1,w
  2311  03D9  0080               	movwf	0
  2312  03DA  0A84               	incf	4,f
  2313  03DB  083C               	movf	?___fladd+2,w
  2314  03DC  0080               	movwf	0
  2315  03DD  0A84               	incf	4,f
  2316  03DE  083D               	movf	?___fladd+3,w
  2317  03DF  0080               	movwf	0
  2318  03E0                     l2832:
  2319                           
  2320                           ;MPU6050.c: 55:     datos[4] = ((float) guardar[4]) * 0.00763;
  2321  03E0  303B               	movlw	59
  2322  03E1  00A3               	movwf	___flmul@b+3
  2323  03E2  30FA               	movlw	250
  2324  03E3  00A2               	movwf	___flmul@b+2
  2325  03E4  3005               	movlw	5
  2326  03E5  00A1               	movwf	___flmul@b+1
  2327  03E6  3014               	movlw	20
  2328  03E7  00A0               	movwf	___flmul@b
  2329  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  2330  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  2331  03EA  0836               	movf	(readMPU@guardar^(0+128)+8),w
  2332  03EB  00F0               	movwf	___xxtofl@val
  2333  03EC  0837               	movf	((readMPU@guardar+1)^(0+128)+8),w
  2334  03ED  00F1               	movwf	___xxtofl@val+1
  2335  03EE  3000               	movlw	0
  2336  03EF  1BF1               	btfsc	___xxtofl@val+1,7
  2337  03F0  30FF               	movlw	255
  2338  03F1  00F2               	movwf	___xxtofl@val+2
  2339  03F2  00F3               	movwf	___xxtofl@val+3
  2340  03F3  3001               	movlw	1
  2341  03F4  120A  158A  2026  120A  118A  	fcall	___xxtofl
  2342  03F9  0873               	movf	?___xxtofl+3,w
  2343  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2344  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2345  03FC  00A7               	movwf	___flmul@a+3
  2346  03FD  0872               	movf	?___xxtofl+2,w
  2347  03FE  00A6               	movwf	___flmul@a+2
  2348  03FF  0871               	movf	?___xxtofl+1,w
  2349  0400  00A5               	movwf	___flmul@a+1
  2350  0401  0870               	movf	?___xxtofl,w
  2351  0402  00A4               	movwf	___flmul@a
  2352  0403  120A  118A  2492  120A  118A  	fcall	___flmul
  2353  0408  1683               	bsf	3,5	;RP0=1, select bank1
  2354  0409  1303               	bcf	3,6	;RP1=0, select bank1
  2355  040A  083E               	movf	readMPU@datos^(0+128),w
  2356  040B  3E10               	addlw	16
  2357  040C  0084               	movwf	4
  2358  040D  1283               	bcf	3,5	;RP0=0, select bank0
  2359  040E  1303               	bcf	3,6	;RP1=0, select bank0
  2360  040F  0820               	movf	?___flmul,w
  2361  0410  1383               	bcf	3,7	;select IRP bank0
  2362  0411  0080               	movwf	0
  2363  0412  0A84               	incf	4,f
  2364  0413  0821               	movf	?___flmul+1,w
  2365  0414  0080               	movwf	0
  2366  0415  0A84               	incf	4,f
  2367  0416  0822               	movf	?___flmul+2,w
  2368  0417  0080               	movwf	0
  2369  0418  0A84               	incf	4,f
  2370  0419  0823               	movf	?___flmul+3,w
  2371  041A  0080               	movwf	0
  2372  041B                     l2834:
  2373                           
  2374                           ;MPU6050.c: 56:     datos[5] = ((float) guardar[5]) * 0.00763;
  2375  041B  303B               	movlw	59
  2376  041C  00A3               	movwf	___flmul@b+3
  2377  041D  30FA               	movlw	250
  2378  041E  00A2               	movwf	___flmul@b+2
  2379  041F  3005               	movlw	5
  2380  0420  00A1               	movwf	___flmul@b+1
  2381  0421  3014               	movlw	20
  2382  0422  00A0               	movwf	___flmul@b
  2383  0423  1683               	bsf	3,5	;RP0=1, select bank1
  2384  0424  1303               	bcf	3,6	;RP1=0, select bank1
  2385  0425  0838               	movf	(readMPU@guardar^(0+128)+10),w
  2386  0426  00F0               	movwf	___xxtofl@val
  2387  0427  0839               	movf	((readMPU@guardar+1)^(0+128)+10),w
  2388  0428  00F1               	movwf	___xxtofl@val+1
  2389  0429  3000               	movlw	0
  2390  042A  1BF1               	btfsc	___xxtofl@val+1,7
  2391  042B  30FF               	movlw	255
  2392  042C  00F2               	movwf	___xxtofl@val+2
  2393  042D  00F3               	movwf	___xxtofl@val+3
  2394  042E  3001               	movlw	1
  2395  042F  120A  158A  2026  120A  118A  	fcall	___xxtofl
  2396  0434  0873               	movf	?___xxtofl+3,w
  2397  0435  1283               	bcf	3,5	;RP0=0, select bank0
  2398  0436  1303               	bcf	3,6	;RP1=0, select bank0
  2399  0437  00A7               	movwf	___flmul@a+3
  2400  0438  0872               	movf	?___xxtofl+2,w
  2401  0439  00A6               	movwf	___flmul@a+2
  2402  043A  0871               	movf	?___xxtofl+1,w
  2403  043B  00A5               	movwf	___flmul@a+1
  2404  043C  0870               	movf	?___xxtofl,w
  2405  043D  00A4               	movwf	___flmul@a
  2406  043E  120A  118A  2492  120A  118A  	fcall	___flmul
  2407  0443  1683               	bsf	3,5	;RP0=1, select bank1
  2408  0444  1303               	bcf	3,6	;RP1=0, select bank1
  2409  0445  083E               	movf	readMPU@datos^(0+128),w
  2410  0446  3E14               	addlw	20
  2411  0447  0084               	movwf	4
  2412  0448  1283               	bcf	3,5	;RP0=0, select bank0
  2413  0449  1303               	bcf	3,6	;RP1=0, select bank0
  2414  044A  0820               	movf	?___flmul,w
  2415  044B  1383               	bcf	3,7	;select IRP bank0
  2416  044C  0080               	movwf	0
  2417  044D  0A84               	incf	4,f
  2418  044E  0821               	movf	?___flmul+1,w
  2419  044F  0080               	movwf	0
  2420  0450  0A84               	incf	4,f
  2421  0451  0822               	movf	?___flmul+2,w
  2422  0452  0080               	movwf	0
  2423  0453  0A84               	incf	4,f
  2424  0454  0823               	movf	?___flmul+3,w
  2425  0455  0080               	movwf	0
  2426  0456                     l2836:
  2427                           
  2428                           ;MPU6050.c: 57:     datos[6] = ((float) guardar[6]) * 0.00763;
  2429  0456  303B               	movlw	59
  2430  0457  00A3               	movwf	___flmul@b+3
  2431  0458  30FA               	movlw	250
  2432  0459  00A2               	movwf	___flmul@b+2
  2433  045A  3005               	movlw	5
  2434  045B  00A1               	movwf	___flmul@b+1
  2435  045C  3014               	movlw	20
  2436  045D  00A0               	movwf	___flmul@b
  2437  045E  1683               	bsf	3,5	;RP0=1, select bank1
  2438  045F  1303               	bcf	3,6	;RP1=0, select bank1
  2439  0460  083A               	movf	(readMPU@guardar^(0+128)+12),w
  2440  0461  00F0               	movwf	___xxtofl@val
  2441  0462  083B               	movf	((readMPU@guardar+1)^(0+128)+12),w
  2442  0463  00F1               	movwf	___xxtofl@val+1
  2443  0464  3000               	movlw	0
  2444  0465  1BF1               	btfsc	___xxtofl@val+1,7
  2445  0466  30FF               	movlw	255
  2446  0467  00F2               	movwf	___xxtofl@val+2
  2447  0468  00F3               	movwf	___xxtofl@val+3
  2448  0469  3001               	movlw	1
  2449  046A  120A  158A  2026  120A  118A  	fcall	___xxtofl
  2450  046F  0873               	movf	?___xxtofl+3,w
  2451  0470  1283               	bcf	3,5	;RP0=0, select bank0
  2452  0471  1303               	bcf	3,6	;RP1=0, select bank0
  2453  0472  00A7               	movwf	___flmul@a+3
  2454  0473  0872               	movf	?___xxtofl+2,w
  2455  0474  00A6               	movwf	___flmul@a+2
  2456  0475  0871               	movf	?___xxtofl+1,w
  2457  0476  00A5               	movwf	___flmul@a+1
  2458  0477  0870               	movf	?___xxtofl,w
  2459  0478  00A4               	movwf	___flmul@a
  2460  0479  120A  118A  2492  120A  118A  	fcall	___flmul
  2461  047E  1683               	bsf	3,5	;RP0=1, select bank1
  2462  047F  1303               	bcf	3,6	;RP1=0, select bank1
  2463  0480  083E               	movf	readMPU@datos^(0+128),w
  2464  0481  3E18               	addlw	24
  2465  0482  0084               	movwf	4
  2466  0483  1283               	bcf	3,5	;RP0=0, select bank0
  2467  0484  1303               	bcf	3,6	;RP1=0, select bank0
  2468  0485  0820               	movf	?___flmul,w
  2469  0486  1383               	bcf	3,7	;select IRP bank0
  2470  0487  0080               	movwf	0
  2471  0488  0A84               	incf	4,f
  2472  0489  0821               	movf	?___flmul+1,w
  2473  048A  0080               	movwf	0
  2474  048B  0A84               	incf	4,f
  2475  048C  0822               	movf	?___flmul+2,w
  2476  048D  0080               	movwf	0
  2477  048E  0A84               	incf	4,f
  2478  048F  0823               	movf	?___flmul+3,w
  2479  0490  0080               	movwf	0
  2480  0491                     l184:
  2481  0491  0008               	return
  2482  0492                     __end_of_readMPU:
  2483                           
  2484                           	psect	text2
  2485  1623                     __ptext2:	
  2486 ;; *************** function ___fldiv *****************
  2487 ;; Defined at:
  2488 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  a               4    0[BANK0 ] void 
  2491 ;;  b               4    4[BANK0 ] void 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;  grs             4   20[BANK0 ] unsigned long 
  2494 ;;  rem             4   13[BANK0 ] unsigned long 
  2495 ;;  new_exp         2   18[BANK0 ] int 
  2496 ;;  aexp            1   25[BANK0 ] unsigned char 
  2497 ;;  bexp            1   24[BANK0 ] unsigned char 
  2498 ;;  sign            1   17[BANK0 ] unsigned char 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  4    0[BANK0 ] unsigned char 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, status,0, btemp+1
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2508 ;;      Params:         0       8       0       0       0
  2509 ;;      Locals:         0      13       0       0       0
  2510 ;;      Temps:          0       5       0       0       0
  2511 ;;      Totals:         0      26       0       0       0
  2512 ;;Total ram usage:       26 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; This function calls:
  2515 ;;		Nothing
  2516 ;; This function is called by:
  2517 ;;		_readMPU
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           
  2522                           ;psect for function ___fldiv
  2523  1623                     ___fldiv:
  2524  1623                     l2316:	
  2525                           ;incstack = 0
  2526                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  2527                           
  2528  1623  1283               	bcf	3,5	;RP0=0, select bank0
  2529  1624  1303               	bcf	3,6	;RP1=0, select bank0
  2530  1625  0827               	movf	___fldiv@b+3,w
  2531  1626  3980               	andlw	128
  2532  1627  00A8               	movwf	??___fldiv
  2533  1628  0828               	movf	??___fldiv,w
  2534  1629  00B1               	movwf	___fldiv@sign
  2535  162A                     l2318:
  2536  162A  0827               	movf	___fldiv@b+3,w
  2537  162B  00A8               	movwf	??___fldiv
  2538  162C  0728               	addwf	??___fldiv,w
  2539  162D  00A9               	movwf	??___fldiv+1
  2540  162E  0829               	movf	??___fldiv+1,w
  2541  162F  00B8               	movwf	___fldiv@bexp
  2542  1630                     l2320:
  2543  1630  1FA6               	btfss	___fldiv@b+2,7
  2544  1631  2E33               	goto	u3051
  2545  1632  2E34               	goto	u3050
  2546  1633                     u3051:
  2547  1633  2E35               	goto	l2324
  2548  1634                     u3050:
  2549  1634                     l2322:
  2550  1634  1438               	bsf	___fldiv@bexp,0
  2551  1635                     l2324:
  2552  1635  0838               	movf	___fldiv@bexp,w
  2553  1636  1903               	btfsc	3,2
  2554  1637  2E39               	goto	u3061
  2555  1638  2E3A               	goto	u3060
  2556  1639                     u3061:
  2557  1639  2E4A               	goto	l2334
  2558  163A                     u3060:
  2559  163A                     l2326:
  2560  163A  0A38               	incf	___fldiv@bexp,w
  2561  163B  1D03               	btfss	3,2
  2562  163C  2E3E               	goto	u3071
  2563  163D  2E3F               	goto	u3070
  2564  163E                     u3071:
  2565  163E  2E47               	goto	l2330
  2566  163F                     u3070:
  2567  163F                     l2328:
  2568  163F  3000               	movlw	0
  2569  1640  00A7               	movwf	___fldiv@b+3
  2570  1641  3000               	movlw	0
  2571  1642  00A6               	movwf	___fldiv@b+2
  2572  1643  3000               	movlw	0
  2573  1644  00A5               	movwf	___fldiv@b+1
  2574  1645  3000               	movlw	0
  2575  1646  00A4               	movwf	___fldiv@b
  2576  1647                     l2330:
  2577  1647  17A6               	bsf	___fldiv@b+2,7
  2578  1648                     l2332:
  2579  1648  01A7               	clrf	___fldiv@b+3
  2580  1649  2E52               	goto	l2336
  2581  164A                     l2334:
  2582  164A  3000               	movlw	0
  2583  164B  00A7               	movwf	___fldiv@b+3
  2584  164C  3000               	movlw	0
  2585  164D  00A6               	movwf	___fldiv@b+2
  2586  164E  3000               	movlw	0
  2587  164F  00A5               	movwf	___fldiv@b+1
  2588  1650  3000               	movlw	0
  2589  1651  00A4               	movwf	___fldiv@b
  2590  1652                     l2336:
  2591  1652  0823               	movf	___fldiv@a+3,w
  2592  1653  3980               	andlw	128
  2593  1654  00A8               	movwf	??___fldiv
  2594  1655  0828               	movf	??___fldiv,w
  2595  1656  06B1               	xorwf	___fldiv@sign,f
  2596  1657                     l2338:
  2597  1657  0823               	movf	___fldiv@a+3,w
  2598  1658  00A8               	movwf	??___fldiv
  2599  1659  0728               	addwf	??___fldiv,w
  2600  165A  00A9               	movwf	??___fldiv+1
  2601  165B  0829               	movf	??___fldiv+1,w
  2602  165C  00B9               	movwf	___fldiv@aexp
  2603  165D                     l2340:
  2604  165D  1FA2               	btfss	___fldiv@a+2,7
  2605  165E  2E60               	goto	u3081
  2606  165F  2E61               	goto	u3080
  2607  1660                     u3081:
  2608  1660  2E62               	goto	l2344
  2609  1661                     u3080:
  2610  1661                     l2342:
  2611  1661  1439               	bsf	___fldiv@aexp,0
  2612  1662                     l2344:
  2613  1662  0839               	movf	___fldiv@aexp,w
  2614  1663  1903               	btfsc	3,2
  2615  1664  2E66               	goto	u3091
  2616  1665  2E67               	goto	u3090
  2617  1666                     u3091:
  2618  1666  2E77               	goto	l2354
  2619  1667                     u3090:
  2620  1667                     l2346:
  2621  1667  0A39               	incf	___fldiv@aexp,w
  2622  1668  1D03               	btfss	3,2
  2623  1669  2E6B               	goto	u3101
  2624  166A  2E6C               	goto	u3100
  2625  166B                     u3101:
  2626  166B  2E74               	goto	l2350
  2627  166C                     u3100:
  2628  166C                     l2348:
  2629  166C  3000               	movlw	0
  2630  166D  00A3               	movwf	___fldiv@a+3
  2631  166E  3000               	movlw	0
  2632  166F  00A2               	movwf	___fldiv@a+2
  2633  1670  3000               	movlw	0
  2634  1671  00A1               	movwf	___fldiv@a+1
  2635  1672  3000               	movlw	0
  2636  1673  00A0               	movwf	___fldiv@a
  2637  1674                     l2350:
  2638  1674  17A2               	bsf	___fldiv@a+2,7
  2639  1675                     l2352:
  2640  1675  01A3               	clrf	___fldiv@a+3
  2641  1676  2E7F               	goto	l622
  2642  1677                     l2354:
  2643  1677  3000               	movlw	0
  2644  1678  00A3               	movwf	___fldiv@a+3
  2645  1679  3000               	movlw	0
  2646  167A  00A2               	movwf	___fldiv@a+2
  2647  167B  3000               	movlw	0
  2648  167C  00A1               	movwf	___fldiv@a+1
  2649  167D  3000               	movlw	0
  2650  167E  00A0               	movwf	___fldiv@a
  2651  167F                     l622:
  2652  167F  0823               	movf	___fldiv@a+3,w
  2653  1680  0422               	iorwf	___fldiv@a+2,w
  2654  1681  0421               	iorwf	___fldiv@a+1,w
  2655  1682  0420               	iorwf	___fldiv@a,w
  2656  1683  1D03               	skipz
  2657  1684  2E86               	goto	u3111
  2658  1685  2E87               	goto	u3110
  2659  1686                     u3111:
  2660  1686  2EA0               	goto	l2364
  2661  1687                     u3110:
  2662  1687                     l2356:
  2663  1687  3000               	movlw	0
  2664  1688  00A7               	movwf	___fldiv@b+3
  2665  1689  3000               	movlw	0
  2666  168A  00A6               	movwf	___fldiv@b+2
  2667  168B  3000               	movlw	0
  2668  168C  00A5               	movwf	___fldiv@b+1
  2669  168D  3000               	movlw	0
  2670  168E  00A4               	movwf	___fldiv@b
  2671  168F  3080               	movlw	128
  2672  1690  04A6               	iorwf	___fldiv@b+2,f
  2673  1691  307F               	movlw	127
  2674  1692  04A7               	iorwf	___fldiv@b+3,f
  2675  1693                     l2358:
  2676  1693  0831               	movf	___fldiv@sign,w
  2677  1694  00A8               	movwf	??___fldiv
  2678  1695  0828               	movf	??___fldiv,w
  2679  1696  04A7               	iorwf	___fldiv@b+3,f
  2680  1697                     l2360:
  2681  1697  0827               	movf	___fldiv@b+3,w
  2682  1698  00A3               	movwf	?___fldiv+3
  2683  1699  0826               	movf	___fldiv@b+2,w
  2684  169A  00A2               	movwf	?___fldiv+2
  2685  169B  0825               	movf	___fldiv@b+1,w
  2686  169C  00A1               	movwf	?___fldiv+1
  2687  169D  0824               	movf	___fldiv@b,w
  2688  169E  00A0               	movwf	?___fldiv
  2689  169F  2FFF               	goto	l624
  2690  16A0                     l2364:
  2691  16A0  0838               	movf	___fldiv@bexp,w
  2692  16A1  1D03               	btfss	3,2
  2693  16A2  2EA4               	goto	u3121
  2694  16A3  2EA5               	goto	u3120
  2695  16A4                     u3121:
  2696  16A4  2EAE               	goto	l2370
  2697  16A5                     u3120:
  2698  16A5                     l2366:
  2699  16A5  3000               	movlw	0
  2700  16A6  00A3               	movwf	?___fldiv+3
  2701  16A7  3000               	movlw	0
  2702  16A8  00A2               	movwf	?___fldiv+2
  2703  16A9  3000               	movlw	0
  2704  16AA  00A1               	movwf	?___fldiv+1
  2705  16AB  3000               	movlw	0
  2706  16AC  00A0               	movwf	?___fldiv
  2707  16AD  2FFF               	goto	l624
  2708  16AE                     l2370:
  2709  16AE  0838               	movf	___fldiv@bexp,w
  2710  16AF  00A8               	movwf	??___fldiv
  2711  16B0  01A9               	clrf	??___fldiv+1
  2712  16B1  0829               	movf	??___fldiv+1,w
  2713  16B2  00AB               	movwf	??___fldiv+3
  2714  16B3  0839               	movf	___fldiv@aexp,w
  2715  16B4  0228               	subwf	??___fldiv,w
  2716  16B5  00AA               	movwf	??___fldiv+2
  2717  16B6  1C03               	skipc
  2718  16B7  03AB               	decf	??___fldiv+3,f
  2719  16B8  082A               	movf	??___fldiv+2,w
  2720  16B9  3E7F               	addlw	127
  2721  16BA  00B2               	movwf	___fldiv@new_exp
  2722  16BB  082B               	movf	??___fldiv+3,w
  2723  16BC  1803               	skipnc
  2724  16BD  3E01               	addlw	1
  2725  16BE  3E00               	addlw	0
  2726  16BF  00B3               	movwf	___fldiv@new_exp+1
  2727  16C0                     l2372:
  2728  16C0  0827               	movf	___fldiv@b+3,w
  2729  16C1  00B0               	movwf	___fldiv@rem+3
  2730  16C2  0826               	movf	___fldiv@b+2,w
  2731  16C3  00AF               	movwf	___fldiv@rem+2
  2732  16C4  0825               	movf	___fldiv@b+1,w
  2733  16C5  00AE               	movwf	___fldiv@rem+1
  2734  16C6  0824               	movf	___fldiv@b,w
  2735  16C7  00AD               	movwf	___fldiv@rem
  2736  16C8                     l2374:
  2737  16C8  3000               	movlw	0
  2738  16C9  00A7               	movwf	___fldiv@b+3
  2739  16CA  3000               	movlw	0
  2740  16CB  00A6               	movwf	___fldiv@b+2
  2741  16CC  3000               	movlw	0
  2742  16CD  00A5               	movwf	___fldiv@b+1
  2743  16CE  3000               	movlw	0
  2744  16CF  00A4               	movwf	___fldiv@b
  2745  16D0                     l2376:
  2746  16D0  3000               	movlw	0
  2747  16D1  00B7               	movwf	___fldiv@grs+3
  2748  16D2  3000               	movlw	0
  2749  16D3  00B6               	movwf	___fldiv@grs+2
  2750  16D4  3000               	movlw	0
  2751  16D5  00B5               	movwf	___fldiv@grs+1
  2752  16D6  3000               	movlw	0
  2753  16D7  00B4               	movwf	___fldiv@grs
  2754  16D8                     l2378:
  2755  16D8  01B9               	clrf	___fldiv@aexp
  2756  16D9  2F24               	goto	l2398
  2757  16DA                     l2380:
  2758  16DA  0839               	movf	___fldiv@aexp,w
  2759  16DB  1903               	btfsc	3,2
  2760  16DC  2EDE               	goto	u3131
  2761  16DD  2EDF               	goto	u3130
  2762  16DE                     u3131:
  2763  16DE  2EFF               	goto	l2390
  2764  16DF                     u3130:
  2765  16DF                     l2382:
  2766  16DF  3001               	movlw	1
  2767  16E0  00A8               	movwf	??___fldiv
  2768  16E1                     u3145:
  2769  16E1  1003               	clrc
  2770  16E2  0DAD               	rlf	___fldiv@rem,f
  2771  16E3  0DAE               	rlf	___fldiv@rem+1,f
  2772  16E4  0DAF               	rlf	___fldiv@rem+2,f
  2773  16E5  0DB0               	rlf	___fldiv@rem+3,f
  2774  16E6  0BA8               	decfsz	??___fldiv,f
  2775  16E7  2EE1               	goto	u3145
  2776  16E8  3001               	movlw	1
  2777  16E9  00A8               	movwf	??___fldiv
  2778  16EA                     u3155:
  2779  16EA  1003               	clrc
  2780  16EB  0DA4               	rlf	___fldiv@b,f
  2781  16EC  0DA5               	rlf	___fldiv@b+1,f
  2782  16ED  0DA6               	rlf	___fldiv@b+2,f
  2783  16EE  0DA7               	rlf	___fldiv@b+3,f
  2784  16EF  0BA8               	decfsz	??___fldiv,f
  2785  16F0  2EEA               	goto	u3155
  2786  16F1                     l2384:
  2787  16F1  1FB7               	btfss	___fldiv@grs+3,7
  2788  16F2  2EF4               	goto	u3161
  2789  16F3  2EF5               	goto	u3160
  2790  16F4                     u3161:
  2791  16F4  2EF6               	goto	l2388
  2792  16F5                     u3160:
  2793  16F5                     l2386:
  2794  16F5  1424               	bsf	___fldiv@b,0
  2795  16F6                     l2388:
  2796  16F6  3001               	movlw	1
  2797  16F7  00A8               	movwf	??___fldiv
  2798  16F8                     u3175:
  2799  16F8  1003               	clrc
  2800  16F9  0DB4               	rlf	___fldiv@grs,f
  2801  16FA  0DB5               	rlf	___fldiv@grs+1,f
  2802  16FB  0DB6               	rlf	___fldiv@grs+2,f
  2803  16FC  0DB7               	rlf	___fldiv@grs+3,f
  2804  16FD  0BA8               	decfsz	??___fldiv,f
  2805  16FE  2EF8               	goto	u3175
  2806  16FF                     l2390:
  2807  16FF  0823               	movf	___fldiv@a+3,w
  2808  1700  0230               	subwf	___fldiv@rem+3,w
  2809  1701  1D03               	skipz
  2810  1702  2F0D               	goto	u3185
  2811  1703  0822               	movf	___fldiv@a+2,w
  2812  1704  022F               	subwf	___fldiv@rem+2,w
  2813  1705  1D03               	skipz
  2814  1706  2F0D               	goto	u3185
  2815  1707  0821               	movf	___fldiv@a+1,w
  2816  1708  022E               	subwf	___fldiv@rem+1,w
  2817  1709  1D03               	skipz
  2818  170A  2F0D               	goto	u3185
  2819  170B  0820               	movf	___fldiv@a,w
  2820  170C  022D               	subwf	___fldiv@rem,w
  2821  170D                     u3185:
  2822  170D  1C03               	skipc
  2823  170E  2F10               	goto	u3181
  2824  170F  2F11               	goto	u3180
  2825  1710                     u3181:
  2826  1710  2F20               	goto	l2396
  2827  1711                     u3180:
  2828  1711                     l2392:
  2829  1711  1737               	bsf	___fldiv@grs+3,6
  2830  1712                     l2394:
  2831  1712  0820               	movf	___fldiv@a,w
  2832  1713  02AD               	subwf	___fldiv@rem,f
  2833  1714  0821               	movf	___fldiv@a+1,w
  2834  1715  1C03               	skipc
  2835  1716  0F21               	incfsz	___fldiv@a+1,w
  2836  1717  02AE               	subwf	___fldiv@rem+1,f
  2837  1718  0822               	movf	___fldiv@a+2,w
  2838  1719  1C03               	skipc
  2839  171A  0F22               	incfsz	___fldiv@a+2,w
  2840  171B  02AF               	subwf	___fldiv@rem+2,f
  2841  171C  0823               	movf	___fldiv@a+3,w
  2842  171D  1C03               	skipc
  2843  171E  0F23               	incfsz	___fldiv@a+3,w
  2844  171F  02B0               	subwf	___fldiv@rem+3,f
  2845  1720                     l2396:
  2846  1720  3001               	movlw	1
  2847  1721  00A8               	movwf	??___fldiv
  2848  1722  0828               	movf	??___fldiv,w
  2849  1723  07B9               	addwf	___fldiv@aexp,f
  2850  1724                     l2398:
  2851  1724  301A               	movlw	26
  2852  1725  0239               	subwf	___fldiv@aexp,w
  2853  1726  1C03               	skipc
  2854  1727  2F29               	goto	u3191
  2855  1728  2F2A               	goto	u3190
  2856  1729                     u3191:
  2857  1729  2EDA               	goto	l2380
  2858  172A                     u3190:
  2859  172A                     l2400:
  2860  172A  0830               	movf	___fldiv@rem+3,w
  2861  172B  042F               	iorwf	___fldiv@rem+2,w
  2862  172C  042E               	iorwf	___fldiv@rem+1,w
  2863  172D  042D               	iorwf	___fldiv@rem,w
  2864  172E  1903               	skipnz
  2865  172F  2F31               	goto	u3201
  2866  1730  2F32               	goto	u3200
  2867  1731                     u3201:
  2868  1731  2F51               	goto	l2414
  2869  1732                     u3200:
  2870  1732                     l2402:
  2871  1732  1434               	bsf	___fldiv@grs,0
  2872  1733  2F51               	goto	l2414
  2873  1734                     l2404:
  2874  1734  3001               	movlw	1
  2875  1735  00A8               	movwf	??___fldiv
  2876  1736                     u3215:
  2877  1736  1003               	clrc
  2878  1737  0DA4               	rlf	___fldiv@b,f
  2879  1738  0DA5               	rlf	___fldiv@b+1,f
  2880  1739  0DA6               	rlf	___fldiv@b+2,f
  2881  173A  0DA7               	rlf	___fldiv@b+3,f
  2882  173B  0BA8               	decfsz	??___fldiv,f
  2883  173C  2F36               	goto	u3215
  2884  173D                     l2406:
  2885  173D  1FB7               	btfss	___fldiv@grs+3,7
  2886  173E  2F40               	goto	u3221
  2887  173F  2F41               	goto	u3220
  2888  1740                     u3221:
  2889  1740  2F42               	goto	l2410
  2890  1741                     u3220:
  2891  1741                     l2408:
  2892  1741  1424               	bsf	___fldiv@b,0
  2893  1742                     l2410:
  2894  1742  3001               	movlw	1
  2895  1743  00A8               	movwf	??___fldiv
  2896  1744                     u3235:
  2897  1744  1003               	clrc
  2898  1745  0DB4               	rlf	___fldiv@grs,f
  2899  1746  0DB5               	rlf	___fldiv@grs+1,f
  2900  1747  0DB6               	rlf	___fldiv@grs+2,f
  2901  1748  0DB7               	rlf	___fldiv@grs+3,f
  2902  1749  0BA8               	decfsz	??___fldiv,f
  2903  174A  2F44               	goto	u3235
  2904  174B                     l2412:
  2905  174B  30FF               	movlw	255
  2906  174C  07B2               	addwf	___fldiv@new_exp,f
  2907  174D  1803               	skipnc
  2908  174E  0AB3               	incf	___fldiv@new_exp+1,f
  2909  174F  30FF               	movlw	255
  2910  1750  07B3               	addwf	___fldiv@new_exp+1,f
  2911  1751                     l2414:
  2912  1751  1FA6               	btfss	___fldiv@b+2,7
  2913  1752  2F54               	goto	u3241
  2914  1753  2F55               	goto	u3240
  2915  1754                     u3241:
  2916  1754  2F34               	goto	l2404
  2917  1755                     u3240:
  2918  1755                     l2416:
  2919  1755  01B9               	clrf	___fldiv@aexp
  2920  1756                     l2418:
  2921  1756  1FB7               	btfss	___fldiv@grs+3,7
  2922  1757  2F59               	goto	u3251
  2923  1758  2F5A               	goto	u3250
  2924  1759                     u3251:
  2925  1759  2F76               	goto	l2426
  2926  175A                     u3250:
  2927  175A                     l2420:
  2928  175A  30FF               	movlw	255
  2929  175B  0534               	andwf	___fldiv@grs,w
  2930  175C  00A8               	movwf	??___fldiv
  2931  175D  30FF               	movlw	255
  2932  175E  0535               	andwf	___fldiv@grs+1,w
  2933  175F  00A9               	movwf	??___fldiv+1
  2934  1760  30FF               	movlw	255
  2935  1761  0536               	andwf	___fldiv@grs+2,w
  2936  1762  00AA               	movwf	??___fldiv+2
  2937  1763  307F               	movlw	127
  2938  1764  0537               	andwf	___fldiv@grs+3,w
  2939  1765  00AB               	movwf	??___fldiv+3
  2940  1766  082B               	movf	??___fldiv+3,w
  2941  1767  042A               	iorwf	??___fldiv+2,w
  2942  1768  0429               	iorwf	??___fldiv+1,w
  2943  1769  0428               	iorwf	??___fldiv,w
  2944  176A  1903               	skipnz
  2945  176B  2F6D               	goto	u3261
  2946  176C  2F6E               	goto	u3260
  2947  176D                     u3261:
  2948  176D  2F71               	goto	l638
  2949  176E                     u3260:
  2950  176E                     l2422:
  2951  176E  01B9               	clrf	___fldiv@aexp
  2952  176F  0AB9               	incf	___fldiv@aexp,f
  2953  1770  2F76               	goto	l2426
  2954  1771                     l638:
  2955  1771  1C24               	btfss	___fldiv@b,0
  2956  1772  2F74               	goto	u3271
  2957  1773  2F75               	goto	u3270
  2958  1774                     u3271:
  2959  1774  2F76               	goto	l2426
  2960  1775                     u3270:
  2961  1775  2F6E               	goto	l2422
  2962  1776                     l2426:
  2963  1776  0839               	movf	___fldiv@aexp,w
  2964  1777  1903               	btfsc	3,2
  2965  1778  2F7A               	goto	u3281
  2966  1779  2F7B               	goto	u3280
  2967  177A                     u3281:
  2968  177A  2FAC               	goto	l2436
  2969  177B                     u3280:
  2970  177B                     l2428:
  2971  177B  3001               	movlw	1
  2972  177C  07A4               	addwf	___fldiv@b,f
  2973  177D  3000               	movlw	0
  2974  177E  1803               	skipnc
  2975  177F  3001               	movlw	1
  2976  1780  07A5               	addwf	___fldiv@b+1,f
  2977  1781  3000               	movlw	0
  2978  1782  1803               	skipnc
  2979  1783  3001               	movlw	1
  2980  1784  07A6               	addwf	___fldiv@b+2,f
  2981  1785  3000               	movlw	0
  2982  1786  1803               	skipnc
  2983  1787  3001               	movlw	1
  2984  1788  07A7               	addwf	___fldiv@b+3,f
  2985  1789                     l2430:
  2986  1789  1C27               	btfss	___fldiv@b+3,0
  2987  178A  2F8C               	goto	u3291
  2988  178B  2F8D               	goto	u3290
  2989  178C                     u3291:
  2990  178C  2FAC               	goto	l2436
  2991  178D                     u3290:
  2992  178D                     l2432:
  2993  178D  0824               	movf	___fldiv@b,w
  2994  178E  00A8               	movwf	??___fldiv
  2995  178F  0825               	movf	___fldiv@b+1,w
  2996  1790  00A9               	movwf	??___fldiv+1
  2997  1791  0826               	movf	___fldiv@b+2,w
  2998  1792  00AA               	movwf	??___fldiv+2
  2999  1793  0827               	movf	___fldiv@b+3,w
  3000  1794  00AB               	movwf	??___fldiv+3
  3001  1795  3001               	movlw	1
  3002  1796  00AC               	movwf	??___fldiv+4
  3003  1797                     u3305:
  3004  1797  0D2B               	rlf	??___fldiv+3,w
  3005  1798  0CAB               	rrf	??___fldiv+3,f
  3006  1799  0CAA               	rrf	??___fldiv+2,f
  3007  179A  0CA9               	rrf	??___fldiv+1,f
  3008  179B  0CA8               	rrf	??___fldiv,f
  3009  179C                     u3300:
  3010  179C  0BAC               	decfsz	??___fldiv+4,f
  3011  179D  2F97               	goto	u3305
  3012  179E  082B               	movf	??___fldiv+3,w
  3013  179F  00A7               	movwf	___fldiv@b+3
  3014  17A0  082A               	movf	??___fldiv+2,w
  3015  17A1  00A6               	movwf	___fldiv@b+2
  3016  17A2  0829               	movf	??___fldiv+1,w
  3017  17A3  00A5               	movwf	___fldiv@b+1
  3018  17A4  0828               	movf	??___fldiv,w
  3019  17A5  00A4               	movwf	___fldiv@b
  3020  17A6                     l2434:
  3021  17A6  3001               	movlw	1
  3022  17A7  07B2               	addwf	___fldiv@new_exp,f
  3023  17A8  1803               	skipnc
  3024  17A9  0AB3               	incf	___fldiv@new_exp+1,f
  3025  17AA  3000               	movlw	0
  3026  17AB  07B3               	addwf	___fldiv@new_exp+1,f
  3027  17AC                     l2436:
  3028  17AC  0833               	movf	___fldiv@new_exp+1,w
  3029  17AD  3A80               	xorlw	128
  3030  17AE  00FF               	movwf	btemp+1
  3031  17AF  3080               	movlw	128
  3032  17B0  027F               	subwf	btemp+1,w
  3033  17B1  1D03               	skipz
  3034  17B2  2FB5               	goto	u3315
  3035  17B3  30FF               	movlw	255
  3036  17B4  0232               	subwf	___fldiv@new_exp,w
  3037  17B5                     u3315:
  3038  17B5  1C03               	skipc
  3039  17B6  2FB8               	goto	u3311
  3040  17B7  2FB9               	goto	u3310
  3041  17B8                     u3311:
  3042  17B8  2FC7               	goto	l2440
  3043  17B9                     u3310:
  3044  17B9                     l2438:
  3045  17B9  30FF               	movlw	255
  3046  17BA  1283               	bcf	3,5	;RP0=0, select bank0
  3047  17BB  1303               	bcf	3,6	;RP1=0, select bank0
  3048  17BC  00B2               	movwf	___fldiv@new_exp
  3049  17BD  3000               	movlw	0
  3050  17BE  00B3               	movwf	___fldiv@new_exp+1
  3051  17BF  3000               	movlw	0
  3052  17C0  00A7               	movwf	___fldiv@b+3
  3053  17C1  3000               	movlw	0
  3054  17C2  00A6               	movwf	___fldiv@b+2
  3055  17C3  3000               	movlw	0
  3056  17C4  00A5               	movwf	___fldiv@b+1
  3057  17C5  3000               	movlw	0
  3058  17C6  00A4               	movwf	___fldiv@b
  3059  17C7                     l2440:
  3060  17C7  1283               	bcf	3,5	;RP0=0, select bank0
  3061  17C8  1303               	bcf	3,6	;RP1=0, select bank0
  3062  17C9  0833               	movf	___fldiv@new_exp+1,w
  3063  17CA  3A80               	xorlw	128
  3064  17CB  00FF               	movwf	btemp+1
  3065  17CC  3080               	movlw	128
  3066  17CD  027F               	subwf	btemp+1,w
  3067  17CE  1D03               	skipz
  3068  17CF  2FD2               	goto	u3325
  3069  17D0  3001               	movlw	1
  3070  17D1  0232               	subwf	___fldiv@new_exp,w
  3071  17D2                     u3325:
  3072  17D2  1803               	skipnc
  3073  17D3  2FD5               	goto	u3321
  3074  17D4  2FD6               	goto	u3320
  3075  17D5                     u3321:
  3076  17D5  2FE3               	goto	l644
  3077  17D6                     u3320:
  3078  17D6                     l2442:
  3079  17D6  1283               	bcf	3,5	;RP0=0, select bank0
  3080  17D7  1303               	bcf	3,6	;RP1=0, select bank0
  3081  17D8  01B2               	clrf	___fldiv@new_exp
  3082  17D9  01B3               	clrf	___fldiv@new_exp+1
  3083  17DA                     l2444:
  3084  17DA  3000               	movlw	0
  3085  17DB  00A7               	movwf	___fldiv@b+3
  3086  17DC  3000               	movlw	0
  3087  17DD  00A6               	movwf	___fldiv@b+2
  3088  17DE  3000               	movlw	0
  3089  17DF  00A5               	movwf	___fldiv@b+1
  3090  17E0  3000               	movlw	0
  3091  17E1  00A4               	movwf	___fldiv@b
  3092  17E2                     l2446:
  3093  17E2  01B1               	clrf	___fldiv@sign
  3094  17E3                     l644:
  3095  17E3  1283               	bcf	3,5	;RP0=0, select bank0
  3096  17E4  1303               	bcf	3,6	;RP1=0, select bank0
  3097  17E5  0832               	movf	___fldiv@new_exp,w
  3098  17E6  00A8               	movwf	??___fldiv
  3099  17E7  0828               	movf	??___fldiv,w
  3100  17E8  00B8               	movwf	___fldiv@bexp
  3101  17E9                     l2448:
  3102  17E9  1C38               	btfss	___fldiv@bexp,0
  3103  17EA  2FEC               	goto	u3331
  3104  17EB  2FED               	goto	u3330
  3105  17EC                     u3331:
  3106  17EC  2FEF               	goto	l2452
  3107  17ED                     u3330:
  3108  17ED                     l2450:
  3109  17ED  17A6               	bsf	___fldiv@b+2,7
  3110  17EE  2FF3               	goto	l646
  3111  17EF                     l2452:
  3112  17EF  307F               	movlw	127
  3113  17F0  00A8               	movwf	??___fldiv
  3114  17F1  0828               	movf	??___fldiv,w
  3115  17F2  05A6               	andwf	___fldiv@b+2,f
  3116  17F3                     l646:
  3117  17F3  0838               	movf	___fldiv@bexp,w
  3118  17F4  00A8               	movwf	??___fldiv
  3119  17F5  1003               	clrc
  3120  17F6  0C28               	rrf	??___fldiv,w
  3121  17F7  00A9               	movwf	??___fldiv+1
  3122  17F8  0829               	movf	??___fldiv+1,w
  3123  17F9  00A7               	movwf	___fldiv@b+3
  3124  17FA  0831               	movf	___fldiv@sign,w
  3125  17FB  00A8               	movwf	??___fldiv
  3126  17FC  0828               	movf	??___fldiv,w
  3127  17FD  04A7               	iorwf	___fldiv@b+3,f
  3128  17FE  2E97               	goto	l2360
  3129  17FF                     l624:
  3130  17FF  0008               	return
  3131  1800                     __end_of___fldiv:
  3132                           
  3133                           	psect	text3
  3134  131C                     __ptext3:	
  3135 ;; *************** function _I2C_Start *****************
  3136 ;; Defined at:
  3137 ;;		line 30 in file "I2C.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  add             1    wreg     unsigned char 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  add             1    1[COMMON] unsigned char 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg, status,2, status,0, pclath, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3151 ;;      Params:         0       0       0       0       0
  3152 ;;      Locals:         1       0       0       0       0
  3153 ;;      Temps:          0       0       0       0       0
  3154 ;;      Totals:         1       0       0       0       0
  3155 ;;Total ram usage:        1 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:    2
  3158 ;; This function calls:
  3159 ;;		_I2C_Master_Wait
  3160 ;;		_I2C_Master_Write
  3161 ;; This function is called by:
  3162 ;;		_readMPU
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           
  3167                           ;psect for function _I2C_Start
  3168  131C                     _I2C_Start:
  3169                           
  3170                           ;incstack = 0
  3171                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  3172                           ;I2C_Start@add stored from wreg
  3173  131C  00F1               	movwf	I2C_Start@add
  3174  131D                     l2218:
  3175                           
  3176                           ;I2C.c: 30: void I2C_Start(char add);I2C.c: 31: {;I2C.c: 32:     I2C_Master_Wait();
  3177  131D  160A  118A  22FF  160A  118A  	fcall	_I2C_Master_Wait
  3178  1322                     l2220:
  3179                           
  3180                           ;I2C.c: 33:     SEN = 1;
  3181  1322  1683               	bsf	3,5	;RP0=1, select bank1
  3182  1323  1303               	bcf	3,6	;RP1=0, select bank1
  3183  1324  1411               	bsf	17,0	;volatile
  3184                           
  3185                           ;I2C.c: 34:     I2C_Master_Write(add);
  3186  1325  0871               	movf	I2C_Start@add,w
  3187  1326  160A  118A  230C  160A  118A  	fcall	_I2C_Master_Write
  3188  132B                     l49:
  3189  132B  0008               	return
  3190  132C                     __end_of_I2C_Start:
  3191                           
  3192                           	psect	text4
  3193  0005                     __ptext4:	
  3194 ;; *************** function _I2C_Read *****************
  3195 ;; Defined at:
  3196 ;;		line 83 in file "I2C.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;  ACK_NACK        1    wreg     unsigned char 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  ACK_NACK        1    1[COMMON] unsigned char 
  3201 ;;  Data            1    2[COMMON] unsigned char 
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      unsigned char 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0, pclath, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3211 ;;      Params:         0       0       0       0       0
  3212 ;;      Locals:         2       0       0       0       0
  3213 ;;      Temps:          1       0       0       0       0
  3214 ;;      Totals:         3       0       0       0       0
  3215 ;;Total ram usage:        3 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:    1
  3218 ;; This function calls:
  3219 ;;		_I2C_ACK
  3220 ;;		_I2C_Master_Wait
  3221 ;;		_I2C_NACK
  3222 ;; This function is called by:
  3223 ;;		_readMPU
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           
  3228                           ;psect for function _I2C_Read
  3229  0005                     _I2C_Read:
  3230                           
  3231                           ;incstack = 0
  3232                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  3233                           ;I2C_Read@ACK_NACK stored from wreg
  3234  0005  00F1               	movwf	I2C_Read@ACK_NACK
  3235  0006                     l2226:
  3236                           
  3237                           ;I2C.c: 83: unsigned char I2C_Read(unsigned char ACK_NACK);I2C.c: 84: { I2C_Master_Wait(
      +                          );
  3238  0006  160A  118A  22FF  120A  118A  	fcall	_I2C_Master_Wait
  3239  000B                     l2228:
  3240                           
  3241                           ;I2C.c: 86:     unsigned char Data;;I2C.c: 87:     RCEN = 1;
  3242  000B  1683               	bsf	3,5	;RP0=1, select bank1
  3243  000C  1303               	bcf	3,6	;RP1=0, select bank1
  3244  000D  1591               	bsf	17,3	;volatile
  3245  000E                     l82:	
  3246                           ;I2C.c: 88:     while(!BF);
  3247                           
  3248  000E  1C14               	btfss	20,0	;volatile
  3249  000F  2811               	goto	u2831
  3250  0010  2812               	goto	u2830
  3251  0011                     u2831:
  3252  0011  280E               	goto	l82
  3253  0012                     u2830:
  3254  0012                     l2230:
  3255                           
  3256                           ;I2C.c: 89:     Data = SSPBUF;
  3257  0012  1283               	bcf	3,5	;RP0=0, select bank0
  3258  0013  1303               	bcf	3,6	;RP1=0, select bank0
  3259  0014  0813               	movf	19,w	;volatile
  3260  0015  00F0               	movwf	??_I2C_Read
  3261  0016  0870               	movf	??_I2C_Read,w
  3262  0017  00F2               	movwf	I2C_Read@Data
  3263  0018                     l2232:
  3264                           
  3265                           ;I2C.c: 90:     if(ACK_NACK==0)
  3266  0018  0871               	movf	I2C_Read@ACK_NACK,w
  3267  0019  1D03               	btfss	3,2
  3268  001A  281C               	goto	u2841
  3269  001B  281D               	goto	u2840
  3270  001C                     u2841:
  3271  001C  2823               	goto	l2236
  3272  001D                     u2840:
  3273  001D                     l2234:
  3274                           
  3275                           ;I2C.c: 91:         I2C_ACK();
  3276  001D  160A  118A  22C9  120A  118A  	fcall	_I2C_ACK
  3277  0022  2828               	goto	l87
  3278  0023                     l2236:
  3279                           
  3280                           ;I2C.c: 93:         I2C_NACK();
  3281  0023  160A  118A  22D2  120A  118A  	fcall	_I2C_NACK
  3282  0028                     l87:
  3283  0028  1283               	bcf	3,5	;RP0=0, select bank0
  3284  0029  1303               	bcf	3,6	;RP1=0, select bank0
  3285  002A  1D8C               	btfss	12,3	;volatile
  3286  002B  282D               	goto	u2851
  3287  002C  282E               	goto	u2850
  3288  002D                     u2851:
  3289  002D  2828               	goto	l87
  3290  002E                     u2850:
  3291  002E                     l89:
  3292                           
  3293                           ;I2C.c: 95:     SSPIF=0;
  3294  002E  118C               	bcf	12,3	;volatile
  3295  002F                     l2238:
  3296                           
  3297                           ;I2C.c: 96:     return Data;
  3298  002F  0872               	movf	I2C_Read@Data,w
  3299  0030                     l90:
  3300  0030  0008               	return
  3301  0031                     __end_of_I2C_Read:
  3302                           
  3303                           	psect	text5
  3304  12D2                     __ptext5:	
  3305 ;; *************** function _I2C_NACK *****************
  3306 ;; Defined at:
  3307 ;;		line 56 in file "I2C.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;		None
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;		None
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      void 
  3314 ;; Registers used:
  3315 ;;		None
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3321 ;;      Params:         0       0       0       0       0
  3322 ;;      Locals:         0       0       0       0       0
  3323 ;;      Temps:          0       0       0       0       0
  3324 ;;      Totals:         0       0       0       0       0
  3325 ;;Total ram usage:        0 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; This function calls:
  3328 ;;		Nothing
  3329 ;; This function is called by:
  3330 ;;		_I2C_Read
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           
  3335                           ;psect for function _I2C_NACK
  3336  12D2                     _I2C_NACK:
  3337  12D2                     l1934:	
  3338                           ;incstack = 0
  3339                           ; Regs used in _I2C_NACK: []
  3340                           
  3341                           
  3342                           ;I2C.c: 58:  ACKDT = 1;
  3343  12D2  1683               	bsf	3,5	;RP0=1, select bank1
  3344  12D3  1303               	bcf	3,6	;RP1=0, select bank1
  3345  12D4  1691               	bsf	17,5	;volatile
  3346                           
  3347                           ;I2C.c: 59:  ACKEN = 1;
  3348  12D5  1611               	bsf	17,4	;volatile
  3349  12D6                     l64:	
  3350                           ;I2C.c: 60:     while(ACKEN);
  3351                           
  3352  12D6  1A11               	btfsc	17,4	;volatile
  3353  12D7  2AD9               	goto	u2141
  3354  12D8  2ADA               	goto	u2140
  3355  12D9                     u2141:
  3356  12D9  2AD6               	goto	l64
  3357  12DA                     u2140:
  3358  12DA                     l67:
  3359  12DA  0008               	return
  3360  12DB                     __end_of_I2C_NACK:
  3361                           
  3362                           	psect	text6
  3363  12C9                     __ptext6:	
  3364 ;; *************** function _I2C_ACK *****************
  3365 ;; Defined at:
  3366 ;;		line 49 in file "I2C.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;		None
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;		None
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  1    wreg      void 
  3373 ;; Registers used:
  3374 ;;		None
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3380 ;;      Params:         0       0       0       0       0
  3381 ;;      Locals:         0       0       0       0       0
  3382 ;;      Temps:          0       0       0       0       0
  3383 ;;      Totals:         0       0       0       0       0
  3384 ;;Total ram usage:        0 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_I2C_Read
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           
  3394                           ;psect for function _I2C_ACK
  3395  12C9                     _I2C_ACK:
  3396  12C9                     l1932:	
  3397                           ;incstack = 0
  3398                           ; Regs used in _I2C_ACK: []
  3399                           
  3400                           
  3401                           ;I2C.c: 51:  ACKDT = 0;
  3402  12C9  1683               	bsf	3,5	;RP0=1, select bank1
  3403  12CA  1303               	bcf	3,6	;RP1=0, select bank1
  3404  12CB  1291               	bcf	17,5	;volatile
  3405                           
  3406                           ;I2C.c: 52:     ACKEN = 1;
  3407  12CC  1611               	bsf	17,4	;volatile
  3408  12CD                     l58:	
  3409                           ;I2C.c: 53:     while(ACKEN);
  3410                           
  3411  12CD  1A11               	btfsc	17,4	;volatile
  3412  12CE  2AD0               	goto	u2131
  3413  12CF  2AD1               	goto	u2130
  3414  12D0                     u2131:
  3415  12D0  2ACD               	goto	l58
  3416  12D1                     u2130:
  3417  12D1                     l61:
  3418  12D1  0008               	return
  3419  12D2                     __end_of_I2C_ACK:
  3420                           
  3421                           	psect	text7
  3422  00F0                     __ptext7:	
  3423 ;; *************** function _ftoa *****************
  3424 ;; Defined at:
  3425 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftoa.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  f               4   54[BANK0 ] float 
  3428 ;;  status          2   58[BANK0 ] PTR int 
  3429 ;;		 -> RAM(512), 
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;  l               4   65[BANK0 ] unsigned long 
  3432 ;;  rem             4   61[BANK0 ] unsigned long 
  3433 ;;  cp              1   69[BANK0 ] PTR unsigned char 
  3434 ;;		 -> ftoa@buf(17), 
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      PTR unsigned char 
  3437 ;; Registers used:
  3438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3444 ;;      Params:         0       6       0       0       0
  3445 ;;      Locals:         0       9       0       0       0
  3446 ;;      Temps:          0       1       0       0       0
  3447 ;;      Totals:         0      16       0       0       0
  3448 ;;Total ram usage:       16 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    2
  3451 ;; This function calls:
  3452 ;;		___flge
  3453 ;;		___flmul
  3454 ;;		___flneg
  3455 ;;		___flsub
  3456 ;;		___fltol
  3457 ;;		___xxtofl
  3458 ;;		_sprintf
  3459 ;; This function is called by:
  3460 ;;		_main
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           
  3465                           ;psect for function _ftoa
  3466  00F0                     _ftoa:
  3467  00F0                     l2850:	
  3468                           ;incstack = 0
  3469                           ; Regs used in _ftoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3470                           
  3471  00F0  30DE               	movlw	(low (ftoa@buf| 0))& (0+255)
  3472  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  3473  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  3474  00F3  00DC               	movwf	??_ftoa
  3475  00F4  085C               	movf	??_ftoa,w
  3476  00F5  00E5               	movwf	ftoa@cp
  3477  00F6                     l2852:
  3478  00F6  0859               	movf	ftoa@f+3,w
  3479  00F7  00F3               	movwf	___flge@ff1+3
  3480  00F8  0858               	movf	ftoa@f+2,w
  3481  00F9  00F2               	movwf	___flge@ff1+2
  3482  00FA  0857               	movf	ftoa@f+1,w
  3483  00FB  00F1               	movwf	___flge@ff1+1
  3484  00FC  0856               	movf	ftoa@f,w
  3485  00FD  00F0               	movwf	___flge@ff1
  3486  00FE  3000               	movlw	0
  3487  00FF  00F7               	movwf	___flge@ff2+3
  3488  0100  3000               	movlw	0
  3489  0101  00F6               	movwf	___flge@ff2+2
  3490  0102  3000               	movlw	0
  3491  0103  00F5               	movwf	___flge@ff2+1
  3492  0104  3000               	movlw	0
  3493  0105  00F4               	movwf	___flge@ff2
  3494  0106  160A  118A  2581  120A  118A  	fcall	___flge
  3495  010B  1803               	btfsc	3,0
  3496  010C  290E               	goto	u4121
  3497  010D  290F               	goto	u4120
  3498  010E                     u4121:
  3499  010E  2933               	goto	l2860
  3500  010F                     u4120:
  3501  010F                     l2854:
  3502  010F  302D               	movlw	45
  3503  0110  1283               	bcf	3,5	;RP0=0, select bank0
  3504  0111  1303               	bcf	3,6	;RP1=0, select bank0
  3505  0112  00DC               	movwf	??_ftoa
  3506  0113  0865               	movf	ftoa@cp,w
  3507  0114  0084               	movwf	4
  3508  0115  085C               	movf	??_ftoa,w
  3509  0116  1383               	bcf	3,7	;select IRP bank0
  3510  0117  0080               	movwf	0
  3511  0118                     l2856:
  3512  0118  3001               	movlw	1
  3513  0119  00DC               	movwf	??_ftoa
  3514  011A  085C               	movf	??_ftoa,w
  3515  011B  07E5               	addwf	ftoa@cp,f
  3516  011C                     l2858:
  3517  011C  0859               	movf	ftoa@f+3,w
  3518  011D  00F3               	movwf	___flneg@f1+3
  3519  011E  0858               	movf	ftoa@f+2,w
  3520  011F  00F2               	movwf	___flneg@f1+2
  3521  0120  0857               	movf	ftoa@f+1,w
  3522  0121  00F1               	movwf	___flneg@f1+1
  3523  0122  0856               	movf	ftoa@f,w
  3524  0123  00F0               	movwf	___flneg@f1
  3525  0124  160A  118A  22DB  120A  118A  	fcall	___flneg
  3526  0129  0873               	movf	?___flneg+3,w
  3527  012A  1283               	bcf	3,5	;RP0=0, select bank0
  3528  012B  1303               	bcf	3,6	;RP1=0, select bank0
  3529  012C  00D9               	movwf	ftoa@f+3
  3530  012D  0872               	movf	?___flneg+2,w
  3531  012E  00D8               	movwf	ftoa@f+2
  3532  012F  0871               	movf	?___flneg+1,w
  3533  0130  00D7               	movwf	ftoa@f+1
  3534  0131  0870               	movf	?___flneg,w
  3535  0132  00D6               	movwf	ftoa@f
  3536  0133                     l2860:
  3537  0133  1283               	bcf	3,5	;RP0=0, select bank0
  3538  0134  1303               	bcf	3,6	;RP1=0, select bank0
  3539  0135  0859               	movf	ftoa@f+3,w
  3540  0136  00BD               	movwf	___fltol@f1+3
  3541  0137  0858               	movf	ftoa@f+2,w
  3542  0138  00BC               	movwf	___fltol@f1+2
  3543  0139  0857               	movf	ftoa@f+1,w
  3544  013A  00BB               	movwf	___fltol@f1+1
  3545  013B  0856               	movf	ftoa@f,w
  3546  013C  00BA               	movwf	___fltol@f1
  3547  013D  160A  118A  2505  120A  118A  	fcall	___fltol
  3548  0142  1283               	bcf	3,5	;RP0=0, select bank0
  3549  0143  1303               	bcf	3,6	;RP1=0, select bank0
  3550  0144  083D               	movf	?___fltol+3,w
  3551  0145  00E4               	movwf	ftoa@l+3
  3552  0146  083C               	movf	?___fltol+2,w
  3553  0147  00E3               	movwf	ftoa@l+2
  3554  0148  083B               	movf	?___fltol+1,w
  3555  0149  00E2               	movwf	ftoa@l+1
  3556  014A  083A               	movf	?___fltol,w
  3557  014B  00E1               	movwf	ftoa@l
  3558  014C                     l2862:
  3559  014C  0864               	movf	ftoa@l+3,w
  3560  014D  00F3               	movwf	___xxtofl@val+3
  3561  014E  0863               	movf	ftoa@l+2,w
  3562  014F  00F2               	movwf	___xxtofl@val+2
  3563  0150  0862               	movf	ftoa@l+1,w
  3564  0151  00F1               	movwf	___xxtofl@val+1
  3565  0152  0861               	movf	ftoa@l,w
  3566  0153  00F0               	movwf	___xxtofl@val
  3567  0154  3000               	movlw	0
  3568  0155  120A  158A  2026  120A  118A  	fcall	___xxtofl
  3569  015A  0873               	movf	?___xxtofl+3,w
  3570  015B  1283               	bcf	3,5	;RP0=0, select bank0
  3571  015C  1303               	bcf	3,6	;RP1=0, select bank0
  3572  015D  00D1               	movwf	___flsub@a+3
  3573  015E  0872               	movf	?___xxtofl+2,w
  3574  015F  00D0               	movwf	___flsub@a+2
  3575  0160  0871               	movf	?___xxtofl+1,w
  3576  0161  00CF               	movwf	___flsub@a+1
  3577  0162  0870               	movf	?___xxtofl,w
  3578  0163  00CE               	movwf	___flsub@a
  3579  0164  0859               	movf	ftoa@f+3,w
  3580  0165  00D5               	movwf	___flsub@b+3
  3581  0166  0858               	movf	ftoa@f+2,w
  3582  0167  00D4               	movwf	___flsub@b+2
  3583  0168  0857               	movf	ftoa@f+1,w
  3584  0169  00D3               	movwf	___flsub@b+1
  3585  016A  0856               	movf	ftoa@f,w
  3586  016B  00D2               	movwf	___flsub@b
  3587  016C  160A  118A  233E  120A  118A  	fcall	___flsub
  3588  0171  1283               	bcf	3,5	;RP0=0, select bank0
  3589  0172  1303               	bcf	3,6	;RP1=0, select bank0
  3590  0173  0851               	movf	?___flsub+3,w
  3591  0174  00D9               	movwf	ftoa@f+3
  3592  0175  0850               	movf	?___flsub+2,w
  3593  0176  00D8               	movwf	ftoa@f+2
  3594  0177  084F               	movf	?___flsub+1,w
  3595  0178  00D7               	movwf	ftoa@f+1
  3596  0179  084E               	movf	?___flsub,w
  3597  017A  00D6               	movwf	ftoa@f
  3598  017B                     l2864:
  3599  017B  0859               	movf	ftoa@f+3,w
  3600  017C  00A7               	movwf	___flmul@a+3
  3601  017D  0858               	movf	ftoa@f+2,w
  3602  017E  00A6               	movwf	___flmul@a+2
  3603  017F  0857               	movf	ftoa@f+1,w
  3604  0180  00A5               	movwf	___flmul@a+1
  3605  0181  0856               	movf	ftoa@f,w
  3606  0182  00A4               	movwf	___flmul@a
  3607  0183  3049               	movlw	73
  3608  0184  00A3               	movwf	___flmul@b+3
  3609  0185  3074               	movlw	116
  3610  0186  00A2               	movwf	___flmul@b+2
  3611  0187  3024               	movlw	36
  3612  0188  00A1               	movwf	___flmul@b+1
  3613  0189  3000               	movlw	0
  3614  018A  00A0               	movwf	___flmul@b
  3615  018B  120A  118A  2492  120A  118A  	fcall	___flmul
  3616  0190  1283               	bcf	3,5	;RP0=0, select bank0
  3617  0191  1303               	bcf	3,6	;RP1=0, select bank0
  3618  0192  0823               	movf	?___flmul+3,w
  3619  0193  00BD               	movwf	___fltol@f1+3
  3620  0194  0822               	movf	?___flmul+2,w
  3621  0195  00BC               	movwf	___fltol@f1+2
  3622  0196  0821               	movf	?___flmul+1,w
  3623  0197  00BB               	movwf	___fltol@f1+1
  3624  0198  0820               	movf	?___flmul,w
  3625  0199  00BA               	movwf	___fltol@f1
  3626  019A  160A  118A  2505  120A  118A  	fcall	___fltol
  3627  019F  1283               	bcf	3,5	;RP0=0, select bank0
  3628  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  3629  01A1  083D               	movf	?___fltol+3,w
  3630  01A2  00E0               	movwf	ftoa@rem+3
  3631  01A3  083C               	movf	?___fltol+2,w
  3632  01A4  00DF               	movwf	ftoa@rem+2
  3633  01A5  083B               	movf	?___fltol+1,w
  3634  01A6  00DE               	movwf	ftoa@rem+1
  3635  01A7  083A               	movf	?___fltol,w
  3636  01A8  00DD               	movwf	ftoa@rem
  3637  01A9                     l2866:
  3638  01A9  3037               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  3639  01AA  00DC               	movwf	??_ftoa
  3640  01AB  085C               	movf	??_ftoa,w
  3641  01AC  00AA               	movwf	sprintf@f
  3642  01AD  0864               	movf	ftoa@l+3,w
  3643  01AE  00AE               	movwf	?_sprintf+4
  3644  01AF  0863               	movf	ftoa@l+2,w
  3645  01B0  00AD               	movwf	?_sprintf+3
  3646  01B1  0862               	movf	ftoa@l+1,w
  3647  01B2  00AC               	movwf	?_sprintf+2
  3648  01B3  0861               	movf	ftoa@l,w
  3649  01B4  00AB               	movwf	?_sprintf+1
  3650  01B5  0860               	movf	ftoa@rem+3,w
  3651  01B6  00B2               	movwf	?_sprintf+8
  3652  01B7  085F               	movf	ftoa@rem+2,w
  3653  01B8  00B1               	movwf	?_sprintf+7
  3654  01B9  085E               	movf	ftoa@rem+1,w
  3655  01BA  00B0               	movwf	?_sprintf+6
  3656  01BB  085D               	movf	ftoa@rem,w
  3657  01BC  00AF               	movwf	?_sprintf+5
  3658  01BD  0865               	movf	ftoa@cp,w
  3659  01BE  120A  158A  20E0  120A  118A  	fcall	_sprintf
  3660  01C3                     l2868:
  3661  01C3  30DE               	movlw	(low (ftoa@buf| 0))& (0+255)
  3662  01C4                     l729:
  3663  01C4  0008               	return
  3664  01C5                     __end_of_ftoa:
  3665                           
  3666                           	psect	text8
  3667  08E0                     __ptext8:	
  3668 ;; *************** function _sprintf *****************
  3669 ;; Defined at:
  3670 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;  sp              1    wreg     PTR unsigned char 
  3673 ;;		 -> ftoa@buf(17), 
  3674 ;;  f               1   10[BANK0 ] PTR const unsigned char 
  3675 ;;		 -> STR_9(11), 
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;  sp              1   30[BANK0 ] PTR unsigned char 
  3678 ;;		 -> ftoa@buf(17), 
  3679 ;;  val             4   26[BANK0 ] unsigned long 
  3680 ;;  tmpval          4    0        struct .
  3681 ;;  prec            2   33[BANK0 ] int 
  3682 ;;  width           2   31[BANK0 ] int 
  3683 ;;  cp              2    0        PTR const unsigned char 
  3684 ;;  len             2    0        unsigned int 
  3685 ;;  c               1   35[BANK0 ] unsigned char 
  3686 ;;  ap              1   25[BANK0 ] PTR void [1]
  3687 ;;		 -> ?_sprintf(2), 
  3688 ;;  flag            1   24[BANK0 ] unsigned char 
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  2   10[BANK0 ] int 
  3691 ;; Registers used:
  3692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3698 ;;      Params:         0       9       0       0       0
  3699 ;;      Locals:         0      12       0       0       0
  3700 ;;      Temps:          0       5       0       0       0
  3701 ;;      Totals:         0      26       0       0       0
  3702 ;;Total ram usage:       26 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:    1
  3705 ;; This function calls:
  3706 ;;		___lldiv
  3707 ;;		___llmod
  3708 ;;		___wmul
  3709 ;;		_isdigit
  3710 ;; This function is called by:
  3711 ;;		_ftoa
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           
  3716                           ;psect for function _sprintf
  3717  08E0                     _sprintf:
  3718                           
  3719                           ;incstack = 0
  3720                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3721                           ;sprintf@sp stored from wreg
  3722  08E0  1283               	bcf	3,5	;RP0=0, select bank0
  3723  08E1  1303               	bcf	3,6	;RP1=0, select bank0
  3724  08E2  00BE               	movwf	sprintf@sp
  3725  08E3                     l2642:
  3726                           
  3727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  3728  08E3  302B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3729  08E4  00B3               	movwf	??_sprintf
  3730  08E5  0833               	movf	??_sprintf,w
  3731  08E6  00B9               	movwf	sprintf@ap
  3732                           
  3733                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3734  08E7  2B15               	goto	l2740
  3735  08E8                     l2644:
  3736                           
  3737                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3738  08E8  3025               	movlw	37
  3739  08E9  0643               	xorwf	sprintf@c,w
  3740  08EA  1903               	btfsc	3,2
  3741  08EB  28ED               	goto	u3851
  3742  08EC  28EE               	goto	u3850
  3743  08ED                     u3851:
  3744  08ED  28FA               	goto	l2650
  3745  08EE                     u3850:
  3746  08EE                     l2646:
  3747                           
  3748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  3749  08EE  0843               	movf	sprintf@c,w
  3750  08EF  00B3               	movwf	??_sprintf
  3751  08F0  083E               	movf	sprintf@sp,w
  3752  08F1  0084               	movwf	4
  3753  08F2  0833               	movf	??_sprintf,w
  3754  08F3  1383               	bcf	3,7	;select IRP bank0
  3755  08F4  0080               	movwf	0
  3756  08F5                     l2648:
  3757  08F5  3001               	movlw	1
  3758  08F6  00B3               	movwf	??_sprintf
  3759  08F7  0833               	movf	??_sprintf,w
  3760  08F8  07BE               	addwf	sprintf@sp,f
  3761                           
  3762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  3763  08F9  2B15               	goto	l2740
  3764  08FA                     l2650:
  3765                           
  3766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  3767  08FA  01BF               	clrf	sprintf@width
  3768  08FB  01C0               	clrf	sprintf@width+1
  3769                           
  3770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3771  08FC  01B8               	clrf	sprintf@flag
  3772  08FD                     l2652:
  3773                           
  3774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  3775  08FD  082A               	movf	sprintf@f,w
  3776  08FE  0084               	movwf	4
  3777  08FF  160A  118A  200A  120A  158A  	fcall	stringdir
  3778  0904  160A  118A  232C  120A  158A  	fcall	_isdigit
  3779  0909  1C03               	btfss	3,0
  3780  090A  290C               	goto	u3861
  3781  090B  290D               	goto	u3860
  3782  090C                     u3861:
  3783  090C  294D               	goto	l2664
  3784  090D                     u3860:
  3785  090D                     l2654:
  3786                           
  3787                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  3788  090D  1283               	bcf	3,5	;RP0=0, select bank0
  3789  090E  1303               	bcf	3,6	;RP1=0, select bank0
  3790  090F  01BF               	clrf	sprintf@width
  3791  0910  01C0               	clrf	sprintf@width+1
  3792  0911                     l2656:
  3793                           
  3794                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  3795  0911  300A               	movlw	10
  3796  0912  00F0               	movwf	___wmul@multiplier
  3797  0913  3000               	movlw	0
  3798  0914  00F1               	movwf	___wmul@multiplier+1
  3799  0915  1283               	bcf	3,5	;RP0=0, select bank0
  3800  0916  1303               	bcf	3,6	;RP1=0, select bank0
  3801  0917  0840               	movf	sprintf@width+1,w
  3802  0918  00F3               	movwf	___wmul@multiplicand+1
  3803  0919  083F               	movf	sprintf@width,w
  3804  091A  00F2               	movwf	___wmul@multiplicand
  3805  091B  120A  158A  2001  120A  158A  	fcall	___wmul
  3806  0920  0871               	movf	?___wmul+1,w
  3807  0921  1283               	bcf	3,5	;RP0=0, select bank0
  3808  0922  1303               	bcf	3,6	;RP1=0, select bank0
  3809  0923  00C0               	movwf	sprintf@width+1
  3810  0924  0870               	movf	?___wmul,w
  3811  0925  00BF               	movwf	sprintf@width
  3812  0926                     l2658:
  3813                           
  3814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  3815  0926  082A               	movf	sprintf@f,w
  3816  0927  0084               	movwf	4
  3817  0928  160A  118A  200A  120A  158A  	fcall	stringdir
  3818  092D  3ED0               	addlw	208
  3819  092E  00B3               	movwf	??_sprintf
  3820  092F  30FF               	movlw	255
  3821  0930  1803               	skipnc
  3822  0931  3000               	movlw	0
  3823  0932  00B4               	movwf	??_sprintf+1
  3824  0933  0833               	movf	??_sprintf,w
  3825  0934  07BF               	addwf	sprintf@width,f
  3826  0935  1803               	skipnc
  3827  0936  0AC0               	incf	sprintf@width+1,f
  3828  0937  0834               	movf	??_sprintf+1,w
  3829  0938  07C0               	addwf	sprintf@width+1,f
  3830  0939                     l2660:
  3831  0939  3001               	movlw	1
  3832  093A  00B3               	movwf	??_sprintf
  3833  093B  0833               	movf	??_sprintf,w
  3834  093C  07AA               	addwf	sprintf@f,f
  3835  093D                     l2662:
  3836                           
  3837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  3838  093D  082A               	movf	sprintf@f,w
  3839  093E  0084               	movwf	4
  3840  093F  160A  118A  200A  120A  158A  	fcall	stringdir
  3841  0944  160A  118A  232C  120A  158A  	fcall	_isdigit
  3842  0949  1803               	btfsc	3,0
  3843  094A  294C               	goto	u3871
  3844  094B  294D               	goto	u3870
  3845  094C                     u3871:
  3846  094C  2911               	goto	l2656
  3847  094D                     u3870:
  3848  094D                     l2664:
  3849                           
  3850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  3851  094D  1283               	bcf	3,5	;RP0=0, select bank0
  3852  094E  1303               	bcf	3,6	;RP1=0, select bank0
  3853  094F  082A               	movf	sprintf@f,w
  3854  0950  0084               	movwf	4
  3855  0951  160A  118A  200A  120A  158A  	fcall	stringdir
  3856  0956  3A2E               	xorlw	46
  3857  0957  1D03               	skipz
  3858  0958  295A               	goto	u3881
  3859  0959  295B               	goto	u3880
  3860  095A                     u3881:
  3861  095A  299F               	goto	l2678
  3862  095B                     u3880:
  3863  095B                     l2666:
  3864                           
  3865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  3866  095B  3001               	movlw	1
  3867  095C  00B3               	movwf	??_sprintf
  3868  095D  0833               	movf	??_sprintf,w
  3869  095E  07AA               	addwf	sprintf@f,f
  3870  095F                     l2668:
  3871                           
  3872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  3873  095F  01C1               	clrf	sprintf@prec
  3874  0960  01C2               	clrf	sprintf@prec+1
  3875                           
  3876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  3877  0961  298E               	goto	l2676
  3878  0962                     l2670:
  3879                           
  3880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  3881  0962  300A               	movlw	10
  3882  0963  00F0               	movwf	___wmul@multiplier
  3883  0964  3000               	movlw	0
  3884  0965  00F1               	movwf	___wmul@multiplier+1
  3885  0966  1283               	bcf	3,5	;RP0=0, select bank0
  3886  0967  1303               	bcf	3,6	;RP1=0, select bank0
  3887  0968  0842               	movf	sprintf@prec+1,w
  3888  0969  00F3               	movwf	___wmul@multiplicand+1
  3889  096A  0841               	movf	sprintf@prec,w
  3890  096B  00F2               	movwf	___wmul@multiplicand
  3891  096C  120A  158A  2001  120A  158A  	fcall	___wmul
  3892  0971  0871               	movf	?___wmul+1,w
  3893  0972  1283               	bcf	3,5	;RP0=0, select bank0
  3894  0973  1303               	bcf	3,6	;RP1=0, select bank0
  3895  0974  00C2               	movwf	sprintf@prec+1
  3896  0975  0870               	movf	?___wmul,w
  3897  0976  00C1               	movwf	sprintf@prec
  3898  0977                     l2672:
  3899                           
  3900                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  3901  0977  082A               	movf	sprintf@f,w
  3902  0978  0084               	movwf	4
  3903  0979  160A  118A  200A  120A  158A  	fcall	stringdir
  3904  097E  3ED0               	addlw	208
  3905  097F  00B3               	movwf	??_sprintf
  3906  0980  30FF               	movlw	255
  3907  0981  1803               	skipnc
  3908  0982  3000               	movlw	0
  3909  0983  00B4               	movwf	??_sprintf+1
  3910  0984  0833               	movf	??_sprintf,w
  3911  0985  07C1               	addwf	sprintf@prec,f
  3912  0986  1803               	skipnc
  3913  0987  0AC2               	incf	sprintf@prec+1,f
  3914  0988  0834               	movf	??_sprintf+1,w
  3915  0989  07C2               	addwf	sprintf@prec+1,f
  3916  098A                     l2674:
  3917  098A  3001               	movlw	1
  3918  098B  00B3               	movwf	??_sprintf
  3919  098C  0833               	movf	??_sprintf,w
  3920  098D  07AA               	addwf	sprintf@f,f
  3921  098E                     l2676:
  3922                           
  3923                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  3924  098E  082A               	movf	sprintf@f,w
  3925  098F  0084               	movwf	4
  3926  0990  160A  118A  200A  120A  158A  	fcall	stringdir
  3927  0995  160A  118A  232C  120A  158A  	fcall	_isdigit
  3928  099A  1803               	btfsc	3,0
  3929  099B  299D               	goto	u3891
  3930  099C  299E               	goto	u3890
  3931  099D                     u3891:
  3932  099D  2962               	goto	l2670
  3933  099E                     u3890:
  3934  099E  29A9               	goto	l2684
  3935  099F                     l2678:
  3936                           
  3937                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  3938  099F  01C1               	clrf	sprintf@prec
  3939  09A0  01C2               	clrf	sprintf@prec+1
  3940  09A1  29A9               	goto	l2684
  3941  09A2                     l755:	
  3942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 667:   case 'l':
  3943                           
  3944                           
  3945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 669:    flag |= 0
      +                          x10;
  3946  09A2  1638               	bsf	sprintf@flag,4
  3947                           
  3948                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 670:    goto loop
      +                          ;
  3949  09A3  29A9               	goto	l2684
  3950  09A4                     l2680:
  3951                           
  3952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  3953  09A4  30C0               	movlw	192
  3954  09A5  00B3               	movwf	??_sprintf
  3955  09A6  0833               	movf	??_sprintf,w
  3956  09A7  04B8               	iorwf	sprintf@flag,f
  3957                           
  3958                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 845:    break;
  3959  09A8  29C8               	goto	l758
  3960  09A9                     l2684:
  3961  09A9  3001               	movlw	1
  3962  09AA  1283               	bcf	3,5	;RP0=0, select bank0
  3963  09AB  1303               	bcf	3,6	;RP1=0, select bank0
  3964  09AC  07AA               	addwf	sprintf@f,f
  3965  09AD  30FF               	movlw	-1
  3966  09AE  072A               	addwf	sprintf@f,w
  3967  09AF  0084               	movwf	4
  3968  09B0  160A  118A  200A  120A  158A  	fcall	stringdir
  3969  09B5  00C3               	movwf	sprintf@c
  3970  09B6  00B3               	movwf	??_sprintf
  3971  09B7  01B4               	clrf	??_sprintf+1
  3972                           
  3973                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3974                           ; Switch size 1, requested type "simple"
  3975                           ; Number of cases is 1, Range of values is 0 to 0
  3976                           ; switch strategies available:
  3977                           ; Name         Instructions Cycles
  3978                           ; simple_byte            4     3 (average)
  3979                           ; direct_byte           11     8 (fixed)
  3980                           ; jumptable            260     6 (fixed)
  3981                           ;	Chosen strategy is simple_byte
  3982  09B8  0834               	movf	??_sprintf+1,w
  3983  09B9  3A00               	xorlw	0	; case 0
  3984  09BA  1903               	skipnz
  3985  09BB  29BD               	goto	l2964
  3986  09BC  2B15               	goto	l2740
  3987  09BD                     l2964:
  3988                           
  3989                           ; Switch size 1, requested type "simple"
  3990                           ; Number of cases is 3, Range of values is 0 to 117
  3991                           ; switch strategies available:
  3992                           ; Name         Instructions Cycles
  3993                           ; simple_byte           10     6 (average)
  3994                           ; jumptable            260     6 (fixed)
  3995                           ;	Chosen strategy is simple_byte
  3996  09BD  0833               	movf	??_sprintf,w
  3997  09BE  3A00               	xorlw	0	; case 0
  3998  09BF  1903               	skipnz
  3999  09C0  2B27               	goto	l2742
  4000  09C1  3A6C               	xorlw	108	; case 108
  4001  09C2  1903               	skipnz
  4002  09C3  29A2               	goto	l755
  4003  09C4  3A19               	xorlw	25	; case 117
  4004  09C5  1903               	skipnz
  4005  09C6  29A4               	goto	l2680
  4006  09C7  2B15               	goto	l2740
  4007  09C8                     l758:
  4008                           
  4009                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1307:     if(flag & 0x10)
  4010  09C8  1E38               	btfss	sprintf@flag,4
  4011  09C9  29CB               	goto	u3901
  4012  09CA  29CC               	goto	u3900
  4013  09CB                     u3901:
  4014  09CB  29DF               	goto	l2690
  4015  09CC                     u3900:
  4016  09CC                     l2686:
  4017                           
  4018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1308:     val = (
      +                          *(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned long)0));
  4019  09CC  0839               	movf	sprintf@ap,w
  4020  09CD  0084               	movwf	4
  4021  09CE  1383               	bcf	3,7	;select IRP bank0
  4022  09CF  0800               	movf	0,w
  4023  09D0  00BA               	movwf	sprintf@val
  4024  09D1  0A84               	incf	4,f
  4025  09D2  0800               	movf	0,w
  4026  09D3  00BB               	movwf	sprintf@val+1
  4027  09D4  0A84               	incf	4,f
  4028  09D5  0800               	movf	0,w
  4029  09D6  00BC               	movwf	sprintf@val+2
  4030  09D7  0A84               	incf	4,f
  4031  09D8  0800               	movf	0,w
  4032  09D9  00BD               	movwf	sprintf@val+3
  4033  09DA                     l2688:
  4034  09DA  3004               	movlw	4
  4035  09DB  00B3               	movwf	??_sprintf
  4036  09DC  0833               	movf	??_sprintf,w
  4037  09DD  07B9               	addwf	sprintf@ap,f
  4038  09DE  29F1               	goto	l2694
  4039  09DF                     l2690:
  4040                           
  4041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1312:     val = (
      +                          *(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4042  09DF  0839               	movf	sprintf@ap,w
  4043  09E0  0084               	movwf	4
  4044  09E1  1383               	bcf	3,7	;select IRP bank0
  4045  09E2  0800               	movf	0,w
  4046  09E3  00B3               	movwf	??_sprintf
  4047  09E4  0A84               	incf	4,f
  4048  09E5  0800               	movf	0,w
  4049  09E6  00B4               	movwf	??_sprintf+1
  4050  09E7  0833               	movf	??_sprintf,w
  4051  09E8  00BA               	movwf	sprintf@val
  4052  09E9  0834               	movf	??_sprintf+1,w
  4053  09EA  00BB               	movwf	sprintf@val+1
  4054  09EB  01BC               	clrf	sprintf@val+2
  4055  09EC  01BD               	clrf	sprintf@val+3
  4056  09ED                     l2692:
  4057  09ED  3002               	movlw	2
  4058  09EE  00B3               	movwf	??_sprintf
  4059  09EF  0833               	movf	??_sprintf,w
  4060  09F0  07B9               	addwf	sprintf@ap,f
  4061  09F1                     l2694:
  4062                           
  4063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  4064  09F1  0841               	movf	sprintf@prec,w
  4065  09F2  0442               	iorwf	sprintf@prec+1,w
  4066  09F3  1D03               	btfss	3,2
  4067  09F4  29F6               	goto	u3911
  4068  09F5  29F7               	goto	u3910
  4069  09F6                     u3911:
  4070  09F6  2A05               	goto	l2700
  4071  09F7                     u3910:
  4072  09F7                     l2696:
  4073  09F7  083D               	movf	sprintf@val+3,w
  4074  09F8  043C               	iorwf	sprintf@val+2,w
  4075  09F9  043B               	iorwf	sprintf@val+1,w
  4076  09FA  043A               	iorwf	sprintf@val,w
  4077  09FB  1D03               	skipz
  4078  09FC  29FE               	goto	u3921
  4079  09FD  29FF               	goto	u3920
  4080  09FE                     u3921:
  4081  09FE  2A05               	goto	l2700
  4082  09FF                     u3920:
  4083  09FF                     l2698:
  4084                           
  4085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  4086  09FF  3001               	movlw	1
  4087  0A00  07C1               	addwf	sprintf@prec,f
  4088  0A01  1803               	skipnc
  4089  0A02  0AC2               	incf	sprintf@prec+1,f
  4090  0A03  3000               	movlw	0
  4091  0A04  07C2               	addwf	sprintf@prec+1,f
  4092  0A05                     l2700:
  4093                           
  4094                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4095  0A05  01C3               	clrf	sprintf@c
  4096  0A06  0AC3               	incf	sprintf@c,f
  4097  0A07                     l2706:
  4098                           
  4099                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  4100  0A07  0843               	movf	sprintf@c,w
  4101  0A08  00B3               	movwf	??_sprintf
  4102  0A09  3001               	movlw	1
  4103  0A0A                     u3935:
  4104  0A0A  1003               	clrc
  4105  0A0B  0DB3               	rlf	??_sprintf,f
  4106  0A0C  3EFF               	addlw	-1
  4107  0A0D  1D03               	skipz
  4108  0A0E  2A0A               	goto	u3935
  4109  0A0F  1003               	clrc
  4110  0A10  0D33               	rlf	??_sprintf,w
  4111  0A11  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4112  0A12  0084               	movwf	4
  4113  0A13  160A  118A  200A  120A  158A  	fcall	stringdir
  4114  0A18  00B4               	movwf	??_sprintf+1
  4115  0A19  160A  118A  200A  120A  158A  	fcall	stringdir
  4116  0A1E  00B5               	movwf	??_sprintf+2
  4117  0A1F  160A  118A  200A  120A  158A  	fcall	stringdir
  4118  0A24  00B6               	movwf	??_sprintf+3
  4119  0A25  160A  118A  200A  120A  158A  	fcall	stringdir
  4120  0A2A  00B7               	movwf	??_sprintf+4
  4121  0A2B  0837               	movf	??_sprintf+4,w
  4122  0A2C  023D               	subwf	sprintf@val+3,w
  4123  0A2D  1D03               	skipz
  4124  0A2E  2A39               	goto	u3945
  4125  0A2F  0836               	movf	??_sprintf+3,w
  4126  0A30  023C               	subwf	sprintf@val+2,w
  4127  0A31  1D03               	skipz
  4128  0A32  2A39               	goto	u3945
  4129  0A33  0835               	movf	??_sprintf+2,w
  4130  0A34  023B               	subwf	sprintf@val+1,w
  4131  0A35  1D03               	skipz
  4132  0A36  2A39               	goto	u3945
  4133  0A37  0834               	movf	??_sprintf+1,w
  4134  0A38  023A               	subwf	sprintf@val,w
  4135  0A39                     u3945:
  4136  0A39  1803               	skipnc
  4137  0A3A  2A3C               	goto	u3941
  4138  0A3B  2A3D               	goto	u3940
  4139  0A3C                     u3941:
  4140  0A3C  2A3E               	goto	l2710
  4141  0A3D                     u3940:
  4142  0A3D  2A48               	goto	l2712
  4143  0A3E                     l2710:
  4144  0A3E  3001               	movlw	1
  4145  0A3F  00B3               	movwf	??_sprintf
  4146  0A40  0833               	movf	??_sprintf,w
  4147  0A41  07C3               	addwf	sprintf@c,f
  4148  0A42  300A               	movlw	10
  4149  0A43  0643               	xorwf	sprintf@c,w
  4150  0A44  1D03               	btfss	3,2
  4151  0A45  2A47               	goto	u3951
  4152  0A46  2A48               	goto	u3950
  4153  0A47                     u3951:
  4154  0A47  2A07               	goto	l2706
  4155  0A48                     u3950:
  4156  0A48                     l2712:
  4157                           
  4158                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  4159  0A48  0842               	movf	sprintf@prec+1,w
  4160  0A49  3A80               	xorlw	128
  4161  0A4A  3C80               	sublw	128
  4162  0A4B  1D03               	skipz
  4163  0A4C  2A4F               	goto	u3965
  4164  0A4D  0841               	movf	sprintf@prec,w
  4165  0A4E  0243               	subwf	sprintf@c,w
  4166  0A4F                     u3965:
  4167  0A4F  1803               	skipnc
  4168  0A50  2A52               	goto	u3961
  4169  0A51  2A53               	goto	u3960
  4170  0A52                     u3961:
  4171  0A52  2A5A               	goto	l2716
  4172  0A53                     u3960:
  4173  0A53                     l2714:
  4174                           
  4175                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  4176  0A53  1283               	bcf	3,5	;RP0=0, select bank0
  4177  0A54  1303               	bcf	3,6	;RP1=0, select bank0
  4178  0A55  0841               	movf	sprintf@prec,w
  4179  0A56  00B3               	movwf	??_sprintf
  4180  0A57  0833               	movf	??_sprintf,w
  4181  0A58  00C3               	movwf	sprintf@c
  4182  0A59  2A72               	goto	l766
  4183  0A5A                     l2716:
  4184  0A5A  1283               	bcf	3,5	;RP0=0, select bank0
  4185  0A5B  1303               	bcf	3,6	;RP1=0, select bank0
  4186  0A5C  0842               	movf	sprintf@prec+1,w
  4187  0A5D  3A80               	xorlw	128
  4188  0A5E  00B3               	movwf	??_sprintf
  4189  0A5F  3080               	movlw	128
  4190  0A60  0233               	subwf	??_sprintf,w
  4191  0A61  1D03               	skipz
  4192  0A62  2A65               	goto	u3975
  4193  0A63  0843               	movf	sprintf@c,w
  4194  0A64  0241               	subwf	sprintf@prec,w
  4195  0A65                     u3975:
  4196  0A65  1803               	skipnc
  4197  0A66  2A68               	goto	u3971
  4198  0A67  2A69               	goto	u3970
  4199  0A68                     u3971:
  4200  0A68  2A72               	goto	l766
  4201  0A69                     u3970:
  4202  0A69                     l2718:
  4203                           
  4204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  4205  0A69  1283               	bcf	3,5	;RP0=0, select bank0
  4206  0A6A  1303               	bcf	3,6	;RP1=0, select bank0
  4207  0A6B  0843               	movf	sprintf@c,w
  4208  0A6C  00B3               	movwf	??_sprintf
  4209  0A6D  01B4               	clrf	??_sprintf+1
  4210  0A6E  0833               	movf	??_sprintf,w
  4211  0A6F  00C1               	movwf	sprintf@prec
  4212  0A70  0834               	movf	??_sprintf+1,w
  4213  0A71  00C2               	movwf	sprintf@prec+1
  4214  0A72                     l766:
  4215                           
  4216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  4217  0A72  1283               	bcf	3,5	;RP0=0, select bank0
  4218  0A73  1303               	bcf	3,6	;RP1=0, select bank0
  4219  0A74  0840               	movf	sprintf@width+1,w
  4220  0A75  3A80               	xorlw	128
  4221  0A76  3C80               	sublw	128
  4222  0A77  1D03               	skipz
  4223  0A78  2A7B               	goto	u3985
  4224  0A79  083F               	movf	sprintf@width,w
  4225  0A7A  0243               	subwf	sprintf@c,w
  4226  0A7B                     u3985:
  4227  0A7B  1803               	skipnc
  4228  0A7C  2A7E               	goto	u3981
  4229  0A7D  2A7F               	goto	u3980
  4230  0A7E                     u3981:
  4231  0A7E  2A8B               	goto	l2722
  4232  0A7F                     u3980:
  4233  0A7F                     l2720:
  4234                           
  4235                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  4236  0A7F  1283               	bcf	3,5	;RP0=0, select bank0
  4237  0A80  1303               	bcf	3,6	;RP1=0, select bank0
  4238  0A81  0843               	movf	sprintf@c,w
  4239  0A82  00B3               	movwf	??_sprintf
  4240  0A83  01B4               	clrf	??_sprintf+1
  4241  0A84  0833               	movf	??_sprintf,w
  4242  0A85  02BF               	subwf	sprintf@width,f
  4243  0A86  0834               	movf	??_sprintf+1,w
  4244  0A87  1C03               	skipc
  4245  0A88  03C0               	decf	sprintf@width+1,f
  4246  0A89  02C0               	subwf	sprintf@width+1,f
  4247  0A8A  2A8F               	goto	l2724
  4248  0A8B                     l2722:
  4249                           
  4250                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  4251  0A8B  1283               	bcf	3,5	;RP0=0, select bank0
  4252  0A8C  1303               	bcf	3,6	;RP1=0, select bank0
  4253  0A8D  01BF               	clrf	sprintf@width
  4254  0A8E  01C0               	clrf	sprintf@width+1
  4255  0A8F                     l2724:
  4256                           
  4257                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  4258  0A8F  083F               	movf	sprintf@width,w
  4259  0A90  0440               	iorwf	sprintf@width+1,w
  4260  0A91  1903               	btfsc	3,2
  4261  0A92  2A94               	goto	u3991
  4262  0A93  2A95               	goto	u3990
  4263  0A94                     u3991:
  4264  0A94  2B07               	goto	l2738
  4265  0A95                     u3990:
  4266  0A95                     l2726:
  4267                           
  4268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  4269  0A95  3020               	movlw	32
  4270  0A96  00B3               	movwf	??_sprintf
  4271  0A97  083E               	movf	sprintf@sp,w
  4272  0A98  0084               	movwf	4
  4273  0A99  0833               	movf	??_sprintf,w
  4274  0A9A  1383               	bcf	3,7	;select IRP bank0
  4275  0A9B  0080               	movwf	0
  4276  0A9C                     l2728:
  4277  0A9C  3001               	movlw	1
  4278  0A9D  00B3               	movwf	??_sprintf
  4279  0A9E  0833               	movf	??_sprintf,w
  4280  0A9F  07BE               	addwf	sprintf@sp,f
  4281  0AA0                     l2730:
  4282  0AA0  30FF               	movlw	255
  4283  0AA1  07BF               	addwf	sprintf@width,f
  4284  0AA2  1803               	skipnc
  4285  0AA3  0AC0               	incf	sprintf@width+1,f
  4286  0AA4  30FF               	movlw	255
  4287  0AA5  07C0               	addwf	sprintf@width+1,f
  4288  0AA6  083F               	movf	sprintf@width,w
  4289  0AA7  0440               	iorwf	sprintf@width+1,w
  4290  0AA8  1D03               	btfss	3,2
  4291  0AA9  2AAB               	goto	u4001
  4292  0AAA  2AAC               	goto	u4000
  4293  0AAB                     u4001:
  4294  0AAB  2A95               	goto	l2726
  4295  0AAC                     u4000:
  4296  0AAC  2B07               	goto	l2738
  4297  0AAD                     l2732:
  4298                           
  4299                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  4300  0AAD  3000               	movlw	0
  4301  0AAE  00A3               	movwf	___llmod@divisor+3
  4302  0AAF  3000               	movlw	0
  4303  0AB0  00A2               	movwf	___llmod@divisor+2
  4304  0AB1  3000               	movlw	0
  4305  0AB2  00A1               	movwf	___llmod@divisor+1
  4306  0AB3  300A               	movlw	10
  4307  0AB4  00A0               	movwf	___llmod@divisor
  4308  0AB5  0841               	movf	sprintf@prec,w
  4309  0AB6  00B3               	movwf	??_sprintf
  4310  0AB7  3001               	movlw	1
  4311  0AB8                     u4015:
  4312  0AB8  1003               	clrc
  4313  0AB9  0DB3               	rlf	??_sprintf,f
  4314  0ABA  3EFF               	addlw	-1
  4315  0ABB  1D03               	skipz
  4316  0ABC  2AB8               	goto	u4015
  4317  0ABD  1003               	clrc
  4318  0ABE  0D33               	rlf	??_sprintf,w
  4319  0ABF  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4320  0AC0  0084               	movwf	4
  4321  0AC1  160A  118A  200A  120A  158A  	fcall	stringdir
  4322  0AC6  00F0               	movwf	___lldiv@divisor
  4323  0AC7  160A  118A  200A  120A  158A  	fcall	stringdir
  4324  0ACC  00F1               	movwf	___lldiv@divisor+1
  4325  0ACD  160A  118A  200A  120A  158A  	fcall	stringdir
  4326  0AD2  00F2               	movwf	___lldiv@divisor+2
  4327  0AD3  160A  118A  200A  120A  158A  	fcall	stringdir
  4328  0AD8  00F3               	movwf	___lldiv@divisor+3
  4329  0AD9  083D               	movf	sprintf@val+3,w
  4330  0ADA  00F7               	movwf	___lldiv@dividend+3
  4331  0ADB  083C               	movf	sprintf@val+2,w
  4332  0ADC  00F6               	movwf	___lldiv@dividend+2
  4333  0ADD  083B               	movf	sprintf@val+1,w
  4334  0ADE  00F5               	movwf	___lldiv@dividend+1
  4335  0ADF  083A               	movf	sprintf@val,w
  4336  0AE0  00F4               	movwf	___lldiv@dividend
  4337  0AE1  160A  118A  2430  120A  158A  	fcall	___lldiv
  4338  0AE6  0873               	movf	?___lldiv+3,w
  4339  0AE7  1283               	bcf	3,5	;RP0=0, select bank0
  4340  0AE8  1303               	bcf	3,6	;RP1=0, select bank0
  4341  0AE9  00A7               	movwf	___llmod@dividend+3
  4342  0AEA  0872               	movf	?___lldiv+2,w
  4343  0AEB  00A6               	movwf	___llmod@dividend+2
  4344  0AEC  0871               	movf	?___lldiv+1,w
  4345  0AED  00A5               	movwf	___llmod@dividend+1
  4346  0AEE  0870               	movf	?___lldiv,w
  4347  0AEF  00A4               	movwf	___llmod@dividend
  4348  0AF0  160A  118A  23DA  120A  158A  	fcall	___llmod
  4349  0AF5  1283               	bcf	3,5	;RP0=0, select bank0
  4350  0AF6  1303               	bcf	3,6	;RP1=0, select bank0
  4351  0AF7  0820               	movf	?___llmod,w
  4352  0AF8  3E30               	addlw	48
  4353  0AF9  00B4               	movwf	??_sprintf+1
  4354  0AFA  0834               	movf	??_sprintf+1,w
  4355  0AFB  00C3               	movwf	sprintf@c
  4356  0AFC                     l2734:
  4357                           
  4358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  4359  0AFC  0843               	movf	sprintf@c,w
  4360  0AFD  00B3               	movwf	??_sprintf
  4361  0AFE  083E               	movf	sprintf@sp,w
  4362  0AFF  0084               	movwf	4
  4363  0B00  0833               	movf	??_sprintf,w
  4364  0B01  1383               	bcf	3,7	;select IRP bank0
  4365  0B02  0080               	movwf	0
  4366  0B03                     l2736:
  4367  0B03  3001               	movlw	1
  4368  0B04  00B3               	movwf	??_sprintf
  4369  0B05  0833               	movf	??_sprintf,w
  4370  0B06  07BE               	addwf	sprintf@sp,f
  4371  0B07                     l2738:
  4372                           
  4373                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4374  0B07  30FF               	movlw	255
  4375  0B08  07C1               	addwf	sprintf@prec,f
  4376  0B09  1803               	skipnc
  4377  0B0A  0AC2               	incf	sprintf@prec+1,f
  4378  0B0B  30FF               	movlw	255
  4379  0B0C  07C2               	addwf	sprintf@prec+1,f
  4380  0B0D  0A41               	incf	sprintf@prec,w
  4381  0B0E  1D03               	skipz
  4382  0B0F  2B14               	goto	u4021
  4383  0B10  0A42               	incf	sprintf@prec+1,w
  4384  0B11  1D03               	btfss	3,2
  4385  0B12  2B14               	goto	u4021
  4386  0B13  2B15               	goto	u4020
  4387  0B14                     u4021:
  4388  0B14  2AAD               	goto	l2732
  4389  0B15                     u4020:
  4390  0B15                     l2740:
  4391                           
  4392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4393  0B15  3001               	movlw	1
  4394  0B16  07AA               	addwf	sprintf@f,f
  4395  0B17  30FF               	movlw	-1
  4396  0B18  072A               	addwf	sprintf@f,w
  4397  0B19  0084               	movwf	4
  4398  0B1A  160A  118A  200A  120A  158A  	fcall	stringdir
  4399  0B1F  00B3               	movwf	??_sprintf
  4400  0B20  0833               	movf	??_sprintf,w
  4401  0B21  00C3               	movwf	sprintf@c
  4402  0B22  0843               	movf	sprintf@c,w
  4403  0B23  1D03               	btfss	3,2
  4404  0B24  2B26               	goto	u4031
  4405  0B25  2B27               	goto	u4030
  4406  0B26                     u4031:
  4407  0B26  28E8               	goto	l2644
  4408  0B27                     u4030:
  4409  0B27                     l2742:
  4410                           
  4411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4412  0B27  083E               	movf	sprintf@sp,w
  4413  0B28  0084               	movwf	4
  4414  0B29  1383               	bcf	3,7	;select IRP bank0
  4415  0B2A  0180               	clrf	0
  4416  0B2B                     l777:
  4417  0B2B  0008               	return
  4418  0B2C                     __end_of_sprintf:
  4419                           
  4420                           	psect	text9
  4421  132C                     __ptext9:	
  4422 ;; *************** function _isdigit *****************
  4423 ;; Defined at:
  4424 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  c               1    wreg     unsigned char 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  c               1    1[COMMON] unsigned char 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;		None               void
  4431 ;; Registers used:
  4432 ;;		wreg, status,2, status,0
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4438 ;;      Params:         0       0       0       0       0
  4439 ;;      Locals:         2       0       0       0       0
  4440 ;;      Temps:          0       0       0       0       0
  4441 ;;      Totals:         2       0       0       0       0
  4442 ;;Total ram usage:        2 bytes
  4443 ;; Hardware stack levels used:    1
  4444 ;; This function calls:
  4445 ;;		Nothing
  4446 ;; This function is called by:
  4447 ;;		_sprintf
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           
  4452                           ;psect for function _isdigit
  4453  132C                     _isdigit:
  4454                           
  4455                           ;incstack = 0
  4456                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4457                           ;isdigit@c stored from wreg
  4458  132C  00F1               	movwf	isdigit@c
  4459  132D                     l2202:
  4460  132D  01F0               	clrf	_isdigit$793
  4461  132E                     l2204:
  4462  132E  303A               	movlw	58
  4463  132F  0271               	subwf	isdigit@c,w
  4464  1330  1803               	skipnc
  4465  1331  2B33               	goto	u2811
  4466  1332  2B34               	goto	u2810
  4467  1333                     u2811:
  4468  1333  2B3C               	goto	l2210
  4469  1334                     u2810:
  4470  1334                     l2206:
  4471  1334  3030               	movlw	48
  4472  1335  0271               	subwf	isdigit@c,w
  4473  1336  1C03               	skipc
  4474  1337  2B39               	goto	u2821
  4475  1338  2B3A               	goto	u2820
  4476  1339                     u2821:
  4477  1339  2B3C               	goto	l2210
  4478  133A                     u2820:
  4479  133A                     l2208:
  4480  133A  01F0               	clrf	_isdigit$793
  4481  133B  0AF0               	incf	_isdigit$793,f
  4482  133C                     l2210:
  4483  133C  0C70               	rrf	_isdigit$793,w
  4484  133D                     l782:
  4485  133D  0008               	return
  4486  133E                     __end_of_isdigit:
  4487                           
  4488                           	psect	text10
  4489  0801                     __ptext10:	
  4490 ;; *************** function ___wmul *****************
  4491 ;; Defined at:
  4492 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  multiplier      2    0[COMMON] unsigned int 
  4495 ;;  multiplicand    2    2[COMMON] unsigned int 
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;  product         2    4[COMMON] unsigned int 
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  2    0[COMMON] unsigned int 
  4500 ;; Registers used:
  4501 ;;		wreg, status,2, status,0
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4507 ;;      Params:         4       0       0       0       0
  4508 ;;      Locals:         2       0       0       0       0
  4509 ;;      Temps:          0       0       0       0       0
  4510 ;;      Totals:         6       0       0       0       0
  4511 ;;Total ram usage:        6 bytes
  4512 ;; Hardware stack levels used:    1
  4513 ;; This function calls:
  4514 ;;		Nothing
  4515 ;; This function is called by:
  4516 ;;		_sprintf
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           
  4521                           ;psect for function ___wmul
  4522  0801                     ___wmul:
  4523  0801                     l1936:	
  4524                           ;incstack = 0
  4525                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4526                           
  4527  0801  01F4               	clrf	___wmul@product
  4528  0802  01F5               	clrf	___wmul@product+1
  4529  0803                     l1938:
  4530  0803  1C70               	btfss	___wmul@multiplier,0
  4531  0804  2806               	goto	u2151
  4532  0805  2807               	goto	u2150
  4533  0806                     u2151:
  4534  0806  280D               	goto	l273
  4535  0807                     u2150:
  4536  0807                     l1940:
  4537  0807  0872               	movf	___wmul@multiplicand,w
  4538  0808  07F4               	addwf	___wmul@product,f
  4539  0809  1803               	skipnc
  4540  080A  0AF5               	incf	___wmul@product+1,f
  4541  080B  0873               	movf	___wmul@multiplicand+1,w
  4542  080C  07F5               	addwf	___wmul@product+1,f
  4543  080D                     l273:
  4544  080D  3001               	movlw	1
  4545  080E                     u2165:
  4546  080E  1003               	clrc
  4547  080F  0DF2               	rlf	___wmul@multiplicand,f
  4548  0810  0DF3               	rlf	___wmul@multiplicand+1,f
  4549  0811  3EFF               	addlw	-1
  4550  0812  1D03               	skipz
  4551  0813  280E               	goto	u2165
  4552  0814                     l1942:
  4553  0814  3001               	movlw	1
  4554  0815                     u2175:
  4555  0815  1003               	clrc
  4556  0816  0CF1               	rrf	___wmul@multiplier+1,f
  4557  0817  0CF0               	rrf	___wmul@multiplier,f
  4558  0818  3EFF               	addlw	-1
  4559  0819  1D03               	skipz
  4560  081A  2815               	goto	u2175
  4561  081B                     l1944:
  4562  081B  0870               	movf	___wmul@multiplier,w
  4563  081C  0471               	iorwf	___wmul@multiplier+1,w
  4564  081D  1D03               	btfss	3,2
  4565  081E  2820               	goto	u2181
  4566  081F  2821               	goto	u2180
  4567  0820                     u2181:
  4568  0820  2803               	goto	l1938
  4569  0821                     u2180:
  4570  0821                     l1946:
  4571  0821  0875               	movf	___wmul@product+1,w
  4572  0822  00F1               	movwf	?___wmul+1
  4573  0823  0874               	movf	___wmul@product,w
  4574  0824  00F0               	movwf	?___wmul
  4575  0825                     l275:
  4576  0825  0008               	return
  4577  0826                     __end_of___wmul:
  4578                           
  4579                           	psect	text11
  4580  13DA                     __ptext11:	
  4581 ;; *************** function ___llmod *****************
  4582 ;; Defined at:
  4583 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;  divisor         4    0[BANK0 ] unsigned long 
  4586 ;;  dividend        4    4[BANK0 ] unsigned long 
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;  counter         1    9[BANK0 ] unsigned char 
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  4    0[BANK0 ] unsigned long 
  4591 ;; Registers used:
  4592 ;;		wreg, status,2, status,0
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4598 ;;      Params:         0       8       0       0       0
  4599 ;;      Locals:         0       1       0       0       0
  4600 ;;      Temps:          0       1       0       0       0
  4601 ;;      Totals:         0      10       0       0       0
  4602 ;;Total ram usage:       10 bytes
  4603 ;; Hardware stack levels used:    1
  4604 ;; This function calls:
  4605 ;;		Nothing
  4606 ;; This function is called by:
  4607 ;;		_sprintf
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           
  4612                           ;psect for function ___llmod
  4613  13DA                     ___llmod:
  4614  13DA                     l1974:	
  4615                           ;incstack = 0
  4616                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4617                           
  4618  13DA  1283               	bcf	3,5	;RP0=0, select bank0
  4619  13DB  1303               	bcf	3,6	;RP1=0, select bank0
  4620  13DC  0823               	movf	___llmod@divisor+3,w
  4621  13DD  0422               	iorwf	___llmod@divisor+2,w
  4622  13DE  0421               	iorwf	___llmod@divisor+1,w
  4623  13DF  0420               	iorwf	___llmod@divisor,w
  4624  13E0  1903               	skipnz
  4625  13E1  2BE3               	goto	u2261
  4626  13E2  2BE4               	goto	u2260
  4627  13E3                     u2261:
  4628  13E3  2C27               	goto	l1990
  4629  13E4                     u2260:
  4630  13E4                     l1976:
  4631  13E4  01A9               	clrf	___llmod@counter
  4632  13E5  0AA9               	incf	___llmod@counter,f
  4633  13E6  2BF4               	goto	l1980
  4634  13E7                     l1978:
  4635  13E7  3001               	movlw	1
  4636  13E8  00A8               	movwf	??___llmod
  4637  13E9                     u2275:
  4638  13E9  1003               	clrc
  4639  13EA  0DA0               	rlf	___llmod@divisor,f
  4640  13EB  0DA1               	rlf	___llmod@divisor+1,f
  4641  13EC  0DA2               	rlf	___llmod@divisor+2,f
  4642  13ED  0DA3               	rlf	___llmod@divisor+3,f
  4643  13EE  0BA8               	decfsz	??___llmod,f
  4644  13EF  2BE9               	goto	u2275
  4645  13F0  3001               	movlw	1
  4646  13F1  00A8               	movwf	??___llmod
  4647  13F2  0828               	movf	??___llmod,w
  4648  13F3  07A9               	addwf	___llmod@counter,f
  4649  13F4                     l1980:
  4650  13F4  1FA3               	btfss	___llmod@divisor+3,7
  4651  13F5  2BF7               	goto	u2281
  4652  13F6  2BF8               	goto	u2280
  4653  13F7                     u2281:
  4654  13F7  2BE7               	goto	l1978
  4655  13F8                     u2280:
  4656  13F8                     l1982:
  4657  13F8  0823               	movf	___llmod@divisor+3,w
  4658  13F9  0227               	subwf	___llmod@dividend+3,w
  4659  13FA  1D03               	skipz
  4660  13FB  2C06               	goto	u2295
  4661  13FC  0822               	movf	___llmod@divisor+2,w
  4662  13FD  0226               	subwf	___llmod@dividend+2,w
  4663  13FE  1D03               	skipz
  4664  13FF  2C06               	goto	u2295
  4665  1400  0821               	movf	___llmod@divisor+1,w
  4666  1401  0225               	subwf	___llmod@dividend+1,w
  4667  1402  1D03               	skipz
  4668  1403  2C06               	goto	u2295
  4669  1404  0820               	movf	___llmod@divisor,w
  4670  1405  0224               	subwf	___llmod@dividend,w
  4671  1406                     u2295:
  4672  1406  1C03               	skipc
  4673  1407  2C09               	goto	u2291
  4674  1408  2C0A               	goto	u2290
  4675  1409                     u2291:
  4676  1409  2C18               	goto	l1986
  4677  140A                     u2290:
  4678  140A                     l1984:
  4679  140A  0820               	movf	___llmod@divisor,w
  4680  140B  02A4               	subwf	___llmod@dividend,f
  4681  140C  0821               	movf	___llmod@divisor+1,w
  4682  140D  1C03               	skipc
  4683  140E  0F21               	incfsz	___llmod@divisor+1,w
  4684  140F  02A5               	subwf	___llmod@dividend+1,f
  4685  1410  0822               	movf	___llmod@divisor+2,w
  4686  1411  1C03               	skipc
  4687  1412  0F22               	incfsz	___llmod@divisor+2,w
  4688  1413  02A6               	subwf	___llmod@dividend+2,f
  4689  1414  0823               	movf	___llmod@divisor+3,w
  4690  1415  1C03               	skipc
  4691  1416  0F23               	incfsz	___llmod@divisor+3,w
  4692  1417  02A7               	subwf	___llmod@dividend+3,f
  4693  1418                     l1986:
  4694  1418  3001               	movlw	1
  4695  1419                     u2305:
  4696  1419  1003               	clrc
  4697  141A  0CA3               	rrf	___llmod@divisor+3,f
  4698  141B  0CA2               	rrf	___llmod@divisor+2,f
  4699  141C  0CA1               	rrf	___llmod@divisor+1,f
  4700  141D  0CA0               	rrf	___llmod@divisor,f
  4701  141E  3EFF               	addlw	-1
  4702  141F  1D03               	skipz
  4703  1420  2C19               	goto	u2305
  4704  1421                     l1988:
  4705  1421  3001               	movlw	1
  4706  1422  02A9               	subwf	___llmod@counter,f
  4707  1423  1D03               	btfss	3,2
  4708  1424  2C26               	goto	u2311
  4709  1425  2C27               	goto	u2310
  4710  1426                     u2311:
  4711  1426  2BF8               	goto	l1982
  4712  1427                     u2310:
  4713  1427                     l1990:
  4714  1427  0827               	movf	___llmod@dividend+3,w
  4715  1428  00A3               	movwf	?___llmod+3
  4716  1429  0826               	movf	___llmod@dividend+2,w
  4717  142A  00A2               	movwf	?___llmod+2
  4718  142B  0825               	movf	___llmod@dividend+1,w
  4719  142C  00A1               	movwf	?___llmod+1
  4720  142D  0824               	movf	___llmod@dividend,w
  4721  142E  00A0               	movwf	?___llmod
  4722  142F                     l495:
  4723  142F  0008               	return
  4724  1430                     __end_of___llmod:
  4725                           
  4726                           	psect	text12
  4727  0826                     __ptext12:	
  4728 ;; *************** function ___xxtofl *****************
  4729 ;; Defined at:
  4730 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  sign            1    wreg     unsigned char 
  4733 ;;  val             4    0[COMMON] long 
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  sign            1    8[COMMON] unsigned char 
  4736 ;;  arg             4   10[COMMON] unsigned long 
  4737 ;;  exp             1    9[COMMON] unsigned char 
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  4    0[COMMON] unsigned char 
  4740 ;; Registers used:
  4741 ;;		wreg, status,2, status,0
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4747 ;;      Params:         4       0       0       0       0
  4748 ;;      Locals:         6       0       0       0       0
  4749 ;;      Temps:          4       0       0       0       0
  4750 ;;      Totals:        14       0       0       0       0
  4751 ;;Total ram usage:       14 bytes
  4752 ;; Hardware stack levels used:    1
  4753 ;; This function calls:
  4754 ;;		Nothing
  4755 ;; This function is called by:
  4756 ;;		_readMPU
  4757 ;;		_ftoa
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           
  4762                           ;psect for function ___xxtofl
  4763  0826                     ___xxtofl:
  4764                           
  4765                           ;incstack = 0
  4766                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4767                           ;___xxtofl@sign stored from wreg
  4768  0826  00F8               	movwf	___xxtofl@sign
  4769  0827                     l2598:
  4770  0827  0878               	movf	___xxtofl@sign,w
  4771  0828  1903               	btfsc	3,2
  4772  0829  282B               	goto	u3711
  4773  082A  282C               	goto	u3710
  4774  082B                     u3711:
  4775  082B  2840               	goto	l2604
  4776  082C                     u3710:
  4777  082C                     l2600:
  4778  082C  1FF3               	btfss	___xxtofl@val+3,7
  4779  082D  282F               	goto	u3721
  4780  082E  2830               	goto	u3720
  4781  082F                     u3721:
  4782  082F  2840               	goto	l2604
  4783  0830                     u3720:
  4784  0830                     l2602:
  4785  0830  0970               	comf	___xxtofl@val,w
  4786  0831  00FA               	movwf	___xxtofl@arg
  4787  0832  0971               	comf	___xxtofl@val+1,w
  4788  0833  00FB               	movwf	___xxtofl@arg+1
  4789  0834  0972               	comf	___xxtofl@val+2,w
  4790  0835  00FC               	movwf	___xxtofl@arg+2
  4791  0836  0973               	comf	___xxtofl@val+3,w
  4792  0837  00FD               	movwf	___xxtofl@arg+3
  4793  0838  0AFA               	incf	___xxtofl@arg,f
  4794  0839  1903               	skipnz
  4795  083A  0AFB               	incf	___xxtofl@arg+1,f
  4796  083B  1903               	skipnz
  4797  083C  0AFC               	incf	___xxtofl@arg+2,f
  4798  083D  1903               	skipnz
  4799  083E  0AFD               	incf	___xxtofl@arg+3,f
  4800  083F  2848               	goto	l706
  4801  0840                     l2604:
  4802  0840  0873               	movf	___xxtofl@val+3,w
  4803  0841  00FD               	movwf	___xxtofl@arg+3
  4804  0842  0872               	movf	___xxtofl@val+2,w
  4805  0843  00FC               	movwf	___xxtofl@arg+2
  4806  0844  0871               	movf	___xxtofl@val+1,w
  4807  0845  00FB               	movwf	___xxtofl@arg+1
  4808  0846  0870               	movf	___xxtofl@val,w
  4809  0847  00FA               	movwf	___xxtofl@arg
  4810  0848                     l706:
  4811  0848  0873               	movf	___xxtofl@val+3,w
  4812  0849  0472               	iorwf	___xxtofl@val+2,w
  4813  084A  0471               	iorwf	___xxtofl@val+1,w
  4814  084B  0470               	iorwf	___xxtofl@val,w
  4815  084C  1D03               	skipz
  4816  084D  284F               	goto	u3731
  4817  084E  2850               	goto	u3730
  4818  084F                     u3731:
  4819  084F  2859               	goto	l2610
  4820  0850                     u3730:
  4821  0850                     l2606:
  4822  0850  3000               	movlw	0
  4823  0851  00F3               	movwf	?___xxtofl+3
  4824  0852  3000               	movlw	0
  4825  0853  00F2               	movwf	?___xxtofl+2
  4826  0854  3000               	movlw	0
  4827  0855  00F1               	movwf	?___xxtofl+1
  4828  0856  3000               	movlw	0
  4829  0857  00F0               	movwf	?___xxtofl
  4830  0858  28DF               	goto	l708
  4831  0859                     l2610:
  4832  0859  3096               	movlw	150
  4833  085A  00F4               	movwf	??___xxtofl
  4834  085B  0874               	movf	??___xxtofl,w
  4835  085C  00F9               	movwf	___xxtofl@exp
  4836  085D  286B               	goto	l2614
  4837  085E                     l2612:
  4838  085E  3001               	movlw	1
  4839  085F  00F4               	movwf	??___xxtofl
  4840  0860  0874               	movf	??___xxtofl,w
  4841  0861  07F9               	addwf	___xxtofl@exp,f
  4842  0862  3001               	movlw	1
  4843  0863                     u3745:
  4844  0863  1003               	clrc
  4845  0864  0CFD               	rrf	___xxtofl@arg+3,f
  4846  0865  0CFC               	rrf	___xxtofl@arg+2,f
  4847  0866  0CFB               	rrf	___xxtofl@arg+1,f
  4848  0867  0CFA               	rrf	___xxtofl@arg,f
  4849  0868  3EFF               	addlw	-1
  4850  0869  1D03               	skipz
  4851  086A  2863               	goto	u3745
  4852  086B                     l2614:
  4853  086B  30FE               	movlw	254
  4854  086C  057D               	andwf	___xxtofl@arg+3,w
  4855  086D  1D03               	btfss	3,2
  4856  086E  2870               	goto	u3751
  4857  086F  2871               	goto	u3750
  4858  0870                     u3751:
  4859  0870  285E               	goto	l2612
  4860  0871                     u3750:
  4861  0871  288D               	goto	l712
  4862  0872                     l2616:
  4863  0872  3001               	movlw	1
  4864  0873  00F4               	movwf	??___xxtofl
  4865  0874  0874               	movf	??___xxtofl,w
  4866  0875  07F9               	addwf	___xxtofl@exp,f
  4867  0876                     l2618:
  4868  0876  3001               	movlw	1
  4869  0877  07FA               	addwf	___xxtofl@arg,f
  4870  0878  3000               	movlw	0
  4871  0879  1803               	skipnc
  4872  087A  3001               	movlw	1
  4873  087B  07FB               	addwf	___xxtofl@arg+1,f
  4874  087C  3000               	movlw	0
  4875  087D  1803               	skipnc
  4876  087E  3001               	movlw	1
  4877  087F  07FC               	addwf	___xxtofl@arg+2,f
  4878  0880  3000               	movlw	0
  4879  0881  1803               	skipnc
  4880  0882  3001               	movlw	1
  4881  0883  07FD               	addwf	___xxtofl@arg+3,f
  4882  0884                     l2620:
  4883  0884  3001               	movlw	1
  4884  0885                     u3765:
  4885  0885  1003               	clrc
  4886  0886  0CFD               	rrf	___xxtofl@arg+3,f
  4887  0887  0CFC               	rrf	___xxtofl@arg+2,f
  4888  0888  0CFB               	rrf	___xxtofl@arg+1,f
  4889  0889  0CFA               	rrf	___xxtofl@arg,f
  4890  088A  3EFF               	addlw	-1
  4891  088B  1D03               	skipz
  4892  088C  2885               	goto	u3765
  4893  088D                     l712:
  4894  088D  30FF               	movlw	255
  4895  088E  057D               	andwf	___xxtofl@arg+3,w
  4896  088F  1D03               	btfss	3,2
  4897  0890  2892               	goto	u3771
  4898  0891  2893               	goto	u3770
  4899  0892                     u3771:
  4900  0892  2872               	goto	l2616
  4901  0893                     u3770:
  4902  0893  289F               	goto	l2624
  4903  0894                     l2622:
  4904  0894  3001               	movlw	1
  4905  0895  02F9               	subwf	___xxtofl@exp,f
  4906  0896  3001               	movlw	1
  4907  0897  00F4               	movwf	??___xxtofl
  4908  0898                     u3785:
  4909  0898  1003               	clrc
  4910  0899  0DFA               	rlf	___xxtofl@arg,f
  4911  089A  0DFB               	rlf	___xxtofl@arg+1,f
  4912  089B  0DFC               	rlf	___xxtofl@arg+2,f
  4913  089C  0DFD               	rlf	___xxtofl@arg+3,f
  4914  089D  0BF4               	decfsz	??___xxtofl,f
  4915  089E  2898               	goto	u3785
  4916  089F                     l2624:
  4917  089F  1BFC               	btfsc	___xxtofl@arg+2,7
  4918  08A0  28A2               	goto	u3791
  4919  08A1  28A3               	goto	u3790
  4920  08A2                     u3791:
  4921  08A2  28A9               	goto	l719
  4922  08A3                     u3790:
  4923  08A3                     l2626:
  4924  08A3  3002               	movlw	2
  4925  08A4  0279               	subwf	___xxtofl@exp,w
  4926  08A5  1803               	skipnc
  4927  08A6  28A8               	goto	u3801
  4928  08A7  28A9               	goto	u3800
  4929  08A8                     u3801:
  4930  08A8  2894               	goto	l2622
  4931  08A9                     u3800:
  4932  08A9                     l719:
  4933  08A9  1879               	btfsc	___xxtofl@exp,0
  4934  08AA  28AC               	goto	u3811
  4935  08AB  28AD               	goto	u3810
  4936  08AC                     u3811:
  4937  08AC  28B5               	goto	l720
  4938  08AD                     u3810:
  4939  08AD                     l2628:
  4940  08AD  30FF               	movlw	255
  4941  08AE  05FA               	andwf	___xxtofl@arg,f
  4942  08AF  30FF               	movlw	255
  4943  08B0  05FB               	andwf	___xxtofl@arg+1,f
  4944  08B1  307F               	movlw	127
  4945  08B2  05FC               	andwf	___xxtofl@arg+2,f
  4946  08B3  30FF               	movlw	255
  4947  08B4  05FD               	andwf	___xxtofl@arg+3,f
  4948  08B5                     l720:
  4949  08B5  1003               	clrc
  4950  08B6  0CF9               	rrf	___xxtofl@exp,f
  4951  08B7                     l2630:
  4952  08B7  0879               	movf	___xxtofl@exp,w
  4953  08B8  00F4               	movwf	??___xxtofl
  4954  08B9  01F5               	clrf	??___xxtofl+1
  4955  08BA  01F6               	clrf	??___xxtofl+2
  4956  08BB  01F7               	clrf	??___xxtofl+3
  4957  08BC  3018               	movlw	24
  4958  08BD                     u3825:
  4959  08BD  1003               	clrc
  4960  08BE  0DF4               	rlf	??___xxtofl,f
  4961  08BF  0DF5               	rlf	??___xxtofl+1,f
  4962  08C0  0DF6               	rlf	??___xxtofl+2,f
  4963  08C1  0DF7               	rlf	??___xxtofl+3,f
  4964  08C2                     u3820:
  4965  08C2  3EFF               	addlw	-1
  4966  08C3  1D03               	skipz
  4967  08C4  28BD               	goto	u3825
  4968  08C5  0874               	movf	??___xxtofl,w
  4969  08C6  04FA               	iorwf	___xxtofl@arg,f
  4970  08C7  0875               	movf	??___xxtofl+1,w
  4971  08C8  04FB               	iorwf	___xxtofl@arg+1,f
  4972  08C9  0876               	movf	??___xxtofl+2,w
  4973  08CA  04FC               	iorwf	___xxtofl@arg+2,f
  4974  08CB  0877               	movf	??___xxtofl+3,w
  4975  08CC  04FD               	iorwf	___xxtofl@arg+3,f
  4976  08CD                     l2632:
  4977  08CD  0878               	movf	___xxtofl@sign,w
  4978  08CE  1903               	btfsc	3,2
  4979  08CF  28D1               	goto	u3831
  4980  08D0  28D2               	goto	u3830
  4981  08D1                     u3831:
  4982  08D1  28D7               	goto	l2638
  4983  08D2                     u3830:
  4984  08D2                     l2634:
  4985  08D2  1FF3               	btfss	___xxtofl@val+3,7
  4986  08D3  28D5               	goto	u3841
  4987  08D4  28D6               	goto	u3840
  4988  08D5                     u3841:
  4989  08D5  28D7               	goto	l2638
  4990  08D6                     u3840:
  4991  08D6                     l2636:
  4992  08D6  17FD               	bsf	___xxtofl@arg+3,7
  4993  08D7                     l2638:
  4994  08D7  087D               	movf	___xxtofl@arg+3,w
  4995  08D8  00F3               	movwf	?___xxtofl+3
  4996  08D9  087C               	movf	___xxtofl@arg+2,w
  4997  08DA  00F2               	movwf	?___xxtofl+2
  4998  08DB  087B               	movf	___xxtofl@arg+1,w
  4999  08DC  00F1               	movwf	?___xxtofl+1
  5000  08DD  087A               	movf	___xxtofl@arg,w
  5001  08DE  00F0               	movwf	?___xxtofl
  5002  08DF                     l708:
  5003  08DF  0008               	return
  5004  08E0                     __end_of___xxtofl:
  5005                           
  5006                           	psect	text13
  5007  1505                     __ptext13:	
  5008 ;; *************** function ___fltol *****************
  5009 ;; Defined at:
  5010 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;  f1              4   26[BANK0 ] unsigned char 
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;  exp1            1   36[BANK0 ] unsigned char 
  5015 ;;  sign1           1   35[BANK0 ] unsigned char 
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  4   26[BANK0 ] long 
  5018 ;; Registers used:
  5019 ;;		wreg, status,2, status,0
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5025 ;;      Params:         0       4       0       0       0
  5026 ;;      Locals:         0       2       0       0       0
  5027 ;;      Temps:          0       5       0       0       0
  5028 ;;      Totals:         0      11       0       0       0
  5029 ;;Total ram usage:       11 bytes
  5030 ;; Hardware stack levels used:    1
  5031 ;; This function calls:
  5032 ;;		Nothing
  5033 ;; This function is called by:
  5034 ;;		_ftoa
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           
  5039                           ;psect for function ___fltol
  5040  1505                     ___fltol:
  5041  1505                     l2274:	
  5042                           ;incstack = 0
  5043                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5044                           
  5045  1505  1003               	clrc
  5046  1506  1283               	bcf	3,5	;RP0=0, select bank0
  5047  1507  1303               	bcf	3,6	;RP1=0, select bank0
  5048  1508  0D3C               	rlf	___fltol@f1+2,w
  5049  1509  0D3D               	rlf	___fltol@f1+3,w
  5050  150A  00BE               	movwf	??___fltol
  5051  150B  083E               	movf	??___fltol,w
  5052  150C  00C4               	movwf	___fltol@exp1
  5053  150D  0844               	movf	___fltol@exp1,w
  5054  150E  1D03               	btfss	3,2
  5055  150F  2D11               	goto	u2951
  5056  1510  2D12               	goto	u2950
  5057  1511                     u2951:
  5058  1511  2D1B               	goto	l2280
  5059  1512                     u2950:
  5060  1512                     l2276:
  5061  1512  3000               	movlw	0
  5062  1513  00BD               	movwf	?___fltol+3
  5063  1514  3000               	movlw	0
  5064  1515  00BC               	movwf	?___fltol+2
  5065  1516  3000               	movlw	0
  5066  1517  00BB               	movwf	?___fltol+1
  5067  1518  3000               	movlw	0
  5068  1519  00BA               	movwf	?___fltol
  5069  151A  2D80               	goto	l459
  5070  151B                     l2280:
  5071  151B  083A               	movf	___fltol@f1,w
  5072  151C  00BE               	movwf	??___fltol
  5073  151D  083B               	movf	___fltol@f1+1,w
  5074  151E  00BF               	movwf	??___fltol+1
  5075  151F  083C               	movf	___fltol@f1+2,w
  5076  1520  00C0               	movwf	??___fltol+2
  5077  1521  083D               	movf	___fltol@f1+3,w
  5078  1522  00C1               	movwf	??___fltol+3
  5079  1523  301F               	movlw	31
  5080  1524                     u2965:
  5081  1524  1003               	clrc
  5082  1525  0CC1               	rrf	??___fltol+3,f
  5083  1526  0CC0               	rrf	??___fltol+2,f
  5084  1527  0CBF               	rrf	??___fltol+1,f
  5085  1528  0CBE               	rrf	??___fltol,f
  5086  1529                     u2960:
  5087  1529  3EFF               	addlw	-1
  5088  152A  1D03               	skipz
  5089  152B  2D24               	goto	u2965
  5090  152C  083E               	movf	??___fltol,w
  5091  152D  00C2               	movwf	??___fltol+4
  5092  152E  0842               	movf	??___fltol+4,w
  5093  152F  00C3               	movwf	___fltol@sign1
  5094  1530                     l2282:
  5095  1530  17BC               	bsf	___fltol@f1+2,7
  5096  1531                     l2284:
  5097  1531  30FF               	movlw	255
  5098  1532  05BA               	andwf	___fltol@f1,f
  5099  1533  30FF               	movlw	255
  5100  1534  05BB               	andwf	___fltol@f1+1,f
  5101  1535  30FF               	movlw	255
  5102  1536  05BC               	andwf	___fltol@f1+2,f
  5103  1537  3000               	movlw	0
  5104  1538  05BD               	andwf	___fltol@f1+3,f
  5105  1539                     l2286:
  5106  1539  3096               	movlw	150
  5107  153A  02C4               	subwf	___fltol@exp1,f
  5108  153B                     l2288:
  5109  153B  1FC4               	btfss	___fltol@exp1,7
  5110  153C  2D3E               	goto	u2971
  5111  153D  2D3F               	goto	u2970
  5112  153E                     u2971:
  5113  153E  2D59               	goto	l2298
  5114  153F                     u2970:
  5115  153F                     l2290:
  5116  153F  0844               	movf	___fltol@exp1,w
  5117  1540  3A80               	xorlw	128
  5118  1541  3E97               	addlw	151
  5119  1542  1803               	skipnc
  5120  1543  2D45               	goto	u2981
  5121  1544  2D46               	goto	u2980
  5122  1545                     u2981:
  5123  1545  2D47               	goto	l2296
  5124  1546                     u2980:
  5125  1546  2D12               	goto	l2276
  5126  1547                     l2296:
  5127  1547  3001               	movlw	1
  5128  1548                     u2995:
  5129  1548  1003               	clrc
  5130  1549  0CBD               	rrf	___fltol@f1+3,f
  5131  154A  0CBC               	rrf	___fltol@f1+2,f
  5132  154B  0CBB               	rrf	___fltol@f1+1,f
  5133  154C  0CBA               	rrf	___fltol@f1,f
  5134  154D  3EFF               	addlw	-1
  5135  154E  1D03               	skipz
  5136  154F  2D48               	goto	u2995
  5137  1550  3001               	movlw	1
  5138  1551  00BE               	movwf	??___fltol
  5139  1552  083E               	movf	??___fltol,w
  5140  1553  07C4               	addwf	___fltol@exp1,f
  5141  1554  1D03               	btfss	3,2
  5142  1555  2D57               	goto	u3001
  5143  1556  2D58               	goto	u3000
  5144  1557                     u3001:
  5145  1557  2D47               	goto	l2296
  5146  1558                     u3000:
  5147  1558  2D70               	goto	l2306
  5148  1559                     l2298:
  5149  1559  3020               	movlw	32
  5150  155A  0244               	subwf	___fltol@exp1,w
  5151  155B  1C03               	skipc
  5152  155C  2D5E               	goto	u3011
  5153  155D  2D5F               	goto	u3010
  5154  155E                     u3011:
  5155  155E  2D6B               	goto	l466
  5156  155F                     u3010:
  5157  155F  2D12               	goto	l2276
  5158  1560                     l2304:
  5159  1560  3001               	movlw	1
  5160  1561  00BE               	movwf	??___fltol
  5161  1562                     u3025:
  5162  1562  1003               	clrc
  5163  1563  0DBA               	rlf	___fltol@f1,f
  5164  1564  0DBB               	rlf	___fltol@f1+1,f
  5165  1565  0DBC               	rlf	___fltol@f1+2,f
  5166  1566  0DBD               	rlf	___fltol@f1+3,f
  5167  1567  0BBE               	decfsz	??___fltol,f
  5168  1568  2D62               	goto	u3025
  5169  1569  3001               	movlw	1
  5170  156A  02C4               	subwf	___fltol@exp1,f
  5171  156B                     l466:
  5172  156B  0844               	movf	___fltol@exp1,w
  5173  156C  1D03               	btfss	3,2
  5174  156D  2D6F               	goto	u3031
  5175  156E  2D70               	goto	u3030
  5176  156F                     u3031:
  5177  156F  2D60               	goto	l2304
  5178  1570                     u3030:
  5179  1570                     l2306:
  5180  1570  0843               	movf	___fltol@sign1,w
  5181  1571  1903               	btfsc	3,2
  5182  1572  2D74               	goto	u3041
  5183  1573  2D75               	goto	u3040
  5184  1574                     u3041:
  5185  1574  2D80               	goto	l469
  5186  1575                     u3040:
  5187  1575                     l2308:
  5188  1575  09BA               	comf	___fltol@f1,f
  5189  1576  09BB               	comf	___fltol@f1+1,f
  5190  1577  09BC               	comf	___fltol@f1+2,f
  5191  1578  09BD               	comf	___fltol@f1+3,f
  5192  1579  0ABA               	incf	___fltol@f1,f
  5193  157A  1903               	skipnz
  5194  157B  0ABB               	incf	___fltol@f1+1,f
  5195  157C  1903               	skipnz
  5196  157D  0ABC               	incf	___fltol@f1+2,f
  5197  157E  1903               	skipnz
  5198  157F  0ABD               	incf	___fltol@f1+3,f
  5199  1580                     l469:
  5200  1580                     l459:
  5201  1580  0008               	return
  5202  1581                     __end_of___fltol:
  5203                           
  5204                           	psect	text14
  5205  133E                     __ptext14:	
  5206 ;; *************** function ___flsub *****************
  5207 ;; Defined at:
  5208 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  a               4   46[BANK0 ] long 
  5211 ;;  b               4   50[BANK0 ] long 
  5212 ;; Auto vars:     Size  Location     Type
  5213 ;;		None
  5214 ;; Return value:  Size  Location     Type
  5215 ;;                  4   46[BANK0 ] long 
  5216 ;; Registers used:
  5217 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5223 ;;      Params:         0       8       0       0       0
  5224 ;;      Locals:         0       0       0       0       0
  5225 ;;      Temps:          0       0       0       0       0
  5226 ;;      Totals:         0       8       0       0       0
  5227 ;;Total ram usage:        8 bytes
  5228 ;; Hardware stack levels used:    1
  5229 ;; Hardware stack levels required when called:    1
  5230 ;; This function calls:
  5231 ;;		___fladd
  5232 ;; This function is called by:
  5233 ;;		_ftoa
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237                           
  5238                           ;psect for function ___flsub
  5239  133E                     ___flsub:
  5240  133E                     l2310:	
  5241                           ;incstack = 0
  5242                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5243                           
  5244  133E  3080               	movlw	128
  5245  133F  1283               	bcf	3,5	;RP0=0, select bank0
  5246  1340  1303               	bcf	3,6	;RP1=0, select bank0
  5247  1341  06D1               	xorwf	___flsub@a+3,f
  5248  1342                     l2312:
  5249  1342  0855               	movf	___flsub@b+3,w
  5250  1343  00BD               	movwf	___fladd@b+3
  5251  1344  0854               	movf	___flsub@b+2,w
  5252  1345  00BC               	movwf	___fladd@b+2
  5253  1346  0853               	movf	___flsub@b+1,w
  5254  1347  00BB               	movwf	___fladd@b+1
  5255  1348  0852               	movf	___flsub@b,w
  5256  1349  00BA               	movwf	___fladd@b
  5257  134A  0851               	movf	___flsub@a+3,w
  5258  134B  00C1               	movwf	___fladd@a+3
  5259  134C  0850               	movf	___flsub@a+2,w
  5260  134D  00C0               	movwf	___fladd@a+2
  5261  134E  084F               	movf	___flsub@a+1,w
  5262  134F  00BF               	movwf	___fladd@a+1
  5263  1350  084E               	movf	___flsub@a,w
  5264  1351  00BE               	movwf	___fladd@a
  5265  1352  120A  158A  2578  160A  118A  	fcall	___fladd
  5266  1357  1283               	bcf	3,5	;RP0=0, select bank0
  5267  1358  1303               	bcf	3,6	;RP1=0, select bank0
  5268  1359  083D               	movf	?___fladd+3,w
  5269  135A  00D1               	movwf	?___flsub+3
  5270  135B  083C               	movf	?___fladd+2,w
  5271  135C  00D0               	movwf	?___flsub+2
  5272  135D  083B               	movf	?___fladd+1,w
  5273  135E  00CF               	movwf	?___flsub+1
  5274  135F  083A               	movf	?___fladd,w
  5275  1360  00CE               	movwf	?___flsub
  5276  1361                     l612:
  5277  1361  0008               	return
  5278  1362                     __end_of___flsub:
  5279                           
  5280                           	psect	text15
  5281  0D78                     __ptext15:	
  5282 ;; *************** function ___fladd *****************
  5283 ;; Defined at:
  5284 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;  b               4   26[BANK0 ] long 
  5287 ;;  a               4   30[BANK0 ] long 
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;  grs             1   45[BANK0 ] unsigned char 
  5290 ;;  bexp            1   44[BANK0 ] unsigned char 
  5291 ;;  aexp            1   43[BANK0 ] unsigned char 
  5292 ;;  signs           1   42[BANK0 ] unsigned char 
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  4   26[BANK0 ] unsigned char 
  5295 ;; Registers used:
  5296 ;;		wreg, status,2, status,0, btemp+1
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5302 ;;      Params:         0       8       0       0       0
  5303 ;;      Locals:         0       4       0       0       0
  5304 ;;      Temps:          0       8       0       0       0
  5305 ;;      Totals:         0      20       0       0       0
  5306 ;;Total ram usage:       20 bytes
  5307 ;; Hardware stack levels used:    1
  5308 ;; This function calls:
  5309 ;;		Nothing
  5310 ;; This function is called by:
  5311 ;;		_readMPU
  5312 ;;		___flsub
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316                           
  5317                           ;psect for function ___fladd
  5318  0D78                     ___fladd:
  5319  0D78                     l1994:	
  5320                           ;incstack = 0
  5321                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5322                           
  5323  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  5324  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  5325  0D7A  083D               	movf	___fladd@b+3,w
  5326  0D7B  3980               	andlw	128
  5327  0D7C  00C2               	movwf	??___fladd
  5328  0D7D  0842               	movf	??___fladd,w
  5329  0D7E  00CA               	movwf	___fladd@signs
  5330  0D7F                     l1996:
  5331  0D7F  083D               	movf	___fladd@b+3,w
  5332  0D80  00C2               	movwf	??___fladd
  5333  0D81  0742               	addwf	??___fladd,w
  5334  0D82  00C3               	movwf	??___fladd+1
  5335  0D83  0843               	movf	??___fladd+1,w
  5336  0D84  00CC               	movwf	___fladd@bexp
  5337  0D85                     l1998:
  5338  0D85  1FBC               	btfss	___fladd@b+2,7
  5339  0D86  2D88               	goto	u2321
  5340  0D87  2D89               	goto	u2320
  5341  0D88                     u2321:
  5342  0D88  2D8A               	goto	l2002
  5343  0D89                     u2320:
  5344  0D89                     l2000:
  5345  0D89  144C               	bsf	___fladd@bexp,0
  5346  0D8A                     l2002:
  5347  0D8A  084C               	movf	___fladd@bexp,w
  5348  0D8B  1903               	btfsc	3,2
  5349  0D8C  2D8E               	goto	u2331
  5350  0D8D  2D8F               	goto	u2330
  5351  0D8E                     u2331:
  5352  0D8E  2D9F               	goto	l2012
  5353  0D8F                     u2330:
  5354  0D8F                     l2004:
  5355  0D8F  0A4C               	incf	___fladd@bexp,w
  5356  0D90  1D03               	btfss	3,2
  5357  0D91  2D93               	goto	u2341
  5358  0D92  2D94               	goto	u2340
  5359  0D93                     u2341:
  5360  0D93  2D9C               	goto	l2008
  5361  0D94                     u2340:
  5362  0D94                     l2006:
  5363  0D94  3000               	movlw	0
  5364  0D95  00BD               	movwf	___fladd@b+3
  5365  0D96  3000               	movlw	0
  5366  0D97  00BC               	movwf	___fladd@b+2
  5367  0D98  3000               	movlw	0
  5368  0D99  00BB               	movwf	___fladd@b+1
  5369  0D9A  3000               	movlw	0
  5370  0D9B  00BA               	movwf	___fladd@b
  5371  0D9C                     l2008:
  5372  0D9C  17BC               	bsf	___fladd@b+2,7
  5373  0D9D                     l2010:
  5374  0D9D  01BD               	clrf	___fladd@b+3
  5375  0D9E  2DA7               	goto	l2014
  5376  0D9F                     l2012:
  5377  0D9F  3000               	movlw	0
  5378  0DA0  00BD               	movwf	___fladd@b+3
  5379  0DA1  3000               	movlw	0
  5380  0DA2  00BC               	movwf	___fladd@b+2
  5381  0DA3  3000               	movlw	0
  5382  0DA4  00BB               	movwf	___fladd@b+1
  5383  0DA5  3000               	movlw	0
  5384  0DA6  00BA               	movwf	___fladd@b
  5385  0DA7                     l2014:
  5386  0DA7  0841               	movf	___fladd@a+3,w
  5387  0DA8  3980               	andlw	128
  5388  0DA9  00C2               	movwf	??___fladd
  5389  0DAA  0842               	movf	??___fladd,w
  5390  0DAB  00CB               	movwf	___fladd@aexp
  5391  0DAC                     l2016:
  5392  0DAC  084B               	movf	___fladd@aexp,w
  5393  0DAD  064A               	xorwf	___fladd@signs,w
  5394  0DAE  1903               	skipnz
  5395  0DAF  2DB1               	goto	u2351
  5396  0DB0  2DB2               	goto	u2350
  5397  0DB1                     u2351:
  5398  0DB1  2DB3               	goto	l2020
  5399  0DB2                     u2350:
  5400  0DB2                     l2018:
  5401  0DB2  174A               	bsf	___fladd@signs,6
  5402  0DB3                     l2020:
  5403  0DB3  0841               	movf	___fladd@a+3,w
  5404  0DB4  00C2               	movwf	??___fladd
  5405  0DB5  0742               	addwf	??___fladd,w
  5406  0DB6  00C3               	movwf	??___fladd+1
  5407  0DB7  0843               	movf	??___fladd+1,w
  5408  0DB8  00CB               	movwf	___fladd@aexp
  5409  0DB9                     l2022:
  5410  0DB9  1FC0               	btfss	___fladd@a+2,7
  5411  0DBA  2DBC               	goto	u2361
  5412  0DBB  2DBD               	goto	u2360
  5413  0DBC                     u2361:
  5414  0DBC  2DBE               	goto	l2026
  5415  0DBD                     u2360:
  5416  0DBD                     l2024:
  5417  0DBD  144B               	bsf	___fladd@aexp,0
  5418  0DBE                     l2026:
  5419  0DBE  084B               	movf	___fladd@aexp,w
  5420  0DBF  1903               	btfsc	3,2
  5421  0DC0  2DC2               	goto	u2371
  5422  0DC1  2DC3               	goto	u2370
  5423  0DC2                     u2371:
  5424  0DC2  2DD3               	goto	l2036
  5425  0DC3                     u2370:
  5426  0DC3                     l2028:
  5427  0DC3  0A4B               	incf	___fladd@aexp,w
  5428  0DC4  1D03               	btfss	3,2
  5429  0DC5  2DC7               	goto	u2381
  5430  0DC6  2DC8               	goto	u2380
  5431  0DC7                     u2381:
  5432  0DC7  2DD0               	goto	l2032
  5433  0DC8                     u2380:
  5434  0DC8                     l2030:
  5435  0DC8  3000               	movlw	0
  5436  0DC9  00C1               	movwf	___fladd@a+3
  5437  0DCA  3000               	movlw	0
  5438  0DCB  00C0               	movwf	___fladd@a+2
  5439  0DCC  3000               	movlw	0
  5440  0DCD  00BF               	movwf	___fladd@a+1
  5441  0DCE  3000               	movlw	0
  5442  0DCF  00BE               	movwf	___fladd@a
  5443  0DD0                     l2032:
  5444  0DD0  17C0               	bsf	___fladd@a+2,7
  5445  0DD1                     l2034:
  5446  0DD1  01C1               	clrf	___fladd@a+3
  5447  0DD2  2DDB               	goto	l566
  5448  0DD3                     l2036:
  5449  0DD3  3000               	movlw	0
  5450  0DD4  00C1               	movwf	___fladd@a+3
  5451  0DD5  3000               	movlw	0
  5452  0DD6  00C0               	movwf	___fladd@a+2
  5453  0DD7  3000               	movlw	0
  5454  0DD8  00BF               	movwf	___fladd@a+1
  5455  0DD9  3000               	movlw	0
  5456  0DDA  00BE               	movwf	___fladd@a
  5457  0DDB                     l566:
  5458  0DDB  084C               	movf	___fladd@bexp,w
  5459  0DDC  024B               	subwf	___fladd@aexp,w
  5460  0DDD  1803               	skipnc
  5461  0DDE  2DE0               	goto	u2391
  5462  0DDF  2DE1               	goto	u2390
  5463  0DE0                     u2391:
  5464  0DE0  2E25               	goto	l2072
  5465  0DE1                     u2390:
  5466  0DE1                     l2038:
  5467  0DE1  1F4A               	btfss	___fladd@signs,6
  5468  0DE2  2DE4               	goto	u2401
  5469  0DE3  2DE5               	goto	u2400
  5470  0DE4                     u2401:
  5471  0DE4  2DE9               	goto	l2042
  5472  0DE5                     u2400:
  5473  0DE5                     l2040:
  5474  0DE5  3080               	movlw	128
  5475  0DE6  00C2               	movwf	??___fladd
  5476  0DE7  0842               	movf	??___fladd,w
  5477  0DE8  06CA               	xorwf	___fladd@signs,f
  5478  0DE9                     l2042:
  5479  0DE9  084C               	movf	___fladd@bexp,w
  5480  0DEA  00C2               	movwf	??___fladd
  5481  0DEB  0842               	movf	??___fladd,w
  5482  0DEC  00CD               	movwf	___fladd@grs
  5483  0DED                     l2044:
  5484  0DED  084B               	movf	___fladd@aexp,w
  5485  0DEE  00C2               	movwf	??___fladd
  5486  0DEF  0842               	movf	??___fladd,w
  5487  0DF0  00CC               	movwf	___fladd@bexp
  5488  0DF1                     l2046:
  5489  0DF1  084D               	movf	___fladd@grs,w
  5490  0DF2  00C2               	movwf	??___fladd
  5491  0DF3  0842               	movf	??___fladd,w
  5492  0DF4  00CB               	movwf	___fladd@aexp
  5493  0DF5                     l2048:
  5494  0DF5  083A               	movf	___fladd@b,w
  5495  0DF6  00C2               	movwf	??___fladd
  5496  0DF7  0842               	movf	??___fladd,w
  5497  0DF8  00CD               	movwf	___fladd@grs
  5498  0DF9                     l2050:
  5499  0DF9  083E               	movf	___fladd@a,w
  5500  0DFA  00C2               	movwf	??___fladd
  5501  0DFB  0842               	movf	??___fladd,w
  5502  0DFC  00BA               	movwf	___fladd@b
  5503  0DFD                     l2052:
  5504  0DFD  084D               	movf	___fladd@grs,w
  5505  0DFE  00C2               	movwf	??___fladd
  5506  0DFF  0842               	movf	??___fladd,w
  5507  0E00  00BE               	movwf	___fladd@a
  5508  0E01                     l2054:
  5509  0E01  083B               	movf	___fladd@b+1,w
  5510  0E02  00C2               	movwf	??___fladd
  5511  0E03  0842               	movf	??___fladd,w
  5512  0E04  00CD               	movwf	___fladd@grs
  5513  0E05                     l2056:
  5514  0E05  083F               	movf	___fladd@a+1,w
  5515  0E06  00C2               	movwf	??___fladd
  5516  0E07  0842               	movf	??___fladd,w
  5517  0E08  00BB               	movwf	___fladd@b+1
  5518  0E09                     l2058:
  5519  0E09  084D               	movf	___fladd@grs,w
  5520  0E0A  00C2               	movwf	??___fladd
  5521  0E0B  0842               	movf	??___fladd,w
  5522  0E0C  00BF               	movwf	___fladd@a+1
  5523  0E0D                     l2060:
  5524  0E0D  083C               	movf	___fladd@b+2,w
  5525  0E0E  00C2               	movwf	??___fladd
  5526  0E0F  0842               	movf	??___fladd,w
  5527  0E10  00CD               	movwf	___fladd@grs
  5528  0E11                     l2062:
  5529  0E11  0840               	movf	___fladd@a+2,w
  5530  0E12  00C2               	movwf	??___fladd
  5531  0E13  0842               	movf	??___fladd,w
  5532  0E14  00BC               	movwf	___fladd@b+2
  5533  0E15                     l2064:
  5534  0E15  084D               	movf	___fladd@grs,w
  5535  0E16  00C2               	movwf	??___fladd
  5536  0E17  0842               	movf	??___fladd,w
  5537  0E18  00C0               	movwf	___fladd@a+2
  5538  0E19                     l2066:
  5539  0E19  083D               	movf	___fladd@b+3,w
  5540  0E1A  00C2               	movwf	??___fladd
  5541  0E1B  0842               	movf	??___fladd,w
  5542  0E1C  00CD               	movwf	___fladd@grs
  5543  0E1D                     l2068:
  5544  0E1D  0841               	movf	___fladd@a+3,w
  5545  0E1E  00C2               	movwf	??___fladd
  5546  0E1F  0842               	movf	??___fladd,w
  5547  0E20  00BD               	movwf	___fladd@b+3
  5548  0E21                     l2070:
  5549  0E21  084D               	movf	___fladd@grs,w
  5550  0E22  00C2               	movwf	??___fladd
  5551  0E23  0842               	movf	??___fladd,w
  5552  0E24  00C1               	movwf	___fladd@a+3
  5553  0E25                     l2072:
  5554  0E25  01CD               	clrf	___fladd@grs
  5555  0E26                     l2074:
  5556  0E26  084B               	movf	___fladd@aexp,w
  5557  0E27  00C2               	movwf	??___fladd
  5558  0E28  01C3               	clrf	??___fladd+1
  5559  0E29  0843               	movf	??___fladd+1,w
  5560  0E2A  00C5               	movwf	??___fladd+3
  5561  0E2B  084C               	movf	___fladd@bexp,w
  5562  0E2C  0242               	subwf	??___fladd,w
  5563  0E2D  00C4               	movwf	??___fladd+2
  5564  0E2E  1C03               	skipc
  5565  0E2F  03C5               	decf	??___fladd+3,f
  5566  0E30  0845               	movf	??___fladd+3,w
  5567  0E31  3A80               	xorlw	128
  5568  0E32  00FF               	movwf	btemp+1
  5569  0E33  3080               	movlw	128
  5570  0E34  027F               	subwf	btemp+1,w
  5571  0E35  1D03               	skipz
  5572  0E36  2E39               	goto	u2415
  5573  0E37  301A               	movlw	26
  5574  0E38  0244               	subwf	??___fladd+2,w
  5575  0E39                     u2415:
  5576  0E39  1C03               	skipc
  5577  0E3A  2E3C               	goto	u2411
  5578  0E3B  2E3D               	goto	u2410
  5579  0E3C                     u2411:
  5580  0E3C  2E7A               	goto	l2090
  5581  0E3D                     u2410:
  5582  0E3D                     l2076:
  5583  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5584  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5585  0E3F  083D               	movf	___fladd@b+3,w
  5586  0E40  043C               	iorwf	___fladd@b+2,w
  5587  0E41  043B               	iorwf	___fladd@b+1,w
  5588  0E42  043A               	iorwf	___fladd@b,w
  5589  0E43  1D03               	skipz
  5590  0E44  2E46               	goto	u2421
  5591  0E45  2E48               	goto	u2420
  5592  0E46                     u2421:
  5593  0E46  3001               	movlw	1
  5594  0E47  2E49               	goto	u2430
  5595  0E48                     u2420:
  5596  0E48  3000               	movlw	0
  5597  0E49                     u2430:
  5598  0E49  00C2               	movwf	??___fladd
  5599  0E4A  0842               	movf	??___fladd,w
  5600  0E4B  00CD               	movwf	___fladd@grs
  5601  0E4C  3000               	movlw	0
  5602  0E4D  00BD               	movwf	___fladd@b+3
  5603  0E4E  3000               	movlw	0
  5604  0E4F  00BC               	movwf	___fladd@b+2
  5605  0E50  3000               	movlw	0
  5606  0E51  00BB               	movwf	___fladd@b+1
  5607  0E52  3000               	movlw	0
  5608  0E53  00BA               	movwf	___fladd@b
  5609  0E54  084B               	movf	___fladd@aexp,w
  5610  0E55  00C2               	movwf	??___fladd
  5611  0E56  0842               	movf	??___fladd,w
  5612  0E57  00CC               	movwf	___fladd@bexp
  5613  0E58  2E82               	goto	l570
  5614  0E59                     l572:
  5615  0E59  1C4D               	btfss	___fladd@grs,0
  5616  0E5A  2E5C               	goto	u2441
  5617  0E5B  2E5D               	goto	u2440
  5618  0E5C                     u2441:
  5619  0E5C  2E66               	goto	l2080
  5620  0E5D                     u2440:
  5621  0E5D                     l2078:
  5622  0E5D  084D               	movf	___fladd@grs,w
  5623  0E5E  00C2               	movwf	??___fladd
  5624  0E5F  1003               	clrc
  5625  0E60  0C42               	rrf	??___fladd,w
  5626  0E61  3801               	iorlw	1
  5627  0E62  00C3               	movwf	??___fladd+1
  5628  0E63  0843               	movf	??___fladd+1,w
  5629  0E64  00CD               	movwf	___fladd@grs
  5630  0E65  2E68               	goto	l2082
  5631  0E66                     l2080:
  5632  0E66  1003               	clrc
  5633  0E67  0CCD               	rrf	___fladd@grs,f
  5634  0E68                     l2082:
  5635  0E68  1C3A               	btfss	___fladd@b,0
  5636  0E69  2E6B               	goto	u2451
  5637  0E6A  2E6C               	goto	u2450
  5638  0E6B                     u2451:
  5639  0E6B  2E6D               	goto	l2086
  5640  0E6C                     u2450:
  5641  0E6C                     l2084:
  5642  0E6C  17CD               	bsf	___fladd@grs,7
  5643  0E6D                     l2086:
  5644  0E6D  3001               	movlw	1
  5645  0E6E  00C2               	movwf	??___fladd
  5646  0E6F                     u2465:
  5647  0E6F  0D3D               	rlf	___fladd@b+3,w
  5648  0E70  0CBD               	rrf	___fladd@b+3,f
  5649  0E71  0CBC               	rrf	___fladd@b+2,f
  5650  0E72  0CBB               	rrf	___fladd@b+1,f
  5651  0E73  0CBA               	rrf	___fladd@b,f
  5652  0E74  0BC2               	decfsz	??___fladd& (0+127),f
  5653  0E75  2E6F               	goto	u2465
  5654  0E76                     l2088:
  5655  0E76  3001               	movlw	1
  5656  0E77  00C2               	movwf	??___fladd
  5657  0E78  0842               	movf	??___fladd,w
  5658  0E79  07CC               	addwf	___fladd@bexp,f
  5659  0E7A                     l2090:
  5660  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  5661  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  5662  0E7C  084B               	movf	___fladd@aexp,w
  5663  0E7D  024C               	subwf	___fladd@bexp,w
  5664  0E7E  1C03               	skipc
  5665  0E7F  2E81               	goto	u2471
  5666  0E80  2E82               	goto	u2470
  5667  0E81                     u2471:
  5668  0E81  2E59               	goto	l572
  5669  0E82                     u2470:
  5670  0E82                     l570:
  5671  0E82  1B4A               	btfsc	___fladd@signs,6
  5672  0E83  2E85               	goto	u2481
  5673  0E84  2E86               	goto	u2480
  5674  0E85                     u2481:
  5675  0E85  2ED1               	goto	l2116
  5676  0E86                     u2480:
  5677  0E86                     l2092:
  5678  0E86  084C               	movf	___fladd@bexp,w
  5679  0E87  1D03               	btfss	3,2
  5680  0E88  2E8A               	goto	u2491
  5681  0E89  2E8B               	goto	u2490
  5682  0E8A                     u2491:
  5683  0E8A  2E94               	goto	l2098
  5684  0E8B                     u2490:
  5685  0E8B                     l2094:
  5686  0E8B  3000               	movlw	0
  5687  0E8C  00BD               	movwf	?___fladd+3
  5688  0E8D  3000               	movlw	0
  5689  0E8E  00BC               	movwf	?___fladd+2
  5690  0E8F  3000               	movlw	0
  5691  0E90  00BB               	movwf	?___fladd+1
  5692  0E91  3000               	movlw	0
  5693  0E92  00BA               	movwf	?___fladd
  5694  0E93  2FFF               	goto	l579
  5695  0E94                     l2098:
  5696  0E94  083E               	movf	___fladd@a,w
  5697  0E95  07BA               	addwf	___fladd@b,f
  5698  0E96  083F               	movf	___fladd@a+1,w
  5699  0E97  1103               	clrz
  5700  0E98  1803               	skipnc
  5701  0E99  3E01               	addlw	1
  5702  0E9A  1903               	skipnz
  5703  0E9B  2E9D               	goto	u2501
  5704  0E9C  07BB               	addwf	___fladd@b+1,f
  5705  0E9D                     u2501:
  5706  0E9D  0840               	movf	___fladd@a+2,w
  5707  0E9E  1103               	clrz
  5708  0E9F  1803               	skipnc
  5709  0EA0  3E01               	addlw	1
  5710  0EA1  1903               	skipnz
  5711  0EA2  2EA4               	goto	u2502
  5712  0EA3  07BC               	addwf	___fladd@b+2,f
  5713  0EA4                     u2502:
  5714  0EA4  0841               	movf	___fladd@a+3,w
  5715  0EA5  1103               	clrz
  5716  0EA6  1803               	skipnc
  5717  0EA7  3E01               	addlw	1
  5718  0EA8  1903               	skipnz
  5719  0EA9  2EAB               	goto	u2503
  5720  0EAA  07BD               	addwf	___fladd@b+3,f
  5721  0EAB                     u2503:
  5722  0EAB                     l2100:
  5723  0EAB  1C3D               	btfss	___fladd@b+3,0
  5724  0EAC  2EAE               	goto	u2511
  5725  0EAD  2EAF               	goto	u2510
  5726  0EAE                     u2511:
  5727  0EAE  2F85               	goto	l2150
  5728  0EAF                     u2510:
  5729  0EAF                     l2102:
  5730  0EAF  1C4D               	btfss	___fladd@grs,0
  5731  0EB0  2EB2               	goto	u2521
  5732  0EB1  2EB3               	goto	u2520
  5733  0EB2                     u2521:
  5734  0EB2  2EBC               	goto	l2106
  5735  0EB3                     u2520:
  5736  0EB3                     l2104:
  5737  0EB3  084D               	movf	___fladd@grs,w
  5738  0EB4  00C2               	movwf	??___fladd
  5739  0EB5  1003               	clrc
  5740  0EB6  0C42               	rrf	??___fladd,w
  5741  0EB7  3801               	iorlw	1
  5742  0EB8  00C3               	movwf	??___fladd+1
  5743  0EB9  0843               	movf	??___fladd+1,w
  5744  0EBA  00CD               	movwf	___fladd@grs
  5745  0EBB  2EBE               	goto	l2108
  5746  0EBC                     l2106:
  5747  0EBC  1003               	clrc
  5748  0EBD  0CCD               	rrf	___fladd@grs,f
  5749  0EBE                     l2108:
  5750  0EBE  1C3A               	btfss	___fladd@b,0
  5751  0EBF  2EC1               	goto	u2531
  5752  0EC0  2EC2               	goto	u2530
  5753  0EC1                     u2531:
  5754  0EC1  2EC3               	goto	l2112
  5755  0EC2                     u2530:
  5756  0EC2                     l2110:
  5757  0EC2  17CD               	bsf	___fladd@grs,7
  5758  0EC3                     l2112:
  5759  0EC3  3001               	movlw	1
  5760  0EC4  00C2               	movwf	??___fladd
  5761  0EC5                     u2545:
  5762  0EC5  0D3D               	rlf	___fladd@b+3,w
  5763  0EC6  0CBD               	rrf	___fladd@b+3,f
  5764  0EC7  0CBC               	rrf	___fladd@b+2,f
  5765  0EC8  0CBB               	rrf	___fladd@b+1,f
  5766  0EC9  0CBA               	rrf	___fladd@b,f
  5767  0ECA  0BC2               	decfsz	??___fladd& (0+127),f
  5768  0ECB  2EC5               	goto	u2545
  5769  0ECC                     l2114:
  5770  0ECC  3001               	movlw	1
  5771  0ECD  00C2               	movwf	??___fladd
  5772  0ECE  0842               	movf	??___fladd,w
  5773  0ECF  07CC               	addwf	___fladd@bexp,f
  5774  0ED0  2F85               	goto	l2150
  5775  0ED1                     l2116:
  5776  0ED1  083D               	movf	___fladd@b+3,w
  5777  0ED2  3A80               	xorlw	128
  5778  0ED3  00FF               	movwf	btemp+1
  5779  0ED4  0841               	movf	___fladd@a+3,w
  5780  0ED5  3A80               	xorlw	128
  5781  0ED6  027F               	subwf	btemp+1,w
  5782  0ED7  1D03               	skipz
  5783  0ED8  2EE3               	goto	u2553
  5784  0ED9  0840               	movf	___fladd@a+2,w
  5785  0EDA  023C               	subwf	___fladd@b+2,w
  5786  0EDB  1D03               	skipz
  5787  0EDC  2EE3               	goto	u2553
  5788  0EDD  083F               	movf	___fladd@a+1,w
  5789  0EDE  023B               	subwf	___fladd@b+1,w
  5790  0EDF  1D03               	skipz
  5791  0EE0  2EE3               	goto	u2553
  5792  0EE1  083E               	movf	___fladd@a,w
  5793  0EE2  023A               	subwf	___fladd@b,w
  5794  0EE3                     u2553:
  5795  0EE3  1803               	skipnc
  5796  0EE4  2EE6               	goto	u2551
  5797  0EE5  2EE7               	goto	u2550
  5798  0EE6                     u2551:
  5799  0EE6  2F3F               	goto	l2126
  5800  0EE7                     u2550:
  5801  0EE7                     l2118:
  5802  0EE7  30FF               	movlw	255
  5803  0EE8  00C2               	movwf	??___fladd
  5804  0EE9  30FF               	movlw	255
  5805  0EEA  00C3               	movwf	??___fladd+1
  5806  0EEB  30FF               	movlw	255
  5807  0EEC  00C4               	movwf	??___fladd+2
  5808  0EED  30FF               	movlw	255
  5809  0EEE  00C5               	movwf	??___fladd+3
  5810  0EEF  083E               	movf	___fladd@a,w
  5811  0EF0  00C6               	movwf	??___fladd+4
  5812  0EF1  083F               	movf	___fladd@a+1,w
  5813  0EF2  00C7               	movwf	??___fladd+5
  5814  0EF3  0840               	movf	___fladd@a+2,w
  5815  0EF4  00C8               	movwf	??___fladd+6
  5816  0EF5  0841               	movf	___fladd@a+3,w
  5817  0EF6  00C9               	movwf	??___fladd+7
  5818  0EF7  083A               	movf	___fladd@b,w
  5819  0EF8  02C6               	subwf	??___fladd+4,f
  5820  0EF9  083B               	movf	___fladd@b+1,w
  5821  0EFA  1C03               	skipc
  5822  0EFB  0F3B               	incfsz	___fladd@b+1,w
  5823  0EFC  2EFE               	goto	u2561
  5824  0EFD  2EFF               	goto	u2562
  5825  0EFE                     u2561:
  5826  0EFE  02C7               	subwf	??___fladd+5,f
  5827  0EFF                     u2562:
  5828  0EFF  083C               	movf	___fladd@b+2,w
  5829  0F00  1C03               	skipc
  5830  0F01  0F3C               	incfsz	___fladd@b+2,w
  5831  0F02  2F04               	goto	u2563
  5832  0F03  2F05               	goto	u2564
  5833  0F04                     u2563:
  5834  0F04  02C8               	subwf	??___fladd+6,f
  5835  0F05                     u2564:
  5836  0F05  083D               	movf	___fladd@b+3,w
  5837  0F06  1C03               	skipc
  5838  0F07  0F3D               	incfsz	___fladd@b+3,w
  5839  0F08  2F0A               	goto	u2565
  5840  0F09  2F0B               	goto	u2566
  5841  0F0A                     u2565:
  5842  0F0A  02C9               	subwf	??___fladd+7,f
  5843  0F0B                     u2566:
  5844  0F0B  0846               	movf	??___fladd+4,w
  5845  0F0C  07C2               	addwf	??___fladd,f
  5846  0F0D  0847               	movf	??___fladd+5,w
  5847  0F0E  1803               	skipnc
  5848  0F0F  0F47               	incfsz	??___fladd+5,w
  5849  0F10  2F12               	goto	u2570
  5850  0F11  2F13               	goto	u2571
  5851  0F12                     u2570:
  5852  0F12  07C3               	addwf	??___fladd+1,f
  5853  0F13                     u2571:
  5854  0F13  0848               	movf	??___fladd+6,w
  5855  0F14  1803               	skipnc
  5856  0F15  0F48               	incfsz	??___fladd+6,w
  5857  0F16  2F18               	goto	u2572
  5858  0F17  2F19               	goto	u2573
  5859  0F18                     u2572:
  5860  0F18  07C4               	addwf	??___fladd+2,f
  5861  0F19                     u2573:
  5862  0F19  0849               	movf	??___fladd+7,w
  5863  0F1A  1803               	skipnc
  5864  0F1B  0A49               	incf	??___fladd+7,w
  5865  0F1C  07C5               	addwf	??___fladd+3,f
  5866  0F1D  0845               	movf	??___fladd+3,w
  5867  0F1E  00BD               	movwf	___fladd@b+3
  5868  0F1F  0844               	movf	??___fladd+2,w
  5869  0F20  00BC               	movwf	___fladd@b+2
  5870  0F21  0843               	movf	??___fladd+1,w
  5871  0F22  00BB               	movwf	___fladd@b+1
  5872  0F23  0842               	movf	??___fladd,w
  5873  0F24  00BA               	movwf	___fladd@b
  5874  0F25                     l2120:
  5875  0F25  3080               	movlw	128
  5876  0F26  00C2               	movwf	??___fladd
  5877  0F27  0842               	movf	??___fladd,w
  5878  0F28  06CA               	xorwf	___fladd@signs,f
  5879  0F29  09CD               	comf	___fladd@grs,f
  5880  0F2A  0ACD               	incf	___fladd@grs,f
  5881  0F2B                     l2122:
  5882  0F2B  084D               	movf	___fladd@grs,w
  5883  0F2C  1D03               	btfss	3,2
  5884  0F2D  2F2F               	goto	u2581
  5885  0F2E  2F30               	goto	u2580
  5886  0F2F                     u2581:
  5887  0F2F  2F4D               	goto	l587
  5888  0F30                     u2580:
  5889  0F30                     l2124:
  5890  0F30  3001               	movlw	1
  5891  0F31  07BA               	addwf	___fladd@b,f
  5892  0F32  3000               	movlw	0
  5893  0F33  1803               	skipnc
  5894  0F34  3001               	movlw	1
  5895  0F35  07BB               	addwf	___fladd@b+1,f
  5896  0F36  3000               	movlw	0
  5897  0F37  1803               	skipnc
  5898  0F38  3001               	movlw	1
  5899  0F39  07BC               	addwf	___fladd@b+2,f
  5900  0F3A  3000               	movlw	0
  5901  0F3B  1803               	skipnc
  5902  0F3C  3001               	movlw	1
  5903  0F3D  07BD               	addwf	___fladd@b+3,f
  5904  0F3E  2F4D               	goto	l587
  5905  0F3F                     l2126:
  5906  0F3F  083E               	movf	___fladd@a,w
  5907  0F40  02BA               	subwf	___fladd@b,f
  5908  0F41  083F               	movf	___fladd@a+1,w
  5909  0F42  1C03               	skipc
  5910  0F43  0F3F               	incfsz	___fladd@a+1,w
  5911  0F44  02BB               	subwf	___fladd@b+1,f
  5912  0F45  0840               	movf	___fladd@a+2,w
  5913  0F46  1C03               	skipc
  5914  0F47  0F40               	incfsz	___fladd@a+2,w
  5915  0F48  02BC               	subwf	___fladd@b+2,f
  5916  0F49  0841               	movf	___fladd@a+3,w
  5917  0F4A  1C03               	skipc
  5918  0F4B  0F41               	incfsz	___fladd@a+3,w
  5919  0F4C  02BD               	subwf	___fladd@b+3,f
  5920  0F4D                     l587:
  5921  0F4D  083D               	movf	___fladd@b+3,w
  5922  0F4E  043C               	iorwf	___fladd@b+2,w
  5923  0F4F  043B               	iorwf	___fladd@b+1,w
  5924  0F50  043A               	iorwf	___fladd@b,w
  5925  0F51  1D03               	skipz
  5926  0F52  2F54               	goto	u2591
  5927  0F53  2F55               	goto	u2590
  5928  0F54                     u2591:
  5929  0F54  2F81               	goto	l2148
  5930  0F55                     u2590:
  5931  0F55                     l2128:
  5932  0F55  084D               	movf	___fladd@grs,w
  5933  0F56  1D03               	btfss	3,2
  5934  0F57  2F59               	goto	u2601
  5935  0F58  2F5A               	goto	u2600
  5936  0F59                     u2601:
  5937  0F59  2F81               	goto	l2148
  5938  0F5A                     u2600:
  5939  0F5A                     l2130:
  5940  0F5A  3000               	movlw	0
  5941  0F5B  00BD               	movwf	?___fladd+3
  5942  0F5C  3000               	movlw	0
  5943  0F5D  00BC               	movwf	?___fladd+2
  5944  0F5E  3000               	movlw	0
  5945  0F5F  00BB               	movwf	?___fladd+1
  5946  0F60  3000               	movlw	0
  5947  0F61  00BA               	movwf	?___fladd
  5948  0F62  2FFF               	goto	l579
  5949  0F63                     l2134:
  5950  0F63  3001               	movlw	1
  5951  0F64  00C2               	movwf	??___fladd
  5952  0F65                     u2615:
  5953  0F65  1003               	clrc
  5954  0F66  0DBA               	rlf	___fladd@b,f
  5955  0F67  0DBB               	rlf	___fladd@b+1,f
  5956  0F68  0DBC               	rlf	___fladd@b+2,f
  5957  0F69  0DBD               	rlf	___fladd@b+3,f
  5958  0F6A  0BC2               	decfsz	??___fladd,f
  5959  0F6B  2F65               	goto	u2615
  5960  0F6C                     l2136:
  5961  0F6C  1FCD               	btfss	___fladd@grs,7
  5962  0F6D  2F6F               	goto	u2621
  5963  0F6E  2F70               	goto	u2620
  5964  0F6F                     u2621:
  5965  0F6F  2F71               	goto	l591
  5966  0F70                     u2620:
  5967  0F70                     l2138:
  5968  0F70  143A               	bsf	___fladd@b,0
  5969  0F71                     l591:
  5970  0F71  1C4D               	btfss	___fladd@grs,0
  5971  0F72  2F74               	goto	u2631
  5972  0F73  2F75               	goto	u2630
  5973  0F74                     u2631:
  5974  0F74  2F78               	goto	l2142
  5975  0F75                     u2630:
  5976  0F75                     l2140:
  5977  0F75  1403               	setc
  5978  0F76  0DCD               	rlf	___fladd@grs,f
  5979  0F77  2F7A               	goto	l2144
  5980  0F78                     l2142:
  5981  0F78  1003               	clrc
  5982  0F79  0DCD               	rlf	___fladd@grs,f
  5983  0F7A                     l2144:
  5984  0F7A  084C               	movf	___fladd@bexp,w
  5985  0F7B  1903               	btfsc	3,2
  5986  0F7C  2F7E               	goto	u2641
  5987  0F7D  2F7F               	goto	u2640
  5988  0F7E                     u2641:
  5989  0F7E  2F81               	goto	l2148
  5990  0F7F                     u2640:
  5991  0F7F                     l2146:
  5992  0F7F  3001               	movlw	1
  5993  0F80  02CC               	subwf	___fladd@bexp,f
  5994  0F81                     l2148:
  5995  0F81  1FBC               	btfss	___fladd@b+2,7
  5996  0F82  2F84               	goto	u2651
  5997  0F83  2F85               	goto	u2650
  5998  0F84                     u2651:
  5999  0F84  2F63               	goto	l2134
  6000  0F85                     u2650:
  6001  0F85                     l2150:
  6002  0F85  01CB               	clrf	___fladd@aexp
  6003  0F86                     l2152:
  6004  0F86  1FCD               	btfss	___fladd@grs,7
  6005  0F87  2F89               	goto	u2661
  6006  0F88  2F8A               	goto	u2660
  6007  0F89                     u2661:
  6008  0F89  2F98               	goto	l2160
  6009  0F8A                     u2660:
  6010  0F8A                     l2154:
  6011  0F8A  084D               	movf	___fladd@grs,w
  6012  0F8B  397F               	andlw	127
  6013  0F8C  1903               	btfsc	3,2
  6014  0F8D  2F8F               	goto	u2671
  6015  0F8E  2F90               	goto	u2670
  6016  0F8F                     u2671:
  6017  0F8F  2F93               	goto	l597
  6018  0F90                     u2670:
  6019  0F90                     l2156:
  6020  0F90  01CB               	clrf	___fladd@aexp
  6021  0F91  0ACB               	incf	___fladd@aexp,f
  6022  0F92  2F98               	goto	l2160
  6023  0F93                     l597:
  6024  0F93  1C3A               	btfss	___fladd@b,0
  6025  0F94  2F96               	goto	u2681
  6026  0F95  2F97               	goto	u2680
  6027  0F96                     u2681:
  6028  0F96  2F98               	goto	l2160
  6029  0F97                     u2680:
  6030  0F97  2F90               	goto	l2156
  6031  0F98                     l2160:
  6032  0F98  084B               	movf	___fladd@aexp,w
  6033  0F99  1903               	btfsc	3,2
  6034  0F9A  2F9C               	goto	u2691
  6035  0F9B  2F9D               	goto	u2690
  6036  0F9C                     u2691:
  6037  0F9C  2FD1               	goto	l600
  6038  0F9D                     u2690:
  6039  0F9D                     l2162:
  6040  0F9D  3001               	movlw	1
  6041  0F9E  07BA               	addwf	___fladd@b,f
  6042  0F9F  3000               	movlw	0
  6043  0FA0  1803               	skipnc
  6044  0FA1  3001               	movlw	1
  6045  0FA2  07BB               	addwf	___fladd@b+1,f
  6046  0FA3  3000               	movlw	0
  6047  0FA4  1803               	skipnc
  6048  0FA5  3001               	movlw	1
  6049  0FA6  07BC               	addwf	___fladd@b+2,f
  6050  0FA7  3000               	movlw	0
  6051  0FA8  1803               	skipnc
  6052  0FA9  3001               	movlw	1
  6053  0FAA  07BD               	addwf	___fladd@b+3,f
  6054  0FAB                     l2164:
  6055  0FAB  1C3D               	btfss	___fladd@b+3,0
  6056  0FAC  2FAE               	goto	u2701
  6057  0FAD  2FAF               	goto	u2700
  6058  0FAE                     u2701:
  6059  0FAE  2FD1               	goto	l600
  6060  0FAF                     u2700:
  6061  0FAF                     l2166:
  6062  0FAF  083A               	movf	___fladd@b,w
  6063  0FB0  00C2               	movwf	??___fladd
  6064  0FB1  083B               	movf	___fladd@b+1,w
  6065  0FB2  00C3               	movwf	??___fladd+1
  6066  0FB3  083C               	movf	___fladd@b+2,w
  6067  0FB4  00C4               	movwf	??___fladd+2
  6068  0FB5  083D               	movf	___fladd@b+3,w
  6069  0FB6  00C5               	movwf	??___fladd+3
  6070  0FB7  3001               	movlw	1
  6071  0FB8  00C6               	movwf	??___fladd+4
  6072  0FB9                     u2715:
  6073  0FB9  0D45               	rlf	??___fladd+3,w
  6074  0FBA  0CC5               	rrf	??___fladd+3,f
  6075  0FBB  0CC4               	rrf	??___fladd+2,f
  6076  0FBC  0CC3               	rrf	??___fladd+1,f
  6077  0FBD  0CC2               	rrf	??___fladd,f
  6078  0FBE                     u2710:
  6079  0FBE  0BC6               	decfsz	??___fladd+4,f
  6080  0FBF  2FB9               	goto	u2715
  6081  0FC0  0845               	movf	??___fladd+3,w
  6082  0FC1  00BD               	movwf	___fladd@b+3
  6083  0FC2  0844               	movf	??___fladd+2,w
  6084  0FC3  00BC               	movwf	___fladd@b+2
  6085  0FC4  0843               	movf	??___fladd+1,w
  6086  0FC5  00BB               	movwf	___fladd@b+1
  6087  0FC6  0842               	movf	??___fladd,w
  6088  0FC7  00BA               	movwf	___fladd@b
  6089  0FC8  0A4C               	incf	___fladd@bexp,w
  6090  0FC9  1903               	btfsc	3,2
  6091  0FCA  2FCC               	goto	u2721
  6092  0FCB  2FCD               	goto	u2720
  6093  0FCC                     u2721:
  6094  0FCC  2FD1               	goto	l600
  6095  0FCD                     u2720:
  6096  0FCD                     l2168:
  6097  0FCD  3001               	movlw	1
  6098  0FCE  00C2               	movwf	??___fladd
  6099  0FCF  0842               	movf	??___fladd,w
  6100  0FD0  07CC               	addwf	___fladd@bexp,f
  6101  0FD1                     l600:
  6102  0FD1  0A4C               	incf	___fladd@bexp,w
  6103  0FD2  1903               	btfsc	3,2
  6104  0FD3  2FD5               	goto	u2731
  6105  0FD4  2FD6               	goto	u2730
  6106  0FD5                     u2731:
  6107  0FD5  2FDB               	goto	l2172
  6108  0FD6                     u2730:
  6109  0FD6                     l2170:
  6110  0FD6  084C               	movf	___fladd@bexp,w
  6111  0FD7  1D03               	btfss	3,2
  6112  0FD8  2FDA               	goto	u2741
  6113  0FD9  2FDB               	goto	u2740
  6114  0FDA                     u2741:
  6115  0FDA  2FE9               	goto	l2178
  6116  0FDB                     u2740:
  6117  0FDB                     l2172:
  6118  0FDB  3000               	movlw	0
  6119  0FDC  00BD               	movwf	___fladd@b+3
  6120  0FDD  3000               	movlw	0
  6121  0FDE  00BC               	movwf	___fladd@b+2
  6122  0FDF  3000               	movlw	0
  6123  0FE0  00BB               	movwf	___fladd@b+1
  6124  0FE1  3000               	movlw	0
  6125  0FE2  00BA               	movwf	___fladd@b
  6126  0FE3                     l2174:
  6127  0FE3  084C               	movf	___fladd@bexp,w
  6128  0FE4  1D03               	btfss	3,2
  6129  0FE5  2FE7               	goto	u2751
  6130  0FE6  2FE8               	goto	u2750
  6131  0FE7                     u2751:
  6132  0FE7  2FE9               	goto	l2178
  6133  0FE8                     u2750:
  6134  0FE8                     l2176:
  6135  0FE8  01CA               	clrf	___fladd@signs
  6136  0FE9                     l2178:
  6137  0FE9  1C4C               	btfss	___fladd@bexp,0
  6138  0FEA  2FEC               	goto	u2761
  6139  0FEB  2FED               	goto	u2760
  6140  0FEC                     u2761:
  6141  0FEC  2FEF               	goto	l2182
  6142  0FED                     u2760:
  6143  0FED                     l2180:
  6144  0FED  17BC               	bsf	___fladd@b+2,7
  6145  0FEE  2FF3               	goto	l608
  6146  0FEF                     l2182:
  6147  0FEF  307F               	movlw	127
  6148  0FF0  00C2               	movwf	??___fladd
  6149  0FF1  0842               	movf	??___fladd,w
  6150  0FF2  05BC               	andwf	___fladd@b+2,f
  6151  0FF3                     l608:
  6152  0FF3  084C               	movf	___fladd@bexp,w
  6153  0FF4  00C2               	movwf	??___fladd
  6154  0FF5  1003               	clrc
  6155  0FF6  0C42               	rrf	??___fladd,w
  6156  0FF7  00C3               	movwf	??___fladd+1
  6157  0FF8  0843               	movf	??___fladd+1,w
  6158  0FF9  00BD               	movwf	___fladd@b+3
  6159  0FFA                     l2184:
  6160  0FFA  1FCA               	btfss	___fladd@signs,7
  6161  0FFB  2FFD               	goto	u2771
  6162  0FFC  2FFE               	goto	u2770
  6163  0FFD                     u2771:
  6164  0FFD  2FFF               	goto	l609
  6165  0FFE                     u2770:
  6166  0FFE                     l2186:
  6167  0FFE  17BD               	bsf	___fladd@b+3,7
  6168  0FFF                     l609:
  6169  0FFF                     l579:
  6170  0FFF  0008               	return
  6171  1000                     __end_of___fladd:
  6172                           
  6173                           	psect	text16
  6174  12DB                     __ptext16:	
  6175 ;; *************** function ___flneg *****************
  6176 ;; Defined at:
  6177 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;  f1              4    0[COMMON] unsigned char 
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;		None
  6182 ;; Return value:  Size  Location     Type
  6183 ;;                  4    0[COMMON] unsigned char 
  6184 ;; Registers used:
  6185 ;;		wreg
  6186 ;; Tracked objects:
  6187 ;;		On entry : 0/0
  6188 ;;		On exit  : 0/0
  6189 ;;		Unchanged: 0/0
  6190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6191 ;;      Params:         4       0       0       0       0
  6192 ;;      Locals:         0       0       0       0       0
  6193 ;;      Temps:          0       0       0       0       0
  6194 ;;      Totals:         4       0       0       0       0
  6195 ;;Total ram usage:        4 bytes
  6196 ;; Hardware stack levels used:    1
  6197 ;; This function calls:
  6198 ;;		Nothing
  6199 ;; This function is called by:
  6200 ;;		_ftoa
  6201 ;; This function uses a non-reentrant model
  6202 ;;
  6203                           
  6204                           
  6205                           ;psect for function ___flneg
  6206  12DB                     ___flneg:
  6207  12DB                     l2266:	
  6208                           ;incstack = 0
  6209                           ; Regs used in ___flneg: [wreg]
  6210                           
  6211  12DB  0873               	movf	___flneg@f1+3,w
  6212  12DC  0472               	iorwf	___flneg@f1+2,w
  6213  12DD  0471               	iorwf	___flneg@f1+1,w
  6214  12DE  0470               	iorwf	___flneg@f1,w
  6215  12DF  1903               	skipnz
  6216  12E0  2AE2               	goto	u2941
  6217  12E1  2AE3               	goto	u2940
  6218  12E2                     u2941:
  6219  12E2  2AE5               	goto	l2270
  6220  12E3                     u2940:
  6221  12E3                     l2268:
  6222  12E3  3080               	movlw	128
  6223  12E4  06F3               	xorwf	___flneg@f1+3,f
  6224  12E5                     l2270:
  6225  12E5                     l455:
  6226  12E5  0008               	return
  6227  12E6                     __end_of___flneg:
  6228                           
  6229                           	psect	text17
  6230  0492                     __ptext17:	
  6231 ;; *************** function ___flmul *****************
  6232 ;; Defined at:
  6233 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  6234 ;; Parameters:    Size  Location     Type
  6235 ;;  b               4    0[BANK0 ] unsigned char 
  6236 ;;  a               4    4[BANK0 ] unsigned char 
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;  prod            4   20[BANK0 ] struct .
  6239 ;;  grs             4   14[BANK0 ] unsigned long 
  6240 ;;  temp            2   24[BANK0 ] struct .
  6241 ;;  bexp            1   19[BANK0 ] unsigned char 
  6242 ;;  aexp            1   18[BANK0 ] unsigned char 
  6243 ;;  sign            1   13[BANK0 ] unsigned char 
  6244 ;; Return value:  Size  Location     Type
  6245 ;;                  4    0[BANK0 ] unsigned char 
  6246 ;; Registers used:
  6247 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6253 ;;      Params:         0       8       0       0       0
  6254 ;;      Locals:         0      13       0       0       0
  6255 ;;      Temps:          0       5       0       0       0
  6256 ;;      Totals:         0      26       0       0       0
  6257 ;;Total ram usage:       26 bytes
  6258 ;; Hardware stack levels used:    1
  6259 ;; Hardware stack levels required when called:    1
  6260 ;; This function calls:
  6261 ;;		__Umul8_16
  6262 ;; This function is called by:
  6263 ;;		_readMPU
  6264 ;;		_ftoa
  6265 ;; This function uses a non-reentrant model
  6266 ;;
  6267                           
  6268                           
  6269                           ;psect for function ___flmul
  6270  0492                     ___flmul:
  6271  0492                     l2458:	
  6272                           ;incstack = 0
  6273                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6274                           
  6275  0492  1283               	bcf	3,5	;RP0=0, select bank0
  6276  0493  1303               	bcf	3,6	;RP1=0, select bank0
  6277  0494  0823               	movf	___flmul@b+3,w
  6278  0495  3980               	andlw	128
  6279  0496  00A8               	movwf	??___flmul
  6280  0497  0828               	movf	??___flmul,w
  6281  0498  00AD               	movwf	___flmul@sign
  6282  0499                     l2460:
  6283  0499  0823               	movf	___flmul@b+3,w
  6284  049A  00A8               	movwf	??___flmul
  6285  049B  0728               	addwf	??___flmul,w
  6286  049C  00A9               	movwf	??___flmul+1
  6287  049D  0829               	movf	??___flmul+1,w
  6288  049E  00B3               	movwf	___flmul@bexp
  6289  049F                     l2462:
  6290  049F  1FA2               	btfss	___flmul@b+2,7
  6291  04A0  2CA2               	goto	u3341
  6292  04A1  2CA3               	goto	u3340
  6293  04A2                     u3341:
  6294  04A2  2CA4               	goto	l2466
  6295  04A3                     u3340:
  6296  04A3                     l2464:
  6297  04A3  1433               	bsf	___flmul@bexp,0
  6298  04A4                     l2466:
  6299  04A4  0833               	movf	___flmul@bexp,w
  6300  04A5  1903               	btfsc	3,2
  6301  04A6  2CA8               	goto	u3351
  6302  04A7  2CA9               	goto	u3350
  6303  04A8                     u3351:
  6304  04A8  2CB8               	goto	l2474
  6305  04A9                     u3350:
  6306  04A9                     l2468:
  6307  04A9  0A33               	incf	___flmul@bexp,w
  6308  04AA  1D03               	btfss	3,2
  6309  04AB  2CAD               	goto	u3361
  6310  04AC  2CAE               	goto	u3360
  6311  04AD                     u3361:
  6312  04AD  2CB6               	goto	l2472
  6313  04AE                     u3360:
  6314  04AE                     l2470:
  6315  04AE  3000               	movlw	0
  6316  04AF  00A3               	movwf	___flmul@b+3
  6317  04B0  3000               	movlw	0
  6318  04B1  00A2               	movwf	___flmul@b+2
  6319  04B2  3000               	movlw	0
  6320  04B3  00A1               	movwf	___flmul@b+1
  6321  04B4  3000               	movlw	0
  6322  04B5  00A0               	movwf	___flmul@b
  6323  04B6                     l2472:
  6324  04B6  17A2               	bsf	___flmul@b+2,7
  6325  04B7  2CC0               	goto	l2476
  6326  04B8                     l2474:
  6327  04B8  3000               	movlw	0
  6328  04B9  00A3               	movwf	___flmul@b+3
  6329  04BA  3000               	movlw	0
  6330  04BB  00A2               	movwf	___flmul@b+2
  6331  04BC  3000               	movlw	0
  6332  04BD  00A1               	movwf	___flmul@b+1
  6333  04BE  3000               	movlw	0
  6334  04BF  00A0               	movwf	___flmul@b
  6335  04C0                     l2476:
  6336  04C0  0827               	movf	___flmul@a+3,w
  6337  04C1  3980               	andlw	128
  6338  04C2  00A8               	movwf	??___flmul
  6339  04C3  0828               	movf	??___flmul,w
  6340  04C4  06AD               	xorwf	___flmul@sign,f
  6341  04C5                     l2478:
  6342  04C5  0827               	movf	___flmul@a+3,w
  6343  04C6  00A8               	movwf	??___flmul
  6344  04C7  0728               	addwf	??___flmul,w
  6345  04C8  00A9               	movwf	??___flmul+1
  6346  04C9  0829               	movf	??___flmul+1,w
  6347  04CA  00B2               	movwf	___flmul@aexp
  6348  04CB                     l2480:
  6349  04CB  1FA6               	btfss	___flmul@a+2,7
  6350  04CC  2CCE               	goto	u3371
  6351  04CD  2CCF               	goto	u3370
  6352  04CE                     u3371:
  6353  04CE  2CD0               	goto	l2484
  6354  04CF                     u3370:
  6355  04CF                     l2482:
  6356  04CF  1432               	bsf	___flmul@aexp,0
  6357  04D0                     l2484:
  6358  04D0  0832               	movf	___flmul@aexp,w
  6359  04D1  1903               	btfsc	3,2
  6360  04D2  2CD4               	goto	u3381
  6361  04D3  2CD5               	goto	u3380
  6362  04D4                     u3381:
  6363  04D4  2CE4               	goto	l2492
  6364  04D5                     u3380:
  6365  04D5                     l2486:
  6366  04D5  0A32               	incf	___flmul@aexp,w
  6367  04D6  1D03               	btfss	3,2
  6368  04D7  2CD9               	goto	u3391
  6369  04D8  2CDA               	goto	u3390
  6370  04D9                     u3391:
  6371  04D9  2CE2               	goto	l2490
  6372  04DA                     u3390:
  6373  04DA                     l2488:
  6374  04DA  3000               	movlw	0
  6375  04DB  00A7               	movwf	___flmul@a+3
  6376  04DC  3000               	movlw	0
  6377  04DD  00A6               	movwf	___flmul@a+2
  6378  04DE  3000               	movlw	0
  6379  04DF  00A5               	movwf	___flmul@a+1
  6380  04E0  3000               	movlw	0
  6381  04E1  00A4               	movwf	___flmul@a
  6382  04E2                     l2490:
  6383  04E2  17A6               	bsf	___flmul@a+2,7
  6384  04E3  2CEC               	goto	l2494
  6385  04E4                     l2492:
  6386  04E4  3000               	movlw	0
  6387  04E5  00A7               	movwf	___flmul@a+3
  6388  04E6  3000               	movlw	0
  6389  04E7  00A6               	movwf	___flmul@a+2
  6390  04E8  3000               	movlw	0
  6391  04E9  00A5               	movwf	___flmul@a+1
  6392  04EA  3000               	movlw	0
  6393  04EB  00A4               	movwf	___flmul@a
  6394  04EC                     l2494:
  6395  04EC  0832               	movf	___flmul@aexp,w
  6396  04ED  1903               	btfsc	3,2
  6397  04EE  2CF0               	goto	u3401
  6398  04EF  2CF1               	goto	u3400
  6399  04F0                     u3401:
  6400  04F0  2CF6               	goto	l2498
  6401  04F1                     u3400:
  6402  04F1                     l2496:
  6403  04F1  0833               	movf	___flmul@bexp,w
  6404  04F2  1D03               	btfss	3,2
  6405  04F3  2CF5               	goto	u3411
  6406  04F4  2CF6               	goto	u3410
  6407  04F5                     u3411:
  6408  04F5  2CFF               	goto	l2502
  6409  04F6                     u3410:
  6410  04F6                     l2498:
  6411  04F6  3000               	movlw	0
  6412  04F7  00A3               	movwf	?___flmul+3
  6413  04F8  3000               	movlw	0
  6414  04F9  00A2               	movwf	?___flmul+2
  6415  04FA  3000               	movlw	0
  6416  04FB  00A1               	movwf	?___flmul+1
  6417  04FC  3000               	movlw	0
  6418  04FD  00A0               	movwf	?___flmul
  6419  04FE  2FF2               	goto	l662
  6420  04FF                     l2502:
  6421  04FF  0820               	movf	___flmul@b,w
  6422  0500  00A8               	movwf	??___flmul
  6423  0501  0828               	movf	??___flmul,w
  6424  0502  00F0               	movwf	__Umul8_16@multiplicand
  6425  0503  0826               	movf	___flmul@a+2,w
  6426  0504  160A  118A  2362  120A  118A  	fcall	__Umul8_16
  6427  0509  0871               	movf	?__Umul8_16+1,w
  6428  050A  1283               	bcf	3,5	;RP0=0, select bank0
  6429  050B  1303               	bcf	3,6	;RP1=0, select bank0
  6430  050C  00B9               	movwf	___flmul@temp+1
  6431  050D  0870               	movf	?__Umul8_16,w
  6432  050E  00B8               	movwf	___flmul@temp
  6433  050F                     l2504:
  6434  050F  0838               	movf	___flmul@temp,w
  6435  0510  00A8               	movwf	??___flmul
  6436  0511  01A9               	clrf	??___flmul+1
  6437  0512  01AA               	clrf	??___flmul+2
  6438  0513  01AB               	clrf	??___flmul+3
  6439  0514  082B               	movf	??___flmul+3,w
  6440  0515  00B1               	movwf	___flmul@grs+3
  6441  0516  082A               	movf	??___flmul+2,w
  6442  0517  00B0               	movwf	___flmul@grs+2
  6443  0518  0829               	movf	??___flmul+1,w
  6444  0519  00AF               	movwf	___flmul@grs+1
  6445  051A  0828               	movf	??___flmul,w
  6446  051B  00AE               	movwf	___flmul@grs
  6447  051C                     l2506:
  6448  051C  0839               	movf	___flmul@temp+1,w
  6449  051D  00A8               	movwf	??___flmul
  6450  051E  01A9               	clrf	??___flmul+1
  6451  051F  01AA               	clrf	??___flmul+2
  6452  0520  01AB               	clrf	??___flmul+3
  6453  0521  082B               	movf	??___flmul+3,w
  6454  0522  00B7               	movwf	___flmul@prod+3
  6455  0523  082A               	movf	??___flmul+2,w
  6456  0524  00B6               	movwf	___flmul@prod+2
  6457  0525  0829               	movf	??___flmul+1,w
  6458  0526  00B5               	movwf	___flmul@prod+1
  6459  0527  0828               	movf	??___flmul,w
  6460  0528  00B4               	movwf	___flmul@prod
  6461  0529  0821               	movf	___flmul@b+1,w
  6462  052A  00A8               	movwf	??___flmul
  6463  052B  0828               	movf	??___flmul,w
  6464  052C  00F0               	movwf	__Umul8_16@multiplicand
  6465  052D  0825               	movf	___flmul@a+1,w
  6466  052E  160A  118A  2362  120A  118A  	fcall	__Umul8_16
  6467  0533  0871               	movf	?__Umul8_16+1,w
  6468  0534  1283               	bcf	3,5	;RP0=0, select bank0
  6469  0535  1303               	bcf	3,6	;RP1=0, select bank0
  6470  0536  00B9               	movwf	___flmul@temp+1
  6471  0537  0870               	movf	?__Umul8_16,w
  6472  0538  00B8               	movwf	___flmul@temp
  6473  0539                     l2508:
  6474  0539  0838               	movf	___flmul@temp,w
  6475  053A  00A8               	movwf	??___flmul
  6476  053B  01A9               	clrf	??___flmul+1
  6477  053C  01AA               	clrf	??___flmul+2
  6478  053D  01AB               	clrf	??___flmul+3
  6479  053E  0828               	movf	??___flmul,w
  6480  053F  07AE               	addwf	___flmul@grs,f
  6481  0540  0829               	movf	??___flmul+1,w
  6482  0541  1103               	clrz
  6483  0542  1803               	skipnc
  6484  0543  3E01               	addlw	1
  6485  0544  1903               	skipnz
  6486  0545  2D47               	goto	u3421
  6487  0546  07AF               	addwf	___flmul@grs+1,f
  6488  0547                     u3421:
  6489  0547  082A               	movf	??___flmul+2,w
  6490  0548  1103               	clrz
  6491  0549  1803               	skipnc
  6492  054A  3E01               	addlw	1
  6493  054B  1903               	skipnz
  6494  054C  2D4E               	goto	u3422
  6495  054D  07B0               	addwf	___flmul@grs+2,f
  6496  054E                     u3422:
  6497  054E  082B               	movf	??___flmul+3,w
  6498  054F  1103               	clrz
  6499  0550  1803               	skipnc
  6500  0551  3E01               	addlw	1
  6501  0552  1903               	skipnz
  6502  0553  2D55               	goto	u3423
  6503  0554  07B1               	addwf	___flmul@grs+3,f
  6504  0555                     u3423:
  6505  0555                     l2510:
  6506  0555  0839               	movf	___flmul@temp+1,w
  6507  0556  00A8               	movwf	??___flmul
  6508  0557  01A9               	clrf	??___flmul+1
  6509  0558  01AA               	clrf	??___flmul+2
  6510  0559  01AB               	clrf	??___flmul+3
  6511  055A  0828               	movf	??___flmul,w
  6512  055B  07B4               	addwf	___flmul@prod,f
  6513  055C  0829               	movf	??___flmul+1,w
  6514  055D  1103               	clrz
  6515  055E  1803               	skipnc
  6516  055F  3E01               	addlw	1
  6517  0560  1903               	skipnz
  6518  0561  2D63               	goto	u3431
  6519  0562  07B5               	addwf	___flmul@prod+1,f
  6520  0563                     u3431:
  6521  0563  082A               	movf	??___flmul+2,w
  6522  0564  1103               	clrz
  6523  0565  1803               	skipnc
  6524  0566  3E01               	addlw	1
  6525  0567  1903               	skipnz
  6526  0568  2D6A               	goto	u3432
  6527  0569  07B6               	addwf	___flmul@prod+2,f
  6528  056A                     u3432:
  6529  056A  082B               	movf	??___flmul+3,w
  6530  056B  1103               	clrz
  6531  056C  1803               	skipnc
  6532  056D  3E01               	addlw	1
  6533  056E  1903               	skipnz
  6534  056F  2D71               	goto	u3433
  6535  0570  07B7               	addwf	___flmul@prod+3,f
  6536  0571                     u3433:
  6537  0571  0822               	movf	___flmul@b+2,w
  6538  0572  00A8               	movwf	??___flmul
  6539  0573  0828               	movf	??___flmul,w
  6540  0574  00F0               	movwf	__Umul8_16@multiplicand
  6541  0575  0824               	movf	___flmul@a,w
  6542  0576  160A  118A  2362  120A  118A  	fcall	__Umul8_16
  6543  057B  0871               	movf	?__Umul8_16+1,w
  6544  057C  1283               	bcf	3,5	;RP0=0, select bank0
  6545  057D  1303               	bcf	3,6	;RP1=0, select bank0
  6546  057E  00B9               	movwf	___flmul@temp+1
  6547  057F  0870               	movf	?__Umul8_16,w
  6548  0580  00B8               	movwf	___flmul@temp
  6549  0581                     l2512:
  6550  0581  0838               	movf	___flmul@temp,w
  6551  0582  00A8               	movwf	??___flmul
  6552  0583  01A9               	clrf	??___flmul+1
  6553  0584  01AA               	clrf	??___flmul+2
  6554  0585  01AB               	clrf	??___flmul+3
  6555  0586  0828               	movf	??___flmul,w
  6556  0587  07AE               	addwf	___flmul@grs,f
  6557  0588  0829               	movf	??___flmul+1,w
  6558  0589  1103               	clrz
  6559  058A  1803               	skipnc
  6560  058B  3E01               	addlw	1
  6561  058C  1903               	skipnz
  6562  058D  2D8F               	goto	u3441
  6563  058E  07AF               	addwf	___flmul@grs+1,f
  6564  058F                     u3441:
  6565  058F  082A               	movf	??___flmul+2,w
  6566  0590  1103               	clrz
  6567  0591  1803               	skipnc
  6568  0592  3E01               	addlw	1
  6569  0593  1903               	skipnz
  6570  0594  2D96               	goto	u3442
  6571  0595  07B0               	addwf	___flmul@grs+2,f
  6572  0596                     u3442:
  6573  0596  082B               	movf	??___flmul+3,w
  6574  0597  1103               	clrz
  6575  0598  1803               	skipnc
  6576  0599  3E01               	addlw	1
  6577  059A  1903               	skipnz
  6578  059B  2D9D               	goto	u3443
  6579  059C  07B1               	addwf	___flmul@grs+3,f
  6580  059D                     u3443:
  6581  059D                     l2514:
  6582  059D  0839               	movf	___flmul@temp+1,w
  6583  059E  00A8               	movwf	??___flmul
  6584  059F  01A9               	clrf	??___flmul+1
  6585  05A0  01AA               	clrf	??___flmul+2
  6586  05A1  01AB               	clrf	??___flmul+3
  6587  05A2  0828               	movf	??___flmul,w
  6588  05A3  07B4               	addwf	___flmul@prod,f
  6589  05A4  0829               	movf	??___flmul+1,w
  6590  05A5  1103               	clrz
  6591  05A6  1803               	skipnc
  6592  05A7  3E01               	addlw	1
  6593  05A8  1903               	skipnz
  6594  05A9  2DAB               	goto	u3451
  6595  05AA  07B5               	addwf	___flmul@prod+1,f
  6596  05AB                     u3451:
  6597  05AB  082A               	movf	??___flmul+2,w
  6598  05AC  1103               	clrz
  6599  05AD  1803               	skipnc
  6600  05AE  3E01               	addlw	1
  6601  05AF  1903               	skipnz
  6602  05B0  2DB2               	goto	u3452
  6603  05B1  07B6               	addwf	___flmul@prod+2,f
  6604  05B2                     u3452:
  6605  05B2  082B               	movf	??___flmul+3,w
  6606  05B3  1103               	clrz
  6607  05B4  1803               	skipnc
  6608  05B5  3E01               	addlw	1
  6609  05B6  1903               	skipnz
  6610  05B7  2DB9               	goto	u3453
  6611  05B8  07B7               	addwf	___flmul@prod+3,f
  6612  05B9                     u3453:
  6613  05B9                     l2516:
  6614  05B9  3008               	movlw	8
  6615  05BA  00A8               	movwf	??___flmul
  6616  05BB                     u3465:
  6617  05BB  1003               	clrc
  6618  05BC  0DAE               	rlf	___flmul@grs,f
  6619  05BD  0DAF               	rlf	___flmul@grs+1,f
  6620  05BE  0DB0               	rlf	___flmul@grs+2,f
  6621  05BF  0DB1               	rlf	___flmul@grs+3,f
  6622  05C0  0BA8               	decfsz	??___flmul,f
  6623  05C1  2DBB               	goto	u3465
  6624  05C2                     l2518:
  6625  05C2  0821               	movf	___flmul@b+1,w
  6626  05C3  00A8               	movwf	??___flmul
  6627  05C4  0828               	movf	??___flmul,w
  6628  05C5  00F0               	movwf	__Umul8_16@multiplicand
  6629  05C6  0824               	movf	___flmul@a,w
  6630  05C7  160A  118A  2362  120A  118A  	fcall	__Umul8_16
  6631  05CC  0871               	movf	?__Umul8_16+1,w
  6632  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  6633  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  6634  05CF  00B9               	movwf	___flmul@temp+1
  6635  05D0  0870               	movf	?__Umul8_16,w
  6636  05D1  00B8               	movwf	___flmul@temp
  6637  05D2                     l2520:
  6638  05D2  0838               	movf	___flmul@temp,w
  6639  05D3  00A8               	movwf	??___flmul
  6640  05D4  0839               	movf	___flmul@temp+1,w
  6641  05D5  00A9               	movwf	??___flmul+1
  6642  05D6  01AA               	clrf	??___flmul+2
  6643  05D7  01AB               	clrf	??___flmul+3
  6644  05D8  0828               	movf	??___flmul,w
  6645  05D9  07AE               	addwf	___flmul@grs,f
  6646  05DA  0829               	movf	??___flmul+1,w
  6647  05DB  1103               	clrz
  6648  05DC  1803               	skipnc
  6649  05DD  3E01               	addlw	1
  6650  05DE  1903               	skipnz
  6651  05DF  2DE1               	goto	u3471
  6652  05E0  07AF               	addwf	___flmul@grs+1,f
  6653  05E1                     u3471:
  6654  05E1  082A               	movf	??___flmul+2,w
  6655  05E2  1103               	clrz
  6656  05E3  1803               	skipnc
  6657  05E4  3E01               	addlw	1
  6658  05E5  1903               	skipnz
  6659  05E6  2DE8               	goto	u3472
  6660  05E7  07B0               	addwf	___flmul@grs+2,f
  6661  05E8                     u3472:
  6662  05E8  082B               	movf	??___flmul+3,w
  6663  05E9  1103               	clrz
  6664  05EA  1803               	skipnc
  6665  05EB  3E01               	addlw	1
  6666  05EC  1903               	skipnz
  6667  05ED  2DEF               	goto	u3473
  6668  05EE  07B1               	addwf	___flmul@grs+3,f
  6669  05EF                     u3473:
  6670  05EF                     l2522:
  6671  05EF  0820               	movf	___flmul@b,w
  6672  05F0  00A8               	movwf	??___flmul
  6673  05F1  0828               	movf	??___flmul,w
  6674  05F2  00F0               	movwf	__Umul8_16@multiplicand
  6675  05F3  0825               	movf	___flmul@a+1,w
  6676  05F4  160A  118A  2362  120A  118A  	fcall	__Umul8_16
  6677  05F9  0871               	movf	?__Umul8_16+1,w
  6678  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  6679  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  6680  05FC  00B9               	movwf	___flmul@temp+1
  6681  05FD  0870               	movf	?__Umul8_16,w
  6682  05FE  00B8               	movwf	___flmul@temp
  6683  05FF                     l2524:
  6684  05FF  0838               	movf	___flmul@temp,w
  6685  0600  00A8               	movwf	??___flmul
  6686  0601  0839               	movf	___flmul@temp+1,w
  6687  0602  00A9               	movwf	??___flmul+1
  6688  0603  01AA               	clrf	??___flmul+2
  6689  0604  01AB               	clrf	??___flmul+3
  6690  0605  0828               	movf	??___flmul,w
  6691  0606  07AE               	addwf	___flmul@grs,f
  6692  0607  0829               	movf	??___flmul+1,w
  6693  0608  1103               	clrz
  6694  0609  1803               	skipnc
  6695  060A  3E01               	addlw	1
  6696  060B  1903               	skipnz
  6697  060C  2E0E               	goto	u3481
  6698  060D  07AF               	addwf	___flmul@grs+1,f
  6699  060E                     u3481:
  6700  060E  082A               	movf	??___flmul+2,w
  6701  060F  1103               	clrz
  6702  0610  1803               	skipnc
  6703  0611  3E01               	addlw	1
  6704  0612  1903               	skipnz
  6705  0613  2E15               	goto	u3482
  6706  0614  07B0               	addwf	___flmul@grs+2,f
  6707  0615                     u3482:
  6708  0615  082B               	movf	??___flmul+3,w
  6709  0616  1103               	clrz
  6710  0617  1803               	skipnc
  6711  0618  3E01               	addlw	1
  6712  0619  1903               	skipnz
  6713  061A  2E1C               	goto	u3483
  6714  061B  07B1               	addwf	___flmul@grs+3,f
  6715  061C                     u3483:
  6716  061C                     l2526:
  6717  061C  3008               	movlw	8
  6718  061D  00A8               	movwf	??___flmul
  6719  061E                     u3495:
  6720  061E  1003               	clrc
  6721  061F  0DAE               	rlf	___flmul@grs,f
  6722  0620  0DAF               	rlf	___flmul@grs+1,f
  6723  0621  0DB0               	rlf	___flmul@grs+2,f
  6724  0622  0DB1               	rlf	___flmul@grs+3,f
  6725  0623  0BA8               	decfsz	??___flmul,f
  6726  0624  2E1E               	goto	u3495
  6727  0625  0820               	movf	___flmul@b,w
  6728  0626  00A8               	movwf	??___flmul
  6729  0627  0828               	movf	??___flmul,w
  6730  0628  00F0               	movwf	__Umul8_16@multiplicand
  6731  0629  0824               	movf	___flmul@a,w
  6732  062A  160A  118A  2362  120A  118A  	fcall	__Umul8_16
  6733  062F  0871               	movf	?__Umul8_16+1,w
  6734  0630  1283               	bcf	3,5	;RP0=0, select bank0
  6735  0631  1303               	bcf	3,6	;RP1=0, select bank0
  6736  0632  00B9               	movwf	___flmul@temp+1
  6737  0633  0870               	movf	?__Umul8_16,w
  6738  0634  00B8               	movwf	___flmul@temp
  6739  0635                     l2528:
  6740  0635  0838               	movf	___flmul@temp,w
  6741  0636  00A8               	movwf	??___flmul
  6742  0637  0839               	movf	___flmul@temp+1,w
  6743  0638  00A9               	movwf	??___flmul+1
  6744  0639  01AA               	clrf	??___flmul+2
  6745  063A  01AB               	clrf	??___flmul+3
  6746  063B  0828               	movf	??___flmul,w
  6747  063C  07AE               	addwf	___flmul@grs,f
  6748  063D  0829               	movf	??___flmul+1,w
  6749  063E  1103               	clrz
  6750  063F  1803               	skipnc
  6751  0640  3E01               	addlw	1
  6752  0641  1903               	skipnz
  6753  0642  2E44               	goto	u3501
  6754  0643  07AF               	addwf	___flmul@grs+1,f
  6755  0644                     u3501:
  6756  0644  082A               	movf	??___flmul+2,w
  6757  0645  1103               	clrz
  6758  0646  1803               	skipnc
  6759  0647  3E01               	addlw	1
  6760  0648  1903               	skipnz
  6761  0649  2E4B               	goto	u3502
  6762  064A  07B0               	addwf	___flmul@grs+2,f
  6763  064B                     u3502:
  6764  064B  082B               	movf	??___flmul+3,w
  6765  064C  1103               	clrz
  6766  064D  1803               	skipnc
  6767  064E  3E01               	addlw	1
  6768  064F  1903               	skipnz
  6769  0650  2E52               	goto	u3503
  6770  0651  07B1               	addwf	___flmul@grs+3,f
  6771  0652                     u3503:
  6772  0652                     l2530:
  6773  0652  0821               	movf	___flmul@b+1,w
  6774  0653  00A8               	movwf	??___flmul
  6775  0654  0828               	movf	??___flmul,w
  6776  0655  00F0               	movwf	__Umul8_16@multiplicand
  6777  0656  0826               	movf	___flmul@a+2,w
  6778  0657  160A  118A  2362  120A  118A  	fcall	__Umul8_16
  6779  065C  0871               	movf	?__Umul8_16+1,w
  6780  065D  1283               	bcf	3,5	;RP0=0, select bank0
  6781  065E  1303               	bcf	3,6	;RP1=0, select bank0
  6782  065F  00B9               	movwf	___flmul@temp+1
  6783  0660  0870               	movf	?__Umul8_16,w
  6784  0661  00B8               	movwf	___flmul@temp
  6785  0662  0838               	movf	___flmul@temp,w
  6786  0663  00A8               	movwf	??___flmul
  6787  0664  0839               	movf	___flmul@temp+1,w
  6788  0665  00A9               	movwf	??___flmul+1
  6789  0666  01AA               	clrf	??___flmul+2
  6790  0667  01AB               	clrf	??___flmul+3
  6791  0668  0828               	movf	??___flmul,w
  6792  0669  07B4               	addwf	___flmul@prod,f
  6793  066A  0829               	movf	??___flmul+1,w
  6794  066B  1103               	clrz
  6795  066C  1803               	skipnc
  6796  066D  3E01               	addlw	1
  6797  066E  1903               	skipnz
  6798  066F  2E71               	goto	u3511
  6799  0670  07B5               	addwf	___flmul@prod+1,f
  6800  0671                     u3511:
  6801  0671  082A               	movf	??___flmul+2,w
  6802  0672  1103               	clrz
  6803  0673  1803               	skipnc
  6804  0674  3E01               	addlw	1
  6805  0675  1903               	skipnz
  6806  0676  2E78               	goto	u3512
  6807  0677  07B6               	addwf	___flmul@prod+2,f
  6808  0678                     u3512:
  6809  0678  082B               	movf	??___flmul+3,w
  6810  0679  1103               	clrz
  6811  067A  1803               	skipnc
  6812  067B  3E01               	addlw	1
  6813  067C  1903               	skipnz
  6814  067D  2E7F               	goto	u3513
  6815  067E  07B7               	addwf	___flmul@prod+3,f
  6816  067F                     u3513:
  6817  067F                     l2532:
  6818  067F  0822               	movf	___flmul@b+2,w
  6819  0680  00A8               	movwf	??___flmul
  6820  0681  0828               	movf	??___flmul,w
  6821  0682  00F0               	movwf	__Umul8_16@multiplicand
  6822  0683  0825               	movf	___flmul@a+1,w
  6823  0684  160A  118A  2362  120A  118A  	fcall	__Umul8_16
  6824  0689  0871               	movf	?__Umul8_16+1,w
  6825  068A  1283               	bcf	3,5	;RP0=0, select bank0
  6826  068B  1303               	bcf	3,6	;RP1=0, select bank0
  6827  068C  00B9               	movwf	___flmul@temp+1
  6828  068D  0870               	movf	?__Umul8_16,w
  6829  068E  00B8               	movwf	___flmul@temp
  6830  068F                     l2534:
  6831  068F  0838               	movf	___flmul@temp,w
  6832  0690  00A8               	movwf	??___flmul
  6833  0691  0839               	movf	___flmul@temp+1,w
  6834  0692  00A9               	movwf	??___flmul+1
  6835  0693  01AA               	clrf	??___flmul+2
  6836  0694  01AB               	clrf	??___flmul+3
  6837  0695  0828               	movf	??___flmul,w
  6838  0696  07B4               	addwf	___flmul@prod,f
  6839  0697  0829               	movf	??___flmul+1,w
  6840  0698  1103               	clrz
  6841  0699  1803               	skipnc
  6842  069A  3E01               	addlw	1
  6843  069B  1903               	skipnz
  6844  069C  2E9E               	goto	u3521
  6845  069D  07B5               	addwf	___flmul@prod+1,f
  6846  069E                     u3521:
  6847  069E  082A               	movf	??___flmul+2,w
  6848  069F  1103               	clrz
  6849  06A0  1803               	skipnc
  6850  06A1  3E01               	addlw	1
  6851  06A2  1903               	skipnz
  6852  06A3  2EA5               	goto	u3522
  6853  06A4  07B6               	addwf	___flmul@prod+2,f
  6854  06A5                     u3522:
  6855  06A5  082B               	movf	??___flmul+3,w
  6856  06A6  1103               	clrz
  6857  06A7  1803               	skipnc
  6858  06A8  3E01               	addlw	1
  6859  06A9  1903               	skipnz
  6860  06AA  2EAC               	goto	u3523
  6861  06AB  07B7               	addwf	___flmul@prod+3,f
  6862  06AC                     u3523:
  6863  06AC  0822               	movf	___flmul@b+2,w
  6864  06AD  00A8               	movwf	??___flmul
  6865  06AE  0828               	movf	??___flmul,w
  6866  06AF  00F0               	movwf	__Umul8_16@multiplicand
  6867  06B0  0826               	movf	___flmul@a+2,w
  6868  06B1  160A  118A  2362  120A  118A  	fcall	__Umul8_16
  6869  06B6  0871               	movf	?__Umul8_16+1,w
  6870  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  6871  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  6872  06B9  00B9               	movwf	___flmul@temp+1
  6873  06BA  0870               	movf	?__Umul8_16,w
  6874  06BB  00B8               	movwf	___flmul@temp
  6875  06BC                     l2536:
  6876  06BC  0838               	movf	___flmul@temp,w
  6877  06BD  00A8               	movwf	??___flmul
  6878  06BE  0839               	movf	___flmul@temp+1,w
  6879  06BF  00A9               	movwf	??___flmul+1
  6880  06C0  01AA               	clrf	??___flmul+2
  6881  06C1  01AB               	clrf	??___flmul+3
  6882  06C2  3008               	movlw	8
  6883  06C3                     u3535:
  6884  06C3  1003               	clrc
  6885  06C4  0DA8               	rlf	??___flmul,f
  6886  06C5  0DA9               	rlf	??___flmul+1,f
  6887  06C6  0DAA               	rlf	??___flmul+2,f
  6888  06C7  0DAB               	rlf	??___flmul+3,f
  6889  06C8                     u3530:
  6890  06C8  3EFF               	addlw	-1
  6891  06C9  1D03               	skipz
  6892  06CA  2EC3               	goto	u3535
  6893  06CB  0828               	movf	??___flmul,w
  6894  06CC  07B4               	addwf	___flmul@prod,f
  6895  06CD  0829               	movf	??___flmul+1,w
  6896  06CE  1103               	clrz
  6897  06CF  1803               	skipnc
  6898  06D0  3E01               	addlw	1
  6899  06D1  1903               	skipnz
  6900  06D2  2ED4               	goto	u3541
  6901  06D3  07B5               	addwf	___flmul@prod+1,f
  6902  06D4                     u3541:
  6903  06D4  082A               	movf	??___flmul+2,w
  6904  06D5  1103               	clrz
  6905  06D6  1803               	skipnc
  6906  06D7  3E01               	addlw	1
  6907  06D8  1903               	skipnz
  6908  06D9  2EDB               	goto	u3542
  6909  06DA  07B6               	addwf	___flmul@prod+2,f
  6910  06DB                     u3542:
  6911  06DB  082B               	movf	??___flmul+3,w
  6912  06DC  1103               	clrz
  6913  06DD  1803               	skipnc
  6914  06DE  3E01               	addlw	1
  6915  06DF  1903               	skipnz
  6916  06E0  2EE2               	goto	u3543
  6917  06E1  07B7               	addwf	___flmul@prod+3,f
  6918  06E2                     u3543:
  6919  06E2                     l2538:
  6920  06E2  082E               	movf	___flmul@grs,w
  6921  06E3  00A8               	movwf	??___flmul
  6922  06E4  082F               	movf	___flmul@grs+1,w
  6923  06E5  00A9               	movwf	??___flmul+1
  6924  06E6  0830               	movf	___flmul@grs+2,w
  6925  06E7  00AA               	movwf	??___flmul+2
  6926  06E8  0831               	movf	___flmul@grs+3,w
  6927  06E9  00AB               	movwf	??___flmul+3
  6928  06EA  3018               	movlw	24
  6929  06EB                     u3555:
  6930  06EB  1003               	clrc
  6931  06EC  0CAB               	rrf	??___flmul+3,f
  6932  06ED  0CAA               	rrf	??___flmul+2,f
  6933  06EE  0CA9               	rrf	??___flmul+1,f
  6934  06EF  0CA8               	rrf	??___flmul,f
  6935  06F0                     u3550:
  6936  06F0  3EFF               	addlw	-1
  6937  06F1  1D03               	skipz
  6938  06F2  2EEB               	goto	u3555
  6939  06F3  0828               	movf	??___flmul,w
  6940  06F4  07B4               	addwf	___flmul@prod,f
  6941  06F5  0829               	movf	??___flmul+1,w
  6942  06F6  1103               	clrz
  6943  06F7  1803               	skipnc
  6944  06F8  3E01               	addlw	1
  6945  06F9  1903               	skipnz
  6946  06FA  2EFC               	goto	u3561
  6947  06FB  07B5               	addwf	___flmul@prod+1,f
  6948  06FC                     u3561:
  6949  06FC  082A               	movf	??___flmul+2,w
  6950  06FD  1103               	clrz
  6951  06FE  1803               	skipnc
  6952  06FF  3E01               	addlw	1
  6953  0700  1903               	skipnz
  6954  0701  2F03               	goto	u3562
  6955  0702  07B6               	addwf	___flmul@prod+2,f
  6956  0703                     u3562:
  6957  0703  082B               	movf	??___flmul+3,w
  6958  0704  1103               	clrz
  6959  0705  1803               	skipnc
  6960  0706  3E01               	addlw	1
  6961  0707  1903               	skipnz
  6962  0708  2F0A               	goto	u3563
  6963  0709  07B7               	addwf	___flmul@prod+3,f
  6964  070A                     u3563:
  6965  070A                     l2540:
  6966  070A  3008               	movlw	8
  6967  070B  00A8               	movwf	??___flmul
  6968  070C                     u3575:
  6969  070C  1003               	clrc
  6970  070D  0DAE               	rlf	___flmul@grs,f
  6971  070E  0DAF               	rlf	___flmul@grs+1,f
  6972  070F  0DB0               	rlf	___flmul@grs+2,f
  6973  0710  0DB1               	rlf	___flmul@grs+3,f
  6974  0711  0BA8               	decfsz	??___flmul,f
  6975  0712  2F0C               	goto	u3575
  6976  0713                     l2542:
  6977  0713  0833               	movf	___flmul@bexp,w
  6978  0714  0732               	addwf	___flmul@aexp,w
  6979  0715  00A8               	movwf	??___flmul
  6980  0716  01A9               	clrf	??___flmul+1
  6981  0717  0DA9               	rlf	??___flmul+1,f
  6982  0718  0828               	movf	??___flmul,w
  6983  0719  3E82               	addlw	130
  6984  071A  00B8               	movwf	___flmul@temp
  6985  071B  0829               	movf	??___flmul+1,w
  6986  071C  1803               	skipnc
  6987  071D  3E01               	addlw	1
  6988  071E  3EFF               	addlw	255
  6989  071F  00B9               	movwf	___flmul@temp+1
  6990  0720  2F3E               	goto	l2554
  6991  0721                     l2544:
  6992  0721  3001               	movlw	1
  6993  0722  00A8               	movwf	??___flmul
  6994  0723                     u3585:
  6995  0723  1003               	clrc
  6996  0724  0DB4               	rlf	___flmul@prod,f
  6997  0725  0DB5               	rlf	___flmul@prod+1,f
  6998  0726  0DB6               	rlf	___flmul@prod+2,f
  6999  0727  0DB7               	rlf	___flmul@prod+3,f
  7000  0728  0BA8               	decfsz	??___flmul,f
  7001  0729  2F23               	goto	u3585
  7002  072A                     l2546:
  7003  072A  1FB1               	btfss	___flmul@grs+3,7
  7004  072B  2F2D               	goto	u3591
  7005  072C  2F2E               	goto	u3590
  7006  072D                     u3591:
  7007  072D  2F2F               	goto	l2550
  7008  072E                     u3590:
  7009  072E                     l2548:
  7010  072E  1434               	bsf	___flmul@prod,0
  7011  072F                     l2550:
  7012  072F  3001               	movlw	1
  7013  0730  00A8               	movwf	??___flmul
  7014  0731                     u3605:
  7015  0731  1003               	clrc
  7016  0732  0DAE               	rlf	___flmul@grs,f
  7017  0733  0DAF               	rlf	___flmul@grs+1,f
  7018  0734  0DB0               	rlf	___flmul@grs+2,f
  7019  0735  0DB1               	rlf	___flmul@grs+3,f
  7020  0736  0BA8               	decfsz	??___flmul,f
  7021  0737  2F31               	goto	u3605
  7022  0738                     l2552:
  7023  0738  30FF               	movlw	255
  7024  0739  07B8               	addwf	___flmul@temp,f
  7025  073A  1803               	skipnc
  7026  073B  0AB9               	incf	___flmul@temp+1,f
  7027  073C  30FF               	movlw	255
  7028  073D  07B9               	addwf	___flmul@temp+1,f
  7029  073E                     l2554:
  7030  073E  1FB6               	btfss	___flmul@prod+2,7
  7031  073F  2F41               	goto	u3611
  7032  0740  2F42               	goto	u3610
  7033  0741                     u3611:
  7034  0741  2F21               	goto	l2544
  7035  0742                     u3610:
  7036  0742                     l2556:
  7037  0742  01B2               	clrf	___flmul@aexp
  7038  0743                     l2558:
  7039  0743  1FB1               	btfss	___flmul@grs+3,7
  7040  0744  2F46               	goto	u3621
  7041  0745  2F47               	goto	u3620
  7042  0746                     u3621:
  7043  0746  2F63               	goto	l2566
  7044  0747                     u3620:
  7045  0747                     l2560:
  7046  0747  30FF               	movlw	255
  7047  0748  052E               	andwf	___flmul@grs,w
  7048  0749  00A8               	movwf	??___flmul
  7049  074A  30FF               	movlw	255
  7050  074B  052F               	andwf	___flmul@grs+1,w
  7051  074C  00A9               	movwf	??___flmul+1
  7052  074D  30FF               	movlw	255
  7053  074E  0530               	andwf	___flmul@grs+2,w
  7054  074F  00AA               	movwf	??___flmul+2
  7055  0750  307F               	movlw	127
  7056  0751  0531               	andwf	___flmul@grs+3,w
  7057  0752  00AB               	movwf	??___flmul+3
  7058  0753  082B               	movf	??___flmul+3,w
  7059  0754  042A               	iorwf	??___flmul+2,w
  7060  0755  0429               	iorwf	??___flmul+1,w
  7061  0756  0428               	iorwf	??___flmul,w
  7062  0757  1903               	skipnz
  7063  0758  2F5A               	goto	u3631
  7064  0759  2F5B               	goto	u3630
  7065  075A                     u3631:
  7066  075A  2F5E               	goto	l668
  7067  075B                     u3630:
  7068  075B                     l2562:
  7069  075B  01B2               	clrf	___flmul@aexp
  7070  075C  0AB2               	incf	___flmul@aexp,f
  7071  075D  2F63               	goto	l2566
  7072  075E                     l668:
  7073  075E  1C34               	btfss	___flmul@prod,0
  7074  075F  2F61               	goto	u3641
  7075  0760  2F62               	goto	u3640
  7076  0761                     u3641:
  7077  0761  2F63               	goto	l2566
  7078  0762                     u3640:
  7079  0762  2F5B               	goto	l2562
  7080  0763                     l2566:
  7081  0763  0832               	movf	___flmul@aexp,w
  7082  0764  1903               	btfsc	3,2
  7083  0765  2F67               	goto	u3651
  7084  0766  2F68               	goto	u3650
  7085  0767                     u3651:
  7086  0767  2F99               	goto	l2576
  7087  0768                     u3650:
  7088  0768                     l2568:
  7089  0768  3001               	movlw	1
  7090  0769  07B4               	addwf	___flmul@prod,f
  7091  076A  3000               	movlw	0
  7092  076B  1803               	skipnc
  7093  076C  3001               	movlw	1
  7094  076D  07B5               	addwf	___flmul@prod+1,f
  7095  076E  3000               	movlw	0
  7096  076F  1803               	skipnc
  7097  0770  3001               	movlw	1
  7098  0771  07B6               	addwf	___flmul@prod+2,f
  7099  0772  3000               	movlw	0
  7100  0773  1803               	skipnc
  7101  0774  3001               	movlw	1
  7102  0775  07B7               	addwf	___flmul@prod+3,f
  7103  0776                     l2570:
  7104  0776  1C37               	btfss	___flmul@prod+3,0
  7105  0777  2F79               	goto	u3661
  7106  0778  2F7A               	goto	u3660
  7107  0779                     u3661:
  7108  0779  2F99               	goto	l2576
  7109  077A                     u3660:
  7110  077A                     l2572:
  7111  077A  0834               	movf	___flmul@prod,w
  7112  077B  00A8               	movwf	??___flmul
  7113  077C  0835               	movf	___flmul@prod+1,w
  7114  077D  00A9               	movwf	??___flmul+1
  7115  077E  0836               	movf	___flmul@prod+2,w
  7116  077F  00AA               	movwf	??___flmul+2
  7117  0780  0837               	movf	___flmul@prod+3,w
  7118  0781  00AB               	movwf	??___flmul+3
  7119  0782  3001               	movlw	1
  7120  0783  00AC               	movwf	??___flmul+4
  7121  0784                     u3675:
  7122  0784  0D2B               	rlf	??___flmul+3,w
  7123  0785  0CAB               	rrf	??___flmul+3,f
  7124  0786  0CAA               	rrf	??___flmul+2,f
  7125  0787  0CA9               	rrf	??___flmul+1,f
  7126  0788  0CA8               	rrf	??___flmul,f
  7127  0789                     u3670:
  7128  0789  0BAC               	decfsz	??___flmul+4,f
  7129  078A  2F84               	goto	u3675
  7130  078B  082B               	movf	??___flmul+3,w
  7131  078C  00B7               	movwf	___flmul@prod+3
  7132  078D  082A               	movf	??___flmul+2,w
  7133  078E  00B6               	movwf	___flmul@prod+2
  7134  078F  0829               	movf	??___flmul+1,w
  7135  0790  00B5               	movwf	___flmul@prod+1
  7136  0791  0828               	movf	??___flmul,w
  7137  0792  00B4               	movwf	___flmul@prod
  7138  0793                     l2574:
  7139  0793  3001               	movlw	1
  7140  0794  07B8               	addwf	___flmul@temp,f
  7141  0795  1803               	skipnc
  7142  0796  0AB9               	incf	___flmul@temp+1,f
  7143  0797  3000               	movlw	0
  7144  0798  07B9               	addwf	___flmul@temp+1,f
  7145  0799                     l2576:
  7146  0799  0839               	movf	___flmul@temp+1,w
  7147  079A  3A80               	xorlw	128
  7148  079B  00FF               	movwf	btemp+1
  7149  079C  3080               	movlw	128
  7150  079D  027F               	subwf	btemp+1,w
  7151  079E  1D03               	skipz
  7152  079F  2FA2               	goto	u3685
  7153  07A0  30FF               	movlw	255
  7154  07A1  0238               	subwf	___flmul@temp,w
  7155  07A2                     u3685:
  7156  07A2  1C03               	skipc
  7157  07A3  2FA5               	goto	u3681
  7158  07A4  2FA6               	goto	u3680
  7159  07A5                     u3681:
  7160  07A5  2FB1               	goto	l2580
  7161  07A6                     u3680:
  7162  07A6                     l2578:
  7163  07A6  307F               	movlw	127
  7164  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  7165  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  7166  07A9  00B7               	movwf	___flmul@prod+3
  7167  07AA  3080               	movlw	128
  7168  07AB  00B6               	movwf	___flmul@prod+2
  7169  07AC  3000               	movlw	0
  7170  07AD  00B5               	movwf	___flmul@prod+1
  7171  07AE  3000               	movlw	0
  7172  07AF  00B4               	movwf	___flmul@prod
  7173  07B0  2FE6               	goto	l674
  7174  07B1                     l2580:
  7175  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  7176  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  7177  07B3  0839               	movf	___flmul@temp+1,w
  7178  07B4  3A80               	xorlw	128
  7179  07B5  00FF               	movwf	btemp+1
  7180  07B6  3080               	movlw	128
  7181  07B7  027F               	subwf	btemp+1,w
  7182  07B8  1D03               	skipz
  7183  07B9  2FBC               	goto	u3695
  7184  07BA  3001               	movlw	1
  7185  07BB  0238               	subwf	___flmul@temp,w
  7186  07BC                     u3695:
  7187  07BC  1803               	skipnc
  7188  07BD  2FBF               	goto	u3691
  7189  07BE  2FC0               	goto	u3690
  7190  07BF                     u3691:
  7191  07BF  2FCC               	goto	l2586
  7192  07C0                     u3690:
  7193  07C0                     l2582:
  7194  07C0  3000               	movlw	0
  7195  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  7196  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  7197  07C3  00B7               	movwf	___flmul@prod+3
  7198  07C4  3000               	movlw	0
  7199  07C5  00B6               	movwf	___flmul@prod+2
  7200  07C6  3000               	movlw	0
  7201  07C7  00B5               	movwf	___flmul@prod+1
  7202  07C8  3000               	movlw	0
  7203  07C9  00B4               	movwf	___flmul@prod
  7204  07CA                     l2584:
  7205  07CA  01AD               	clrf	___flmul@sign
  7206  07CB  2FE6               	goto	l674
  7207  07CC                     l2586:
  7208  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  7209  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  7210  07CE  0838               	movf	___flmul@temp,w
  7211  07CF  00A8               	movwf	??___flmul
  7212  07D0  0828               	movf	??___flmul,w
  7213  07D1  00B3               	movwf	___flmul@bexp
  7214  07D2  30FF               	movlw	255
  7215  07D3  05B4               	andwf	___flmul@prod,f
  7216  07D4  30FF               	movlw	255
  7217  07D5  05B5               	andwf	___flmul@prod+1,f
  7218  07D6  307F               	movlw	127
  7219  07D7  05B6               	andwf	___flmul@prod+2,f
  7220  07D8  3000               	movlw	0
  7221  07D9  05B7               	andwf	___flmul@prod+3,f
  7222  07DA                     l2588:
  7223  07DA  1C33               	btfss	___flmul@bexp,0
  7224  07DB  2FDD               	goto	u3701
  7225  07DC  2FDE               	goto	u3700
  7226  07DD                     u3701:
  7227  07DD  2FDF               	goto	l2592
  7228  07DE                     u3700:
  7229  07DE                     l2590:
  7230  07DE  17B6               	bsf	___flmul@prod+2,7
  7231  07DF                     l2592:
  7232  07DF  0833               	movf	___flmul@bexp,w
  7233  07E0  00A8               	movwf	??___flmul
  7234  07E1  1003               	clrc
  7235  07E2  0C28               	rrf	??___flmul,w
  7236  07E3  00A9               	movwf	??___flmul+1
  7237  07E4  0829               	movf	??___flmul+1,w
  7238  07E5  00B7               	movwf	___flmul@prod+3
  7239  07E6                     l674:
  7240  07E6  082D               	movf	___flmul@sign,w
  7241  07E7  00A8               	movwf	??___flmul
  7242  07E8  0828               	movf	??___flmul,w
  7243  07E9  04B7               	iorwf	___flmul@prod+3,f
  7244  07EA                     l2594:
  7245  07EA  0837               	movf	___flmul@prod+3,w
  7246  07EB  00A3               	movwf	?___flmul+3
  7247  07EC  0836               	movf	___flmul@prod+2,w
  7248  07ED  00A2               	movwf	?___flmul+2
  7249  07EE  0835               	movf	___flmul@prod+1,w
  7250  07EF  00A1               	movwf	?___flmul+1
  7251  07F0  0834               	movf	___flmul@prod,w
  7252  07F1  00A0               	movwf	?___flmul
  7253  07F2                     l662:
  7254  07F2  0008               	return
  7255  07F3                     __end_of___flmul:
  7256                           
  7257                           	psect	text18
  7258  1362                     __ptext18:	
  7259 ;; *************** function __Umul8_16 *****************
  7260 ;; Defined at:
  7261 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;  multiplier      1    wreg     unsigned char 
  7264 ;;  multiplicand    1    0[COMMON] unsigned char 
  7265 ;; Auto vars:     Size  Location     Type
  7266 ;;  multiplier      1    8[COMMON] unsigned char 
  7267 ;;  word_mpld       2    6[COMMON] unsigned int 
  7268 ;;  product         2    4[COMMON] unsigned int 
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  2    0[COMMON] unsigned int 
  7271 ;; Registers used:
  7272 ;;		wreg, status,2, status,0
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7278 ;;      Params:         2       0       0       0       0
  7279 ;;      Locals:         5       0       0       0       0
  7280 ;;      Temps:          2       0       0       0       0
  7281 ;;      Totals:         9       0       0       0       0
  7282 ;;Total ram usage:        9 bytes
  7283 ;; Hardware stack levels used:    1
  7284 ;; This function calls:
  7285 ;;		Nothing
  7286 ;; This function is called by:
  7287 ;;		___flmul
  7288 ;; This function uses a non-reentrant model
  7289 ;;
  7290                           
  7291                           
  7292                           ;psect for function __Umul8_16
  7293  1362                     __Umul8_16:
  7294                           
  7295                           ;incstack = 0
  7296                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7297                           ;__Umul8_16@multiplier stored from wreg
  7298  1362  00F8               	movwf	__Umul8_16@multiplier
  7299  1363                     l2188:
  7300  1363  01F4               	clrf	__Umul8_16@product
  7301  1364  01F5               	clrf	__Umul8_16@product+1
  7302  1365                     l2190:
  7303  1365  0870               	movf	__Umul8_16@multiplicand,w
  7304  1366  00F2               	movwf	??__Umul8_16
  7305  1367  01F3               	clrf	??__Umul8_16+1
  7306  1368  0872               	movf	??__Umul8_16,w
  7307  1369  00F6               	movwf	__Umul8_16@word_mpld
  7308  136A  0873               	movf	??__Umul8_16+1,w
  7309  136B  00F7               	movwf	__Umul8_16@word_mpld+1
  7310  136C                     l2192:
  7311  136C  1C78               	btfss	__Umul8_16@multiplier,0
  7312  136D  2B6F               	goto	u2781
  7313  136E  2B70               	goto	u2780
  7314  136F                     u2781:
  7315  136F  2B76               	goto	l681
  7316  1370                     u2780:
  7317  1370                     l2194:
  7318  1370  0876               	movf	__Umul8_16@word_mpld,w
  7319  1371  07F4               	addwf	__Umul8_16@product,f
  7320  1372  1803               	skipnc
  7321  1373  0AF5               	incf	__Umul8_16@product+1,f
  7322  1374  0877               	movf	__Umul8_16@word_mpld+1,w
  7323  1375  07F5               	addwf	__Umul8_16@product+1,f
  7324  1376                     l681:
  7325  1376  3001               	movlw	1
  7326  1377                     u2795:
  7327  1377  1003               	clrc
  7328  1378  0DF6               	rlf	__Umul8_16@word_mpld,f
  7329  1379  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7330  137A  3EFF               	addlw	-1
  7331  137B  1D03               	skipz
  7332  137C  2B77               	goto	u2795
  7333  137D  1003               	clrc
  7334  137E  0CF8               	rrf	__Umul8_16@multiplier,f
  7335  137F                     l2196:
  7336  137F  0878               	movf	__Umul8_16@multiplier,w
  7337  1380  1D03               	btfss	3,2
  7338  1381  2B83               	goto	u2801
  7339  1382  2B84               	goto	u2800
  7340  1383                     u2801:
  7341  1383  2B6C               	goto	l2192
  7342  1384                     u2800:
  7343  1384                     l2198:
  7344  1384  0875               	movf	__Umul8_16@product+1,w
  7345  1385  00F1               	movwf	?__Umul8_16+1
  7346  1386  0874               	movf	__Umul8_16@product,w
  7347  1387  00F0               	movwf	?__Umul8_16
  7348  1388                     l683:
  7349  1388  0008               	return
  7350  1389                     __end_of__Umul8_16:
  7351                           
  7352                           	psect	text19
  7353  1581                     __ptext19:	
  7354 ;; *************** function ___flge *****************
  7355 ;; Defined at:
  7356 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;  ff1             4    0[COMMON] unsigned int 
  7359 ;;  ff2             4    4[COMMON] unsigned int 
  7360 ;; Auto vars:     Size  Location     Type
  7361 ;;		None
  7362 ;; Return value:  Size  Location     Type
  7363 ;;		None               void
  7364 ;; Registers used:
  7365 ;;		wreg, status,2, status,0
  7366 ;; Tracked objects:
  7367 ;;		On entry : 0/0
  7368 ;;		On exit  : 0/0
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7371 ;;      Params:         8       0       0       0       0
  7372 ;;      Locals:         0       0       0       0       0
  7373 ;;      Temps:          4       0       0       0       0
  7374 ;;      Totals:        12       0       0       0       0
  7375 ;;Total ram usage:       12 bytes
  7376 ;; Hardware stack levels used:    1
  7377 ;; This function calls:
  7378 ;;		Nothing
  7379 ;; This function is called by:
  7380 ;;		_ftoa
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           
  7385                           ;psect for function ___flge
  7386  1581                     ___flge:
  7387  1581                     l2246:	
  7388                           ;incstack = 0
  7389                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7390                           
  7391  1581  3000               	movlw	0
  7392  1582  0570               	andwf	___flge@ff1,w
  7393  1583  00F8               	movwf	??___flge
  7394  1584  3000               	movlw	0
  7395  1585  0571               	andwf	___flge@ff1+1,w
  7396  1586  00F9               	movwf	??___flge+1
  7397  1587  3080               	movlw	128
  7398  1588  0572               	andwf	___flge@ff1+2,w
  7399  1589  00FA               	movwf	??___flge+2
  7400  158A  307F               	movlw	127
  7401  158B  0573               	andwf	___flge@ff1+3,w
  7402  158C  00FB               	movwf	??___flge+3
  7403  158D  087B               	movf	??___flge+3,w
  7404  158E  047A               	iorwf	??___flge+2,w
  7405  158F  0479               	iorwf	??___flge+1,w
  7406  1590  0478               	iorwf	??___flge,w
  7407  1591  1D03               	skipz
  7408  1592  2D94               	goto	u2871
  7409  1593  2D95               	goto	u2870
  7410  1594                     u2871:
  7411  1594  2D9D               	goto	l447
  7412  1595                     u2870:
  7413  1595                     l2248:
  7414  1595  3000               	movlw	0
  7415  1596  00F3               	movwf	___flge@ff1+3
  7416  1597  3000               	movlw	0
  7417  1598  00F2               	movwf	___flge@ff1+2
  7418  1599  3000               	movlw	0
  7419  159A  00F1               	movwf	___flge@ff1+1
  7420  159B  3000               	movlw	0
  7421  159C  00F0               	movwf	___flge@ff1
  7422  159D                     l447:
  7423  159D  3000               	movlw	0
  7424  159E  0574               	andwf	___flge@ff2,w
  7425  159F  00F8               	movwf	??___flge
  7426  15A0  3000               	movlw	0
  7427  15A1  0575               	andwf	___flge@ff2+1,w
  7428  15A2  00F9               	movwf	??___flge+1
  7429  15A3  3080               	movlw	128
  7430  15A4  0576               	andwf	___flge@ff2+2,w
  7431  15A5  00FA               	movwf	??___flge+2
  7432  15A6  307F               	movlw	127
  7433  15A7  0577               	andwf	___flge@ff2+3,w
  7434  15A8  00FB               	movwf	??___flge+3
  7435  15A9  087B               	movf	??___flge+3,w
  7436  15AA  047A               	iorwf	??___flge+2,w
  7437  15AB  0479               	iorwf	??___flge+1,w
  7438  15AC  0478               	iorwf	??___flge,w
  7439  15AD  1D03               	skipz
  7440  15AE  2DB0               	goto	u2881
  7441  15AF  2DB1               	goto	u2880
  7442  15B0                     u2881:
  7443  15B0  2DB9               	goto	l2252
  7444  15B1                     u2880:
  7445  15B1                     l2250:
  7446  15B1  3000               	movlw	0
  7447  15B2  00F7               	movwf	___flge@ff2+3
  7448  15B3  3000               	movlw	0
  7449  15B4  00F6               	movwf	___flge@ff2+2
  7450  15B5  3000               	movlw	0
  7451  15B6  00F5               	movwf	___flge@ff2+1
  7452  15B7  3000               	movlw	0
  7453  15B8  00F4               	movwf	___flge@ff2
  7454  15B9                     l2252:
  7455  15B9  1FF3               	btfss	___flge@ff1+3,7
  7456  15BA  2DBC               	goto	u2891
  7457  15BB  2DBD               	goto	u2890
  7458  15BC                     u2891:
  7459  15BC  2DE1               	goto	l2256
  7460  15BD                     u2890:
  7461  15BD                     l2254:
  7462  15BD  3000               	movlw	0
  7463  15BE  00F8               	movwf	??___flge
  7464  15BF  3000               	movlw	0
  7465  15C0  00F9               	movwf	??___flge+1
  7466  15C1  3000               	movlw	0
  7467  15C2  00FA               	movwf	??___flge+2
  7468  15C3  3080               	movlw	128
  7469  15C4  00FB               	movwf	??___flge+3
  7470  15C5  0870               	movf	___flge@ff1,w
  7471  15C6  02F8               	subwf	??___flge,f
  7472  15C7  0871               	movf	___flge@ff1+1,w
  7473  15C8  1C03               	skipc
  7474  15C9  0F71               	incfsz	___flge@ff1+1,w
  7475  15CA  2DCC               	goto	u2901
  7476  15CB  2DCD               	goto	u2902
  7477  15CC                     u2901:
  7478  15CC  02F9               	subwf	??___flge+1,f
  7479  15CD                     u2902:
  7480  15CD  0872               	movf	___flge@ff1+2,w
  7481  15CE  1C03               	skipc
  7482  15CF  0F72               	incfsz	___flge@ff1+2,w
  7483  15D0  2DD2               	goto	u2903
  7484  15D1  2DD3               	goto	u2904
  7485  15D2                     u2903:
  7486  15D2  02FA               	subwf	??___flge+2,f
  7487  15D3                     u2904:
  7488  15D3  0873               	movf	___flge@ff1+3,w
  7489  15D4  1C03               	skipc
  7490  15D5  0F73               	incfsz	___flge@ff1+3,w
  7491  15D6  2DD8               	goto	u2905
  7492  15D7  2DD9               	goto	u2906
  7493  15D8                     u2905:
  7494  15D8  02FB               	subwf	??___flge+3,f
  7495  15D9                     u2906:
  7496  15D9  087B               	movf	??___flge+3,w
  7497  15DA  00F3               	movwf	___flge@ff1+3
  7498  15DB  087A               	movf	??___flge+2,w
  7499  15DC  00F2               	movwf	___flge@ff1+2
  7500  15DD  0879               	movf	??___flge+1,w
  7501  15DE  00F1               	movwf	___flge@ff1+1
  7502  15DF  0878               	movf	??___flge,w
  7503  15E0  00F0               	movwf	___flge@ff1
  7504  15E1                     l2256:
  7505  15E1  1FF7               	btfss	___flge@ff2+3,7
  7506  15E2  2DE4               	goto	u2911
  7507  15E3  2DE5               	goto	u2910
  7508  15E4                     u2911:
  7509  15E4  2E09               	goto	l450
  7510  15E5                     u2910:
  7511  15E5                     l2258:
  7512  15E5  3000               	movlw	0
  7513  15E6  00F8               	movwf	??___flge
  7514  15E7  3000               	movlw	0
  7515  15E8  00F9               	movwf	??___flge+1
  7516  15E9  3000               	movlw	0
  7517  15EA  00FA               	movwf	??___flge+2
  7518  15EB  3080               	movlw	128
  7519  15EC  00FB               	movwf	??___flge+3
  7520  15ED  0874               	movf	___flge@ff2,w
  7521  15EE  02F8               	subwf	??___flge,f
  7522  15EF  0875               	movf	___flge@ff2+1,w
  7523  15F0  1C03               	skipc
  7524  15F1  0F75               	incfsz	___flge@ff2+1,w
  7525  15F2  2DF4               	goto	u2921
  7526  15F3  2DF5               	goto	u2922
  7527  15F4                     u2921:
  7528  15F4  02F9               	subwf	??___flge+1,f
  7529  15F5                     u2922:
  7530  15F5  0876               	movf	___flge@ff2+2,w
  7531  15F6  1C03               	skipc
  7532  15F7  0F76               	incfsz	___flge@ff2+2,w
  7533  15F8  2DFA               	goto	u2923
  7534  15F9  2DFB               	goto	u2924
  7535  15FA                     u2923:
  7536  15FA  02FA               	subwf	??___flge+2,f
  7537  15FB                     u2924:
  7538  15FB  0877               	movf	___flge@ff2+3,w
  7539  15FC  1C03               	skipc
  7540  15FD  0F77               	incfsz	___flge@ff2+3,w
  7541  15FE  2E00               	goto	u2925
  7542  15FF  2E01               	goto	u2926
  7543  1600                     u2925:
  7544  1600  02FB               	subwf	??___flge+3,f
  7545  1601                     u2926:
  7546  1601  087B               	movf	??___flge+3,w
  7547  1602  00F7               	movwf	___flge@ff2+3
  7548  1603  087A               	movf	??___flge+2,w
  7549  1604  00F6               	movwf	___flge@ff2+2
  7550  1605  0879               	movf	??___flge+1,w
  7551  1606  00F5               	movwf	___flge@ff2+1
  7552  1607  0878               	movf	??___flge,w
  7553  1608  00F4               	movwf	___flge@ff2
  7554  1609                     l450:
  7555  1609  3080               	movlw	128
  7556  160A  06F3               	xorwf	___flge@ff1+3,f
  7557  160B  3080               	movlw	128
  7558  160C  06F7               	xorwf	___flge@ff2+3,f
  7559  160D  0877               	movf	___flge@ff2+3,w
  7560  160E  0273               	subwf	___flge@ff1+3,w
  7561  160F  1D03               	skipz
  7562  1610  2E1B               	goto	u2935
  7563  1611  0876               	movf	___flge@ff2+2,w
  7564  1612  0272               	subwf	___flge@ff1+2,w
  7565  1613  1D03               	skipz
  7566  1614  2E1B               	goto	u2935
  7567  1615  0875               	movf	___flge@ff2+1,w
  7568  1616  0271               	subwf	___flge@ff1+1,w
  7569  1617  1D03               	skipz
  7570  1618  2E1B               	goto	u2935
  7571  1619  0874               	movf	___flge@ff2,w
  7572  161A  0270               	subwf	___flge@ff1,w
  7573  161B                     u2935:
  7574  161B  1803               	skipnc
  7575  161C  2E1E               	goto	u2931
  7576  161D  2E1F               	goto	u2930
  7577  161E                     u2931:
  7578  161E  2E21               	goto	l2262
  7579  161F                     u2930:
  7580  161F                     l2260:
  7581  161F  1003               	clrc
  7582  1620  2E22               	goto	l451
  7583  1621                     l2262:
  7584  1621  1403               	setc
  7585  1622                     l451:
  7586  1622  0008               	return
  7587  1623                     __end_of___flge:
  7588                           
  7589                           	psect	text20
  7590  0031                     __ptext20:	
  7591 ;; *************** function _confMPU *****************
  7592 ;; Defined at:
  7593 ;;		line 64 in file "MPU6050.c"
  7594 ;; Parameters:    Size  Location     Type
  7595 ;;		None
  7596 ;; Auto vars:     Size  Location     Type
  7597 ;;		None
  7598 ;; Return value:  Size  Location     Type
  7599 ;;                  1    wreg      void 
  7600 ;; Registers used:
  7601 ;;		wreg, status,2, status,0, pclath, cstack
  7602 ;; Tracked objects:
  7603 ;;		On entry : 0/0
  7604 ;;		On exit  : 0/0
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7607 ;;      Params:         0       0       0       0       0
  7608 ;;      Locals:         0       0       0       0       0
  7609 ;;      Temps:          0       0       0       0       0
  7610 ;;      Totals:         0       0       0       0       0
  7611 ;;Total ram usage:        0 bytes
  7612 ;; Hardware stack levels used:    1
  7613 ;; Hardware stack levels required when called:    2
  7614 ;; This function calls:
  7615 ;;		_I2C_Master_Start
  7616 ;;		_I2C_Master_Stop
  7617 ;;		_I2C_Master_Write
  7618 ;; This function is called by:
  7619 ;;		_main
  7620 ;; This function uses a non-reentrant model
  7621 ;;
  7622                           
  7623                           
  7624                           ;psect for function _confMPU
  7625  0031                     _confMPU:
  7626  0031                     l2790:	
  7627                           ;incstack = 0
  7628                           ; Regs used in _confMPU: [wreg+status,2+status,0+pclath+cstack]
  7629                           
  7630                           
  7631                           ;MPU6050.c: 66:     I2C_Master_Start();
  7632  0031  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Start
  7633                           
  7634                           ;MPU6050.c: 67:     I2C_Master_Write(0xD0);
  7635  0036  30D0               	movlw	208
  7636  0037  160A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  7637                           
  7638                           ;MPU6050.c: 68:     I2C_Master_Write(0x6B);
  7639  003C  306B               	movlw	107
  7640  003D  160A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  7641                           
  7642                           ;MPU6050.c: 69:     I2C_Master_Write(0x01);
  7643  0042  3001               	movlw	1
  7644  0043  160A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  7645                           
  7646                           ;MPU6050.c: 70:     I2C_Master_Stop();
  7647  0048  160A  118A  22C0  120A  118A  	fcall	_I2C_Master_Stop
  7648                           
  7649                           ;MPU6050.c: 72:     I2C_Master_Start();
  7650  004D  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Start
  7651                           
  7652                           ;MPU6050.c: 73:     I2C_Master_Write(0xD0);
  7653  0052  30D0               	movlw	208
  7654  0053  160A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  7655                           
  7656                           ;MPU6050.c: 74:     I2C_Master_Write(0x00);
  7657  0058  3000               	movlw	0
  7658  0059  160A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  7659                           
  7660                           ;MPU6050.c: 75:     I2C_Master_Stop();
  7661  005E  160A  118A  22C0  120A  118A  	fcall	_I2C_Master_Stop
  7662                           
  7663                           ;MPU6050.c: 78:     I2C_Master_Start();
  7664  0063  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Start
  7665                           
  7666                           ;MPU6050.c: 79:     I2C_Master_Write(0xD0);
  7667  0068  30D0               	movlw	208
  7668  0069  160A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  7669                           
  7670                           ;MPU6050.c: 80:     I2C_Master_Write(0x19);
  7671  006E  3019               	movlw	25
  7672  006F  160A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  7673                           
  7674                           ;MPU6050.c: 81:     I2C_Master_Write(0x08);
  7675  0074  3008               	movlw	8
  7676  0075  160A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  7677                           
  7678                           ;MPU6050.c: 82:     I2C_Master_Stop();
  7679  007A  160A  118A  22C0  120A  118A  	fcall	_I2C_Master_Stop
  7680                           
  7681                           ;MPU6050.c: 84:     I2C_Master_Start();
  7682  007F  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Start
  7683                           
  7684                           ;MPU6050.c: 85:     I2C_Master_Write(0xD0);
  7685  0084  30D0               	movlw	208
  7686  0085  160A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  7687                           
  7688                           ;MPU6050.c: 86:     I2C_Master_Write(0x1A);
  7689  008A  301A               	movlw	26
  7690  008B  160A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  7691                           
  7692                           ;MPU6050.c: 87:     I2C_Master_Write(0x00);
  7693  0090  3000               	movlw	0
  7694  0091  160A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  7695                           
  7696                           ;MPU6050.c: 88:     I2C_Master_Stop();
  7697  0096  160A  118A  22C0  120A  118A  	fcall	_I2C_Master_Stop
  7698                           
  7699                           ;MPU6050.c: 90:     I2C_Master_Start();
  7700  009B  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Start
  7701                           
  7702                           ;MPU6050.c: 91:     I2C_Master_Write(0xD0);
  7703  00A0  30D0               	movlw	208
  7704  00A1  160A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  7705                           
  7706                           ;MPU6050.c: 92:     I2C_Master_Write(0x1B);
  7707  00A6  301B               	movlw	27
  7708  00A7  160A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  7709                           
  7710                           ;MPU6050.c: 93:     I2C_Master_Write(0x00);
  7711  00AC  3000               	movlw	0
  7712  00AD  160A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  7713                           
  7714                           ;MPU6050.c: 94:     I2C_Master_Stop();
  7715  00B2  160A  118A  22C0  120A  118A  	fcall	_I2C_Master_Stop
  7716                           
  7717                           ;MPU6050.c: 96:     I2C_Master_Start();
  7718  00B7  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Start
  7719                           
  7720                           ;MPU6050.c: 97:     I2C_Master_Write(0xD0);
  7721  00BC  30D0               	movlw	208
  7722  00BD  160A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  7723                           
  7724                           ;MPU6050.c: 98:     I2C_Master_Write(0x1C);
  7725  00C2  301C               	movlw	28
  7726  00C3  160A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  7727                           
  7728                           ;MPU6050.c: 99:     I2C_Master_Write(0x00);
  7729  00C8  3000               	movlw	0
  7730  00C9  160A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  7731                           
  7732                           ;MPU6050.c: 100:     I2C_Master_Stop();
  7733  00CE  160A  118A  22C0  120A  118A  	fcall	_I2C_Master_Stop
  7734                           
  7735                           ;MPU6050.c: 104:     I2C_Master_Start();
  7736  00D3  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Start
  7737                           
  7738                           ;MPU6050.c: 105:     I2C_Master_Write(0x68);
  7739  00D8  3068               	movlw	104
  7740  00D9  160A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  7741                           
  7742                           ;MPU6050.c: 106:     I2C_Master_Write(0x6C);
  7743  00DE  306C               	movlw	108
  7744  00DF  160A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  7745                           
  7746                           ;MPU6050.c: 107:     I2C_Master_Write(0x00);
  7747  00E4  3000               	movlw	0
  7748  00E5  160A  118A  230C  120A  118A  	fcall	_I2C_Master_Write
  7749                           
  7750                           ;MPU6050.c: 108:     I2C_Master_Stop();
  7751  00EA  160A  118A  22C0  120A  118A  	fcall	_I2C_Master_Stop
  7752  00EF                     l187:
  7753  00EF  0008               	return
  7754  00F0                     __end_of_confMPU:
  7755                           
  7756                           	psect	text21
  7757  130C                     __ptext21:	
  7758 ;; *************** function _I2C_Master_Write *****************
  7759 ;; Defined at:
  7760 ;;		line 63 in file "I2C.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;  data            1    wreg     unsigned char 
  7763 ;; Auto vars:     Size  Location     Type
  7764 ;;  data            1    0[COMMON] unsigned char 
  7765 ;; Return value:  Size  Location     Type
  7766 ;;                  1    wreg      unsigned char 
  7767 ;; Registers used:
  7768 ;;		wreg, status,2, status,0, pclath, cstack
  7769 ;; Tracked objects:
  7770 ;;		On entry : 0/0
  7771 ;;		On exit  : 0/0
  7772 ;;		Unchanged: 0/0
  7773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7774 ;;      Params:         0       0       0       0       0
  7775 ;;      Locals:         1       0       0       0       0
  7776 ;;      Temps:          0       0       0       0       0
  7777 ;;      Totals:         1       0       0       0       0
  7778 ;;Total ram usage:        1 bytes
  7779 ;; Hardware stack levels used:    1
  7780 ;; Hardware stack levels required when called:    1
  7781 ;; This function calls:
  7782 ;;		_I2C_Master_Wait
  7783 ;; This function is called by:
  7784 ;;		_I2C_Start
  7785 ;;		_readMPU
  7786 ;;		_confMPU
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790                           
  7791                           ;psect for function _I2C_Master_Write
  7792  130C                     _I2C_Master_Write:
  7793                           
  7794                           ;incstack = 0
  7795                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  7796                           ;I2C_Master_Write@data stored from wreg
  7797  130C  00F0               	movwf	I2C_Master_Write@data
  7798  130D                     l1928:
  7799                           
  7800                           ;I2C.c: 63: unsigned char I2C_Master_Write(unsigned char data);I2C.c: 64: {;I2C.c: 65:  
      +                             I2C_Master_Wait();
  7801  130D  160A  118A  22FF  160A  118A  	fcall	_I2C_Master_Wait
  7802  1312                     l1930:
  7803                           
  7804                           ;I2C.c: 66:     SSPBUF = data;
  7805  1312  0870               	movf	I2C_Master_Write@data,w
  7806  1313  1283               	bcf	3,5	;RP0=0, select bank0
  7807  1314  1303               	bcf	3,6	;RP1=0, select bank0
  7808  1315  0093               	movwf	19	;volatile
  7809  1316                     l70:	
  7810                           ;I2C.c: 67:     while(!SSPIF);
  7811                           
  7812  1316  1D8C               	btfss	12,3	;volatile
  7813  1317  2B19               	goto	u2121
  7814  1318  2B1A               	goto	u2120
  7815  1319                     u2121:
  7816  1319  2B16               	goto	l70
  7817  131A                     u2120:
  7818  131A                     l72:
  7819                           
  7820                           ;I2C.c: 68:  SSPIF = 0;
  7821  131A  118C               	bcf	12,3	;volatile
  7822  131B                     l73:	
  7823                           ;I2C.c: 69:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  7824                           
  7825  131B  0008               	return
  7826  131C                     __end_of_I2C_Master_Write:
  7827                           
  7828                           	psect	text22
  7829  12C0                     __ptext22:	
  7830 ;; *************** function _I2C_Master_Stop *****************
  7831 ;; Defined at:
  7832 ;;		line 43 in file "I2C.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;		None
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;		None
  7837 ;; Return value:  Size  Location     Type
  7838 ;;                  1    wreg      void 
  7839 ;; Registers used:
  7840 ;;		wreg, status,2, status,0, pclath, cstack
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7846 ;;      Params:         0       0       0       0       0
  7847 ;;      Locals:         0       0       0       0       0
  7848 ;;      Temps:          0       0       0       0       0
  7849 ;;      Totals:         0       0       0       0       0
  7850 ;;Total ram usage:        0 bytes
  7851 ;; Hardware stack levels used:    1
  7852 ;; Hardware stack levels required when called:    1
  7853 ;; This function calls:
  7854 ;;		_I2C_Master_Wait
  7855 ;; This function is called by:
  7856 ;;		_readMPU
  7857 ;;		_confMPU
  7858 ;; This function uses a non-reentrant model
  7859 ;;
  7860                           
  7861                           
  7862                           ;psect for function _I2C_Master_Stop
  7863  12C0                     _I2C_Master_Stop:
  7864  12C0                     l2222:	
  7865                           ;incstack = 0
  7866                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  7867                           
  7868                           
  7869                           ;I2C.c: 45:     I2C_Master_Wait();
  7870  12C0  160A  118A  22FF  160A  118A  	fcall	_I2C_Master_Wait
  7871  12C5                     l2224:
  7872                           
  7873                           ;I2C.c: 46:     PEN = 1;
  7874  12C5  1683               	bsf	3,5	;RP0=1, select bank1
  7875  12C6  1303               	bcf	3,6	;RP1=0, select bank1
  7876  12C7  1511               	bsf	17,2	;volatile
  7877  12C8                     l55:
  7878  12C8  0008               	return
  7879  12C9                     __end_of_I2C_Master_Stop:
  7880                           
  7881                           	psect	text23
  7882  12B7                     __ptext23:	
  7883 ;; *************** function _I2C_Master_Start *****************
  7884 ;; Defined at:
  7885 ;;		line 24 in file "I2C.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;		None
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;		None
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  1    wreg      void 
  7892 ;; Registers used:
  7893 ;;		wreg, status,2, status,0, pclath, cstack
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7899 ;;      Params:         0       0       0       0       0
  7900 ;;      Locals:         0       0       0       0       0
  7901 ;;      Temps:          0       0       0       0       0
  7902 ;;      Totals:         0       0       0       0       0
  7903 ;;Total ram usage:        0 bytes
  7904 ;; Hardware stack levels used:    1
  7905 ;; Hardware stack levels required when called:    1
  7906 ;; This function calls:
  7907 ;;		_I2C_Master_Wait
  7908 ;; This function is called by:
  7909 ;;		_readMPU
  7910 ;;		_confMPU
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           
  7915                           ;psect for function _I2C_Master_Start
  7916  12B7                     _I2C_Master_Start:
  7917  12B7                     l2214:	
  7918                           ;incstack = 0
  7919                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  7920                           
  7921                           
  7922                           ;I2C.c: 26:     I2C_Master_Wait();
  7923  12B7  160A  118A  22FF  160A  118A  	fcall	_I2C_Master_Wait
  7924  12BC                     l2216:
  7925                           
  7926                           ;I2C.c: 27:     SEN = 1;
  7927  12BC  1683               	bsf	3,5	;RP0=1, select bank1
  7928  12BD  1303               	bcf	3,6	;RP1=0, select bank1
  7929  12BE  1411               	bsf	17,0	;volatile
  7930  12BF                     l46:
  7931  12BF  0008               	return
  7932  12C0                     __end_of_I2C_Master_Start:
  7933                           
  7934                           	psect	text24
  7935  12FF                     __ptext24:	
  7936 ;; *************** function _I2C_Master_Wait *****************
  7937 ;; Defined at:
  7938 ;;		line 19 in file "I2C.c"
  7939 ;; Parameters:    Size  Location     Type
  7940 ;;		None
  7941 ;; Auto vars:     Size  Location     Type
  7942 ;;		None
  7943 ;; Return value:  Size  Location     Type
  7944 ;;                  1    wreg      void 
  7945 ;; Registers used:
  7946 ;;		wreg, status,2
  7947 ;; Tracked objects:
  7948 ;;		On entry : 0/0
  7949 ;;		On exit  : 0/0
  7950 ;;		Unchanged: 0/0
  7951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7952 ;;      Params:         0       0       0       0       0
  7953 ;;      Locals:         0       0       0       0       0
  7954 ;;      Temps:          0       0       0       0       0
  7955 ;;      Totals:         0       0       0       0       0
  7956 ;;Total ram usage:        0 bytes
  7957 ;; Hardware stack levels used:    1
  7958 ;; This function calls:
  7959 ;;		Nothing
  7960 ;; This function is called by:
  7961 ;;		_I2C_Master_Start
  7962 ;;		_I2C_Start
  7963 ;;		_I2C_Master_Stop
  7964 ;;		_I2C_Master_Write
  7965 ;;		_I2C_Read
  7966 ;;		_I2C_Master_RepeatedStart
  7967 ;;		_I2C_Read_Byte
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           
  7971                           
  7972                           ;psect for function _I2C_Master_Wait
  7973  12FF                     _I2C_Master_Wait:
  7974  12FF                     l1924:	
  7975                           ;incstack = 0
  7976                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  7977                           
  7978  12FF                     l40:	
  7979                           ;I2C.c: 21:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  7980                           
  7981  12FF  1683               	bsf	3,5	;RP0=1, select bank1
  7982  1300  1303               	bcf	3,6	;RP1=0, select bank1
  7983  1301  1914               	btfsc	20,2	;volatile
  7984  1302  2B04               	goto	u2101
  7985  1303  2B05               	goto	u2100
  7986  1304                     u2101:
  7987  1304  2AFF               	goto	l40
  7988  1305                     u2100:
  7989  1305                     l1926:
  7990  1305  0811               	movf	17,w	;volatile
  7991  1306  391F               	andlw	31
  7992  1307  1D03               	btfss	3,2
  7993  1308  2B0A               	goto	u2111
  7994  1309  2B0B               	goto	u2110
  7995  130A                     u2111:
  7996  130A  2AFF               	goto	l40
  7997  130B                     u2110:
  7998  130B                     l43:
  7999  130B  0008               	return
  8000  130C                     __end_of_I2C_Master_Wait:
  8001                           
  8002                           	psect	text25
  8003  1389                     __ptext25:	
  8004 ;; *************** function _UARTSendString *****************
  8005 ;; Defined at:
  8006 ;;		line 49 in file "UART.c"
  8007 ;; Parameters:    Size  Location     Type
  8008 ;;  str             2    1[COMMON] PTR const unsigned char 
  8009 ;;		 -> ftoa@buf(17), STR_8(2), STR_7(2), STR_6(2), 
  8010 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
  8011 ;;		 -> STR_1(14), 
  8012 ;;  max_length      1    3[COMMON] const unsigned char 
  8013 ;; Auto vars:     Size  Location     Type
  8014 ;;  i               2    7[COMMON] int 
  8015 ;; Return value:  Size  Location     Type
  8016 ;;                  1    wreg      void 
  8017 ;; Registers used:
  8018 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8019 ;; Tracked objects:
  8020 ;;		On entry : 0/0
  8021 ;;		On exit  : 0/0
  8022 ;;		Unchanged: 0/0
  8023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8024 ;;      Params:         3       0       0       0       0
  8025 ;;      Locals:         2       0       0       0       0
  8026 ;;      Temps:          3       0       0       0       0
  8027 ;;      Totals:         8       0       0       0       0
  8028 ;;Total ram usage:        8 bytes
  8029 ;; Hardware stack levels used:    1
  8030 ;; Hardware stack levels required when called:    1
  8031 ;; This function calls:
  8032 ;;		_UARTSendChar
  8033 ;; This function is called by:
  8034 ;;		_main
  8035 ;; This function uses a non-reentrant model
  8036 ;;
  8037                           
  8038                           
  8039                           ;psect for function _UARTSendString
  8040  1389                     _UARTSendString:
  8041  1389                     l2840:	
  8042                           ;incstack = 0
  8043                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8044                           
  8045                           
  8046                           ;UART.c: 50:     int i = 0;
  8047  1389  01F7               	clrf	UARTSendString@i
  8048  138A  01F8               	clrf	UARTSendString@i+1
  8049                           
  8050                           ;UART.c: 51:     for (i=0 ; i<max_length && str[i]!='\0' ; i++) {
  8051  138B  01F7               	clrf	UARTSendString@i
  8052  138C  01F8               	clrf	UARTSendString@i+1
  8053  138D  2BB0               	goto	l2846
  8054  138E                     l2842:
  8055                           
  8056                           ;UART.c: 52:         UARTSendChar(str[i]);
  8057  138E  0877               	movf	UARTSendString@i,w
  8058  138F  0771               	addwf	UARTSendString@str,w
  8059  1390  00F5               	movwf	??_UARTSendString+1
  8060  1391  0872               	movf	UARTSendString@str+1,w
  8061  1392  00F4               	movwf	??_UARTSendString
  8062  1393  1803               	skipnc
  8063  1394  0AF4               	incf	??_UARTSendString,f
  8064  1395  1FF7               	btfss	UARTSendString@i,7
  8065  1396  2B98               	goto	u4080
  8066  1397  03F4               	decf	??_UARTSendString,f
  8067  1398                     u4080:
  8068  1398  0874               	movf	??_UARTSendString,w
  8069  1399  00F6               	movwf	??_UARTSendString+2
  8070  139A  0876               	movf	??_UARTSendString+2,w
  8071  139B  1283               	bcf	3,5	;RP0=0, select bank0
  8072  139C  1303               	bcf	3,6	;RP1=0, select bank0
  8073  139D  00FF               	movwf	btemp+1
  8074  139E  0875               	movf	??_UARTSendString+1,w
  8075  139F  0084               	movwf	4
  8076  13A0  160A  118A  2000  160A  118A  	fcall	stringtab
  8077  13A5  160A  118A  22E6  160A  118A  	fcall	_UARTSendChar
  8078  13AA                     l2844:
  8079                           
  8080                           ;UART.c: 53:     }
  8081  13AA  3001               	movlw	1
  8082  13AB  07F7               	addwf	UARTSendString@i,f
  8083  13AC  1803               	skipnc
  8084  13AD  0AF8               	incf	UARTSendString@i+1,f
  8085  13AE  3000               	movlw	0
  8086  13AF  07F8               	addwf	UARTSendString@i+1,f
  8087  13B0                     l2846:
  8088  13B0  0878               	movf	UARTSendString@i+1,w
  8089  13B1  3A80               	xorlw	128
  8090  13B2  00F4               	movwf	??_UARTSendString
  8091  13B3  3080               	movlw	128
  8092  13B4  0274               	subwf	??_UARTSendString,w
  8093  13B5  1D03               	skipz
  8094  13B6  2BB9               	goto	u4095
  8095  13B7  0873               	movf	UARTSendString@max_length,w
  8096  13B8  0277               	subwf	UARTSendString@i,w
  8097  13B9                     u4095:
  8098  13B9  1803               	skipnc
  8099  13BA  2BBC               	goto	u4091
  8100  13BB  2BBD               	goto	u4090
  8101  13BC                     u4091:
  8102  13BC  2BD9               	goto	l151
  8103  13BD                     u4090:
  8104  13BD                     l2848:
  8105  13BD  0877               	movf	UARTSendString@i,w
  8106  13BE  0771               	addwf	UARTSendString@str,w
  8107  13BF  00F5               	movwf	??_UARTSendString+1
  8108  13C0  0872               	movf	UARTSendString@str+1,w
  8109  13C1  00F4               	movwf	??_UARTSendString
  8110  13C2  1803               	skipnc
  8111  13C3  0AF4               	incf	??_UARTSendString,f
  8112  13C4  1FF7               	btfss	UARTSendString@i,7
  8113  13C5  2BC7               	goto	u4100
  8114  13C6  03F4               	decf	??_UARTSendString,f
  8115  13C7                     u4100:
  8116  13C7  0874               	movf	??_UARTSendString,w
  8117  13C8  00F6               	movwf	??_UARTSendString+2
  8118  13C9  0876               	movf	??_UARTSendString+2,w
  8119  13CA  1283               	bcf	3,5	;RP0=0, select bank0
  8120  13CB  1303               	bcf	3,6	;RP1=0, select bank0
  8121  13CC  00FF               	movwf	btemp+1
  8122  13CD  0875               	movf	??_UARTSendString+1,w
  8123  13CE  0084               	movwf	4
  8124  13CF  160A  118A  2000  160A  118A  	fcall	stringtab
  8125  13D4  3A00               	xorlw	0
  8126  13D5  1D03               	skipz
  8127  13D6  2BD8               	goto	u4111
  8128  13D7  2BD9               	goto	u4110
  8129  13D8                     u4111:
  8130  13D8  2B8E               	goto	l2842
  8131  13D9                     u4110:
  8132  13D9                     l151:
  8133  13D9  0008               	return
  8134  13DA                     __end_of_UARTSendString:
  8135                           
  8136                           	psect	text26
  8137  12E6                     __ptext26:	
  8138 ;; *************** function _UARTSendChar *****************
  8139 ;; Defined at:
  8140 ;;		line 39 in file "UART.c"
  8141 ;; Parameters:    Size  Location     Type
  8142 ;;  c               1    wreg     const unsigned char 
  8143 ;; Auto vars:     Size  Location     Type
  8144 ;;  c               1    0[COMMON] const unsigned char 
  8145 ;; Return value:  Size  Location     Type
  8146 ;;                  1    wreg      void 
  8147 ;; Registers used:
  8148 ;;		wreg
  8149 ;; Tracked objects:
  8150 ;;		On entry : 0/0
  8151 ;;		On exit  : 0/0
  8152 ;;		Unchanged: 0/0
  8153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8154 ;;      Params:         0       0       0       0       0
  8155 ;;      Locals:         1       0       0       0       0
  8156 ;;      Temps:          0       0       0       0       0
  8157 ;;      Totals:         1       0       0       0       0
  8158 ;;Total ram usage:        1 bytes
  8159 ;; Hardware stack levels used:    1
  8160 ;; This function calls:
  8161 ;;		Nothing
  8162 ;; This function is called by:
  8163 ;;		_main
  8164 ;;		_UARTSendString
  8165 ;; This function uses a non-reentrant model
  8166 ;;
  8167                           
  8168                           
  8169                           ;psect for function _UARTSendChar
  8170  12E6                     _UARTSendChar:
  8171                           
  8172                           ;incstack = 0
  8173                           ; Regs used in _UARTSendChar: [wreg]
  8174                           ;UARTSendChar@c stored from wreg
  8175  12E6  00F0               	movwf	UARTSendChar@c
  8176  12E7                     l2242:
  8177  12E7                     l140:	
  8178                           ;UART.c: 40:     while (TXSTAbits.TRMT == 0);
  8179                           
  8180  12E7  1683               	bsf	3,5	;RP0=1, select bank1
  8181  12E8  1303               	bcf	3,6	;RP1=0, select bank1
  8182  12E9  1C98               	btfss	24,1	;volatile
  8183  12EA  2AEC               	goto	u2861
  8184  12EB  2AED               	goto	u2860
  8185  12EC                     u2861:
  8186  12EC  2AE7               	goto	l140
  8187  12ED                     u2860:
  8188  12ED                     l2244:
  8189                           
  8190                           ;UART.c: 41:     TXREG = c;
  8191  12ED  0870               	movf	UARTSendChar@c,w
  8192  12EE  1283               	bcf	3,5	;RP0=0, select bank0
  8193  12EF  1303               	bcf	3,6	;RP1=0, select bank0
  8194  12F0  0099               	movwf	25	;volatile
  8195  12F1                     l143:
  8196  12F1  0008               	return
  8197  12F2                     __end_of_UARTSendChar:
  8198                           
  8199                           	psect	text27
  8200  1496                     __ptext27:	
  8201 ;; *************** function _UARTInit *****************
  8202 ;; Defined at:
  8203 ;;		line 8 in file "UART.c"
  8204 ;; Parameters:    Size  Location     Type
  8205 ;;  baud_rate       4    0[BANK0 ] const unsigned long 
  8206 ;;  BRGH            1    4[BANK0 ] const unsigned char 
  8207 ;; Auto vars:     Size  Location     Type
  8208 ;;		None
  8209 ;; Return value:  Size  Location     Type
  8210 ;;                  1    wreg      void 
  8211 ;; Registers used:
  8212 ;;		wreg, status,2, status,0, pclath, cstack
  8213 ;; Tracked objects:
  8214 ;;		On entry : 0/0
  8215 ;;		On exit  : 0/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8218 ;;      Params:         0       5       0       0       0
  8219 ;;      Locals:         0       0       0       0       0
  8220 ;;      Temps:          0       4       0       0       0
  8221 ;;      Totals:         0       9       0       0       0
  8222 ;;Total ram usage:        9 bytes
  8223 ;; Hardware stack levels used:    1
  8224 ;; Hardware stack levels required when called:    1
  8225 ;; This function calls:
  8226 ;;		___lldiv
  8227 ;; This function is called by:
  8228 ;;		_main
  8229 ;; This function uses a non-reentrant model
  8230 ;;
  8231                           
  8232                           
  8233                           ;psect for function _UARTInit
  8234  1496                     _UARTInit:
  8235  1496                     l2760:	
  8236                           ;incstack = 0
  8237                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  8238                           
  8239                           
  8240                           ;UART.c: 10:     if (BRGH == 0) {
  8241  1496  1283               	bcf	3,5	;RP0=0, select bank0
  8242  1497  1303               	bcf	3,6	;RP1=0, select bank0
  8243  1498  0824               	movf	UARTInit@BRGH,w
  8244  1499  1D03               	btfss	3,2
  8245  149A  2C9C               	goto	u4041
  8246  149B  2C9D               	goto	u4040
  8247  149C                     u4041:
  8248  149C  2CCA               	goto	l2766
  8249  149D                     u4040:
  8250  149D                     l2762:
  8251                           
  8252                           ;UART.c: 11:         SPBRG = 4000000/(64*baud_rate) - 1;
  8253  149D  0820               	movf	UARTInit@baud_rate,w
  8254  149E  00A5               	movwf	??_UARTInit
  8255  149F  0821               	movf	UARTInit@baud_rate+1,w
  8256  14A0  00A6               	movwf	??_UARTInit+1
  8257  14A1  0822               	movf	UARTInit@baud_rate+2,w
  8258  14A2  00A7               	movwf	??_UARTInit+2
  8259  14A3  0823               	movf	UARTInit@baud_rate+3,w
  8260  14A4  00A8               	movwf	??_UARTInit+3
  8261  14A5  3006               	movlw	6
  8262  14A6                     u4055:
  8263  14A6  1003               	clrc
  8264  14A7  0DA5               	rlf	??_UARTInit,f
  8265  14A8  0DA6               	rlf	??_UARTInit+1,f
  8266  14A9  0DA7               	rlf	??_UARTInit+2,f
  8267  14AA  0DA8               	rlf	??_UARTInit+3,f
  8268  14AB                     u4050:
  8269  14AB  3EFF               	addlw	-1
  8270  14AC  1D03               	skipz
  8271  14AD  2CA6               	goto	u4055
  8272  14AE  0828               	movf	??_UARTInit+3,w
  8273  14AF  00F3               	movwf	___lldiv@divisor+3
  8274  14B0  0827               	movf	??_UARTInit+2,w
  8275  14B1  00F2               	movwf	___lldiv@divisor+2
  8276  14B2  0826               	movf	??_UARTInit+1,w
  8277  14B3  00F1               	movwf	___lldiv@divisor+1
  8278  14B4  0825               	movf	??_UARTInit,w
  8279  14B5  00F0               	movwf	___lldiv@divisor
  8280  14B6  3000               	movlw	0
  8281  14B7  00F7               	movwf	___lldiv@dividend+3
  8282  14B8  303D               	movlw	61
  8283  14B9  00F6               	movwf	___lldiv@dividend+2
  8284  14BA  3009               	movlw	9
  8285  14BB  00F5               	movwf	___lldiv@dividend+1
  8286  14BC  3000               	movlw	0
  8287  14BD  00F4               	movwf	___lldiv@dividend
  8288  14BE  160A  118A  2430  160A  118A  	fcall	___lldiv
  8289  14C3  0870               	movf	?___lldiv,w
  8290  14C4  3EFF               	addlw	255
  8291  14C5  1683               	bsf	3,5	;RP0=1, select bank1
  8292  14C6  1303               	bcf	3,6	;RP1=0, select bank1
  8293  14C7  0099               	movwf	25	;volatile
  8294  14C8                     l2764:
  8295                           
  8296                           ;UART.c: 12:         TXSTAbits.BRGH = 0;
  8297  14C8  1118               	bcf	24,2	;volatile
  8298                           
  8299                           ;UART.c: 13:     } else {
  8300  14C9  2CF6               	goto	l2770
  8301  14CA                     l2766:
  8302                           
  8303                           ;UART.c: 14:         SPBRG = 4000000/(16*baud_rate) - 1;
  8304  14CA  0820               	movf	UARTInit@baud_rate,w
  8305  14CB  00A5               	movwf	??_UARTInit
  8306  14CC  0821               	movf	UARTInit@baud_rate+1,w
  8307  14CD  00A6               	movwf	??_UARTInit+1
  8308  14CE  0822               	movf	UARTInit@baud_rate+2,w
  8309  14CF  00A7               	movwf	??_UARTInit+2
  8310  14D0  0823               	movf	UARTInit@baud_rate+3,w
  8311  14D1  00A8               	movwf	??_UARTInit+3
  8312  14D2  3004               	movlw	4
  8313  14D3                     u4065:
  8314  14D3  1003               	clrc
  8315  14D4  0DA5               	rlf	??_UARTInit,f
  8316  14D5  0DA6               	rlf	??_UARTInit+1,f
  8317  14D6  0DA7               	rlf	??_UARTInit+2,f
  8318  14D7  0DA8               	rlf	??_UARTInit+3,f
  8319  14D8                     u4060:
  8320  14D8  3EFF               	addlw	-1
  8321  14D9  1D03               	skipz
  8322  14DA  2CD3               	goto	u4065
  8323  14DB  0828               	movf	??_UARTInit+3,w
  8324  14DC  00F3               	movwf	___lldiv@divisor+3
  8325  14DD  0827               	movf	??_UARTInit+2,w
  8326  14DE  00F2               	movwf	___lldiv@divisor+2
  8327  14DF  0826               	movf	??_UARTInit+1,w
  8328  14E0  00F1               	movwf	___lldiv@divisor+1
  8329  14E1  0825               	movf	??_UARTInit,w
  8330  14E2  00F0               	movwf	___lldiv@divisor
  8331  14E3  3000               	movlw	0
  8332  14E4  00F7               	movwf	___lldiv@dividend+3
  8333  14E5  303D               	movlw	61
  8334  14E6  00F6               	movwf	___lldiv@dividend+2
  8335  14E7  3009               	movlw	9
  8336  14E8  00F5               	movwf	___lldiv@dividend+1
  8337  14E9  3000               	movlw	0
  8338  14EA  00F4               	movwf	___lldiv@dividend
  8339  14EB  160A  118A  2430  160A  118A  	fcall	___lldiv
  8340  14F0  0870               	movf	?___lldiv,w
  8341  14F1  3EFF               	addlw	255
  8342  14F2  1683               	bsf	3,5	;RP0=1, select bank1
  8343  14F3  1303               	bcf	3,6	;RP1=0, select bank1
  8344  14F4  0099               	movwf	25	;volatile
  8345  14F5                     l2768:
  8346                           
  8347                           ;UART.c: 15:         TXSTAbits.BRGH = 1;
  8348  14F5  1518               	bsf	24,2	;volatile
  8349  14F6                     l2770:
  8350                           
  8351                           ;UART.c: 19:     TXSTAbits.TX9 = 0;
  8352  14F6  1318               	bcf	24,6	;volatile
  8353  14F7                     l2772:
  8354                           
  8355                           ;UART.c: 20:     TXSTAbits.TXEN = 1;
  8356  14F7  1698               	bsf	24,5	;volatile
  8357  14F8                     l2774:
  8358                           
  8359                           ;UART.c: 21:     TXSTAbits.SYNC = 0;
  8360  14F8  1218               	bcf	24,4	;volatile
  8361  14F9                     l2776:
  8362                           
  8363                           ;UART.c: 24:     RCSTAbits.SPEN = 1;
  8364  14F9  1283               	bcf	3,5	;RP0=0, select bank0
  8365  14FA  1303               	bcf	3,6	;RP1=0, select bank0
  8366  14FB  1798               	bsf	24,7	;volatile
  8367  14FC                     l2778:
  8368                           
  8369                           ;UART.c: 25:     RCSTAbits.RX9 = 0;
  8370  14FC  1318               	bcf	24,6	;volatile
  8371  14FD                     l2780:
  8372                           
  8373                           ;UART.c: 26:     RCSTAbits.CREN = 1;
  8374  14FD  1618               	bsf	24,4	;volatile
  8375  14FE                     l2782:
  8376                           
  8377                           ;UART.c: 27:     RCSTAbits.FERR = 0;
  8378  14FE  1118               	bcf	24,2	;volatile
  8379  14FF                     l2784:
  8380                           
  8381                           ;UART.c: 28:     RCSTAbits.OERR = 0;
  8382  14FF  1098               	bcf	24,1	;volatile
  8383  1500                     l2786:
  8384                           
  8385                           ;UART.c: 31:     TRISCbits.TRISC7 = 1;
  8386  1500  1683               	bsf	3,5	;RP0=1, select bank1
  8387  1501  1303               	bcf	3,6	;RP1=0, select bank1
  8388  1502  1787               	bsf	7,7	;volatile
  8389  1503                     l2788:
  8390                           
  8391                           ;UART.c: 32:     TRISCbits.TRISC6 = 0;
  8392  1503  1307               	bcf	7,6	;volatile
  8393  1504                     l137:
  8394  1504  0008               	return
  8395  1505                     __end_of_UARTInit:
  8396                           
  8397                           	psect	text28
  8398  1430                     __ptext28:	
  8399 ;; *************** function ___lldiv *****************
  8400 ;; Defined at:
  8401 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;  divisor         4    0[COMMON] unsigned long 
  8404 ;;  dividend        4    4[COMMON] unsigned long 
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;  quotient        4    9[COMMON] unsigned long 
  8407 ;;  counter         1   13[COMMON] unsigned char 
  8408 ;; Return value:  Size  Location     Type
  8409 ;;                  4    0[COMMON] unsigned long 
  8410 ;; Registers used:
  8411 ;;		wreg, status,2, status,0
  8412 ;; Tracked objects:
  8413 ;;		On entry : 0/0
  8414 ;;		On exit  : 0/0
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8417 ;;      Params:         8       0       0       0       0
  8418 ;;      Locals:         5       0       0       0       0
  8419 ;;      Temps:          1       0       0       0       0
  8420 ;;      Totals:        14       0       0       0       0
  8421 ;;Total ram usage:       14 bytes
  8422 ;; Hardware stack levels used:    1
  8423 ;; This function calls:
  8424 ;;		Nothing
  8425 ;; This function is called by:
  8426 ;;		_UARTInit
  8427 ;;		_sprintf
  8428 ;; This function uses a non-reentrant model
  8429 ;;
  8430                           
  8431                           
  8432                           ;psect for function ___lldiv
  8433  1430                     ___lldiv:
  8434  1430                     l1950:	
  8435                           ;incstack = 0
  8436                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8437                           
  8438  1430  3000               	movlw	0
  8439  1431  00FC               	movwf	___lldiv@quotient+3
  8440  1432  3000               	movlw	0
  8441  1433  00FB               	movwf	___lldiv@quotient+2
  8442  1434  3000               	movlw	0
  8443  1435  00FA               	movwf	___lldiv@quotient+1
  8444  1436  3000               	movlw	0
  8445  1437  00F9               	movwf	___lldiv@quotient
  8446  1438  0873               	movf	___lldiv@divisor+3,w
  8447  1439  0472               	iorwf	___lldiv@divisor+2,w
  8448  143A  0471               	iorwf	___lldiv@divisor+1,w
  8449  143B  0470               	iorwf	___lldiv@divisor,w
  8450  143C  1903               	skipnz
  8451  143D  2C3F               	goto	u2191
  8452  143E  2C40               	goto	u2190
  8453  143F                     u2191:
  8454  143F  2C8D               	goto	l1970
  8455  1440                     u2190:
  8456  1440                     l1952:
  8457  1440  01FD               	clrf	___lldiv@counter
  8458  1441  0AFD               	incf	___lldiv@counter,f
  8459  1442  2C50               	goto	l1956
  8460  1443                     l1954:
  8461  1443  3001               	movlw	1
  8462  1444  00F8               	movwf	??___lldiv
  8463  1445                     u2205:
  8464  1445  1003               	clrc
  8465  1446  0DF0               	rlf	___lldiv@divisor,f
  8466  1447  0DF1               	rlf	___lldiv@divisor+1,f
  8467  1448  0DF2               	rlf	___lldiv@divisor+2,f
  8468  1449  0DF3               	rlf	___lldiv@divisor+3,f
  8469  144A  0BF8               	decfsz	??___lldiv,f
  8470  144B  2C45               	goto	u2205
  8471  144C  3001               	movlw	1
  8472  144D  00F8               	movwf	??___lldiv
  8473  144E  0878               	movf	??___lldiv,w
  8474  144F  07FD               	addwf	___lldiv@counter,f
  8475  1450                     l1956:
  8476  1450  1FF3               	btfss	___lldiv@divisor+3,7
  8477  1451  2C53               	goto	u2211
  8478  1452  2C54               	goto	u2210
  8479  1453                     u2211:
  8480  1453  2C43               	goto	l1954
  8481  1454                     u2210:
  8482  1454                     l1958:
  8483  1454  3001               	movlw	1
  8484  1455  00F8               	movwf	??___lldiv
  8485  1456                     u2225:
  8486  1456  1003               	clrc
  8487  1457  0DF9               	rlf	___lldiv@quotient,f
  8488  1458  0DFA               	rlf	___lldiv@quotient+1,f
  8489  1459  0DFB               	rlf	___lldiv@quotient+2,f
  8490  145A  0DFC               	rlf	___lldiv@quotient+3,f
  8491  145B  0BF8               	decfsz	??___lldiv,f
  8492  145C  2C56               	goto	u2225
  8493  145D                     l1960:
  8494  145D  0873               	movf	___lldiv@divisor+3,w
  8495  145E  0277               	subwf	___lldiv@dividend+3,w
  8496  145F  1D03               	skipz
  8497  1460  2C6B               	goto	u2235
  8498  1461  0872               	movf	___lldiv@divisor+2,w
  8499  1462  0276               	subwf	___lldiv@dividend+2,w
  8500  1463  1D03               	skipz
  8501  1464  2C6B               	goto	u2235
  8502  1465  0871               	movf	___lldiv@divisor+1,w
  8503  1466  0275               	subwf	___lldiv@dividend+1,w
  8504  1467  1D03               	skipz
  8505  1468  2C6B               	goto	u2235
  8506  1469  0870               	movf	___lldiv@divisor,w
  8507  146A  0274               	subwf	___lldiv@dividend,w
  8508  146B                     u2235:
  8509  146B  1C03               	skipc
  8510  146C  2C6E               	goto	u2231
  8511  146D  2C6F               	goto	u2230
  8512  146E                     u2231:
  8513  146E  2C7E               	goto	l1966
  8514  146F                     u2230:
  8515  146F                     l1962:
  8516  146F  0870               	movf	___lldiv@divisor,w
  8517  1470  02F4               	subwf	___lldiv@dividend,f
  8518  1471  0871               	movf	___lldiv@divisor+1,w
  8519  1472  1C03               	skipc
  8520  1473  0F71               	incfsz	___lldiv@divisor+1,w
  8521  1474  02F5               	subwf	___lldiv@dividend+1,f
  8522  1475  0872               	movf	___lldiv@divisor+2,w
  8523  1476  1C03               	skipc
  8524  1477  0F72               	incfsz	___lldiv@divisor+2,w
  8525  1478  02F6               	subwf	___lldiv@dividend+2,f
  8526  1479  0873               	movf	___lldiv@divisor+3,w
  8527  147A  1C03               	skipc
  8528  147B  0F73               	incfsz	___lldiv@divisor+3,w
  8529  147C  02F7               	subwf	___lldiv@dividend+3,f
  8530  147D                     l1964:
  8531  147D  1479               	bsf	___lldiv@quotient,0
  8532  147E                     l1966:
  8533  147E  3001               	movlw	1
  8534  147F                     u2245:
  8535  147F  1003               	clrc
  8536  1480  0CF3               	rrf	___lldiv@divisor+3,f
  8537  1481  0CF2               	rrf	___lldiv@divisor+2,f
  8538  1482  0CF1               	rrf	___lldiv@divisor+1,f
  8539  1483  0CF0               	rrf	___lldiv@divisor,f
  8540  1484  3EFF               	addlw	-1
  8541  1485  1D03               	skipz
  8542  1486  2C7F               	goto	u2245
  8543  1487                     l1968:
  8544  1487  3001               	movlw	1
  8545  1488  02FD               	subwf	___lldiv@counter,f
  8546  1489  1D03               	btfss	3,2
  8547  148A  2C8C               	goto	u2251
  8548  148B  2C8D               	goto	u2250
  8549  148C                     u2251:
  8550  148C  2C54               	goto	l1958
  8551  148D                     u2250:
  8552  148D                     l1970:
  8553  148D  087C               	movf	___lldiv@quotient+3,w
  8554  148E  00F3               	movwf	?___lldiv+3
  8555  148F  087B               	movf	___lldiv@quotient+2,w
  8556  1490  00F2               	movwf	?___lldiv+2
  8557  1491  087A               	movf	___lldiv@quotient+1,w
  8558  1492  00F1               	movwf	?___lldiv+1
  8559  1493  0879               	movf	___lldiv@quotient,w
  8560  1494  00F0               	movwf	?___lldiv
  8561  1495                     l309:
  8562  1495  0008               	return
  8563  1496                     __end_of___lldiv:
  8564                           
  8565                           	psect	text29
  8566  12F2                     __ptext29:	
  8567 ;; *************** function _I2C_Master_Init *****************
  8568 ;; Defined at:
  8569 ;;		line 9 in file "I2C.c"
  8570 ;; Parameters:    Size  Location     Type
  8571 ;;		None
  8572 ;; Auto vars:     Size  Location     Type
  8573 ;;		None
  8574 ;; Return value:  Size  Location     Type
  8575 ;;                  1    wreg      void 
  8576 ;; Registers used:
  8577 ;;		wreg, status,2
  8578 ;; Tracked objects:
  8579 ;;		On entry : 0/0
  8580 ;;		On exit  : 0/0
  8581 ;;		Unchanged: 0/0
  8582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8583 ;;      Params:         0       0       0       0       0
  8584 ;;      Locals:         0       0       0       0       0
  8585 ;;      Temps:          0       0       0       0       0
  8586 ;;      Totals:         0       0       0       0       0
  8587 ;;Total ram usage:        0 bytes
  8588 ;; Hardware stack levels used:    1
  8589 ;; This function calls:
  8590 ;;		Nothing
  8591 ;; This function is called by:
  8592 ;;		_main
  8593 ;; This function uses a non-reentrant model
  8594 ;;
  8595                           
  8596                           
  8597                           ;psect for function _I2C_Master_Init
  8598  12F2                     _I2C_Master_Init:
  8599  12F2                     l2750:	
  8600                           ;incstack = 0
  8601                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  8602                           
  8603                           
  8604                           ;I2C.c: 11:   SSPCON = 0x28;
  8605  12F2  3028               	movlw	40
  8606  12F3  1283               	bcf	3,5	;RP0=0, select bank0
  8607  12F4  1303               	bcf	3,6	;RP1=0, select bank0
  8608  12F5  0094               	movwf	20	;volatile
  8609  12F6                     l2752:
  8610                           
  8611                           ;I2C.c: 12:   SSPCON2 = 0x00;
  8612  12F6  1683               	bsf	3,5	;RP0=1, select bank1
  8613  12F7  1303               	bcf	3,6	;RP1=0, select bank1
  8614  12F8  0191               	clrf	17	;volatile
  8615  12F9                     l2754:
  8616                           
  8617                           ;I2C.c: 13:   SSPSTAT = 0x00;
  8618  12F9  0194               	clrf	20	;volatile
  8619                           
  8620                           ;I2C.c: 14:   SSPADD = ((4000000/4)/100000) - 1;
  8621  12FA  3009               	movlw	9
  8622  12FB  0093               	movwf	19	;volatile
  8623  12FC                     l2756:
  8624                           
  8625                           ;I2C.c: 15:   TRISC3 = 1;
  8626  12FC  1587               	bsf	7,3	;volatile
  8627  12FD                     l2758:
  8628                           
  8629                           ;I2C.c: 16:   TRISC4 = 1;
  8630  12FD  1607               	bsf	7,4	;volatile
  8631  12FE                     l37:
  8632  12FE  0008               	return
  8633  12FF                     __end_of_I2C_Master_Init:
  8634  007E                     btemp	set	126	;btemp
  8635  007E                     wtemp0	set	126
  8636                           
  8637                           	psect	config
  8638                           
  8639                           ;Config register CONFIG1 @ 0x2007
  8640                           ;	Oscillator Selection bits
  8641                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8642                           ;	Watchdog Timer Enable bit
  8643                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8644                           ;	Power-up Timer Enable bit
  8645                           ;	PWRTE = OFF, PWRT disabled
  8646                           ;	RE3/MCLR pin function select bit
  8647                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8648                           ;	Code Protection bit
  8649                           ;	CP = OFF, Program memory code protection is disabled
  8650                           ;	Data Code Protection bit
  8651                           ;	CPD = OFF, Data memory code protection is disabled
  8652                           ;	Brown Out Reset Selection bits
  8653                           ;	BOREN = OFF, BOR disabled
  8654                           ;	Internal External Switchover bit
  8655                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8656                           ;	Fail-Safe Clock Monitor Enabled bit
  8657                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8658                           ;	Low Voltage Programming Enable bit
  8659                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8660                           ;	In-Circuit Debugger Mode bit
  8661                           ;	DEBUG = 0x1, unprogrammed default
  8662  2007                     	org	8199
  8663  2007  20D4               	dw	8404
  8664                           
  8665                           ;Config register CONFIG2 @ 0x2008
  8666                           ;	Brown-out Reset Selection bit
  8667                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8668                           ;	Flash Program Memory Self Write Enable bits
  8669                           ;	WRT = OFF, Write protection off
  8670  2008                     	org	8200
  8671  2008  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    40
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     71      71
    BANK1            80     62      79
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ftoa@status	PTR int  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_9(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    ftoa@cp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    readMPU@datos	PTR float  size(1) Largest target is 28
		 -> main@datos(BANK1[28]), 

    UARTSendString@str	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK1[17]), STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), 
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[14]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    main@buffer	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 


Critical Paths under _main in COMMON

    _readMPU->___xxtofl
    ___fldiv->___xxtofl
    _I2C_Start->_I2C_Master_Write
    _ftoa->___xxtofl
    _sprintf->___lldiv
    ___llmod->___lldiv
    ___flsub->___xxtofl
    ___fladd->___xxtofl
    ___flmul->___xxtofl
    _confMPU->_I2C_Master_Write
    _UARTSendString->_UARTSendChar
    _UARTInit->___lldiv

Critical Paths under _main in BANK0

    _main->_ftoa
    _readMPU->___fladd
    _ftoa->___flsub
    _sprintf->___llmod
    ___fltol->___flmul
    ___flsub->___fladd
    ___fladd->___fldiv

Critical Paths under _main in BANK1

    _main->_readMPU

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0   23972
                                             70 BANK0      1     1      0
                                             31 BANK1     31    31      0
                    _I2C_Master_Init
                           _UARTInit
                       _UARTSendChar
                     _UARTSendString
                            _confMPU
                               _ftoa
                            _readMPU
 ---------------------------------------------------------------------------------
 (1) _readMPU                                             35    35      0    8860
                                             46 BANK0      4     4      0
                                              0 BANK1     31    31      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      44
                                              1 COMMON     1     1      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      45
                                              0 COMMON     3     3      0
                            _I2C_ACK
                    _I2C_Master_Wait
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ftoa                                                16    10      6   11284
                                             54 BANK0     16    10      6
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             34    25      9    2414
                                             10 BANK0     26    17      9
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     311
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     930
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     381
                                             26 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             46 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2288
                                             26 BANK0     20    12      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3329
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     334
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _confMPU                                              0     0      0      22
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       8     5      3    2437
                                              1 COMMON     8     5      3
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             9     4      5     836
                                              0 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _UARTInit
     ___lldiv
   _UARTSendChar
   _UARTSendString
     _UARTSendChar
   _confMPU
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _ftoa
     ___flge
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       _isdigit
   _readMPU
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read
       _I2C_ACK
       _I2C_Master_Wait
       _I2C_NACK
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     47      47       5       88.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     3E      4F       7       98.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A4      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 03 13:29:41 2021

        UARTInit@baud_rate 0020               ___fldiv@aexp 0039               ___fldiv@bexp 0038  
                        pc 0002               ___fldiv@sign 0031         __size_of_I2C_Start 0010  
                       _BF 04A0                         l40 12FF                         l43 130B  
                       l37 12FE                         l61 12D1                         l46 12BF  
                       l70 1316                         l55 12C8                         l72 131A  
                       l64 12D6                         l73 131B                         l49 132B  
                       l58 12CD                         l90 0030                         l82 000E  
                       l67 12DA                         l87 0028                         l89 002E  
                       fsr 0004        ___wmul@multiplicand 0072        __Umul8_16@word_mpld 0076  
                      l140 12E7                        l143 12F1                        l151 13D9  
                      l137 1504                        l309 1495                        l600 0FD1  
                      l184 0491                        l273 080D                        l450 1609  
                      l187 00EF                        l451 1622                        l275 0825  
                      l612 1361                        l622 167F                        l447 159D  
                      l455 12E5                        l608 0FF3                        l720 08B5  
                      l712 088D                        l624 17FF                        l609 0FFF  
                      l570 0E82                        l466 156B                        l706 0848  
                      l459 1580                        l572 0E59                        l708 08DF  
                      l644 17E3                        l469 1580                        l662 07F2  
                      l566 0DDB                        l646 17F3                        l638 1771  
                      l591 0F71                        l719 08A9                        l495 142F  
                      l681 1376                        l729 01C4                        l674 07E6  
                      l683 1388                        l587 0F4D                        l579 0FFF  
                      l755 09A2                        l668 075E                        l597 0F93  
                      l782 133D                        l766 0A72                        l758 09C8  
                      l777 0B2B                        _PEN 048A                        _SEN 0488  
          __end_of_I2C_ACK 12D2                        fsr0 0004                        indf 0000  
             ___flmul@aexp 0032               ___flmul@bexp 0033               ___flmul@sign 002D  
             ___flmul@temp 0038               ___flmul@prod 0034               ___fltol@exp1 0044  
                     l2000 0D89                       l2010 0D9D                       l2002 0D8A  
                     l2100 0EAB                       l2020 0DB3                       l2004 0D8F  
                     l2012 0D9F                       l2110 0EC2                       l2102 0EAF  
                     l2030 0DC8                       l2022 0DB9                       l2014 0DA7  
                     l2006 0D94                       l2120 0F25                       l2112 0EC3  
                     l2104 0EB3                       l2040 0DE5                       l2032 0DD0  
                     l2024 0DBD                       l2016 0DAC                       l2008 0D9C  
                     l2130 0F5A                       l2122 0F2B                       l2114 0ECC  
                     l2106 0EBC                       l2050 0DF9                       l2042 0DE9  
                     l2034 0DD1                       l2026 0DBE                       l2018 0DB2  
                     l2210 133C                       l2202 132D                       l2140 0F75  
                     l2124 0F30                       l2108 0EBE                       l2116 0ED1  
                     l2060 0E0D                       l2052 0DFD                       l2044 0DED  
                     l2028 0DC3                       l2036 0DD3                       l2204 132E  
                     l2220 1322                       l2214 12B7                       l2222 12C0  
                     l2142 0F78                       l2134 0F63                       l2118 0EE7  
                     l2126 0F3F                       l2150 0F85                       l2070 0E21  
                     l2062 0E11                       l2054 0E01                       l2046 0DF1  
                     l2038 0DE1                       l2310 133E                       l2206 1334  
                     l2230 0012                       l2216 12BC                       l2224 12C5  
                     l2160 0F98                       l2152 0F86                       l2144 0F7A  
                     l2136 0F6C                       l2128 0F55                       l2080 0E66  
                     l2064 0E15                       l2056 0E05                       l2048 0DF5  
                     l2072 0E25                       l2312 1342                       l2304 1560  
                     l2208 133A                       l2232 0018                       l2400 172A  
                     l2320 1630                       l2242 12E7                       l2250 15B1  
                     l2170 0FD6                       l2162 0F9D                       l2154 0F8A  
                     l2146 0F7F                       l2138 0F70                       l2082 0E68  
                     l2090 0E7A                       l2074 0E26                       l2066 0E19  
                     l2058 0E09                       l2306 1570                       l2234 001D  
                     l2226 0006                       l2218 131D                       l2410 1742  
                     l2402 1732                       l2330 1647                       l2322 1634  
                     l2244 12ED                       l2260 161F                       l2252 15B9  
                     l2180 0FED                       l2172 0FDB                       l2164 0FAB  
                     l2156 0F90                       l2148 0F81                       l2092 0E86  
                     l2084 0E6C                       l2076 0E3D                       l2068 0E1D  
                     l2308 1575                       l2236 0023                       l2228 000B  
                     l2420 175A                       l2412 174B                       l2404 1734  
                     l2340 165D                       l2332 1648                       l2324 1635  
                     l2316 1623                       l2262 1621                       l2254 15BD  
                     l2246 1581                       l2190 1365                       l2510 0555  
                     l2502 04FF                       l2270 12E5                       l2182 0FEF  
                     l2174 0FE3                       l2166 0FAF                       l2094 0E8B  
                     l2086 0E6D                       l2078 0E5D                       l2238 002F  
                     l2430 1789                       l2422 176E                       l2406 173D  
                     l2414 1751                       l2350 1674                       l2342 1661  
                     l2326 163A                       l2334 164A                       l2318 162A  
                     l2256 15E1                       l2248 1595                       l2192 136C  
                     l2520 05D2                       l2512 0581                       l2504 050F  
                     l2184 0FFA                       l2176 0FE8                       l2168 0FCD  
                     l2088 0E76                       l2280 151B                       l2600 082C  
                     l2440 17C7                       l2432 178D                       l2416 1755  
                     l2408 1741                       l2360 1697                       l2352 1675  
                     l2344 1662                       l2336 1652                       l2328 163F  
                     l2258 15E5                       l2194 1370                       l2530 0652  
                     l2522 05EF                       l2514 059D                       l2506 051C  
                     l2266 12DB                       l2186 0FFE                       l2178 0FE9  
                     l2098 0E94                       l2290 153F                       l2282 1530  
                     l2274 1505                       l2610 0859                       l2602 0830  
                     l2450 17ED                       l2442 17D6                       l2434 17A6  
                     l2426 1776                       l2418 1756                       l2370 16AE  
                     l2346 1667                       l2354 1677                       l2338 1657  
                     l2196 137F                       l2188 1363                       l2540 070A  
                     l2532 067F                       l2524 05FF                       l2516 05B9  
                     l2508 0539                       l2460 0499                       l2268 12E3  
                     l2284 1531                       l2276 1512                       l2620 0884  
                     l2612 085E                       l2604 0840                       l2700 0A05  
                     l2452 17EF                       l2444 17DA                       l2428 177B  
                     l2436 17AC                       l2380 16DA                       l2372 16C0  
                     l2356 1687                       l2364 16A0                       l2348 166C  
                     l2198 1384                       l2550 072F                       l2542 0713  
                     l2534 068F                       l2526 061C                       l2518 05C2  
                     l2470 04AE                       l2462 049F                       l2286 1539  
                     l2630 08B7                       l2622 0894                       l2614 086B  
                     l2606 0850                       l2710 0A3E                       l2446 17E2  
                     l2438 17B9                       l2382 16DF                       l2390 16FF  
                     l2374 16C8                       l2366 16A5                       l2358 1693  
                     l2560 0747                       l2552 0738                       l2544 0721  
                     l2536 06BC                       l2528 0635                       l2480 04CB  
                     l2472 04B6                       l2464 04A3                       l2296 1547  
                     l2288 153B                       l2632 08CD                       l2624 089F  
                     l2616 0872                       l2720 0A7F                       l2712 0A48  
                     l2448 17E9                       l2392 1711                       l2384 16F1  
                     l2376 16D0                       l1930 1312                       l2570 0776  
                     l2562 075B                       l2546 072A                       l2554 073E  
                     l2538 06E2                       l2490 04E2                       l2482 04CF  
                     l2474 04B8                       l2466 04A4                       l2458 0492  
                     l2298 1559                       l2634 08D2                       l2626 08A3  
                     l2618 0876                       l2730 0AA0                       l2722 0A8B  
                     l2714 0A53                       l2706 0A07                       l2650 08FA  
                     l2642 08E3                       l2394 1712                       l2386 16F5  
                     l2378 16D8                       l2810 021D                       l2802 01E3  
                     l1924 12FF                       l2580 07B1                       l2572 077A  
                     l2556 0742                       l2548 072E                       l2492 04E4  
                     l2484 04D0                       l2476 04C0                       l2468 04A9  
                     l2636 08D6                       l2628 08AD                       l1940 0807  
                     l2732 0AAD                       l2724 0A8F                       l2716 0A5A  
                     l2660 0939                       l2652 08FD                       l2644 08E8  
                     l2740 0B15                       l1932 12C9                       l2396 1720  
                     l2388 16F6                       l2820 02A6                       l2812 023A  
                     l2804 01F6                       l2900 0B68                       l2750 12F2  
                     l1950 1430                       l1926 1305                       l2590 07DE  
                     l2582 07C0                       l2574 0793                       l2566 0763  
                     l2558 0743                       l2494 04EC                       l2486 04D5  
                     l2478 04C5                       l2638 08D7                       l1942 0814  
                     l2734 0AFC                       l2726 0A95                       l2718 0A69  
                     l2742 0B27                       l2670 0962                       l2662 093D  
                     l2654 090D                       l2646 08EE                       l1934 12D2  
                     l2398 1724                       l2830 038E                       l2822 02C1  
                     l2814 0255                       l2806 01FE                       l2910 0BF0  
                     l2902 0B98                       l2752 12F6                       l1960 145D  
                     l1952 1440                       l2760 1496                       l2840 1389  
                     l1928 130D                       l2592 07DF                       l2584 07CA  
                     l2568 0768                       l2576 0799                       l2496 04F1  
                     l2488 04DA                       l1944 081B                       l1936 0801  
                     l2736 0B03                       l2728 0A9C                       l2680 09A4  
                     l2672 0977                       l2656 0911                       l2664 094D  
                     l2648 08F5                       l2832 03E0                       l2824 02DC  
                     l2816 0270                       l2808 020B                       l2920 0C73  
                     l2912 0C01                       l2904 0BA7                       l2754 12F9  
                     l1962 146F                       l1954 1443                       l1970 148D  
                     l2770 14F6                       l2762 149D                       l2842 138E  
                     l2594 07EA                       l2586 07CC                       l2578 07A6  
                     l2498 04F6                       l1946 0821                       l1938 0803  
                     l2738 0B07                       l2690 09DF                       l2674 098A  
                     l2666 095B                       l2658 0926                       l2850 00F0  
                     l2834 041B                       l2826 0318                       l2818 028B  
                     l2930 0CDC                       l2922 0C82                       l2914 0C2A  
                     l2906 0BB8                       l2756 12FC                       l1964 147D  
                     l1956 1450                       l2780 14FD                       l2772 14F7  
                     l2764 14C8                       l2844 13AA                       l2588 07DA  
                     l1980 13F4                       l2692 09ED                       l2684 09A9  
                     l2676 098E                       l2668 095F                       l2860 0133  
                     l2852 00F6                       l2836 0456                       l2828 0353  
                     l2940 0D5D                       l2932 0D05                       l2924 0C93  
                     l2916 0C39                       l2908 0BE1                       l2758 12FD  
                     l1966 147E                       l1958 1454                       l2782 14FE  
                     l2774 14F8                       l2766 14CA                       l2846 13B0  
                     l2790 0031                       l2598 0827                       l1982 13F8  
                     l1990 1427                       l1974 13DA                       l2694 09F1  
                     l2686 09CC                       l2678 099F                       l2862 014C  
                     l2854 010F                       l2942 0D6E                       l2934 0D14  
                     l2926 0CBC                       l2918 0C4A                       l1968 1487  
                     l2784 14FF                       l2776 14F9                       l2768 14F5  
                     l2848 13BD                       l1984 140A                       l1976 13E4  
                     l2696 09F7                       l2688 09DA                       l2864 017B  
                     l2856 0118                       l2936 0D25                       l2928 0CCB  
                     l2786 1500                       l2778 14FC                       l1994 0D78  
                     l1986 1418                       l1978 13E7                       l2698 09FF  
                     l2866 01A9                       l2858 011C                       l2794 01C8  
                     l2938 0D4E                       l2890 0B3A                       l2788 1503  
                     l1996 0D7F                       l1988 1421                       l2964 09BD  
                     l2868 01C3                       l2796 01DF                       l2892 0B4B  
                     l1998 0D85                       l2894 0B50                       l2886 0B2C  
                     l2896 0B56                       l2888 0B35                       l2898 0B65  
                     STR_1 1038                       STR_2 1051                       STR_3 1051  
                     STR_4 1051                       STR_5 1051                       STR_6 1051  
                     STR_7 1051                       STR_8 1051                       STR_9 1046  
                     u2100 1305                       u2101 1304                       u2110 130B  
                     u2111 130A                       u2120 131A                       u3000 1558  
                     u2121 1319                       u3001 1557                       u2210 1454  
                     u3010 155F                       u2130 12D1                       u2211 1453  
                     u3011 155E                       u2131 12D0                       u2140 12DA  
                     u3100 166C                       u2205 1445                       u2141 12D9  
                     u3101 166B                       u2230 146F                       u3030 1570  
                     u2310 1427                       u2150 0807                       u3110 1687  
                     u2231 146E                       u3031 156F                       u2311 1426  
                     u2151 0806                       u3111 1686                       u2400 0DE5  
                     u2320 0D89                       u3040 1575                       u4000 0AAC  
                     u3200 1732                       u3120 16A5                       u2225 1456  
                     u2401 0DE4                       u2321 0D88                       u3041 1574  
                     u3025 1562                       u2305 1419                       u4001 0AAB  
                     u3201 1731                       u3121 16A4                       u2250 148D  
                     u2410 0E3D                       u2330 0D8F                       u3130 16DF  
                     u3050 1634                       u2251 148C                       u2235 146B  
                     u2411 0E3C                       u2331 0D8E                       u3131 16DE  
                     u3051 1633                       u4100 13C7                       u2420 0E48  
                     u2340 0D94                       u2260 13E4                       u2180 0821  
                     u4020 0B15                       u3300 179C                       u3220 1741  
                     u3060 163A                       u2245 147F                       u2501 0E9D  
                     u2421 0E46                       u2341 0D93                       u2261 13E3  
                     u2181 0820                       u2165 080E                       u4021 0B14  
                     u3221 1740                       u3061 1639                       u2190 1440  
                     u4110 13D9                       u2510 0EAF                       u2502 0EA4  
                     u2430 0E49                       u2350 0DB2                       u4030 0B27  
                     u3310 17B9                       u3070 163F                       u2191 143F  
                     u4111 13D8                       u2511 0EAE                       u2503 0EAB  
                     u2415 0E39                       u2351 0DB1                       u2175 0815  
                     u4031 0B26                       u4015 0AB8                       u3311 17B8  
                     u3215 1736                       u3071 163E                       u4040 149D  
                     u3400 04F1                       u2600 0F5A                       u2520 0EB3  
                     u2440 0E5D                       u2360 0DBD                       u2280 13F8  
                     u4120 010F                       u3320 17D6                       u3240 1755  
                     u3160 16F5                       u3080 1661                       u4041 149C  
                     u3401 04F0                       u2601 0F59                       u2521 0EB2  
                     u2441 0E5C                       u2361 0DBC                       u2281 13F7  
                     u4121 010E                       u3321 17D5                       u3305 1797  
                     u3241 1754                       u3161 16F4                       u3145 16E1  
                     u3081 1660                       u4050 14AB                       u3410 04F6  
                     u2530 0EC2                       u2450 0E6C                       u2370 0DC3  
                     u2290 140A                       u3330 17ED                       u3250 175A  
                     u3090 1667                       u3411 04F5                       u2531 0EC1  
                     u2451 0E6B                       u2371 0DC2                       u2291 1409  
                     u2275 13E9                       u3331 17EC                       u3315 17B5  
                     u3251 1759                       u3235 1744                       u3155 16EA  
                     u3091 1666                       u4060 14D8                       u3340 04A3  
                     u2700 0FAF                       u2620 0F70                       u2380 0DC8  
                     u3260 176E                       u3180 1711                       u3501 0644  
                     u3421 0547                       u3341 04A2                       u2701 0FAE  
                     u2621 0F6F                       u2381 0DC7                       u3325 17D2  
                     u3261 176D                       u3181 1710                       u3502 064B  
                     u3422 054E                       u3350 04A9                       u2710 0FBE  
                     u2630 0F75                       u2550 0EE7                       u2470 0E82  
                     u2390 0DE1                       u3270 1775                       u3190 172A  
                     u4070 020B                       u4055 14A6                       u3511 0671  
                     u3503 0652                       u3431 0563                       u3423 0555  
                     u3351 04A8                       u2631 0F74                       u2615 0F65  
                     u2551 0EE6                       u2471 0E81                       u2391 0DE0  
                     u2295 1406                       u3271 1774                       u3191 1729  
                     u3175 16F8                       u4071 020A                       u4080 1398  
                     u2800 1384                       u3512 0678                       u3432 056A  
                     u3360 04AE                       u2720 0FCD                       u2640 0F7F  
                     u2480 0E86                       u3280 177B                       u4065 14D3  
                     u2801 1383                       u3521 069E                       u3513 067F  
                     u3441 058F                       u3433 0571                       u3361 04AD  
                     u2721 0FCC                       u2641 0F7E                       u2561 0EFE  
                     u2553 0EE3                       u2545 0EC5                       u2481 0E85  
                     u2465 0E6F                       u3281 177A                       u3185 170D  
                     u4090 13BD                       u3610 0742                       u3530 06C8  
                     u3522 06A5                       u3442 0596                       u3370 04CF  
                     u2730 0FD6                       u2650 0F85                       u2570 0F12  
                     u2562 0EFF                       u2490 0E8B                       u2810 1334  
                     u3290 178D                       u4091 13BC                       u3611 0741  
                     u3523 06AC                       u3451 05AB                       u3443 059D  
                     u3371 04CE                       u2731 0FD5                       u2715 0FB9  
                     u2651 0F84                       u2571 0F13                       u2563 0F04  
                     u2491 0E8A                       u2811 1333                       u3291 178C  
                     u4075 0207                       u3700 07DE                       u3620 0747  
                     u3452 05B2                       u3380 04D5                       u2740 0FDB  
                     u2660 0F8A                       u2580 0F30                       u2572 0F18  
                     u2564 0F05                       u2820 133A                       u2901 15CC  
                     u3701 07DD                       u3621 0746                       u3605 0731  
                     u3541 06D4                       u3453 05B9                       u3381 04D4  
                     u2741 0FDA                       u2661 0F89                       u2581 0F2F  
                     u2573 0F19                       u2565 0F0A                       u2821 1339  
                     u2910 15E5                       u2902 15CD                       u3630 075B  
                     u3550 06F0                       u3542 06DB                       u3390 04DA  
                     u2750 0FE8                       u2670 0F90                       u2590 0F55  
                     u2566 0F0B                       u3710 082C                       u2830 0012  
                     u4095 13B9                       u2911 15E4                       u2903 15D2  
                     u3631 075A                       u3543 06E2                       u3535 06C3  
                     u3471 05E1                       u3391 04D9                       u2751 0FE7  
                     u2671 0F8F                       u2591 0F54                       u3711 082B  
                     u2831 0011                       u2904 15D3                       u3640 0762  
                     u3472 05E8                       u2760 0FED                       u2680 0F97  
                     u3800 08A9                       u3720 0830                       u2840 001D  
                     u2921 15F4                       u2905 15D8                       u3641 0761  
                     u3561 06FC                       u3481 060E                       u3473 05EF  
                     u3465 05BB                       u2761 0FEC                       u2681 0F96  
                     u3801 08A8                       u3721 082F                       u2841 001C  
                     u2930 161F                       u2922 15F5                       u2906 15D9  
                     u3650 0768                       u3562 0703                       u3482 0615  
                     u2770 0FFE                       u2690 0F9D                       u3810 08AD  
                     u3730 0850                       u2850 002E                       u2931 161E  
                     u2923 15FA                       u3651 0767                       u3563 070A  
                     u3555 06EB                       u3483 061C                       u2771 0FFD  
                     u2691 0F9C                       u3811 08AC                       u3731 084F  
                     u2851 002D                       u2860 12ED                       u2924 15FB  
                     u2780 1370                       u3660 077A                       u2940 12E3  
                     u3820 08C2                       u3900 09CC                       u2861 12EC  
                     u2925 1600                       u2781 136F                       u3661 0779  
                     u2941 12E2                       u3901 09CB                       u2926 1601  
                     u2870 1595                       u3670 0789                       u3590 072E  
                     u2950 1512                       u3830 08D2                       u3750 0871  
                     u3910 09F7                       u2935 161B                       u2871 1594  
                     u3591 072D                       u3575 070C                       u3495 061E  
                     u2951 1511                       u3831 08D1                       u3751 0870  
                     u3911 09F6                       u2880 15B1                       u3680 07A6  
                     u2960 1529                       u3840 08D6                       u3920 09FF  
                     u2881 15B0                       u3681 07A5                       u3585 0723  
                     u3841 08D5                       u3825 08BD                       u3745 0863  
                     u3921 09FE                       u2890 15BD                       u3690 07C0  
                     u2970 153F                       u3770 0893                       u3850 08EE  
                     u2891 15BC                       u2795 1377                       u3691 07BF  
                     u3675 0784                       u2971 153E                       u3771 0892  
                     u3851 08ED                       u2980 1546                       u3940 0A3D  
                     u3860 090D                       _RCEN 048B                       u3685 07A2  
                     u2981 1545                       u2965 1524                       u3765 0885  
                     u3941 0A3C                       u3861 090C                       u3790 08A3  
                     u3950 0A48                       u3870 094D                       u3695 07BC  
                     u3791 08A2                       u3951 0A47                       u3935 0A0A  
                     u3871 094C                       u3960 0A53                       u3880 095B  
                     u3785 0898                       u3961 0A52                       u3945 0A39  
                     u3881 095A                       u3970 0A69                       u3890 099E  
                     u2995 1548                       u3971 0A68                       u3891 099D  
                     u3980 0A7F                       u3981 0A7E                       u3965 0A4F  
                     u3990 0A95                       u3991 0A94                       u3975 0A65  
                     u3985 0A7B                       _RSEN 0489           __end_of_I2C_NACK 12DB  
                     _main 0B2C                       _ftoa 00F0           __end_of_I2C_Read 0031  
                     btemp 007E                       start 0000            ___fldiv@new_exp 0032  
         ?_I2C_Master_Init 0070           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
            ___fltol@sign1 0043            __end_of___fladd 1000                      ?_main 0070  
                    _ACKEN 048C                      ?_ftoa 0056                      _ACKDT 048D  
          __end_of___fldiv 1800            __end_of___flneg 12E6            __end_of___flmul 07F3  
          __end_of___flsub 1362            __end_of___fltol 1581                      _ANSEL 0188  
          __end_of___lldiv 1496            __end_of___llmod 1430                      _RCREG 001A  
                    _SPBRG 0099                      _PORTA 0005                      _TRISA 0085  
                    _SSPIF 0063                      _TXREG 0019            __end_of_confMPU 00F0  
         __end_of_UARTInit 1505            __end_of_readMPU 0492            __end_of_dpowers 1038  
          __end_of_isdigit 133E                      ftoa@f 0056                      ftoa@l 0061  
        __end_of_I2C_Start 132C                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 0B2C            __initialization 07F3  
             __end_of_main 0D78               __end_of_ftoa 01C5                  ??_I2C_ACK 0070  
                   ??_main 0066                     ??_ftoa 005C          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0070  
         ___llmod@dividend 0024                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
         __end_of___xxtofl 08E0                     ___flge 1581           I2C_Read@ACK_NACK 0071  
                ??___fladd 0042                     ___wmul 0801                  ??___fldiv 0028  
                ??___flneg 0074                  ??___flmul 0028             readMPU@guardar 00AE  
                ??___flsub 007E                  ??___fltol 003E                  ??___lldiv 0078  
                ??___llmod 0028    __size_of_UARTSendString 0051             readMPU@valores 00A0  
                ??_confMPU 0071                     ftoa@cp 0065                  ?_I2C_NACK 0070  
                ??_readMPU 004E                  ??_isdigit 0070                  ?_I2C_Read 0070  
       __size_of__Umul8_16 0027                  ??_sprintf 0033                 ___flge@ff1 0070  
               ___flge@ff2 0074               ___xxtofl@arg 007A               ___xxtofl@exp 0079  
             ___xxtofl@val 0070    __end_of__initialization 07FC                 ___flneg@f1 0070  
               ___fltol@f1 003A             __pcstackCOMMON 0070                  ?_UARTInit 0020  
               ??_I2C_NACK 0070                 ??_I2C_Read 0070   UARTSendString@max_length 0073  
             readMPU@datos 00BE               sprintf@width 003F                 __pbssBANK1 00DE  
             I2C_Read@Data 0072          __end_of__Umul8_16 1389                 __pmaintext 0B2C  
                  ?___flge 0070                    ?___wmul 0070                 ??_UARTInit 0025  
                  _I2C_ACK 12C9                    _ACKSTAT 048E                  ?___xxtofl 0070  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 1000  
            ?_UARTSendChar 0070               I2C_Start@add 0071                  _I2C_Start 131C  
          __size_of___flge 00A2                    ___fladd 0D78                    ___fldiv 1623  
                  ___flneg 12DB                    ___flmul 0492                    ___flsub 133E  
                  ___fltol 1505                    ___lldiv 1430            __size_of___wmul 0025  
                  ___llmod 13DA             _UARTSendString 1389                    _confMPU 0031  
                  __ptext1 01C5                    __ptext2 1623                    __ptext3 131C  
                  __ptext4 0005                    __ptext5 12D2                    __ptext6 12C9  
                  __ptext7 00F0                    __ptext8 08E0                    __ptext9 132C  
                  _readMPU 01C5                    _dpowers 1010                    _isdigit 132C  
               ??___xxtofl 0074   __size_of_I2C_Master_Init 000D   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    _sprintf 08E0                    clrloop0 12B0  
     end_of_initialization 07FC             ??_UARTSendChar 0070                    ftoa@buf 00DE  
                  ftoa@rem 005D                 ?_I2C_Start 0070  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 0010            ___lldiv@divisor 0070            ___lldiv@counter 007D  
                _RCSTAbits 0018     __end_of_UARTSendString 13DA                ___fladd@grs 004D  
            ___xxtofl@sign 0078          __size_of_I2C_NACK 0009                  _TRISCbits 0087  
        __size_of_I2C_Read 002C                ___fldiv@grs 0034                ___fldiv@rem 002D  
              ___flmul@grs 002E                 main@buffer 00DD                  _TXSTAbits 0098  
               main@status 00DB            ?_UARTSendString 0071             __end_of___flge 1623  
           __end_of___wmul 0826          __size_of_UARTInit 006F        start_initialization 07F3  
               ftoa@status 005A          ??_I2C_Master_Init 0070          ??_I2C_Master_Wait 0070  
        ??_I2C_Master_Stop 0070            ___llmod@divisor 0020                ??_I2C_Start 0071  
          ___llmod@counter 0029                   ??___flge 0078                   ??___wmul 0074  
                __Umul8_16 1362                   ?_I2C_ACK 0070       __end_of_UARTSendChar 12F2  
                ___fladd@a 003E                  ___fladd@b 003A                  ___fldiv@a 0020  
                ___fldiv@b 0024                  ___flmul@a 0024                  ___flmul@b 0020  
                ___flsub@a 004E                  ___flsub@b 0052                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0          __size_of___xxtofl 00BA  
              sprintf@flag 0038                sprintf@prec 0041           _I2C_Master_Start 12B7  
         _I2C_Master_Write 130C              UARTSendChar@c 0070                   ?___fladd 003A  
                 ?___fldiv 0020                   ?___flneg 0070                   ?___flmul 0020  
                 ?___flsub 004E                   ?___fltol 003A                   ?___lldiv 0070  
                 ?___llmod 0020                 ?__Umul8_16 0070       I2C_Master_Write@data 0070  
                __pstrings 1000                   ?_confMPU 0070                   _I2C_NACK 12D2  
                 ?_readMPU 0070                   ?_isdigit 0070                   _I2C_Read 0005  
                 ?_sprintf 002A             ___wmul@product 0074                  clear_ram0 12AF  
          UARTSendString@i 0077                   _PIR1bits 000C                   _UARTInit 1496  
         __size_of_I2C_ACK 0009                __stringbase 100F          ___wmul@multiplier 0070  
                main@datos 00BF           ??_UARTSendString 0074      __size_of_UARTSendChar 000C  
             UARTInit@BRGH 0024                ??__Umul8_16 0072           __size_of___fladd 0288  
         __size_of___fldiv 01DD           __size_of___flneg 000B           __size_of___flmul 0361  
         __size_of___flsub 0024           __size_of___fltol 007C           __size_of___lldiv 0066  
         __size_of___llmod 0056         __end_of__stringtab 1010                _isdigit$793 0070  
         __size_of_confMPU 00BF                 sprintf@val 003A            _I2C_Master_Init 12F2  
                 ___xxtofl 0826            _I2C_Master_Wait 12FF           __size_of_readMPU 02CD  
          _I2C_Master_Stop 12C0           __size_of_isdigit 0012                   __ptext10 0801  
                 __ptext11 13DA                   __ptext20 0031                   __ptext12 0826  
                 __ptext21 130C                   __ptext13 1505                   __ptext22 12C0  
                 __ptext14 133E                   __ptext23 12B7                   __ptext15 0D78  
                 __ptext24 12FF                   __ptext16 12DB                   __ptext25 1389  
                 __ptext17 0492                   __ptext26 12E6                   __ptext18 1362  
                 __ptext27 1496                   __ptext19 1581                   __ptext28 1430  
                 __ptext29 12F2           __size_of_sprintf 024C               _UARTSendChar 12E6  
            __size_of_main 024C              __size_of_ftoa 00D5   __end_of_I2C_Master_Start 12C0  
                 readMPU@i 00BC   __end_of_I2C_Master_Write 131C                   isdigit@c 0071  
        UARTSendString@str 0071                  sprintf@ap 0039                  sprintf@sp 003E  
         ___lldiv@dividend 0074                  stringcode 100A    __end_of_I2C_Master_Init 12FF  
  __end_of_I2C_Master_Wait 130C    __end_of_I2C_Master_Stop 12C9     __Umul8_16@multiplicand 0070  
                 sprintf@c 0043                   sprintf@f 002A           ___lldiv@quotient 0079  
                 stringdir 100A                   stringtab 1000              ___fladd@signs 004A  
             ___fladd@aexp 004B               ___fladd@bexp 004C       __Umul8_16@multiplier 0078  
        __Umul8_16@product 0074  
