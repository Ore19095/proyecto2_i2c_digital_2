

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Mar 02 23:14:05 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 12/02/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F887 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001B                     	;# 
   114  001C                     	;# 
   115  001D                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  0081                     	;# 
   119  0085                     	;# 
   120  0086                     	;# 
   121  0087                     	;# 
   122  0088                     	;# 
   123  0089                     	;# 
   124  008C                     	;# 
   125  008D                     	;# 
   126  008E                     	;# 
   127  008F                     	;# 
   128  0090                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0093                     	;# 
   133  0093                     	;# 
   134  0094                     	;# 
   135  0095                     	;# 
   136  0096                     	;# 
   137  0097                     	;# 
   138  0098                     	;# 
   139  0099                     	;# 
   140  009A                     	;# 
   141  009B                     	;# 
   142  009C                     	;# 
   143  009D                     	;# 
   144  009E                     	;# 
   145  009F                     	;# 
   146  0105                     	;# 
   147  0107                     	;# 
   148  0108                     	;# 
   149  0109                     	;# 
   150  010C                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  010F                     	;# 
   155  0185                     	;# 
   156  0187                     	;# 
   157  0188                     	;# 
   158  0189                     	;# 
   159  018C                     	;# 
   160  018D                     	;# 
   161  0000                     	;# 
   162  0001                     	;# 
   163  0002                     	;# 
   164  0003                     	;# 
   165  0004                     	;# 
   166  0005                     	;# 
   167  0006                     	;# 
   168  0007                     	;# 
   169  0008                     	;# 
   170  0009                     	;# 
   171  000A                     	;# 
   172  000B                     	;# 
   173  000C                     	;# 
   174  000D                     	;# 
   175  000E                     	;# 
   176  000E                     	;# 
   177  000F                     	;# 
   178  0010                     	;# 
   179  0011                     	;# 
   180  0012                     	;# 
   181  0013                     	;# 
   182  0014                     	;# 
   183  0015                     	;# 
   184  0015                     	;# 
   185  0016                     	;# 
   186  0017                     	;# 
   187  0018                     	;# 
   188  0019                     	;# 
   189  001A                     	;# 
   190  001B                     	;# 
   191  001B                     	;# 
   192  001C                     	;# 
   193  001D                     	;# 
   194  001E                     	;# 
   195  001F                     	;# 
   196  0081                     	;# 
   197  0085                     	;# 
   198  0086                     	;# 
   199  0087                     	;# 
   200  0088                     	;# 
   201  0089                     	;# 
   202  008C                     	;# 
   203  008D                     	;# 
   204  008E                     	;# 
   205  008F                     	;# 
   206  0090                     	;# 
   207  0091                     	;# 
   208  0092                     	;# 
   209  0093                     	;# 
   210  0093                     	;# 
   211  0093                     	;# 
   212  0094                     	;# 
   213  0095                     	;# 
   214  0096                     	;# 
   215  0097                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009A                     	;# 
   219  009B                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  009F                     	;# 
   224  0105                     	;# 
   225  0107                     	;# 
   226  0108                     	;# 
   227  0109                     	;# 
   228  010C                     	;# 
   229  010C                     	;# 
   230  010D                     	;# 
   231  010E                     	;# 
   232  010F                     	;# 
   233  0185                     	;# 
   234  0187                     	;# 
   235  0188                     	;# 
   236  0189                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  000E                     	;# 
   254  000E                     	;# 
   255  000F                     	;# 
   256  0010                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0014                     	;# 
   261  0015                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001D                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  0081                     	;# 
   275  0085                     	;# 
   276  0086                     	;# 
   277  0087                     	;# 
   278  0088                     	;# 
   279  0089                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  008F                     	;# 
   284  0090                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0093                     	;# 
   289  0093                     	;# 
   290  0094                     	;# 
   291  0095                     	;# 
   292  0096                     	;# 
   293  0097                     	;# 
   294  0098                     	;# 
   295  0099                     	;# 
   296  009A                     	;# 
   297  009B                     	;# 
   298  009C                     	;# 
   299  009D                     	;# 
   300  009E                     	;# 
   301  009F                     	;# 
   302  0105                     	;# 
   303  0107                     	;# 
   304  0108                     	;# 
   305  0109                     	;# 
   306  010C                     	;# 
   307  010C                     	;# 
   308  010D                     	;# 
   309  010E                     	;# 
   310  010F                     	;# 
   311  0185                     	;# 
   312  0187                     	;# 
   313  0188                     	;# 
   314  0189                     	;# 
   315  018C                     	;# 
   316  018D                     	;# 
   317  0000                     	;# 
   318  0001                     	;# 
   319  0002                     	;# 
   320  0003                     	;# 
   321  0004                     	;# 
   322  0005                     	;# 
   323  0006                     	;# 
   324  0007                     	;# 
   325  0008                     	;# 
   326  0009                     	;# 
   327  000A                     	;# 
   328  000B                     	;# 
   329  000C                     	;# 
   330  000D                     	;# 
   331  000E                     	;# 
   332  000E                     	;# 
   333  000F                     	;# 
   334  0010                     	;# 
   335  0011                     	;# 
   336  0012                     	;# 
   337  0013                     	;# 
   338  0014                     	;# 
   339  0015                     	;# 
   340  0015                     	;# 
   341  0016                     	;# 
   342  0017                     	;# 
   343  0018                     	;# 
   344  0019                     	;# 
   345  001A                     	;# 
   346  001B                     	;# 
   347  001B                     	;# 
   348  001C                     	;# 
   349  001D                     	;# 
   350  001E                     	;# 
   351  001F                     	;# 
   352  0081                     	;# 
   353  0085                     	;# 
   354  0086                     	;# 
   355  0087                     	;# 
   356  0088                     	;# 
   357  0089                     	;# 
   358  008C                     	;# 
   359  008D                     	;# 
   360  008E                     	;# 
   361  008F                     	;# 
   362  0090                     	;# 
   363  0091                     	;# 
   364  0092                     	;# 
   365  0093                     	;# 
   366  0093                     	;# 
   367  0093                     	;# 
   368  0094                     	;# 
   369  0095                     	;# 
   370  0096                     	;# 
   371  0097                     	;# 
   372  0098                     	;# 
   373  0099                     	;# 
   374  009A                     	;# 
   375  009B                     	;# 
   376  009C                     	;# 
   377  009D                     	;# 
   378  009E                     	;# 
   379  009F                     	;# 
   380  0105                     	;# 
   381  0107                     	;# 
   382  0108                     	;# 
   383  0109                     	;# 
   384  010C                     	;# 
   385  010C                     	;# 
   386  010D                     	;# 
   387  010E                     	;# 
   388  010F                     	;# 
   389  0185                     	;# 
   390  0187                     	;# 
   391  0188                     	;# 
   392  0189                     	;# 
   393  018C                     	;# 
   394  018D                     	;# 
   395  0000                     	;# 
   396  0001                     	;# 
   397  0002                     	;# 
   398  0003                     	;# 
   399  0004                     	;# 
   400  0005                     	;# 
   401  0006                     	;# 
   402  0007                     	;# 
   403  0008                     	;# 
   404  0009                     	;# 
   405  000A                     	;# 
   406  000B                     	;# 
   407  000C                     	;# 
   408  000D                     	;# 
   409  000E                     	;# 
   410  000E                     	;# 
   411  000F                     	;# 
   412  0010                     	;# 
   413  0011                     	;# 
   414  0012                     	;# 
   415  0013                     	;# 
   416  0014                     	;# 
   417  0015                     	;# 
   418  0015                     	;# 
   419  0016                     	;# 
   420  0017                     	;# 
   421  0018                     	;# 
   422  0019                     	;# 
   423  001A                     	;# 
   424  001B                     	;# 
   425  001B                     	;# 
   426  001C                     	;# 
   427  001D                     	;# 
   428  001E                     	;# 
   429  001F                     	;# 
   430  0081                     	;# 
   431  0085                     	;# 
   432  0086                     	;# 
   433  0087                     	;# 
   434  0088                     	;# 
   435  0089                     	;# 
   436  008C                     	;# 
   437  008D                     	;# 
   438  008E                     	;# 
   439  008F                     	;# 
   440  0090                     	;# 
   441  0091                     	;# 
   442  0092                     	;# 
   443  0093                     	;# 
   444  0093                     	;# 
   445  0093                     	;# 
   446  0094                     	;# 
   447  0095                     	;# 
   448  0096                     	;# 
   449  0097                     	;# 
   450  0098                     	;# 
   451  0099                     	;# 
   452  009A                     	;# 
   453  009B                     	;# 
   454  009C                     	;# 
   455  009D                     	;# 
   456  009E                     	;# 
   457  009F                     	;# 
   458  0105                     	;# 
   459  0107                     	;# 
   460  0108                     	;# 
   461  0109                     	;# 
   462  010C                     	;# 
   463  010C                     	;# 
   464  010D                     	;# 
   465  010E                     	;# 
   466  010F                     	;# 
   467  0185                     	;# 
   468  0187                     	;# 
   469  0188                     	;# 
   470  0189                     	;# 
   471  018C                     	;# 
   472  018D                     	;# 
   473                           
   474                           	psect	strings
   475  1000                     __pstrings:
   476  1000                     stringtab:
   477  1000                     __stringtab:
   478                           
   479                           ;	String table - string pointers are 1 byte each
   480  1000  1BFF               	btfsc	btemp+1,7
   481  1001  280A               	ljmp	stringcode
   482  1002  1383               	bcf	3,7
   483  1003  187F               	btfsc	btemp+1,0
   484  1004  1783               	bsf	3,7
   485  1005  0800               	movf	0,w
   486  1006  0A84               	incf	4,f
   487  1007  1903               	skipnz
   488  1008  0AFF               	incf	btemp+1,f
   489  1009  0008               	return
   490  100A                     stringcode:
   491  100A                     stringdir:
   492  100A  3010               	movlw	high stringdir
   493  100B  008A               	movwf	10
   494  100C  0804               	movf	4,w
   495  100D  0A84               	incf	4,f
   496  100E  0782               	addwf	2,f
   497  100F                     __stringbase:
   498  100F  3400               	retlw	0
   499  1010                     __end_of__stringtab:
   500  1010                     _dpowers:
   501  1010  3401               	retlw	1
   502  1011  3400               	retlw	0
   503  1012  3400               	retlw	0
   504  1013  3400               	retlw	0
   505  1014  340A               	retlw	10
   506  1015  3400               	retlw	0
   507  1016  3400               	retlw	0
   508  1017  3400               	retlw	0
   509  1018  3464               	retlw	100
   510  1019  3400               	retlw	0
   511  101A  3400               	retlw	0
   512  101B  3400               	retlw	0
   513  101C  34E8               	retlw	232
   514  101D  3403               	retlw	3
   515  101E  3400               	retlw	0
   516  101F  3400               	retlw	0
   517  1020  3410               	retlw	16
   518  1021  3427               	retlw	39
   519  1022  3400               	retlw	0
   520  1023  3400               	retlw	0
   521  1024  34A0               	retlw	160
   522  1025  3486               	retlw	134
   523  1026  3401               	retlw	1
   524  1027  3400               	retlw	0
   525  1028  3440               	retlw	64
   526  1029  3442               	retlw	66
   527  102A  340F               	retlw	15
   528  102B  3400               	retlw	0
   529  102C  3480               	retlw	128
   530  102D  3496               	retlw	150
   531  102E  3498               	retlw	152
   532  102F  3400               	retlw	0
   533  1030  3400               	retlw	0
   534  1031  34E1               	retlw	225
   535  1032  34F5               	retlw	245
   536  1033  3405               	retlw	5
   537  1034  3400               	retlw	0
   538  1035  34CA               	retlw	202
   539  1036  349A               	retlw	154
   540  1037  343B               	retlw	59
   541  1038                     __end_of_dpowers:
   542  0019                     _TXREG	set	25
   543  0018                     _RCSTAbits	set	24
   544  001A                     _RCREG	set	26
   545  000C                     _PIR1bits	set	12
   546  000B                     _INTCONbits	set	11
   547  0005                     _PORTA	set	5
   548  0013                     _SSPBUF	set	19
   549  0014                     _SSPCON	set	20
   550  0063                     _SSPIF	set	99
   551  0091                     _SSPCON2bits	set	145
   552  0087                     _TRISCbits	set	135
   553  0098                     _TXSTAbits	set	152
   554  0099                     _SPBRG	set	153
   555  008C                     _PIE1bits	set	140
   556  0085                     _TRISA	set	133
   557  0093                     _SSPADD	set	147
   558  0094                     _SSPSTAT	set	148
   559  0091                     _SSPCON2	set	145
   560  04A0                     _BF	set	1184
   561  048B                     _RCEN	set	1163
   562  048E                     _ACKSTAT	set	1166
   563  048C                     _ACKEN	set	1164
   564  048D                     _ACKDT	set	1165
   565  048A                     _PEN	set	1162
   566  0489                     _RSEN	set	1161
   567  0488                     _SEN	set	1160
   568  043C                     _TRISC4	set	1084
   569  043B                     _TRISC3	set	1083
   570  0188                     _ANSEL	set	392
   571  1038                     STR_8:
   572  1038  3425               	retlw	37	;'%'
   573  1039  346C               	retlw	108	;'l'
   574  103A  3475               	retlw	117	;'u'
   575  103B  342E               	retlw	46	;'.'
   576  103C  3425               	retlw	37	;'%'
   577  103D  3436               	retlw	54	;'6'
   578  103E  342E               	retlw	46	;'.'
   579  103F  3436               	retlw	54	;'6'
   580  1040  346C               	retlw	108	;'l'
   581  1041  3475               	retlw	117	;'u'
   582  1042  3400               	retlw	0
   583  1043                     STR_1:
   584  1043  3420               	retlw	32	;' '
   585  1044  3400               	retlw	0
   586  1043                     
   587                           	psect	cinit
   588  000F                     start_initialization:	
   589                           ; #config settings
   590                           
   591  000F                     __initialization:
   592                           
   593                           ; Clear objects allocated to COMMON
   594  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   595                           
   596                           ; Clear objects allocated to BANK1
   597  0010  1383               	bcf	3,7	;select IRP bank0
   598  0011  30C0               	movlw	low __pbssBANK1
   599  0012  0084               	movwf	4
   600  0013  30D2               	movlw	low (__pbssBANK1+18)
   601  0014  160A  118A  2267  120A  118A  	fcall	clear_ram0
   602  0019                     end_of_initialization:	
   603                           ;End of C runtime variable initialization code
   604                           
   605  0019                     __end_of__initialization:
   606  0019  0183               	clrf	3
   607  001A  120A  158A  28E7   	ljmp	_main	;jump to C main() function
   608                           
   609                           	psect	bssCOMMON
   610  007A                     __pbssCOMMON:
   611  007A                     _datoRecibido:
   612  007A                     	ds	1
   613                           
   614                           	psect	bssBANK1
   615  00C0                     __pbssBANK1:
   616  00C0                     _bandera:
   617  00C0                     	ds	1
   618  00C1                     ftoa@buf:
   619  00C1                     	ds	17
   620                           
   621                           	psect	clrtext
   622  1267                     clear_ram0:	
   623                           ;	Called with FSR containing the base address, and
   624                           ;	W with the last address+1
   625                           
   626  1267  0064               	clrwdt	;clear the watchdog before getting into this loop
   627  1268                     clrloop0:
   628  1268  0180               	clrf	0	;clear RAM location pointed to by FSR
   629  1269  0A84               	incf	4,f	;increment pointer
   630  126A  0604               	xorwf	4,w	;XOR with final address
   631  126B  1903               	btfsc	3,2	;have we reached the end yet?
   632  126C  3400               	retlw	0	;all done for this memory range, return
   633  126D  0604               	xorwf	4,w	;XOR again to restore value
   634  126E  2A68               	goto	clrloop0	;do the next byte
   635                           
   636                           	psect	cstackBANK3
   637  0190                     __pcstackBANK3:
   638  0190                     main@datos:
   639                           
   640                           ; 28 bytes @ 0x0
   641  0190                     	ds	28
   642  01AC                     main@status:
   643                           
   644                           ; 2 bytes @ 0x1C
   645  01AC                     	ds	2
   646  01AE                     main@buffer:
   647                           
   648                           ; 1 bytes @ 0x1E
   649  01AE                     	ds	1
   650                           
   651                           	psect	cstackBANK1
   652  00A0                     __pcstackBANK1:
   653  00A0                     readMPU@valores:
   654                           
   655                           ; 14 bytes @ 0x0
   656  00A0                     	ds	14
   657  00AE                     readMPU@guardar:
   658                           
   659                           ; 14 bytes @ 0xE
   660  00AE                     	ds	14
   661  00BC                     readMPU@i:
   662                           
   663                           ; 2 bytes @ 0x1C
   664  00BC                     	ds	2
   665  00BE                     readMPU@datos:
   666                           
   667                           ; 1 bytes @ 0x1E
   668  00BE                     	ds	1
   669  00BF                     ??_main:
   670                           
   671                           ; 1 bytes @ 0x1F
   672  00BF                     	ds	1
   673                           
   674                           	psect	cstackCOMMON
   675  0070                     __pcstackCOMMON:
   676  0070                     ?_isdigit:
   677  0070                     ?_I2C_Master_Write:	
   678                           ; 1 bit 
   679                           
   680  0070                     ?_confMPU:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_readMPU:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_UARTSendChar:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_I2C_Master_Init:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ?_I2C_Master_Wait:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_I2C_Master_Start:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_I2C_Start:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_I2C_Master_RepeatedStart:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_I2C_Master_Stop:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_I2C_ACK:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_I2C_NACK:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_I2C_Read:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_main:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_isr:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ??_isr:	
   723                           ; 1 bytes @ 0x0
   724                           
   725                           
   726                           ; 1 bytes @ 0x0
   727  0070                     	ds	3
   728  0073                     ??_I2C_Master_Write:
   729  0073                     ??_UARTSendChar:	
   730                           ; 1 bytes @ 0x3
   731                           
   732  0073                     ??_isdigit:	
   733                           ; 1 bytes @ 0x3
   734                           
   735  0073                     ??_I2C_Master_Init:	
   736                           ; 1 bytes @ 0x3
   737                           
   738  0073                     ??_I2C_Master_Wait:	
   739                           ; 1 bytes @ 0x3
   740                           
   741  0073                     ??_I2C_Master_Start:	
   742                           ; 1 bytes @ 0x3
   743                           
   744  0073                     ??_I2C_Master_RepeatedStart:	
   745                           ; 1 bytes @ 0x3
   746                           
   747  0073                     ??_I2C_Master_Stop:	
   748                           ; 1 bytes @ 0x3
   749                           
   750  0073                     ??_I2C_ACK:	
   751                           ; 1 bytes @ 0x3
   752                           
   753  0073                     ??_I2C_NACK:	
   754                           ; 1 bytes @ 0x3
   755                           
   756  0073                     ??_I2C_Read:	
   757                           ; 1 bytes @ 0x3
   758                           
   759  0073                     ??___lldiv:	
   760                           ; 1 bytes @ 0x3
   761                           
   762  0073                     ??___flge:	
   763                           ; 1 bytes @ 0x3
   764                           
   765  0073                     ?__Umul8_16:	
   766                           ; 1 bytes @ 0x3
   767                           
   768  0073                     ?___wmul:	
   769                           ; 2 bytes @ 0x3
   770                           
   771  0073                     ?___flneg:	
   772                           ; 2 bytes @ 0x3
   773                           
   774  0073                     ?___xxtofl:	
   775                           ; 4 bytes @ 0x3
   776                           
   777  0073                     I2C_Master_Write@data:	
   778                           ; 4 bytes @ 0x3
   779                           
   780  0073                     UARTSendChar@c:	
   781                           ; 1 bytes @ 0x3
   782                           
   783  0073                     __Umul8_16@multiplicand:	
   784                           ; 1 bytes @ 0x3
   785                           
   786  0073                     _isdigit$886:	
   787                           ; 1 bytes @ 0x3
   788                           
   789  0073                     ___wmul@multiplier:	
   790                           ; 1 bytes @ 0x3
   791                           
   792  0073                     ___flneg@f1:	
   793                           ; 2 bytes @ 0x3
   794                           
   795  0073                     ___xxtofl@val:	
   796                           ; 4 bytes @ 0x3
   797                           
   798                           
   799                           ; 4 bytes @ 0x3
   800  0073                     	ds	1
   801  0074                     ??_confMPU:
   802  0074                     ?_UARTSendString:	
   803                           ; 1 bytes @ 0x4
   804                           
   805  0074                     ??_I2C_Start:	
   806                           ; 1 bytes @ 0x4
   807                           
   808  0074                     I2C_Start@add:	
   809                           ; 1 bytes @ 0x4
   810                           
   811  0074                     I2C_Read@ACK_NACK:	
   812                           ; 1 bytes @ 0x4
   813                           
   814  0074                     isdigit@c:	
   815                           ; 1 bytes @ 0x4
   816                           
   817  0074                     UARTSendString@str:	
   818                           ; 1 bytes @ 0x4
   819                           
   820  0074                     ___lldiv@quotient:	
   821                           ; 2 bytes @ 0x4
   822                           
   823                           
   824                           ; 4 bytes @ 0x4
   825  0074                     	ds	1
   826  0075                     ??__Umul8_16:
   827  0075                     I2C_Read@Data:	
   828                           ; 1 bytes @ 0x5
   829                           
   830  0075                     ___wmul@multiplicand:	
   831                           ; 1 bytes @ 0x5
   832                           
   833                           
   834                           ; 2 bytes @ 0x5
   835  0075                     	ds	1
   836  0076                     UARTSendString@max_length:
   837                           
   838                           ; 1 bytes @ 0x6
   839  0076                     	ds	1
   840  0077                     ??_UARTSendString:
   841  0077                     ??___wmul:	
   842                           ; 1 bytes @ 0x7
   843                           
   844  0077                     ??___flneg:	
   845                           ; 1 bytes @ 0x7
   846                           
   847  0077                     ??___flsub:	
   848                           ; 1 bytes @ 0x7
   849                           
   850  0077                     ___fltol@sign1:	
   851                           ; 1 bytes @ 0x7
   852                           
   853  0077                     ___wmul@product:	
   854                           ; 1 bytes @ 0x7
   855                           
   856                           
   857                           ; 2 bytes @ 0x7
   858  0077                     	ds	1
   859  0078                     ___lldiv@counter:
   860  0078                     ___fltol@exp1:	
   861                           ; 1 bytes @ 0x8
   862                           
   863                           
   864                           ; 1 bytes @ 0x8
   865  0078                     	ds	1
   866  0079                     ??___llmod:
   867                           
   868                           ; 1 bytes @ 0x9
   869  0079                     	ds	1
   870                           
   871                           	psect	cstackBANK0
   872  0020                     __pcstackBANK0:
   873  0020                     ?___flge:
   874  0020                     ??___xxtofl:	
   875                           ; 1 bit 
   876                           
   877  0020                     ?___lldiv:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  0020                     UARTSendString@i:	
   881                           ; 4 bytes @ 0x0
   882                           
   883  0020                     __Umul8_16@product:	
   884                           ; 2 bytes @ 0x0
   885                           
   886  0020                     ___lldiv@divisor:	
   887                           ; 2 bytes @ 0x0
   888                           
   889  0020                     ___flge@ff1:	
   890                           ; 4 bytes @ 0x0
   891                           
   892                           
   893                           ; 4 bytes @ 0x0
   894  0020                     	ds	2
   895  0022                     __Umul8_16@word_mpld:
   896                           
   897                           ; 2 bytes @ 0x2
   898  0022                     	ds	2
   899  0024                     __Umul8_16@multiplier:
   900  0024                     ___xxtofl@sign:	
   901                           ; 1 bytes @ 0x4
   902                           
   903  0024                     ___lldiv@dividend:	
   904                           ; 1 bytes @ 0x4
   905                           
   906  0024                     ___flge@ff2:	
   907                           ; 4 bytes @ 0x4
   908                           
   909                           
   910                           ; 4 bytes @ 0x4
   911  0024                     	ds	1
   912  0025                     ___xxtofl@exp:
   913                           
   914                           ; 1 bytes @ 0x5
   915  0025                     	ds	1
   916  0026                     ___xxtofl@arg:
   917                           
   918                           ; 4 bytes @ 0x6
   919  0026                     	ds	2
   920  0028                     ?_UARTInit:
   921  0028                     ?___llmod:	
   922                           ; 1 bytes @ 0x8
   923                           
   924  0028                     UARTInit@baud_rate:	
   925                           ; 4 bytes @ 0x8
   926                           
   927  0028                     ___llmod@divisor:	
   928                           ; 4 bytes @ 0x8
   929                           
   930                           
   931                           ; 4 bytes @ 0x8
   932  0028                     	ds	2
   933  002A                     ?___fldiv:
   934  002A                     ?___flmul:	
   935                           ; 4 bytes @ 0xA
   936                           
   937  002A                     ___fldiv@a:	
   938                           ; 4 bytes @ 0xA
   939                           
   940  002A                     ___flmul@b:	
   941                           ; 4 bytes @ 0xA
   942                           
   943                           
   944                           ; 4 bytes @ 0xA
   945  002A                     	ds	2
   946  002C                     UARTInit@BRGH:
   947  002C                     ___llmod@dividend:	
   948                           ; 1 bytes @ 0xC
   949                           
   950                           
   951                           ; 4 bytes @ 0xC
   952  002C                     	ds	1
   953  002D                     ??_UARTInit:
   954                           
   955                           ; 1 bytes @ 0xD
   956  002D                     	ds	1
   957  002E                     ___fldiv@b:
   958  002E                     ___flmul@a:	
   959                           ; 4 bytes @ 0xE
   960                           
   961                           
   962                           ; 4 bytes @ 0xE
   963  002E                     	ds	2
   964  0030                     ___llmod@counter:
   965                           
   966                           ; 1 bytes @ 0x10
   967  0030                     	ds	1
   968  0031                     ?_sprintf:
   969  0031                     sprintf@f:	
   970                           ; 2 bytes @ 0x11
   971                           
   972                           
   973                           ; 1 bytes @ 0x11
   974  0031                     	ds	1
   975  0032                     ??___fldiv:
   976  0032                     ??___flmul:	
   977                           ; 1 bytes @ 0x12
   978                           
   979                           
   980                           ; 1 bytes @ 0x12
   981  0032                     	ds	5
   982  0037                     ___flmul@sign:
   983  0037                     ___fldiv@rem:	
   984                           ; 1 bytes @ 0x17
   985                           
   986                           
   987                           ; 4 bytes @ 0x17
   988  0037                     	ds	1
   989  0038                     ___flmul@aexp:
   990                           
   991                           ; 1 bytes @ 0x18
   992  0038                     	ds	1
   993  0039                     ___flmul@grs:
   994                           
   995                           ; 4 bytes @ 0x19
   996  0039                     	ds	1
   997  003A                     ??_sprintf:
   998                           
   999                           ; 1 bytes @ 0x1A
  1000  003A                     	ds	1
  1001  003B                     ___fldiv@sign:
  1002                           
  1003                           ; 1 bytes @ 0x1B
  1004  003B                     	ds	1
  1005  003C                     ___fldiv@new_exp:
  1006                           
  1007                           ; 2 bytes @ 0x1C
  1008  003C                     	ds	1
  1009  003D                     ___flmul@bexp:
  1010                           
  1011                           ; 1 bytes @ 0x1D
  1012  003D                     	ds	1
  1013  003E                     ___fldiv@grs:
  1014  003E                     ___flmul@prod:	
  1015                           ; 4 bytes @ 0x1E
  1016                           
  1017                           
  1018                           ; 4 bytes @ 0x1E
  1019  003E                     	ds	1
  1020  003F                     sprintf@flag:
  1021                           
  1022                           ; 1 bytes @ 0x1F
  1023  003F                     	ds	1
  1024  0040                     sprintf@ap:
  1025                           
  1026                           ; 1 bytes @ 0x20
  1027  0040                     	ds	1
  1028  0041                     sprintf@val:
  1029                           
  1030                           ; 4 bytes @ 0x21
  1031  0041                     	ds	1
  1032  0042                     ___fldiv@bexp:
  1033  0042                     ___flmul@temp:	
  1034                           ; 1 bytes @ 0x22
  1035                           
  1036                           
  1037                           ; 2 bytes @ 0x22
  1038  0042                     	ds	1
  1039  0043                     ___fldiv@aexp:
  1040                           
  1041                           ; 1 bytes @ 0x23
  1042  0043                     	ds	1
  1043  0044                     ?___fltol:
  1044  0044                     ?___fladd:	
  1045                           ; 4 bytes @ 0x24
  1046                           
  1047  0044                     ___fltol@f1:	
  1048                           ; 4 bytes @ 0x24
  1049                           
  1050  0044                     ___fladd@b:	
  1051                           ; 4 bytes @ 0x24
  1052                           
  1053                           
  1054                           ; 4 bytes @ 0x24
  1055  0044                     	ds	1
  1056  0045                     sprintf@sp:
  1057                           
  1058                           ; 1 bytes @ 0x25
  1059  0045                     	ds	1
  1060  0046                     sprintf@width:
  1061                           
  1062                           ; 2 bytes @ 0x26
  1063  0046                     	ds	2
  1064  0048                     ??___fltol:
  1065  0048                     sprintf@prec:	
  1066                           ; 1 bytes @ 0x28
  1067                           
  1068  0048                     ___fladd@a:	
  1069                           ; 2 bytes @ 0x28
  1070                           
  1071                           
  1072                           ; 4 bytes @ 0x28
  1073  0048                     	ds	2
  1074  004A                     sprintf@c:
  1075                           
  1076                           ; 1 bytes @ 0x2A
  1077  004A                     	ds	2
  1078  004C                     ??___fladd:
  1079                           
  1080                           ; 1 bytes @ 0x2C
  1081  004C                     	ds	8
  1082  0054                     ___fladd@signs:
  1083                           
  1084                           ; 1 bytes @ 0x34
  1085  0054                     	ds	1
  1086  0055                     ___fladd@aexp:
  1087                           
  1088                           ; 1 bytes @ 0x35
  1089  0055                     	ds	1
  1090  0056                     ___fladd@bexp:
  1091                           
  1092                           ; 1 bytes @ 0x36
  1093  0056                     	ds	1
  1094  0057                     ___fladd@grs:
  1095                           
  1096                           ; 1 bytes @ 0x37
  1097  0057                     	ds	1
  1098  0058                     ??_readMPU:
  1099  0058                     ?___flsub:	
  1100                           ; 1 bytes @ 0x38
  1101                           
  1102  0058                     ___flsub@a:	
  1103                           ; 4 bytes @ 0x38
  1104                           
  1105                           
  1106                           ; 4 bytes @ 0x38
  1107  0058                     	ds	4
  1108  005C                     ___flsub@b:
  1109                           
  1110                           ; 4 bytes @ 0x3C
  1111  005C                     	ds	4
  1112  0060                     ?_ftoa:
  1113  0060                     ftoa@f:	
  1114                           ; 1 bytes @ 0x40
  1115                           
  1116                           
  1117                           ; 4 bytes @ 0x40
  1118  0060                     	ds	4
  1119  0064                     ftoa@status:
  1120                           
  1121                           ; 2 bytes @ 0x44
  1122  0064                     	ds	2
  1123  0066                     ??_ftoa:
  1124                           
  1125                           ; 1 bytes @ 0x46
  1126  0066                     	ds	1
  1127  0067                     ftoa@rem:
  1128                           
  1129                           ; 4 bytes @ 0x47
  1130  0067                     	ds	4
  1131  006B                     ftoa@l:
  1132                           
  1133                           ; 4 bytes @ 0x4B
  1134  006B                     	ds	4
  1135  006F                     ftoa@cp:
  1136                           
  1137                           ; 1 bytes @ 0x4F
  1138  006F                     	ds	1
  1139                           
  1140                           	psect	maintext
  1141  08E7                     __pmaintext:	
  1142 ;;
  1143 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1144 ;;
  1145 ;; *************** function _main *****************
  1146 ;; Defined at:
  1147 ;;		line 37 in file "main.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;		None
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  datos          28    0[BANK3 ] float [7]
  1152 ;;  status          2   28[BANK3 ] int 
  1153 ;;  buffer          1   30[BANK3 ] PTR unsigned char 
  1154 ;;		 -> ftoa@buf(17), 
  1155 ;;  comando         1    0        unsigned char 
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : B00/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1165 ;;      Params:         0       0       0       0       0
  1166 ;;      Locals:         0       0       0      31       0
  1167 ;;      Temps:          0       0       1       0       0
  1168 ;;      Totals:         0       0       1      31       0
  1169 ;;Total ram usage:       32 bytes
  1170 ;; Hardware stack levels required when called:    5
  1171 ;; This function calls:
  1172 ;;		_I2C_Master_Init
  1173 ;;		_UARTInit
  1174 ;;		_UARTSendChar
  1175 ;;		_UARTSendString
  1176 ;;		_confMPU
  1177 ;;		_ftoa
  1178 ;;		_readMPU
  1179 ;; This function is called by:
  1180 ;;		Startup code after reset
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           
  1185                           ;psect for function _main
  1186  08E7                     _main:
  1187  08E7                     l3995:	
  1188                           ;incstack = 0
  1189                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1190                           
  1191                           
  1192                           ;main.c: 38:     ANSEL = 0;
  1193  08E7  1683               	bsf	3,5	;RP0=1, select bank3
  1194  08E8  1703               	bsf	3,6	;RP1=1, select bank3
  1195  08E9  0188               	clrf	8	;volatile
  1196                           
  1197                           ;main.c: 39:     TRISA = 0;
  1198  08EA  1683               	bsf	3,5	;RP0=1, select bank1
  1199  08EB  1303               	bcf	3,6	;RP1=0, select bank1
  1200  08EC  0185               	clrf	5	;volatile
  1201                           
  1202                           ;main.c: 40:     PORTA = 0;
  1203  08ED  1283               	bcf	3,5	;RP0=0, select bank0
  1204  08EE  1303               	bcf	3,6	;RP1=0, select bank0
  1205  08EF  0185               	clrf	5	;volatile
  1206  08F0                     l3997:
  1207                           
  1208                           ;main.c: 41:     char* buffer;;main.c: 42:     char comando;;main.c: 44:     I2C_Master_
      +                          Init();
  1209  08F0  160A  118A  22B3  120A  158A  	fcall	_I2C_Master_Init
  1210  08F5                     l3999:
  1211                           
  1212                           ;main.c: 45:     UARTInit(9600, 1);
  1213  08F5  3000               	movlw	0
  1214  08F6  1283               	bcf	3,5	;RP0=0, select bank0
  1215  08F7  1303               	bcf	3,6	;RP1=0, select bank0
  1216  08F8  00AB               	movwf	UARTInit@baud_rate+3
  1217  08F9  3000               	movlw	0
  1218  08FA  00AA               	movwf	UARTInit@baud_rate+2
  1219  08FB  3025               	movlw	37
  1220  08FC  00A9               	movwf	UARTInit@baud_rate+1
  1221  08FD  3080               	movlw	128
  1222  08FE  00A8               	movwf	UARTInit@baud_rate
  1223  08FF  01AC               	clrf	UARTInit@BRGH
  1224  0900  0AAC               	incf	UARTInit@BRGH,f
  1225  0901  160A  118A  2490  120A  158A  	fcall	_UARTInit
  1226  0906                     l4001:
  1227                           
  1228                           ;main.c: 46:     confMPU();
  1229  0906  120A  118A  272C  120A  158A  	fcall	_confMPU
  1230  090B                     l4003:
  1231                           
  1232                           ;main.c: 48:     INTCONbits.GIE = 1;
  1233  090B  178B               	bsf	11,7	;volatile
  1234  090C                     l4005:
  1235                           
  1236                           ;main.c: 49:     INTCONbits.PEIE = 1;
  1237  090C  170B               	bsf	11,6	;volatile
  1238  090D                     l4007:
  1239                           
  1240                           ;main.c: 50:     PIE1bits.RCIE = 1;
  1241  090D  1683               	bsf	3,5	;RP0=1, select bank1
  1242  090E  1303               	bcf	3,6	;RP1=0, select bank1
  1243  090F  168C               	bsf	12,5	;volatile
  1244  0910                     l4009:
  1245                           
  1246                           ;main.c: 54:         readMPU(datos);
  1247  0910  3090               	movlw	(low (main@datos| (0+256)))& (0+255)
  1248  0911  120A  118A  237E  120A  158A  	fcall	_readMPU
  1249  0916                     l4011:
  1250                           
  1251                           ;main.c: 57:         bandera = 0;
  1252  0916  1683               	bsf	3,5	;RP0=1, select bank1
  1253  0917  1303               	bcf	3,6	;RP1=0, select bank1
  1254  0918  01C0               	clrf	_bandera^(0+128)	;volatile
  1255  0919                     l4013:
  1256                           
  1257                           ;main.c: 58:         buffer = ftoa(datos[0], status);
  1258  0919  1683               	bsf	3,5	;RP0=1, select bank3
  1259  091A  1703               	bsf	3,6	;RP1=1, select bank3
  1260  091B  0813               	movf	(main@datos+3)^(0+384),w
  1261  091C  1283               	bcf	3,5	;RP0=0, select bank0
  1262  091D  1303               	bcf	3,6	;RP1=0, select bank0
  1263  091E  00E3               	movwf	ftoa@f+3
  1264  091F  1683               	bsf	3,5	;RP0=1, select bank3
  1265  0920  1703               	bsf	3,6	;RP1=1, select bank3
  1266  0921  0812               	movf	(main@datos+2)^(0+384),w
  1267  0922  1283               	bcf	3,5	;RP0=0, select bank0
  1268  0923  1303               	bcf	3,6	;RP1=0, select bank0
  1269  0924  00E2               	movwf	ftoa@f+2
  1270  0925  1683               	bsf	3,5	;RP0=1, select bank3
  1271  0926  1703               	bsf	3,6	;RP1=1, select bank3
  1272  0927  0811               	movf	(main@datos+1)^(0+384),w
  1273  0928  1283               	bcf	3,5	;RP0=0, select bank0
  1274  0929  1303               	bcf	3,6	;RP1=0, select bank0
  1275  092A  00E1               	movwf	ftoa@f+1
  1276  092B  1683               	bsf	3,5	;RP0=1, select bank3
  1277  092C  1703               	bsf	3,6	;RP1=1, select bank3
  1278  092D  0810               	movf	main@datos^(0+384),w
  1279  092E  1283               	bcf	3,5	;RP0=0, select bank0
  1280  092F  1303               	bcf	3,6	;RP1=0, select bank0
  1281  0930  00E0               	movwf	ftoa@f
  1282  0931  1683               	bsf	3,5	;RP0=1, select bank3
  1283  0932  1703               	bsf	3,6	;RP1=1, select bank3
  1284  0933  082C               	movf	main@status^(0+384),w
  1285  0934  1283               	bcf	3,5	;RP0=0, select bank0
  1286  0935  1303               	bcf	3,6	;RP1=0, select bank0
  1287  0936  00E4               	movwf	ftoa@status
  1288  0937  1683               	bsf	3,5	;RP0=1, select bank3
  1289  0938  1703               	bsf	3,6	;RP1=1, select bank3
  1290  0939  082D               	movf	(main@status+1)^(0+384),w
  1291  093A  1283               	bcf	3,5	;RP0=0, select bank0
  1292  093B  1303               	bcf	3,6	;RP1=0, select bank0
  1293  093C  00E5               	movwf	ftoa@status+1
  1294  093D  120A  118A  2657  120A  158A  	fcall	_ftoa
  1295  0942  1683               	bsf	3,5	;RP0=1, select bank1
  1296  0943  1303               	bcf	3,6	;RP1=0, select bank1
  1297  0944  00BF               	movwf	??_main^(0+128)
  1298  0945  083F               	movf	??_main^(0+128),w
  1299  0946  1683               	bsf	3,5	;RP0=1, select bank3
  1300  0947  1703               	bsf	3,6	;RP1=1, select bank3
  1301  0948  00AE               	movwf	main@buffer^(0+384)
  1302  0949                     l4015:
  1303                           
  1304                           ;main.c: 59:         UARTSendString(" ", 10);
  1305  0949  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1306  094A  00F4               	movwf	UARTSendString@str
  1307  094B  3080               	movlw	128
  1308  094C  00F5               	movwf	UARTSendString@str+1
  1309  094D  300A               	movlw	10
  1310  094E  1683               	bsf	3,5	;RP0=1, select bank1
  1311  094F  1303               	bcf	3,6	;RP1=0, select bank1
  1312  0950  00BF               	movwf	??_main^(0+128)
  1313  0951  083F               	movf	??_main^(0+128),w
  1314  0952  00F6               	movwf	UARTSendString@max_length
  1315  0953  160A  118A  23D1  120A  158A  	fcall	_UARTSendString
  1316  0958                     l4017:
  1317                           
  1318                           ;main.c: 60:         UARTSendString(buffer, 6);
  1319  0958  1683               	bsf	3,5	;RP0=1, select bank3
  1320  0959  1703               	bsf	3,6	;RP1=1, select bank3
  1321  095A  082E               	movf	main@buffer^(0+384),w
  1322  095B  00F4               	movwf	UARTSendString@str
  1323  095C  3000               	movlw	0
  1324  095D  00F5               	movwf	UARTSendString@str+1
  1325  095E  3006               	movlw	6
  1326  095F  1683               	bsf	3,5	;RP0=1, select bank1
  1327  0960  1303               	bcf	3,6	;RP1=0, select bank1
  1328  0961  00BF               	movwf	??_main^(0+128)
  1329  0962  083F               	movf	??_main^(0+128),w
  1330  0963  00F6               	movwf	UARTSendString@max_length
  1331  0964  160A  118A  23D1  120A  158A  	fcall	_UARTSendString
  1332  0969                     l4019:
  1333                           
  1334                           ;main.c: 62:         buffer = ftoa(datos[1], status);
  1335  0969  3004               	movlw	4
  1336  096A  3E90               	addlw	(low (main@datos| (0+256)))& (0+255)
  1337  096B  0084               	movwf	4
  1338  096C  1783               	bsf	3,7	;select IRP bank3
  1339  096D  0800               	movf	0,w
  1340  096E  1283               	bcf	3,5	;RP0=0, select bank0
  1341  096F  1303               	bcf	3,6	;RP1=0, select bank0
  1342  0970  00E0               	movwf	ftoa@f
  1343  0971  0A84               	incf	4,f
  1344  0972  0800               	movf	0,w
  1345  0973  00E1               	movwf	ftoa@f+1
  1346  0974  0A84               	incf	4,f
  1347  0975  0800               	movf	0,w
  1348  0976  00E2               	movwf	ftoa@f+2
  1349  0977  0A84               	incf	4,f
  1350  0978  0800               	movf	0,w
  1351  0979  00E3               	movwf	ftoa@f+3
  1352  097A  1683               	bsf	3,5	;RP0=1, select bank3
  1353  097B  1703               	bsf	3,6	;RP1=1, select bank3
  1354  097C  082C               	movf	main@status^(0+384),w
  1355  097D  1283               	bcf	3,5	;RP0=0, select bank0
  1356  097E  1303               	bcf	3,6	;RP1=0, select bank0
  1357  097F  00E4               	movwf	ftoa@status
  1358  0980  1683               	bsf	3,5	;RP0=1, select bank3
  1359  0981  1703               	bsf	3,6	;RP1=1, select bank3
  1360  0982  082D               	movf	(main@status+1)^(0+384),w
  1361  0983  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0984  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0985  00E5               	movwf	ftoa@status+1
  1364  0986  120A  118A  2657  120A  158A  	fcall	_ftoa
  1365  098B  1683               	bsf	3,5	;RP0=1, select bank1
  1366  098C  1303               	bcf	3,6	;RP1=0, select bank1
  1367  098D  00BF               	movwf	??_main^(0+128)
  1368  098E  083F               	movf	??_main^(0+128),w
  1369  098F  1683               	bsf	3,5	;RP0=1, select bank3
  1370  0990  1703               	bsf	3,6	;RP1=1, select bank3
  1371  0991  00AE               	movwf	main@buffer^(0+384)
  1372  0992                     l4021:
  1373                           
  1374                           ;main.c: 63:         UARTSendString(" ", 10);
  1375  0992  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1376  0993  00F4               	movwf	UARTSendString@str
  1377  0994  3080               	movlw	128
  1378  0995  00F5               	movwf	UARTSendString@str+1
  1379  0996  300A               	movlw	10
  1380  0997  1683               	bsf	3,5	;RP0=1, select bank1
  1381  0998  1303               	bcf	3,6	;RP1=0, select bank1
  1382  0999  00BF               	movwf	??_main^(0+128)
  1383  099A  083F               	movf	??_main^(0+128),w
  1384  099B  00F6               	movwf	UARTSendString@max_length
  1385  099C  160A  118A  23D1  120A  158A  	fcall	_UARTSendString
  1386  09A1                     l4023:
  1387                           
  1388                           ;main.c: 64:         UARTSendString(buffer, 6);
  1389  09A1  1683               	bsf	3,5	;RP0=1, select bank3
  1390  09A2  1703               	bsf	3,6	;RP1=1, select bank3
  1391  09A3  082E               	movf	main@buffer^(0+384),w
  1392  09A4  00F4               	movwf	UARTSendString@str
  1393  09A5  3000               	movlw	0
  1394  09A6  00F5               	movwf	UARTSendString@str+1
  1395  09A7  3006               	movlw	6
  1396  09A8  1683               	bsf	3,5	;RP0=1, select bank1
  1397  09A9  1303               	bcf	3,6	;RP1=0, select bank1
  1398  09AA  00BF               	movwf	??_main^(0+128)
  1399  09AB  083F               	movf	??_main^(0+128),w
  1400  09AC  00F6               	movwf	UARTSendString@max_length
  1401  09AD  160A  118A  23D1  120A  158A  	fcall	_UARTSendString
  1402  09B2                     l4025:
  1403                           
  1404                           ;main.c: 66:         buffer = ftoa(datos[2], status);
  1405  09B2  3008               	movlw	8
  1406  09B3  3E90               	addlw	(low (main@datos| (0+256)))& (0+255)
  1407  09B4  0084               	movwf	4
  1408  09B5  1783               	bsf	3,7	;select IRP bank3
  1409  09B6  0800               	movf	0,w
  1410  09B7  1283               	bcf	3,5	;RP0=0, select bank0
  1411  09B8  1303               	bcf	3,6	;RP1=0, select bank0
  1412  09B9  00E0               	movwf	ftoa@f
  1413  09BA  0A84               	incf	4,f
  1414  09BB  0800               	movf	0,w
  1415  09BC  00E1               	movwf	ftoa@f+1
  1416  09BD  0A84               	incf	4,f
  1417  09BE  0800               	movf	0,w
  1418  09BF  00E2               	movwf	ftoa@f+2
  1419  09C0  0A84               	incf	4,f
  1420  09C1  0800               	movf	0,w
  1421  09C2  00E3               	movwf	ftoa@f+3
  1422  09C3  1683               	bsf	3,5	;RP0=1, select bank3
  1423  09C4  1703               	bsf	3,6	;RP1=1, select bank3
  1424  09C5  082C               	movf	main@status^(0+384),w
  1425  09C6  1283               	bcf	3,5	;RP0=0, select bank0
  1426  09C7  1303               	bcf	3,6	;RP1=0, select bank0
  1427  09C8  00E4               	movwf	ftoa@status
  1428  09C9  1683               	bsf	3,5	;RP0=1, select bank3
  1429  09CA  1703               	bsf	3,6	;RP1=1, select bank3
  1430  09CB  082D               	movf	(main@status+1)^(0+384),w
  1431  09CC  1283               	bcf	3,5	;RP0=0, select bank0
  1432  09CD  1303               	bcf	3,6	;RP1=0, select bank0
  1433  09CE  00E5               	movwf	ftoa@status+1
  1434  09CF  120A  118A  2657  120A  158A  	fcall	_ftoa
  1435  09D4  1683               	bsf	3,5	;RP0=1, select bank1
  1436  09D5  1303               	bcf	3,6	;RP1=0, select bank1
  1437  09D6  00BF               	movwf	??_main^(0+128)
  1438  09D7  083F               	movf	??_main^(0+128),w
  1439  09D8  1683               	bsf	3,5	;RP0=1, select bank3
  1440  09D9  1703               	bsf	3,6	;RP1=1, select bank3
  1441  09DA  00AE               	movwf	main@buffer^(0+384)
  1442  09DB                     l4027:
  1443                           
  1444                           ;main.c: 67:         UARTSendString(" ", 6);
  1445  09DB  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1446  09DC  00F4               	movwf	UARTSendString@str
  1447  09DD  3080               	movlw	128
  1448  09DE  00F5               	movwf	UARTSendString@str+1
  1449  09DF  3006               	movlw	6
  1450  09E0  1683               	bsf	3,5	;RP0=1, select bank1
  1451  09E1  1303               	bcf	3,6	;RP1=0, select bank1
  1452  09E2  00BF               	movwf	??_main^(0+128)
  1453  09E3  083F               	movf	??_main^(0+128),w
  1454  09E4  00F6               	movwf	UARTSendString@max_length
  1455  09E5  160A  118A  23D1  120A  158A  	fcall	_UARTSendString
  1456  09EA                     l4029:
  1457                           
  1458                           ;main.c: 68:         UARTSendString(buffer, 6);
  1459  09EA  1683               	bsf	3,5	;RP0=1, select bank3
  1460  09EB  1703               	bsf	3,6	;RP1=1, select bank3
  1461  09EC  082E               	movf	main@buffer^(0+384),w
  1462  09ED  00F4               	movwf	UARTSendString@str
  1463  09EE  3000               	movlw	0
  1464  09EF  00F5               	movwf	UARTSendString@str+1
  1465  09F0  3006               	movlw	6
  1466  09F1  1683               	bsf	3,5	;RP0=1, select bank1
  1467  09F2  1303               	bcf	3,6	;RP1=0, select bank1
  1468  09F3  00BF               	movwf	??_main^(0+128)
  1469  09F4  083F               	movf	??_main^(0+128),w
  1470  09F5  00F6               	movwf	UARTSendString@max_length
  1471  09F6  160A  118A  23D1  120A  158A  	fcall	_UARTSendString
  1472  09FB                     l4031:
  1473                           
  1474                           ;main.c: 70:         buffer = ftoa(datos[3], status);
  1475  09FB  300C               	movlw	12
  1476  09FC  3E90               	addlw	(low (main@datos| (0+256)))& (0+255)
  1477  09FD  0084               	movwf	4
  1478  09FE  1783               	bsf	3,7	;select IRP bank3
  1479  09FF  0800               	movf	0,w
  1480  0A00  1283               	bcf	3,5	;RP0=0, select bank0
  1481  0A01  1303               	bcf	3,6	;RP1=0, select bank0
  1482  0A02  00E0               	movwf	ftoa@f
  1483  0A03  0A84               	incf	4,f
  1484  0A04  0800               	movf	0,w
  1485  0A05  00E1               	movwf	ftoa@f+1
  1486  0A06  0A84               	incf	4,f
  1487  0A07  0800               	movf	0,w
  1488  0A08  00E2               	movwf	ftoa@f+2
  1489  0A09  0A84               	incf	4,f
  1490  0A0A  0800               	movf	0,w
  1491  0A0B  00E3               	movwf	ftoa@f+3
  1492  0A0C  1683               	bsf	3,5	;RP0=1, select bank3
  1493  0A0D  1703               	bsf	3,6	;RP1=1, select bank3
  1494  0A0E  082C               	movf	main@status^(0+384),w
  1495  0A0F  1283               	bcf	3,5	;RP0=0, select bank0
  1496  0A10  1303               	bcf	3,6	;RP1=0, select bank0
  1497  0A11  00E4               	movwf	ftoa@status
  1498  0A12  1683               	bsf	3,5	;RP0=1, select bank3
  1499  0A13  1703               	bsf	3,6	;RP1=1, select bank3
  1500  0A14  082D               	movf	(main@status+1)^(0+384),w
  1501  0A15  1283               	bcf	3,5	;RP0=0, select bank0
  1502  0A16  1303               	bcf	3,6	;RP1=0, select bank0
  1503  0A17  00E5               	movwf	ftoa@status+1
  1504  0A18  120A  118A  2657  120A  158A  	fcall	_ftoa
  1505  0A1D  1683               	bsf	3,5	;RP0=1, select bank1
  1506  0A1E  1303               	bcf	3,6	;RP1=0, select bank1
  1507  0A1F  00BF               	movwf	??_main^(0+128)
  1508  0A20  083F               	movf	??_main^(0+128),w
  1509  0A21  1683               	bsf	3,5	;RP0=1, select bank3
  1510  0A22  1703               	bsf	3,6	;RP1=1, select bank3
  1511  0A23  00AE               	movwf	main@buffer^(0+384)
  1512  0A24                     l4033:
  1513                           
  1514                           ;main.c: 71:         UARTSendString(" ", 6);
  1515  0A24  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1516  0A25  00F4               	movwf	UARTSendString@str
  1517  0A26  3080               	movlw	128
  1518  0A27  00F5               	movwf	UARTSendString@str+1
  1519  0A28  3006               	movlw	6
  1520  0A29  1683               	bsf	3,5	;RP0=1, select bank1
  1521  0A2A  1303               	bcf	3,6	;RP1=0, select bank1
  1522  0A2B  00BF               	movwf	??_main^(0+128)
  1523  0A2C  083F               	movf	??_main^(0+128),w
  1524  0A2D  00F6               	movwf	UARTSendString@max_length
  1525  0A2E  160A  118A  23D1  120A  158A  	fcall	_UARTSendString
  1526  0A33                     l4035:
  1527                           
  1528                           ;main.c: 72:         UARTSendString(buffer, 6);
  1529  0A33  1683               	bsf	3,5	;RP0=1, select bank3
  1530  0A34  1703               	bsf	3,6	;RP1=1, select bank3
  1531  0A35  082E               	movf	main@buffer^(0+384),w
  1532  0A36  00F4               	movwf	UARTSendString@str
  1533  0A37  3000               	movlw	0
  1534  0A38  00F5               	movwf	UARTSendString@str+1
  1535  0A39  3006               	movlw	6
  1536  0A3A  1683               	bsf	3,5	;RP0=1, select bank1
  1537  0A3B  1303               	bcf	3,6	;RP1=0, select bank1
  1538  0A3C  00BF               	movwf	??_main^(0+128)
  1539  0A3D  083F               	movf	??_main^(0+128),w
  1540  0A3E  00F6               	movwf	UARTSendString@max_length
  1541  0A3F  160A  118A  23D1  120A  158A  	fcall	_UARTSendString
  1542  0A44                     l4037:
  1543                           
  1544                           ;main.c: 74:         buffer = ftoa(datos[4], status);
  1545  0A44  3010               	movlw	16
  1546  0A45  3E90               	addlw	(low (main@datos| (0+256)))& (0+255)
  1547  0A46  0084               	movwf	4
  1548  0A47  1783               	bsf	3,7	;select IRP bank3
  1549  0A48  0800               	movf	0,w
  1550  0A49  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0A4A  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0A4B  00E0               	movwf	ftoa@f
  1553  0A4C  0A84               	incf	4,f
  1554  0A4D  0800               	movf	0,w
  1555  0A4E  00E1               	movwf	ftoa@f+1
  1556  0A4F  0A84               	incf	4,f
  1557  0A50  0800               	movf	0,w
  1558  0A51  00E2               	movwf	ftoa@f+2
  1559  0A52  0A84               	incf	4,f
  1560  0A53  0800               	movf	0,w
  1561  0A54  00E3               	movwf	ftoa@f+3
  1562  0A55  1683               	bsf	3,5	;RP0=1, select bank3
  1563  0A56  1703               	bsf	3,6	;RP1=1, select bank3
  1564  0A57  082C               	movf	main@status^(0+384),w
  1565  0A58  1283               	bcf	3,5	;RP0=0, select bank0
  1566  0A59  1303               	bcf	3,6	;RP1=0, select bank0
  1567  0A5A  00E4               	movwf	ftoa@status
  1568  0A5B  1683               	bsf	3,5	;RP0=1, select bank3
  1569  0A5C  1703               	bsf	3,6	;RP1=1, select bank3
  1570  0A5D  082D               	movf	(main@status+1)^(0+384),w
  1571  0A5E  1283               	bcf	3,5	;RP0=0, select bank0
  1572  0A5F  1303               	bcf	3,6	;RP1=0, select bank0
  1573  0A60  00E5               	movwf	ftoa@status+1
  1574  0A61  120A  118A  2657  120A  158A  	fcall	_ftoa
  1575  0A66  1683               	bsf	3,5	;RP0=1, select bank1
  1576  0A67  1303               	bcf	3,6	;RP1=0, select bank1
  1577  0A68  00BF               	movwf	??_main^(0+128)
  1578  0A69  083F               	movf	??_main^(0+128),w
  1579  0A6A  1683               	bsf	3,5	;RP0=1, select bank3
  1580  0A6B  1703               	bsf	3,6	;RP1=1, select bank3
  1581  0A6C  00AE               	movwf	main@buffer^(0+384)
  1582  0A6D                     l4039:
  1583                           
  1584                           ;main.c: 75:         UARTSendString(" ", 6);
  1585  0A6D  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1586  0A6E  00F4               	movwf	UARTSendString@str
  1587  0A6F  3080               	movlw	128
  1588  0A70  00F5               	movwf	UARTSendString@str+1
  1589  0A71  3006               	movlw	6
  1590  0A72  1683               	bsf	3,5	;RP0=1, select bank1
  1591  0A73  1303               	bcf	3,6	;RP1=0, select bank1
  1592  0A74  00BF               	movwf	??_main^(0+128)
  1593  0A75  083F               	movf	??_main^(0+128),w
  1594  0A76  00F6               	movwf	UARTSendString@max_length
  1595  0A77  160A  118A  23D1  120A  158A  	fcall	_UARTSendString
  1596  0A7C                     l4041:
  1597                           
  1598                           ;main.c: 76:         UARTSendString(buffer, 6);
  1599  0A7C  1683               	bsf	3,5	;RP0=1, select bank3
  1600  0A7D  1703               	bsf	3,6	;RP1=1, select bank3
  1601  0A7E  082E               	movf	main@buffer^(0+384),w
  1602  0A7F  00F4               	movwf	UARTSendString@str
  1603  0A80  3000               	movlw	0
  1604  0A81  00F5               	movwf	UARTSendString@str+1
  1605  0A82  3006               	movlw	6
  1606  0A83  1683               	bsf	3,5	;RP0=1, select bank1
  1607  0A84  1303               	bcf	3,6	;RP1=0, select bank1
  1608  0A85  00BF               	movwf	??_main^(0+128)
  1609  0A86  083F               	movf	??_main^(0+128),w
  1610  0A87  00F6               	movwf	UARTSendString@max_length
  1611  0A88  160A  118A  23D1  120A  158A  	fcall	_UARTSendString
  1612  0A8D                     l4043:
  1613                           
  1614                           ;main.c: 77:         buffer = ftoa(datos[5], status);
  1615  0A8D  3014               	movlw	20
  1616  0A8E  3E90               	addlw	(low (main@datos| (0+256)))& (0+255)
  1617  0A8F  0084               	movwf	4
  1618  0A90  1783               	bsf	3,7	;select IRP bank3
  1619  0A91  0800               	movf	0,w
  1620  0A92  1283               	bcf	3,5	;RP0=0, select bank0
  1621  0A93  1303               	bcf	3,6	;RP1=0, select bank0
  1622  0A94  00E0               	movwf	ftoa@f
  1623  0A95  0A84               	incf	4,f
  1624  0A96  0800               	movf	0,w
  1625  0A97  00E1               	movwf	ftoa@f+1
  1626  0A98  0A84               	incf	4,f
  1627  0A99  0800               	movf	0,w
  1628  0A9A  00E2               	movwf	ftoa@f+2
  1629  0A9B  0A84               	incf	4,f
  1630  0A9C  0800               	movf	0,w
  1631  0A9D  00E3               	movwf	ftoa@f+3
  1632  0A9E  1683               	bsf	3,5	;RP0=1, select bank3
  1633  0A9F  1703               	bsf	3,6	;RP1=1, select bank3
  1634  0AA0  082C               	movf	main@status^(0+384),w
  1635  0AA1  1283               	bcf	3,5	;RP0=0, select bank0
  1636  0AA2  1303               	bcf	3,6	;RP1=0, select bank0
  1637  0AA3  00E4               	movwf	ftoa@status
  1638  0AA4  1683               	bsf	3,5	;RP0=1, select bank3
  1639  0AA5  1703               	bsf	3,6	;RP1=1, select bank3
  1640  0AA6  082D               	movf	(main@status+1)^(0+384),w
  1641  0AA7  1283               	bcf	3,5	;RP0=0, select bank0
  1642  0AA8  1303               	bcf	3,6	;RP1=0, select bank0
  1643  0AA9  00E5               	movwf	ftoa@status+1
  1644  0AAA  120A  118A  2657  120A  158A  	fcall	_ftoa
  1645  0AAF  1683               	bsf	3,5	;RP0=1, select bank1
  1646  0AB0  1303               	bcf	3,6	;RP1=0, select bank1
  1647  0AB1  00BF               	movwf	??_main^(0+128)
  1648  0AB2  083F               	movf	??_main^(0+128),w
  1649  0AB3  1683               	bsf	3,5	;RP0=1, select bank3
  1650  0AB4  1703               	bsf	3,6	;RP1=1, select bank3
  1651  0AB5  00AE               	movwf	main@buffer^(0+384)
  1652  0AB6                     l4045:
  1653                           
  1654                           ;main.c: 78:         UARTSendString(" ", 6);
  1655  0AB6  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1656  0AB7  00F4               	movwf	UARTSendString@str
  1657  0AB8  3080               	movlw	128
  1658  0AB9  00F5               	movwf	UARTSendString@str+1
  1659  0ABA  3006               	movlw	6
  1660  0ABB  1683               	bsf	3,5	;RP0=1, select bank1
  1661  0ABC  1303               	bcf	3,6	;RP1=0, select bank1
  1662  0ABD  00BF               	movwf	??_main^(0+128)
  1663  0ABE  083F               	movf	??_main^(0+128),w
  1664  0ABF  00F6               	movwf	UARTSendString@max_length
  1665  0AC0  160A  118A  23D1  120A  158A  	fcall	_UARTSendString
  1666  0AC5                     l4047:
  1667                           
  1668                           ;main.c: 79:         UARTSendString(buffer, 6);
  1669  0AC5  1683               	bsf	3,5	;RP0=1, select bank3
  1670  0AC6  1703               	bsf	3,6	;RP1=1, select bank3
  1671  0AC7  082E               	movf	main@buffer^(0+384),w
  1672  0AC8  00F4               	movwf	UARTSendString@str
  1673  0AC9  3000               	movlw	0
  1674  0ACA  00F5               	movwf	UARTSendString@str+1
  1675  0ACB  3006               	movlw	6
  1676  0ACC  1683               	bsf	3,5	;RP0=1, select bank1
  1677  0ACD  1303               	bcf	3,6	;RP1=0, select bank1
  1678  0ACE  00BF               	movwf	??_main^(0+128)
  1679  0ACF  083F               	movf	??_main^(0+128),w
  1680  0AD0  00F6               	movwf	UARTSendString@max_length
  1681  0AD1  160A  118A  23D1  120A  158A  	fcall	_UARTSendString
  1682  0AD6                     l4049:
  1683                           
  1684                           ;main.c: 81:         buffer = ftoa(datos[6], status);
  1685  0AD6  3018               	movlw	24
  1686  0AD7  3E90               	addlw	(low (main@datos| (0+256)))& (0+255)
  1687  0AD8  0084               	movwf	4
  1688  0AD9  1783               	bsf	3,7	;select IRP bank3
  1689  0ADA  0800               	movf	0,w
  1690  0ADB  1283               	bcf	3,5	;RP0=0, select bank0
  1691  0ADC  1303               	bcf	3,6	;RP1=0, select bank0
  1692  0ADD  00E0               	movwf	ftoa@f
  1693  0ADE  0A84               	incf	4,f
  1694  0ADF  0800               	movf	0,w
  1695  0AE0  00E1               	movwf	ftoa@f+1
  1696  0AE1  0A84               	incf	4,f
  1697  0AE2  0800               	movf	0,w
  1698  0AE3  00E2               	movwf	ftoa@f+2
  1699  0AE4  0A84               	incf	4,f
  1700  0AE5  0800               	movf	0,w
  1701  0AE6  00E3               	movwf	ftoa@f+3
  1702  0AE7  1683               	bsf	3,5	;RP0=1, select bank3
  1703  0AE8  1703               	bsf	3,6	;RP1=1, select bank3
  1704  0AE9  082C               	movf	main@status^(0+384),w
  1705  0AEA  1283               	bcf	3,5	;RP0=0, select bank0
  1706  0AEB  1303               	bcf	3,6	;RP1=0, select bank0
  1707  0AEC  00E4               	movwf	ftoa@status
  1708  0AED  1683               	bsf	3,5	;RP0=1, select bank3
  1709  0AEE  1703               	bsf	3,6	;RP1=1, select bank3
  1710  0AEF  082D               	movf	(main@status+1)^(0+384),w
  1711  0AF0  1283               	bcf	3,5	;RP0=0, select bank0
  1712  0AF1  1303               	bcf	3,6	;RP1=0, select bank0
  1713  0AF2  00E5               	movwf	ftoa@status+1
  1714  0AF3  120A  118A  2657  120A  158A  	fcall	_ftoa
  1715  0AF8  1683               	bsf	3,5	;RP0=1, select bank1
  1716  0AF9  1303               	bcf	3,6	;RP1=0, select bank1
  1717  0AFA  00BF               	movwf	??_main^(0+128)
  1718  0AFB  083F               	movf	??_main^(0+128),w
  1719  0AFC  1683               	bsf	3,5	;RP0=1, select bank3
  1720  0AFD  1703               	bsf	3,6	;RP1=1, select bank3
  1721  0AFE  00AE               	movwf	main@buffer^(0+384)
  1722  0AFF                     l4051:
  1723                           
  1724                           ;main.c: 82:         UARTSendString(" ", 6);
  1725  0AFF  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1726  0B00  00F4               	movwf	UARTSendString@str
  1727  0B01  3080               	movlw	128
  1728  0B02  00F5               	movwf	UARTSendString@str+1
  1729  0B03  3006               	movlw	6
  1730  0B04  1683               	bsf	3,5	;RP0=1, select bank1
  1731  0B05  1303               	bcf	3,6	;RP1=0, select bank1
  1732  0B06  00BF               	movwf	??_main^(0+128)
  1733  0B07  083F               	movf	??_main^(0+128),w
  1734  0B08  00F6               	movwf	UARTSendString@max_length
  1735  0B09  160A  118A  23D1  120A  158A  	fcall	_UARTSendString
  1736  0B0E                     l4053:
  1737                           
  1738                           ;main.c: 83:         UARTSendString(buffer, 6);
  1739  0B0E  1683               	bsf	3,5	;RP0=1, select bank3
  1740  0B0F  1703               	bsf	3,6	;RP1=1, select bank3
  1741  0B10  082E               	movf	main@buffer^(0+384),w
  1742  0B11  00F4               	movwf	UARTSendString@str
  1743  0B12  3000               	movlw	0
  1744  0B13  00F5               	movwf	UARTSendString@str+1
  1745  0B14  3006               	movlw	6
  1746  0B15  1683               	bsf	3,5	;RP0=1, select bank1
  1747  0B16  1303               	bcf	3,6	;RP1=0, select bank1
  1748  0B17  00BF               	movwf	??_main^(0+128)
  1749  0B18  083F               	movf	??_main^(0+128),w
  1750  0B19  00F6               	movwf	UARTSendString@max_length
  1751  0B1A  160A  118A  23D1  120A  158A  	fcall	_UARTSendString
  1752                           
  1753                           ;main.c: 85:         UARTSendChar('\n');
  1754  0B1F  300A               	movlw	10
  1755  0B20  160A  118A  22A7  120A  158A  	fcall	_UARTSendChar
  1756  0B25                     l4055:
  1757                           
  1758                           ;main.c: 86:         PORTA = ~PORTA;
  1759  0B25  1283               	bcf	3,5	;RP0=0, select bank0
  1760  0B26  1303               	bcf	3,6	;RP1=0, select bank0
  1761  0B27  0985               	comf	5,f	;volatile
  1762  0B28  2910               	goto	l4009
  1763  0B29  120A  118A  280C   	ljmp	start
  1764  0B2C                     __end_of_main:
  1765                           
  1766                           	psect	text1
  1767  037E                     __ptext1:	
  1768 ;; *************** function _readMPU *****************
  1769 ;; Defined at:
  1770 ;;		line 28 in file "MPU6050.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;  datos           1    wreg     PTR float 
  1773 ;;		 -> main@datos(28), 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  datos           1   30[BANK1 ] PTR float 
  1776 ;;		 -> main@datos(28), 
  1777 ;;  i               2   28[BANK1 ] int 
  1778 ;;  valores        14    0[BANK1 ] unsigned char [14]
  1779 ;;  guardar        14   14[BANK1 ] int [7]
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1    wreg      void 
  1782 ;; Registers used:
  1783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1789 ;;      Params:         0       0       0       0       0
  1790 ;;      Locals:         0       0      31       0       0
  1791 ;;      Temps:          0       4       0       0       0
  1792 ;;      Totals:         0       4      31       0       0
  1793 ;;Total ram usage:       35 bytes
  1794 ;; Hardware stack levels used:    1
  1795 ;; Hardware stack levels required when called:    4
  1796 ;; This function calls:
  1797 ;;		_I2C_Master_RepeatedStart
  1798 ;;		_I2C_Master_Stop
  1799 ;;		_I2C_Master_Write
  1800 ;;		_I2C_Read
  1801 ;;		_I2C_Start
  1802 ;;		___fladd
  1803 ;;		___fldiv
  1804 ;;		___flmul
  1805 ;;		___xxtofl
  1806 ;; This function is called by:
  1807 ;;		_main
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           
  1812                           ;psect for function _readMPU
  1813  037E                     _readMPU:
  1814                           
  1815                           ;incstack = 0
  1816                           ; Regs used in _readMPU: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1817                           ;readMPU@datos stored from wreg
  1818  037E  1683               	bsf	3,5	;RP0=1, select bank1
  1819  037F  1303               	bcf	3,6	;RP1=0, select bank1
  1820  0380  00BE               	movwf	readMPU@datos^(0+128)
  1821  0381                     l3903:
  1822                           
  1823                           ;MPU6050.c: 29:     char valores[14];;MPU6050.c: 30:     int guardar[7];;MPU6050.c: 31: 
      +                              I2C_Start(0xD0);
  1824  0381  30D0               	movlw	208
  1825  0382  160A  118A  22DD  120A  118A  	fcall	_I2C_Start
  1826  0387                     l205:	
  1827                           ;MPU6050.c: 32:     while (SSPCON2bits.ACKSTAT);
  1828                           
  1829  0387  1683               	bsf	3,5	;RP0=1, select bank1
  1830  0388  1303               	bcf	3,6	;RP1=0, select bank1
  1831  0389  1B11               	btfsc	17,6	;volatile
  1832  038A  2B8C               	goto	u6191
  1833  038B  2B8D               	goto	u6190
  1834  038C                     u6191:
  1835  038C  2B87               	goto	l205
  1836  038D                     u6190:
  1837  038D                     l3905:
  1838                           
  1839                           ;MPU6050.c: 33:     I2C_Master_Write(0x3B);
  1840  038D  303B               	movlw	59
  1841  038E  160A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
  1842  0393                     l208:	
  1843                           ;MPU6050.c: 34:     while (SSPCON2bits.ACKSTAT);
  1844                           
  1845  0393  1683               	bsf	3,5	;RP0=1, select bank1
  1846  0394  1303               	bcf	3,6	;RP1=0, select bank1
  1847  0395  1B11               	btfsc	17,6	;volatile
  1848  0396  2B98               	goto	u6201
  1849  0397  2B99               	goto	u6200
  1850  0398                     u6201:
  1851  0398  2B93               	goto	l208
  1852  0399                     u6200:
  1853  0399                     l3907:
  1854                           
  1855                           ;MPU6050.c: 35:     I2C_Master_RepeatedStart();
  1856  0399  160A  118A  2281  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1857                           
  1858                           ;MPU6050.c: 36:     I2C_Master_Write(0xD1);
  1859  039E  30D1               	movlw	209
  1860  039F  160A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
  1861  03A4                     l3909:
  1862                           
  1863                           ;MPU6050.c: 37:     for (int i = 0; i < 13; i++) valores[i] = I2C_Read(0);
  1864  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  1865  03A5  1303               	bcf	3,6	;RP1=0, select bank1
  1866  03A6  01BC               	clrf	readMPU@i^(0+128)
  1867  03A7  01BD               	clrf	(readMPU@i+1)^(0+128)
  1868  03A8                     l3915:
  1869  03A8  3000               	movlw	0
  1870  03A9  160A  118A  234F  120A  118A  	fcall	_I2C_Read
  1871  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  1872  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  1873  03B0  00D8               	movwf	??_readMPU
  1874  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  1875  03B2  1303               	bcf	3,6	;RP1=0, select bank1
  1876  03B3  083C               	movf	readMPU@i^(0+128),w
  1877  03B4  3EA0               	addlw	(low (readMPU@valores| 0))& (0+255)
  1878  03B5  0084               	movwf	4
  1879  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  1880  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  1881  03B8  0858               	movf	??_readMPU,w
  1882  03B9  1383               	bcf	3,7	;select IRP bank1
  1883  03BA  0080               	movwf	0
  1884  03BB                     l3917:
  1885  03BB  3001               	movlw	1
  1886  03BC  1683               	bsf	3,5	;RP0=1, select bank1
  1887  03BD  1303               	bcf	3,6	;RP1=0, select bank1
  1888  03BE  07BC               	addwf	readMPU@i^(0+128),f
  1889  03BF  1803               	skipnc
  1890  03C0  0ABD               	incf	(readMPU@i+1)^(0+128),f
  1891  03C1  3000               	movlw	0
  1892  03C2  07BD               	addwf	(readMPU@i+1)^(0+128),f
  1893  03C3                     l3919:
  1894  03C3  083D               	movf	(readMPU@i+1)^(0+128),w
  1895  03C4  3A80               	xorlw	128
  1896  03C5  00FF               	movwf	btemp+1
  1897  03C6  3080               	movlw	128
  1898  03C7  027F               	subwf	btemp+1,w
  1899  03C8  1D03               	skipz
  1900  03C9  2BCC               	goto	u6215
  1901  03CA  300D               	movlw	13
  1902  03CB  023C               	subwf	readMPU@i^(0+128),w
  1903  03CC                     u6215:
  1904  03CC  1C03               	skipc
  1905  03CD  2BCF               	goto	u6211
  1906  03CE  2BD0               	goto	u6210
  1907  03CF                     u6211:
  1908  03CF  2BA8               	goto	l3915
  1909  03D0                     u6210:
  1910  03D0                     l3921:
  1911                           
  1912                           ;MPU6050.c: 38:     valores[13] = I2C_Read(1);
  1913  03D0  3001               	movlw	1
  1914  03D1  160A  118A  234F  120A  118A  	fcall	_I2C_Read
  1915  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  1916  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  1917  03D8  00D8               	movwf	??_readMPU
  1918  03D9  0858               	movf	??_readMPU,w
  1919  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  1920  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  1921  03DC  00AD               	movwf	(readMPU@valores^(0+128)+13)
  1922                           
  1923                           ;MPU6050.c: 39:     I2C_Master_Stop();
  1924  03DD  160A  118A  2278  120A  118A  	fcall	_I2C_Master_Stop
  1925  03E2                     l3923:
  1926                           
  1927                           ;MPU6050.c: 42:     guardar[0] = ((int) valores[0] << 8) | ((int) valores[1]);
  1928  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  1929  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  1930  03E4  0821               	movf	(readMPU@valores^(0+128)+1),w
  1931  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  1932  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  1933  03E7  00D8               	movwf	??_readMPU
  1934  03E8  01D9               	clrf	??_readMPU+1
  1935  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  1936  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  1937  03EB  0820               	movf	readMPU@valores^(0+128),w
  1938  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  1939  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  1940  03EE  00DA               	movwf	??_readMPU+2
  1941  03EF  01DB               	clrf	??_readMPU+3
  1942  03F0  085A               	movf	??_readMPU+2,w
  1943  03F1  00DB               	movwf	??_readMPU+3
  1944  03F2  01DA               	clrf	??_readMPU+2
  1945  03F3  0858               	movf	??_readMPU,w
  1946  03F4  045A               	iorwf	??_readMPU+2,w
  1947  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  1948  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  1949  03F7  00AE               	movwf	readMPU@guardar^(0+128)
  1950  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  1951  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  1952  03FA  0859               	movf	??_readMPU+1,w
  1953  03FB  045B               	iorwf	??_readMPU+3,w
  1954  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  1955  03FD  1303               	bcf	3,6	;RP1=0, select bank1
  1956  03FE  00AF               	movwf	(readMPU@guardar+1)^(0+128)
  1957  03FF                     l3925:
  1958                           
  1959                           ;MPU6050.c: 43:     guardar[1] = ((int) valores[2] << 8) | ((int) valores[3]);
  1960  03FF  0823               	movf	(readMPU@valores^(0+128)+3),w
  1961  0400  1283               	bcf	3,5	;RP0=0, select bank0
  1962  0401  1303               	bcf	3,6	;RP1=0, select bank0
  1963  0402  00D8               	movwf	??_readMPU
  1964  0403  01D9               	clrf	??_readMPU+1
  1965  0404  1683               	bsf	3,5	;RP0=1, select bank1
  1966  0405  1303               	bcf	3,6	;RP1=0, select bank1
  1967  0406  0822               	movf	(readMPU@valores^(0+128)+2),w
  1968  0407  1283               	bcf	3,5	;RP0=0, select bank0
  1969  0408  1303               	bcf	3,6	;RP1=0, select bank0
  1970  0409  00DA               	movwf	??_readMPU+2
  1971  040A  01DB               	clrf	??_readMPU+3
  1972  040B  085A               	movf	??_readMPU+2,w
  1973  040C  00DB               	movwf	??_readMPU+3
  1974  040D  01DA               	clrf	??_readMPU+2
  1975  040E  0858               	movf	??_readMPU,w
  1976  040F  045A               	iorwf	??_readMPU+2,w
  1977  0410  1683               	bsf	3,5	;RP0=1, select bank1
  1978  0411  1303               	bcf	3,6	;RP1=0, select bank1
  1979  0412  00B0               	movwf	(readMPU@guardar^(0+128)+2)
  1980  0413  1283               	bcf	3,5	;RP0=0, select bank0
  1981  0414  1303               	bcf	3,6	;RP1=0, select bank0
  1982  0415  0859               	movf	??_readMPU+1,w
  1983  0416  045B               	iorwf	??_readMPU+3,w
  1984  0417  1683               	bsf	3,5	;RP0=1, select bank1
  1985  0418  1303               	bcf	3,6	;RP1=0, select bank1
  1986  0419  00B1               	movwf	((readMPU@guardar+1)^(0+128)+2)
  1987  041A                     l3927:
  1988                           
  1989                           ;MPU6050.c: 44:     guardar[2] = ((int) valores[4] << 8) | ((int) valores[5]);
  1990  041A  0825               	movf	(readMPU@valores^(0+128)+5),w
  1991  041B  1283               	bcf	3,5	;RP0=0, select bank0
  1992  041C  1303               	bcf	3,6	;RP1=0, select bank0
  1993  041D  00D8               	movwf	??_readMPU
  1994  041E  01D9               	clrf	??_readMPU+1
  1995  041F  1683               	bsf	3,5	;RP0=1, select bank1
  1996  0420  1303               	bcf	3,6	;RP1=0, select bank1
  1997  0421  0824               	movf	(readMPU@valores^(0+128)+4),w
  1998  0422  1283               	bcf	3,5	;RP0=0, select bank0
  1999  0423  1303               	bcf	3,6	;RP1=0, select bank0
  2000  0424  00DA               	movwf	??_readMPU+2
  2001  0425  01DB               	clrf	??_readMPU+3
  2002  0426  085A               	movf	??_readMPU+2,w
  2003  0427  00DB               	movwf	??_readMPU+3
  2004  0428  01DA               	clrf	??_readMPU+2
  2005  0429  0858               	movf	??_readMPU,w
  2006  042A  045A               	iorwf	??_readMPU+2,w
  2007  042B  1683               	bsf	3,5	;RP0=1, select bank1
  2008  042C  1303               	bcf	3,6	;RP1=0, select bank1
  2009  042D  00B2               	movwf	(readMPU@guardar^(0+128)+4)
  2010  042E  1283               	bcf	3,5	;RP0=0, select bank0
  2011  042F  1303               	bcf	3,6	;RP1=0, select bank0
  2012  0430  0859               	movf	??_readMPU+1,w
  2013  0431  045B               	iorwf	??_readMPU+3,w
  2014  0432  1683               	bsf	3,5	;RP0=1, select bank1
  2015  0433  1303               	bcf	3,6	;RP1=0, select bank1
  2016  0434  00B3               	movwf	((readMPU@guardar+1)^(0+128)+4)
  2017  0435                     l3929:
  2018                           
  2019                           ;MPU6050.c: 45:     guardar[3] = ((int) valores[6] << 8) | ((int) valores[7]);
  2020  0435  0827               	movf	(readMPU@valores^(0+128)+7),w
  2021  0436  1283               	bcf	3,5	;RP0=0, select bank0
  2022  0437  1303               	bcf	3,6	;RP1=0, select bank0
  2023  0438  00D8               	movwf	??_readMPU
  2024  0439  01D9               	clrf	??_readMPU+1
  2025  043A  1683               	bsf	3,5	;RP0=1, select bank1
  2026  043B  1303               	bcf	3,6	;RP1=0, select bank1
  2027  043C  0826               	movf	(readMPU@valores^(0+128)+6),w
  2028  043D  1283               	bcf	3,5	;RP0=0, select bank0
  2029  043E  1303               	bcf	3,6	;RP1=0, select bank0
  2030  043F  00DA               	movwf	??_readMPU+2
  2031  0440  01DB               	clrf	??_readMPU+3
  2032  0441  085A               	movf	??_readMPU+2,w
  2033  0442  00DB               	movwf	??_readMPU+3
  2034  0443  01DA               	clrf	??_readMPU+2
  2035  0444  0858               	movf	??_readMPU,w
  2036  0445  045A               	iorwf	??_readMPU+2,w
  2037  0446  1683               	bsf	3,5	;RP0=1, select bank1
  2038  0447  1303               	bcf	3,6	;RP1=0, select bank1
  2039  0448  00B4               	movwf	(readMPU@guardar^(0+128)+6)
  2040  0449  1283               	bcf	3,5	;RP0=0, select bank0
  2041  044A  1303               	bcf	3,6	;RP1=0, select bank0
  2042  044B  0859               	movf	??_readMPU+1,w
  2043  044C  045B               	iorwf	??_readMPU+3,w
  2044  044D  1683               	bsf	3,5	;RP0=1, select bank1
  2045  044E  1303               	bcf	3,6	;RP1=0, select bank1
  2046  044F  00B5               	movwf	((readMPU@guardar+1)^(0+128)+6)
  2047  0450                     l3931:
  2048                           
  2049                           ;MPU6050.c: 46:     guardar[4] = ((int) valores[8] << 8) | ((int) valores[9]);
  2050  0450  0829               	movf	(readMPU@valores^(0+128)+9),w
  2051  0451  1283               	bcf	3,5	;RP0=0, select bank0
  2052  0452  1303               	bcf	3,6	;RP1=0, select bank0
  2053  0453  00D8               	movwf	??_readMPU
  2054  0454  01D9               	clrf	??_readMPU+1
  2055  0455  1683               	bsf	3,5	;RP0=1, select bank1
  2056  0456  1303               	bcf	3,6	;RP1=0, select bank1
  2057  0457  0828               	movf	(readMPU@valores^(0+128)+8),w
  2058  0458  1283               	bcf	3,5	;RP0=0, select bank0
  2059  0459  1303               	bcf	3,6	;RP1=0, select bank0
  2060  045A  00DA               	movwf	??_readMPU+2
  2061  045B  01DB               	clrf	??_readMPU+3
  2062  045C  085A               	movf	??_readMPU+2,w
  2063  045D  00DB               	movwf	??_readMPU+3
  2064  045E  01DA               	clrf	??_readMPU+2
  2065  045F  0858               	movf	??_readMPU,w
  2066  0460  045A               	iorwf	??_readMPU+2,w
  2067  0461  1683               	bsf	3,5	;RP0=1, select bank1
  2068  0462  1303               	bcf	3,6	;RP1=0, select bank1
  2069  0463  00B6               	movwf	(readMPU@guardar^(0+128)+8)
  2070  0464  1283               	bcf	3,5	;RP0=0, select bank0
  2071  0465  1303               	bcf	3,6	;RP1=0, select bank0
  2072  0466  0859               	movf	??_readMPU+1,w
  2073  0467  045B               	iorwf	??_readMPU+3,w
  2074  0468  1683               	bsf	3,5	;RP0=1, select bank1
  2075  0469  1303               	bcf	3,6	;RP1=0, select bank1
  2076  046A  00B7               	movwf	((readMPU@guardar+1)^(0+128)+8)
  2077  046B                     l3933:
  2078                           
  2079                           ;MPU6050.c: 47:     guardar[5] = ((int) valores[10] << 8) | ((int) valores[11]);
  2080  046B  082B               	movf	(readMPU@valores^(0+128)+11),w
  2081  046C  1283               	bcf	3,5	;RP0=0, select bank0
  2082  046D  1303               	bcf	3,6	;RP1=0, select bank0
  2083  046E  00D8               	movwf	??_readMPU
  2084  046F  01D9               	clrf	??_readMPU+1
  2085  0470  1683               	bsf	3,5	;RP0=1, select bank1
  2086  0471  1303               	bcf	3,6	;RP1=0, select bank1
  2087  0472  082A               	movf	(readMPU@valores^(0+128)+10),w
  2088  0473  1283               	bcf	3,5	;RP0=0, select bank0
  2089  0474  1303               	bcf	3,6	;RP1=0, select bank0
  2090  0475  00DA               	movwf	??_readMPU+2
  2091  0476  01DB               	clrf	??_readMPU+3
  2092  0477  085A               	movf	??_readMPU+2,w
  2093  0478  00DB               	movwf	??_readMPU+3
  2094  0479  01DA               	clrf	??_readMPU+2
  2095  047A  0858               	movf	??_readMPU,w
  2096  047B  045A               	iorwf	??_readMPU+2,w
  2097  047C  1683               	bsf	3,5	;RP0=1, select bank1
  2098  047D  1303               	bcf	3,6	;RP1=0, select bank1
  2099  047E  00B8               	movwf	(readMPU@guardar^(0+128)+10)
  2100  047F  1283               	bcf	3,5	;RP0=0, select bank0
  2101  0480  1303               	bcf	3,6	;RP1=0, select bank0
  2102  0481  0859               	movf	??_readMPU+1,w
  2103  0482  045B               	iorwf	??_readMPU+3,w
  2104  0483  1683               	bsf	3,5	;RP0=1, select bank1
  2105  0484  1303               	bcf	3,6	;RP1=0, select bank1
  2106  0485  00B9               	movwf	((readMPU@guardar+1)^(0+128)+10)
  2107  0486                     l3935:
  2108                           
  2109                           ;MPU6050.c: 48:     guardar[6] = ((int) valores[12] << 8) | ((int) valores[13]);
  2110  0486  082D               	movf	(readMPU@valores^(0+128)+13),w
  2111  0487  1283               	bcf	3,5	;RP0=0, select bank0
  2112  0488  1303               	bcf	3,6	;RP1=0, select bank0
  2113  0489  00D8               	movwf	??_readMPU
  2114  048A  01D9               	clrf	??_readMPU+1
  2115  048B  1683               	bsf	3,5	;RP0=1, select bank1
  2116  048C  1303               	bcf	3,6	;RP1=0, select bank1
  2117  048D  082C               	movf	(readMPU@valores^(0+128)+12),w
  2118  048E  1283               	bcf	3,5	;RP0=0, select bank0
  2119  048F  1303               	bcf	3,6	;RP1=0, select bank0
  2120  0490  00DA               	movwf	??_readMPU+2
  2121  0491  01DB               	clrf	??_readMPU+3
  2122  0492  085A               	movf	??_readMPU+2,w
  2123  0493  00DB               	movwf	??_readMPU+3
  2124  0494  01DA               	clrf	??_readMPU+2
  2125  0495  0858               	movf	??_readMPU,w
  2126  0496  045A               	iorwf	??_readMPU+2,w
  2127  0497  1683               	bsf	3,5	;RP0=1, select bank1
  2128  0498  1303               	bcf	3,6	;RP1=0, select bank1
  2129  0499  00BA               	movwf	(readMPU@guardar^(0+128)+12)
  2130  049A  1283               	bcf	3,5	;RP0=0, select bank0
  2131  049B  1303               	bcf	3,6	;RP1=0, select bank0
  2132  049C  0859               	movf	??_readMPU+1,w
  2133  049D  045B               	iorwf	??_readMPU+3,w
  2134  049E  1683               	bsf	3,5	;RP0=1, select bank1
  2135  049F  1303               	bcf	3,6	;RP1=0, select bank1
  2136  04A0  00BB               	movwf	((readMPU@guardar+1)^(0+128)+12)
  2137  04A1                     l3937:
  2138                           
  2139                           ;MPU6050.c: 50:     datos[0] = ((float) guardar[0]) * 0.0005982;
  2140  04A1  303A               	movlw	58
  2141  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  2142  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  2143  04A4  00AD               	movwf	___flmul@b+3
  2144  04A5  301C               	movlw	28
  2145  04A6  00AC               	movwf	___flmul@b+2
  2146  04A7  30D0               	movlw	208
  2147  04A8  00AB               	movwf	___flmul@b+1
  2148  04A9  3086               	movlw	134
  2149  04AA  00AA               	movwf	___flmul@b
  2150  04AB  1683               	bsf	3,5	;RP0=1, select bank1
  2151  04AC  1303               	bcf	3,6	;RP1=0, select bank1
  2152  04AD  082E               	movf	readMPU@guardar^(0+128),w
  2153  04AE  00F3               	movwf	___xxtofl@val
  2154  04AF  082F               	movf	(readMPU@guardar+1)^(0+128),w
  2155  04B0  00F4               	movwf	___xxtofl@val+1
  2156  04B1  3000               	movlw	0
  2157  04B2  1BF4               	btfsc	___xxtofl@val+1,7
  2158  04B3  30FF               	movlw	255
  2159  04B4  00F5               	movwf	___xxtofl@val+2
  2160  04B5  00F6               	movwf	___xxtofl@val+3
  2161  04B6  3001               	movlw	1
  2162  04B7  120A  158A  202B  120A  118A  	fcall	___xxtofl
  2163  04BC  0876               	movf	?___xxtofl+3,w
  2164  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  2165  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  2166  04BF  00B1               	movwf	___flmul@a+3
  2167  04C0  0875               	movf	?___xxtofl+2,w
  2168  04C1  00B0               	movwf	___flmul@a+2
  2169  04C2  0874               	movf	?___xxtofl+1,w
  2170  04C3  00AF               	movwf	___flmul@a+1
  2171  04C4  0873               	movf	?___xxtofl,w
  2172  04C5  00AE               	movwf	___flmul@a
  2173  04C6  120A  118A  201D  120A  118A  	fcall	___flmul
  2174  04CB  1683               	bsf	3,5	;RP0=1, select bank1
  2175  04CC  1303               	bcf	3,6	;RP1=0, select bank1
  2176  04CD  083E               	movf	readMPU@datos^(0+128),w
  2177  04CE  0084               	movwf	4
  2178  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  2179  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  2180  04D1  082A               	movf	?___flmul,w
  2181  04D2  1783               	bsf	3,7	;select IRP bank2
  2182  04D3  0080               	movwf	0
  2183  04D4  0A84               	incf	4,f
  2184  04D5  082B               	movf	?___flmul+1,w
  2185  04D6  0080               	movwf	0
  2186  04D7  0A84               	incf	4,f
  2187  04D8  082C               	movf	?___flmul+2,w
  2188  04D9  0080               	movwf	0
  2189  04DA  0A84               	incf	4,f
  2190  04DB  082D               	movf	?___flmul+3,w
  2191  04DC  0080               	movwf	0
  2192  04DD                     l3939:
  2193                           
  2194                           ;MPU6050.c: 51:     datos[1] = ((float) guardar[1]) * 0.0005982;
  2195  04DD  303A               	movlw	58
  2196  04DE  00AD               	movwf	___flmul@b+3
  2197  04DF  301C               	movlw	28
  2198  04E0  00AC               	movwf	___flmul@b+2
  2199  04E1  30D0               	movlw	208
  2200  04E2  00AB               	movwf	___flmul@b+1
  2201  04E3  3086               	movlw	134
  2202  04E4  00AA               	movwf	___flmul@b
  2203  04E5  1683               	bsf	3,5	;RP0=1, select bank1
  2204  04E6  1303               	bcf	3,6	;RP1=0, select bank1
  2205  04E7  0830               	movf	(readMPU@guardar^(0+128)+2),w
  2206  04E8  00F3               	movwf	___xxtofl@val
  2207  04E9  0831               	movf	((readMPU@guardar+1)^(0+128)+2),w
  2208  04EA  00F4               	movwf	___xxtofl@val+1
  2209  04EB  3000               	movlw	0
  2210  04EC  1BF4               	btfsc	___xxtofl@val+1,7
  2211  04ED  30FF               	movlw	255
  2212  04EE  00F5               	movwf	___xxtofl@val+2
  2213  04EF  00F6               	movwf	___xxtofl@val+3
  2214  04F0  3001               	movlw	1
  2215  04F1  120A  158A  202B  120A  118A  	fcall	___xxtofl
  2216  04F6  0876               	movf	?___xxtofl+3,w
  2217  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2218  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  2219  04F9  00B1               	movwf	___flmul@a+3
  2220  04FA  0875               	movf	?___xxtofl+2,w
  2221  04FB  00B0               	movwf	___flmul@a+2
  2222  04FC  0874               	movf	?___xxtofl+1,w
  2223  04FD  00AF               	movwf	___flmul@a+1
  2224  04FE  0873               	movf	?___xxtofl,w
  2225  04FF  00AE               	movwf	___flmul@a
  2226  0500  120A  118A  201D  120A  118A  	fcall	___flmul
  2227  0505  1683               	bsf	3,5	;RP0=1, select bank1
  2228  0506  1303               	bcf	3,6	;RP1=0, select bank1
  2229  0507  083E               	movf	readMPU@datos^(0+128),w
  2230  0508  3E04               	addlw	4
  2231  0509  0084               	movwf	4
  2232  050A  1283               	bcf	3,5	;RP0=0, select bank0
  2233  050B  1303               	bcf	3,6	;RP1=0, select bank0
  2234  050C  082A               	movf	?___flmul,w
  2235  050D  1783               	bsf	3,7	;select IRP bank2
  2236  050E  0080               	movwf	0
  2237  050F  0A84               	incf	4,f
  2238  0510  082B               	movf	?___flmul+1,w
  2239  0511  0080               	movwf	0
  2240  0512  0A84               	incf	4,f
  2241  0513  082C               	movf	?___flmul+2,w
  2242  0514  0080               	movwf	0
  2243  0515  0A84               	incf	4,f
  2244  0516  082D               	movf	?___flmul+3,w
  2245  0517  0080               	movwf	0
  2246  0518                     l3941:
  2247                           
  2248                           ;MPU6050.c: 52:     datos[2] = ((float) guardar[2]) * 0.0005982;
  2249  0518  303A               	movlw	58
  2250  0519  00AD               	movwf	___flmul@b+3
  2251  051A  301C               	movlw	28
  2252  051B  00AC               	movwf	___flmul@b+2
  2253  051C  30D0               	movlw	208
  2254  051D  00AB               	movwf	___flmul@b+1
  2255  051E  3086               	movlw	134
  2256  051F  00AA               	movwf	___flmul@b
  2257  0520  1683               	bsf	3,5	;RP0=1, select bank1
  2258  0521  1303               	bcf	3,6	;RP1=0, select bank1
  2259  0522  0832               	movf	(readMPU@guardar^(0+128)+4),w
  2260  0523  00F3               	movwf	___xxtofl@val
  2261  0524  0833               	movf	((readMPU@guardar+1)^(0+128)+4),w
  2262  0525  00F4               	movwf	___xxtofl@val+1
  2263  0526  3000               	movlw	0
  2264  0527  1BF4               	btfsc	___xxtofl@val+1,7
  2265  0528  30FF               	movlw	255
  2266  0529  00F5               	movwf	___xxtofl@val+2
  2267  052A  00F6               	movwf	___xxtofl@val+3
  2268  052B  3001               	movlw	1
  2269  052C  120A  158A  202B  120A  118A  	fcall	___xxtofl
  2270  0531  0876               	movf	?___xxtofl+3,w
  2271  0532  1283               	bcf	3,5	;RP0=0, select bank0
  2272  0533  1303               	bcf	3,6	;RP1=0, select bank0
  2273  0534  00B1               	movwf	___flmul@a+3
  2274  0535  0875               	movf	?___xxtofl+2,w
  2275  0536  00B0               	movwf	___flmul@a+2
  2276  0537  0874               	movf	?___xxtofl+1,w
  2277  0538  00AF               	movwf	___flmul@a+1
  2278  0539  0873               	movf	?___xxtofl,w
  2279  053A  00AE               	movwf	___flmul@a
  2280  053B  120A  118A  201D  120A  118A  	fcall	___flmul
  2281  0540  1683               	bsf	3,5	;RP0=1, select bank1
  2282  0541  1303               	bcf	3,6	;RP1=0, select bank1
  2283  0542  083E               	movf	readMPU@datos^(0+128),w
  2284  0543  3E08               	addlw	8
  2285  0544  0084               	movwf	4
  2286  0545  1283               	bcf	3,5	;RP0=0, select bank0
  2287  0546  1303               	bcf	3,6	;RP1=0, select bank0
  2288  0547  082A               	movf	?___flmul,w
  2289  0548  1783               	bsf	3,7	;select IRP bank2
  2290  0549  0080               	movwf	0
  2291  054A  0A84               	incf	4,f
  2292  054B  082B               	movf	?___flmul+1,w
  2293  054C  0080               	movwf	0
  2294  054D  0A84               	incf	4,f
  2295  054E  082C               	movf	?___flmul+2,w
  2296  054F  0080               	movwf	0
  2297  0550  0A84               	incf	4,f
  2298  0551  082D               	movf	?___flmul+3,w
  2299  0552  0080               	movwf	0
  2300  0553                     l3943:
  2301                           
  2302                           ;MPU6050.c: 53:     datos[3] = ((float) guardar[3])/340 + 36.53;
  2303  0553  3042               	movlw	66
  2304  0554  00C7               	movwf	___fladd@b+3
  2305  0555  3012               	movlw	18
  2306  0556  00C6               	movwf	___fladd@b+2
  2307  0557  301E               	movlw	30
  2308  0558  00C5               	movwf	___fladd@b+1
  2309  0559  30B8               	movlw	184
  2310  055A  00C4               	movwf	___fladd@b
  2311  055B  3043               	movlw	67
  2312  055C  00AD               	movwf	___fldiv@a+3
  2313  055D  30AA               	movlw	170
  2314  055E  00AC               	movwf	___fldiv@a+2
  2315  055F  3000               	movlw	0
  2316  0560  00AB               	movwf	___fldiv@a+1
  2317  0561  3000               	movlw	0
  2318  0562  00AA               	movwf	___fldiv@a
  2319  0563  1683               	bsf	3,5	;RP0=1, select bank1
  2320  0564  1303               	bcf	3,6	;RP1=0, select bank1
  2321  0565  0834               	movf	(readMPU@guardar^(0+128)+6),w
  2322  0566  00F3               	movwf	___xxtofl@val
  2323  0567  0835               	movf	((readMPU@guardar+1)^(0+128)+6),w
  2324  0568  00F4               	movwf	___xxtofl@val+1
  2325  0569  3000               	movlw	0
  2326  056A  1BF4               	btfsc	___xxtofl@val+1,7
  2327  056B  30FF               	movlw	255
  2328  056C  00F5               	movwf	___xxtofl@val+2
  2329  056D  00F6               	movwf	___xxtofl@val+3
  2330  056E  3001               	movlw	1
  2331  056F  120A  158A  202B  120A  118A  	fcall	___xxtofl
  2332  0574  0876               	movf	?___xxtofl+3,w
  2333  0575  1283               	bcf	3,5	;RP0=0, select bank0
  2334  0576  1303               	bcf	3,6	;RP1=0, select bank0
  2335  0577  00B1               	movwf	___fldiv@b+3
  2336  0578  0875               	movf	?___xxtofl+2,w
  2337  0579  00B0               	movwf	___fldiv@b+2
  2338  057A  0874               	movf	?___xxtofl+1,w
  2339  057B  00AF               	movwf	___fldiv@b+1
  2340  057C  0873               	movf	?___xxtofl,w
  2341  057D  00AE               	movwf	___fldiv@b
  2342  057E  160A  118A  2623  120A  118A  	fcall	___fldiv
  2343  0583  1283               	bcf	3,5	;RP0=0, select bank0
  2344  0584  1303               	bcf	3,6	;RP1=0, select bank0
  2345  0585  082D               	movf	?___fldiv+3,w
  2346  0586  00CB               	movwf	___fladd@a+3
  2347  0587  082C               	movf	?___fldiv+2,w
  2348  0588  00CA               	movwf	___fladd@a+2
  2349  0589  082B               	movf	?___fldiv+1,w
  2350  058A  00C9               	movwf	___fladd@a+1
  2351  058B  082A               	movf	?___fldiv,w
  2352  058C  00C8               	movwf	___fladd@a
  2353  058D  120A  158A  2578  120A  118A  	fcall	___fladd
  2354  0592  1683               	bsf	3,5	;RP0=1, select bank1
  2355  0593  1303               	bcf	3,6	;RP1=0, select bank1
  2356  0594  083E               	movf	readMPU@datos^(0+128),w
  2357  0595  3E0C               	addlw	12
  2358  0596  0084               	movwf	4
  2359  0597  1283               	bcf	3,5	;RP0=0, select bank0
  2360  0598  1303               	bcf	3,6	;RP1=0, select bank0
  2361  0599  0844               	movf	?___fladd,w
  2362  059A  1783               	bsf	3,7	;select IRP bank2
  2363  059B  0080               	movwf	0
  2364  059C  0A84               	incf	4,f
  2365  059D  0845               	movf	?___fladd+1,w
  2366  059E  0080               	movwf	0
  2367  059F  0A84               	incf	4,f
  2368  05A0  0846               	movf	?___fladd+2,w
  2369  05A1  0080               	movwf	0
  2370  05A2  0A84               	incf	4,f
  2371  05A3  0847               	movf	?___fladd+3,w
  2372  05A4  0080               	movwf	0
  2373  05A5                     l3945:
  2374                           
  2375                           ;MPU6050.c: 54:     datos[4] = ((float) guardar[4]) * 0.00763;
  2376  05A5  303B               	movlw	59
  2377  05A6  00AD               	movwf	___flmul@b+3
  2378  05A7  30FA               	movlw	250
  2379  05A8  00AC               	movwf	___flmul@b+2
  2380  05A9  3005               	movlw	5
  2381  05AA  00AB               	movwf	___flmul@b+1
  2382  05AB  3014               	movlw	20
  2383  05AC  00AA               	movwf	___flmul@b
  2384  05AD  1683               	bsf	3,5	;RP0=1, select bank1
  2385  05AE  1303               	bcf	3,6	;RP1=0, select bank1
  2386  05AF  0836               	movf	(readMPU@guardar^(0+128)+8),w
  2387  05B0  00F3               	movwf	___xxtofl@val
  2388  05B1  0837               	movf	((readMPU@guardar+1)^(0+128)+8),w
  2389  05B2  00F4               	movwf	___xxtofl@val+1
  2390  05B3  3000               	movlw	0
  2391  05B4  1BF4               	btfsc	___xxtofl@val+1,7
  2392  05B5  30FF               	movlw	255
  2393  05B6  00F5               	movwf	___xxtofl@val+2
  2394  05B7  00F6               	movwf	___xxtofl@val+3
  2395  05B8  3001               	movlw	1
  2396  05B9  120A  158A  202B  120A  118A  	fcall	___xxtofl
  2397  05BE  0876               	movf	?___xxtofl+3,w
  2398  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  2399  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  2400  05C1  00B1               	movwf	___flmul@a+3
  2401  05C2  0875               	movf	?___xxtofl+2,w
  2402  05C3  00B0               	movwf	___flmul@a+2
  2403  05C4  0874               	movf	?___xxtofl+1,w
  2404  05C5  00AF               	movwf	___flmul@a+1
  2405  05C6  0873               	movf	?___xxtofl,w
  2406  05C7  00AE               	movwf	___flmul@a
  2407  05C8  120A  118A  201D  120A  118A  	fcall	___flmul
  2408  05CD  1683               	bsf	3,5	;RP0=1, select bank1
  2409  05CE  1303               	bcf	3,6	;RP1=0, select bank1
  2410  05CF  083E               	movf	readMPU@datos^(0+128),w
  2411  05D0  3E10               	addlw	16
  2412  05D1  0084               	movwf	4
  2413  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  2414  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  2415  05D4  082A               	movf	?___flmul,w
  2416  05D5  1783               	bsf	3,7	;select IRP bank2
  2417  05D6  0080               	movwf	0
  2418  05D7  0A84               	incf	4,f
  2419  05D8  082B               	movf	?___flmul+1,w
  2420  05D9  0080               	movwf	0
  2421  05DA  0A84               	incf	4,f
  2422  05DB  082C               	movf	?___flmul+2,w
  2423  05DC  0080               	movwf	0
  2424  05DD  0A84               	incf	4,f
  2425  05DE  082D               	movf	?___flmul+3,w
  2426  05DF  0080               	movwf	0
  2427  05E0                     l3947:
  2428                           
  2429                           ;MPU6050.c: 55:     datos[5] = ((float) guardar[5]) * 0.00763;
  2430  05E0  303B               	movlw	59
  2431  05E1  00AD               	movwf	___flmul@b+3
  2432  05E2  30FA               	movlw	250
  2433  05E3  00AC               	movwf	___flmul@b+2
  2434  05E4  3005               	movlw	5
  2435  05E5  00AB               	movwf	___flmul@b+1
  2436  05E6  3014               	movlw	20
  2437  05E7  00AA               	movwf	___flmul@b
  2438  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  2439  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  2440  05EA  0838               	movf	(readMPU@guardar^(0+128)+10),w
  2441  05EB  00F3               	movwf	___xxtofl@val
  2442  05EC  0839               	movf	((readMPU@guardar+1)^(0+128)+10),w
  2443  05ED  00F4               	movwf	___xxtofl@val+1
  2444  05EE  3000               	movlw	0
  2445  05EF  1BF4               	btfsc	___xxtofl@val+1,7
  2446  05F0  30FF               	movlw	255
  2447  05F1  00F5               	movwf	___xxtofl@val+2
  2448  05F2  00F6               	movwf	___xxtofl@val+3
  2449  05F3  3001               	movlw	1
  2450  05F4  120A  158A  202B  120A  118A  	fcall	___xxtofl
  2451  05F9  0876               	movf	?___xxtofl+3,w
  2452  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  2453  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  2454  05FC  00B1               	movwf	___flmul@a+3
  2455  05FD  0875               	movf	?___xxtofl+2,w
  2456  05FE  00B0               	movwf	___flmul@a+2
  2457  05FF  0874               	movf	?___xxtofl+1,w
  2458  0600  00AF               	movwf	___flmul@a+1
  2459  0601  0873               	movf	?___xxtofl,w
  2460  0602  00AE               	movwf	___flmul@a
  2461  0603  120A  118A  201D  120A  118A  	fcall	___flmul
  2462  0608  1683               	bsf	3,5	;RP0=1, select bank1
  2463  0609  1303               	bcf	3,6	;RP1=0, select bank1
  2464  060A  083E               	movf	readMPU@datos^(0+128),w
  2465  060B  3E14               	addlw	20
  2466  060C  0084               	movwf	4
  2467  060D  1283               	bcf	3,5	;RP0=0, select bank0
  2468  060E  1303               	bcf	3,6	;RP1=0, select bank0
  2469  060F  082A               	movf	?___flmul,w
  2470  0610  1783               	bsf	3,7	;select IRP bank2
  2471  0611  0080               	movwf	0
  2472  0612  0A84               	incf	4,f
  2473  0613  082B               	movf	?___flmul+1,w
  2474  0614  0080               	movwf	0
  2475  0615  0A84               	incf	4,f
  2476  0616  082C               	movf	?___flmul+2,w
  2477  0617  0080               	movwf	0
  2478  0618  0A84               	incf	4,f
  2479  0619  082D               	movf	?___flmul+3,w
  2480  061A  0080               	movwf	0
  2481  061B                     l3949:
  2482                           
  2483                           ;MPU6050.c: 56:     datos[6] = ((float) guardar[6]) * 0.00763;
  2484  061B  303B               	movlw	59
  2485  061C  00AD               	movwf	___flmul@b+3
  2486  061D  30FA               	movlw	250
  2487  061E  00AC               	movwf	___flmul@b+2
  2488  061F  3005               	movlw	5
  2489  0620  00AB               	movwf	___flmul@b+1
  2490  0621  3014               	movlw	20
  2491  0622  00AA               	movwf	___flmul@b
  2492  0623  1683               	bsf	3,5	;RP0=1, select bank1
  2493  0624  1303               	bcf	3,6	;RP1=0, select bank1
  2494  0625  083A               	movf	(readMPU@guardar^(0+128)+12),w
  2495  0626  00F3               	movwf	___xxtofl@val
  2496  0627  083B               	movf	((readMPU@guardar+1)^(0+128)+12),w
  2497  0628  00F4               	movwf	___xxtofl@val+1
  2498  0629  3000               	movlw	0
  2499  062A  1BF4               	btfsc	___xxtofl@val+1,7
  2500  062B  30FF               	movlw	255
  2501  062C  00F5               	movwf	___xxtofl@val+2
  2502  062D  00F6               	movwf	___xxtofl@val+3
  2503  062E  3001               	movlw	1
  2504  062F  120A  158A  202B  120A  118A  	fcall	___xxtofl
  2505  0634  0876               	movf	?___xxtofl+3,w
  2506  0635  1283               	bcf	3,5	;RP0=0, select bank0
  2507  0636  1303               	bcf	3,6	;RP1=0, select bank0
  2508  0637  00B1               	movwf	___flmul@a+3
  2509  0638  0875               	movf	?___xxtofl+2,w
  2510  0639  00B0               	movwf	___flmul@a+2
  2511  063A  0874               	movf	?___xxtofl+1,w
  2512  063B  00AF               	movwf	___flmul@a+1
  2513  063C  0873               	movf	?___xxtofl,w
  2514  063D  00AE               	movwf	___flmul@a
  2515  063E  120A  118A  201D  120A  118A  	fcall	___flmul
  2516  0643  1683               	bsf	3,5	;RP0=1, select bank1
  2517  0644  1303               	bcf	3,6	;RP1=0, select bank1
  2518  0645  083E               	movf	readMPU@datos^(0+128),w
  2519  0646  3E18               	addlw	24
  2520  0647  0084               	movwf	4
  2521  0648  1283               	bcf	3,5	;RP0=0, select bank0
  2522  0649  1303               	bcf	3,6	;RP1=0, select bank0
  2523  064A  082A               	movf	?___flmul,w
  2524  064B  1783               	bsf	3,7	;select IRP bank2
  2525  064C  0080               	movwf	0
  2526  064D  0A84               	incf	4,f
  2527  064E  082B               	movf	?___flmul+1,w
  2528  064F  0080               	movwf	0
  2529  0650  0A84               	incf	4,f
  2530  0651  082C               	movf	?___flmul+2,w
  2531  0652  0080               	movwf	0
  2532  0653  0A84               	incf	4,f
  2533  0654  082D               	movf	?___flmul+3,w
  2534  0655  0080               	movwf	0
  2535  0656                     l213:
  2536  0656  0008               	return
  2537  0657                     __end_of_readMPU:
  2538                           
  2539                           	psect	text2
  2540  1623                     __ptext2:	
  2541 ;; *************** function ___fldiv *****************
  2542 ;; Defined at:
  2543 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;  a               4   10[BANK0 ] void 
  2546 ;;  b               4   14[BANK0 ] void 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;  grs             4   30[BANK0 ] unsigned long 
  2549 ;;  rem             4   23[BANK0 ] unsigned long 
  2550 ;;  new_exp         2   28[BANK0 ] int 
  2551 ;;  aexp            1   35[BANK0 ] unsigned char 
  2552 ;;  bexp            1   34[BANK0 ] unsigned char 
  2553 ;;  sign            1   27[BANK0 ] unsigned char 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  4   10[BANK0 ] unsigned char 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0, btemp+1
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2563 ;;      Params:         0       8       0       0       0
  2564 ;;      Locals:         0      13       0       0       0
  2565 ;;      Temps:          0       5       0       0       0
  2566 ;;      Totals:         0      26       0       0       0
  2567 ;;Total ram usage:       26 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; Hardware stack levels required when called:    1
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_readMPU
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           
  2578                           ;psect for function ___fldiv
  2579  1623                     ___fldiv:
  2580  1623                     l3425:	
  2581                           ;incstack = 0
  2582                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  2583                           
  2584  1623  1283               	bcf	3,5	;RP0=0, select bank0
  2585  1624  1303               	bcf	3,6	;RP1=0, select bank0
  2586  1625  0831               	movf	___fldiv@b+3,w
  2587  1626  3980               	andlw	128
  2588  1627  00B2               	movwf	??___fldiv
  2589  1628  0832               	movf	??___fldiv,w
  2590  1629  00BB               	movwf	___fldiv@sign
  2591  162A                     l3427:
  2592  162A  0831               	movf	___fldiv@b+3,w
  2593  162B  00B2               	movwf	??___fldiv
  2594  162C  0732               	addwf	??___fldiv,w
  2595  162D  00B3               	movwf	??___fldiv+1
  2596  162E  0833               	movf	??___fldiv+1,w
  2597  162F  00C2               	movwf	___fldiv@bexp
  2598  1630                     l3429:
  2599  1630  1FB0               	btfss	___fldiv@b+2,7
  2600  1631  2E33               	goto	u5171
  2601  1632  2E34               	goto	u5170
  2602  1633                     u5171:
  2603  1633  2E35               	goto	l3433
  2604  1634                     u5170:
  2605  1634                     l3431:
  2606  1634  1442               	bsf	___fldiv@bexp,0
  2607  1635                     l3433:
  2608  1635  0842               	movf	___fldiv@bexp,w
  2609  1636  1903               	btfsc	3,2
  2610  1637  2E39               	goto	u5181
  2611  1638  2E3A               	goto	u5180
  2612  1639                     u5181:
  2613  1639  2E4A               	goto	l3443
  2614  163A                     u5180:
  2615  163A                     l3435:
  2616  163A  0A42               	incf	___fldiv@bexp,w
  2617  163B  1D03               	btfss	3,2
  2618  163C  2E3E               	goto	u5191
  2619  163D  2E3F               	goto	u5190
  2620  163E                     u5191:
  2621  163E  2E47               	goto	l3439
  2622  163F                     u5190:
  2623  163F                     l3437:
  2624  163F  3000               	movlw	0
  2625  1640  00B1               	movwf	___fldiv@b+3
  2626  1641  3000               	movlw	0
  2627  1642  00B0               	movwf	___fldiv@b+2
  2628  1643  3000               	movlw	0
  2629  1644  00AF               	movwf	___fldiv@b+1
  2630  1645  3000               	movlw	0
  2631  1646  00AE               	movwf	___fldiv@b
  2632  1647                     l3439:
  2633  1647  17B0               	bsf	___fldiv@b+2,7
  2634  1648                     l3441:
  2635  1648  01B1               	clrf	___fldiv@b+3
  2636  1649  2E52               	goto	l3445
  2637  164A                     l3443:
  2638  164A  3000               	movlw	0
  2639  164B  00B1               	movwf	___fldiv@b+3
  2640  164C  3000               	movlw	0
  2641  164D  00B0               	movwf	___fldiv@b+2
  2642  164E  3000               	movlw	0
  2643  164F  00AF               	movwf	___fldiv@b+1
  2644  1650  3000               	movlw	0
  2645  1651  00AE               	movwf	___fldiv@b
  2646  1652                     l3445:
  2647  1652  082D               	movf	___fldiv@a+3,w
  2648  1653  3980               	andlw	128
  2649  1654  00B2               	movwf	??___fldiv
  2650  1655  0832               	movf	??___fldiv,w
  2651  1656  06BB               	xorwf	___fldiv@sign,f
  2652  1657                     l3447:
  2653  1657  082D               	movf	___fldiv@a+3,w
  2654  1658  00B2               	movwf	??___fldiv
  2655  1659  0732               	addwf	??___fldiv,w
  2656  165A  00B3               	movwf	??___fldiv+1
  2657  165B  0833               	movf	??___fldiv+1,w
  2658  165C  00C3               	movwf	___fldiv@aexp
  2659  165D                     l3449:
  2660  165D  1FAC               	btfss	___fldiv@a+2,7
  2661  165E  2E60               	goto	u5201
  2662  165F  2E61               	goto	u5200
  2663  1660                     u5201:
  2664  1660  2E62               	goto	l3453
  2665  1661                     u5200:
  2666  1661                     l3451:
  2667  1661  1443               	bsf	___fldiv@aexp,0
  2668  1662                     l3453:
  2669  1662  0843               	movf	___fldiv@aexp,w
  2670  1663  1903               	btfsc	3,2
  2671  1664  2E66               	goto	u5211
  2672  1665  2E67               	goto	u5210
  2673  1666                     u5211:
  2674  1666  2E77               	goto	l3463
  2675  1667                     u5210:
  2676  1667                     l3455:
  2677  1667  0A43               	incf	___fldiv@aexp,w
  2678  1668  1D03               	btfss	3,2
  2679  1669  2E6B               	goto	u5221
  2680  166A  2E6C               	goto	u5220
  2681  166B                     u5221:
  2682  166B  2E74               	goto	l3459
  2683  166C                     u5220:
  2684  166C                     l3457:
  2685  166C  3000               	movlw	0
  2686  166D  00AD               	movwf	___fldiv@a+3
  2687  166E  3000               	movlw	0
  2688  166F  00AC               	movwf	___fldiv@a+2
  2689  1670  3000               	movlw	0
  2690  1671  00AB               	movwf	___fldiv@a+1
  2691  1672  3000               	movlw	0
  2692  1673  00AA               	movwf	___fldiv@a
  2693  1674                     l3459:
  2694  1674  17AC               	bsf	___fldiv@a+2,7
  2695  1675                     l3461:
  2696  1675  01AD               	clrf	___fldiv@a+3
  2697  1676  2E7F               	goto	l651
  2698  1677                     l3463:
  2699  1677  3000               	movlw	0
  2700  1678  00AD               	movwf	___fldiv@a+3
  2701  1679  3000               	movlw	0
  2702  167A  00AC               	movwf	___fldiv@a+2
  2703  167B  3000               	movlw	0
  2704  167C  00AB               	movwf	___fldiv@a+1
  2705  167D  3000               	movlw	0
  2706  167E  00AA               	movwf	___fldiv@a
  2707  167F                     l651:
  2708  167F  082D               	movf	___fldiv@a+3,w
  2709  1680  042C               	iorwf	___fldiv@a+2,w
  2710  1681  042B               	iorwf	___fldiv@a+1,w
  2711  1682  042A               	iorwf	___fldiv@a,w
  2712  1683  1D03               	skipz
  2713  1684  2E86               	goto	u5231
  2714  1685  2E87               	goto	u5230
  2715  1686                     u5231:
  2716  1686  2EA0               	goto	l3473
  2717  1687                     u5230:
  2718  1687                     l3465:
  2719  1687  3000               	movlw	0
  2720  1688  00B1               	movwf	___fldiv@b+3
  2721  1689  3000               	movlw	0
  2722  168A  00B0               	movwf	___fldiv@b+2
  2723  168B  3000               	movlw	0
  2724  168C  00AF               	movwf	___fldiv@b+1
  2725  168D  3000               	movlw	0
  2726  168E  00AE               	movwf	___fldiv@b
  2727  168F  3080               	movlw	128
  2728  1690  04B0               	iorwf	___fldiv@b+2,f
  2729  1691  307F               	movlw	127
  2730  1692  04B1               	iorwf	___fldiv@b+3,f
  2731  1693                     l3467:
  2732  1693  083B               	movf	___fldiv@sign,w
  2733  1694  00B2               	movwf	??___fldiv
  2734  1695  0832               	movf	??___fldiv,w
  2735  1696  04B1               	iorwf	___fldiv@b+3,f
  2736  1697                     l3469:
  2737  1697  0831               	movf	___fldiv@b+3,w
  2738  1698  00AD               	movwf	?___fldiv+3
  2739  1699  0830               	movf	___fldiv@b+2,w
  2740  169A  00AC               	movwf	?___fldiv+2
  2741  169B  082F               	movf	___fldiv@b+1,w
  2742  169C  00AB               	movwf	?___fldiv+1
  2743  169D  082E               	movf	___fldiv@b,w
  2744  169E  00AA               	movwf	?___fldiv
  2745  169F  2FFF               	goto	l653
  2746  16A0                     l3473:
  2747  16A0  0842               	movf	___fldiv@bexp,w
  2748  16A1  1D03               	btfss	3,2
  2749  16A2  2EA4               	goto	u5241
  2750  16A3  2EA5               	goto	u5240
  2751  16A4                     u5241:
  2752  16A4  2EAE               	goto	l3479
  2753  16A5                     u5240:
  2754  16A5                     l3475:
  2755  16A5  3000               	movlw	0
  2756  16A6  00AD               	movwf	?___fldiv+3
  2757  16A7  3000               	movlw	0
  2758  16A8  00AC               	movwf	?___fldiv+2
  2759  16A9  3000               	movlw	0
  2760  16AA  00AB               	movwf	?___fldiv+1
  2761  16AB  3000               	movlw	0
  2762  16AC  00AA               	movwf	?___fldiv
  2763  16AD  2FFF               	goto	l653
  2764  16AE                     l3479:
  2765  16AE  0842               	movf	___fldiv@bexp,w
  2766  16AF  00B2               	movwf	??___fldiv
  2767  16B0  01B3               	clrf	??___fldiv+1
  2768  16B1  0833               	movf	??___fldiv+1,w
  2769  16B2  00B5               	movwf	??___fldiv+3
  2770  16B3  0843               	movf	___fldiv@aexp,w
  2771  16B4  0232               	subwf	??___fldiv,w
  2772  16B5  00B4               	movwf	??___fldiv+2
  2773  16B6  1C03               	skipc
  2774  16B7  03B5               	decf	??___fldiv+3,f
  2775  16B8  0834               	movf	??___fldiv+2,w
  2776  16B9  3E7F               	addlw	127
  2777  16BA  00BC               	movwf	___fldiv@new_exp
  2778  16BB  0835               	movf	??___fldiv+3,w
  2779  16BC  1803               	skipnc
  2780  16BD  3E01               	addlw	1
  2781  16BE  3E00               	addlw	0
  2782  16BF  00BD               	movwf	___fldiv@new_exp+1
  2783  16C0                     l3481:
  2784  16C0  0831               	movf	___fldiv@b+3,w
  2785  16C1  00BA               	movwf	___fldiv@rem+3
  2786  16C2  0830               	movf	___fldiv@b+2,w
  2787  16C3  00B9               	movwf	___fldiv@rem+2
  2788  16C4  082F               	movf	___fldiv@b+1,w
  2789  16C5  00B8               	movwf	___fldiv@rem+1
  2790  16C6  082E               	movf	___fldiv@b,w
  2791  16C7  00B7               	movwf	___fldiv@rem
  2792  16C8                     l3483:
  2793  16C8  3000               	movlw	0
  2794  16C9  00B1               	movwf	___fldiv@b+3
  2795  16CA  3000               	movlw	0
  2796  16CB  00B0               	movwf	___fldiv@b+2
  2797  16CC  3000               	movlw	0
  2798  16CD  00AF               	movwf	___fldiv@b+1
  2799  16CE  3000               	movlw	0
  2800  16CF  00AE               	movwf	___fldiv@b
  2801  16D0                     l3485:
  2802  16D0  3000               	movlw	0
  2803  16D1  00C1               	movwf	___fldiv@grs+3
  2804  16D2  3000               	movlw	0
  2805  16D3  00C0               	movwf	___fldiv@grs+2
  2806  16D4  3000               	movlw	0
  2807  16D5  00BF               	movwf	___fldiv@grs+1
  2808  16D6  3000               	movlw	0
  2809  16D7  00BE               	movwf	___fldiv@grs
  2810  16D8                     l3487:
  2811  16D8  01C3               	clrf	___fldiv@aexp
  2812  16D9  2F24               	goto	l3507
  2813  16DA                     l3489:
  2814  16DA  0843               	movf	___fldiv@aexp,w
  2815  16DB  1903               	btfsc	3,2
  2816  16DC  2EDE               	goto	u5251
  2817  16DD  2EDF               	goto	u5250
  2818  16DE                     u5251:
  2819  16DE  2EFF               	goto	l3499
  2820  16DF                     u5250:
  2821  16DF                     l3491:
  2822  16DF  3001               	movlw	1
  2823  16E0  00B2               	movwf	??___fldiv
  2824  16E1                     u5265:
  2825  16E1  1003               	clrc
  2826  16E2  0DB7               	rlf	___fldiv@rem,f
  2827  16E3  0DB8               	rlf	___fldiv@rem+1,f
  2828  16E4  0DB9               	rlf	___fldiv@rem+2,f
  2829  16E5  0DBA               	rlf	___fldiv@rem+3,f
  2830  16E6  0BB2               	decfsz	??___fldiv,f
  2831  16E7  2EE1               	goto	u5265
  2832  16E8  3001               	movlw	1
  2833  16E9  00B2               	movwf	??___fldiv
  2834  16EA                     u5275:
  2835  16EA  1003               	clrc
  2836  16EB  0DAE               	rlf	___fldiv@b,f
  2837  16EC  0DAF               	rlf	___fldiv@b+1,f
  2838  16ED  0DB0               	rlf	___fldiv@b+2,f
  2839  16EE  0DB1               	rlf	___fldiv@b+3,f
  2840  16EF  0BB2               	decfsz	??___fldiv,f
  2841  16F0  2EEA               	goto	u5275
  2842  16F1                     l3493:
  2843  16F1  1FC1               	btfss	___fldiv@grs+3,7
  2844  16F2  2EF4               	goto	u5281
  2845  16F3  2EF5               	goto	u5280
  2846  16F4                     u5281:
  2847  16F4  2EF6               	goto	l3497
  2848  16F5                     u5280:
  2849  16F5                     l3495:
  2850  16F5  142E               	bsf	___fldiv@b,0
  2851  16F6                     l3497:
  2852  16F6  3001               	movlw	1
  2853  16F7  00B2               	movwf	??___fldiv
  2854  16F8                     u5295:
  2855  16F8  1003               	clrc
  2856  16F9  0DBE               	rlf	___fldiv@grs,f
  2857  16FA  0DBF               	rlf	___fldiv@grs+1,f
  2858  16FB  0DC0               	rlf	___fldiv@grs+2,f
  2859  16FC  0DC1               	rlf	___fldiv@grs+3,f
  2860  16FD  0BB2               	decfsz	??___fldiv,f
  2861  16FE  2EF8               	goto	u5295
  2862  16FF                     l3499:
  2863  16FF  082D               	movf	___fldiv@a+3,w
  2864  1700  023A               	subwf	___fldiv@rem+3,w
  2865  1701  1D03               	skipz
  2866  1702  2F0D               	goto	u5305
  2867  1703  082C               	movf	___fldiv@a+2,w
  2868  1704  0239               	subwf	___fldiv@rem+2,w
  2869  1705  1D03               	skipz
  2870  1706  2F0D               	goto	u5305
  2871  1707  082B               	movf	___fldiv@a+1,w
  2872  1708  0238               	subwf	___fldiv@rem+1,w
  2873  1709  1D03               	skipz
  2874  170A  2F0D               	goto	u5305
  2875  170B  082A               	movf	___fldiv@a,w
  2876  170C  0237               	subwf	___fldiv@rem,w
  2877  170D                     u5305:
  2878  170D  1C03               	skipc
  2879  170E  2F10               	goto	u5301
  2880  170F  2F11               	goto	u5300
  2881  1710                     u5301:
  2882  1710  2F20               	goto	l3505
  2883  1711                     u5300:
  2884  1711                     l3501:
  2885  1711  1741               	bsf	___fldiv@grs+3,6
  2886  1712                     l3503:
  2887  1712  082A               	movf	___fldiv@a,w
  2888  1713  02B7               	subwf	___fldiv@rem,f
  2889  1714  082B               	movf	___fldiv@a+1,w
  2890  1715  1C03               	skipc
  2891  1716  0F2B               	incfsz	___fldiv@a+1,w
  2892  1717  02B8               	subwf	___fldiv@rem+1,f
  2893  1718  082C               	movf	___fldiv@a+2,w
  2894  1719  1C03               	skipc
  2895  171A  0F2C               	incfsz	___fldiv@a+2,w
  2896  171B  02B9               	subwf	___fldiv@rem+2,f
  2897  171C  082D               	movf	___fldiv@a+3,w
  2898  171D  1C03               	skipc
  2899  171E  0F2D               	incfsz	___fldiv@a+3,w
  2900  171F  02BA               	subwf	___fldiv@rem+3,f
  2901  1720                     l3505:
  2902  1720  3001               	movlw	1
  2903  1721  00B2               	movwf	??___fldiv
  2904  1722  0832               	movf	??___fldiv,w
  2905  1723  07C3               	addwf	___fldiv@aexp,f
  2906  1724                     l3507:
  2907  1724  301A               	movlw	26
  2908  1725  0243               	subwf	___fldiv@aexp,w
  2909  1726  1C03               	skipc
  2910  1727  2F29               	goto	u5311
  2911  1728  2F2A               	goto	u5310
  2912  1729                     u5311:
  2913  1729  2EDA               	goto	l3489
  2914  172A                     u5310:
  2915  172A                     l3509:
  2916  172A  083A               	movf	___fldiv@rem+3,w
  2917  172B  0439               	iorwf	___fldiv@rem+2,w
  2918  172C  0438               	iorwf	___fldiv@rem+1,w
  2919  172D  0437               	iorwf	___fldiv@rem,w
  2920  172E  1903               	skipnz
  2921  172F  2F31               	goto	u5321
  2922  1730  2F32               	goto	u5320
  2923  1731                     u5321:
  2924  1731  2F51               	goto	l3523
  2925  1732                     u5320:
  2926  1732                     l3511:
  2927  1732  143E               	bsf	___fldiv@grs,0
  2928  1733  2F51               	goto	l3523
  2929  1734                     l3513:
  2930  1734  3001               	movlw	1
  2931  1735  00B2               	movwf	??___fldiv
  2932  1736                     u5335:
  2933  1736  1003               	clrc
  2934  1737  0DAE               	rlf	___fldiv@b,f
  2935  1738  0DAF               	rlf	___fldiv@b+1,f
  2936  1739  0DB0               	rlf	___fldiv@b+2,f
  2937  173A  0DB1               	rlf	___fldiv@b+3,f
  2938  173B  0BB2               	decfsz	??___fldiv,f
  2939  173C  2F36               	goto	u5335
  2940  173D                     l3515:
  2941  173D  1FC1               	btfss	___fldiv@grs+3,7
  2942  173E  2F40               	goto	u5341
  2943  173F  2F41               	goto	u5340
  2944  1740                     u5341:
  2945  1740  2F42               	goto	l3519
  2946  1741                     u5340:
  2947  1741                     l3517:
  2948  1741  142E               	bsf	___fldiv@b,0
  2949  1742                     l3519:
  2950  1742  3001               	movlw	1
  2951  1743  00B2               	movwf	??___fldiv
  2952  1744                     u5355:
  2953  1744  1003               	clrc
  2954  1745  0DBE               	rlf	___fldiv@grs,f
  2955  1746  0DBF               	rlf	___fldiv@grs+1,f
  2956  1747  0DC0               	rlf	___fldiv@grs+2,f
  2957  1748  0DC1               	rlf	___fldiv@grs+3,f
  2958  1749  0BB2               	decfsz	??___fldiv,f
  2959  174A  2F44               	goto	u5355
  2960  174B                     l3521:
  2961  174B  30FF               	movlw	255
  2962  174C  07BC               	addwf	___fldiv@new_exp,f
  2963  174D  1803               	skipnc
  2964  174E  0ABD               	incf	___fldiv@new_exp+1,f
  2965  174F  30FF               	movlw	255
  2966  1750  07BD               	addwf	___fldiv@new_exp+1,f
  2967  1751                     l3523:
  2968  1751  1FB0               	btfss	___fldiv@b+2,7
  2969  1752  2F54               	goto	u5361
  2970  1753  2F55               	goto	u5360
  2971  1754                     u5361:
  2972  1754  2F34               	goto	l3513
  2973  1755                     u5360:
  2974  1755                     l3525:
  2975  1755  01C3               	clrf	___fldiv@aexp
  2976  1756                     l3527:
  2977  1756  1FC1               	btfss	___fldiv@grs+3,7
  2978  1757  2F59               	goto	u5371
  2979  1758  2F5A               	goto	u5370
  2980  1759                     u5371:
  2981  1759  2F76               	goto	l3535
  2982  175A                     u5370:
  2983  175A                     l3529:
  2984  175A  30FF               	movlw	255
  2985  175B  053E               	andwf	___fldiv@grs,w
  2986  175C  00B2               	movwf	??___fldiv
  2987  175D  30FF               	movlw	255
  2988  175E  053F               	andwf	___fldiv@grs+1,w
  2989  175F  00B3               	movwf	??___fldiv+1
  2990  1760  30FF               	movlw	255
  2991  1761  0540               	andwf	___fldiv@grs+2,w
  2992  1762  00B4               	movwf	??___fldiv+2
  2993  1763  307F               	movlw	127
  2994  1764  0541               	andwf	___fldiv@grs+3,w
  2995  1765  00B5               	movwf	??___fldiv+3
  2996  1766  0835               	movf	??___fldiv+3,w
  2997  1767  0434               	iorwf	??___fldiv+2,w
  2998  1768  0433               	iorwf	??___fldiv+1,w
  2999  1769  0432               	iorwf	??___fldiv,w
  3000  176A  1903               	skipnz
  3001  176B  2F6D               	goto	u5381
  3002  176C  2F6E               	goto	u5380
  3003  176D                     u5381:
  3004  176D  2F71               	goto	l667
  3005  176E                     u5380:
  3006  176E                     l3531:
  3007  176E  01C3               	clrf	___fldiv@aexp
  3008  176F  0AC3               	incf	___fldiv@aexp,f
  3009  1770  2F76               	goto	l3535
  3010  1771                     l667:
  3011  1771  1C2E               	btfss	___fldiv@b,0
  3012  1772  2F74               	goto	u5391
  3013  1773  2F75               	goto	u5390
  3014  1774                     u5391:
  3015  1774  2F76               	goto	l3535
  3016  1775                     u5390:
  3017  1775  2F6E               	goto	l3531
  3018  1776                     l3535:
  3019  1776  0843               	movf	___fldiv@aexp,w
  3020  1777  1903               	btfsc	3,2
  3021  1778  2F7A               	goto	u5401
  3022  1779  2F7B               	goto	u5400
  3023  177A                     u5401:
  3024  177A  2FAC               	goto	l3545
  3025  177B                     u5400:
  3026  177B                     l3537:
  3027  177B  3001               	movlw	1
  3028  177C  07AE               	addwf	___fldiv@b,f
  3029  177D  3000               	movlw	0
  3030  177E  1803               	skipnc
  3031  177F  3001               	movlw	1
  3032  1780  07AF               	addwf	___fldiv@b+1,f
  3033  1781  3000               	movlw	0
  3034  1782  1803               	skipnc
  3035  1783  3001               	movlw	1
  3036  1784  07B0               	addwf	___fldiv@b+2,f
  3037  1785  3000               	movlw	0
  3038  1786  1803               	skipnc
  3039  1787  3001               	movlw	1
  3040  1788  07B1               	addwf	___fldiv@b+3,f
  3041  1789                     l3539:
  3042  1789  1C31               	btfss	___fldiv@b+3,0
  3043  178A  2F8C               	goto	u5411
  3044  178B  2F8D               	goto	u5410
  3045  178C                     u5411:
  3046  178C  2FAC               	goto	l3545
  3047  178D                     u5410:
  3048  178D                     l3541:
  3049  178D  082E               	movf	___fldiv@b,w
  3050  178E  00B2               	movwf	??___fldiv
  3051  178F  082F               	movf	___fldiv@b+1,w
  3052  1790  00B3               	movwf	??___fldiv+1
  3053  1791  0830               	movf	___fldiv@b+2,w
  3054  1792  00B4               	movwf	??___fldiv+2
  3055  1793  0831               	movf	___fldiv@b+3,w
  3056  1794  00B5               	movwf	??___fldiv+3
  3057  1795  3001               	movlw	1
  3058  1796  00B6               	movwf	??___fldiv+4
  3059  1797                     u5425:
  3060  1797  0D35               	rlf	??___fldiv+3,w
  3061  1798  0CB5               	rrf	??___fldiv+3,f
  3062  1799  0CB4               	rrf	??___fldiv+2,f
  3063  179A  0CB3               	rrf	??___fldiv+1,f
  3064  179B  0CB2               	rrf	??___fldiv,f
  3065  179C                     u5420:
  3066  179C  0BB6               	decfsz	??___fldiv+4,f
  3067  179D  2F97               	goto	u5425
  3068  179E  0835               	movf	??___fldiv+3,w
  3069  179F  00B1               	movwf	___fldiv@b+3
  3070  17A0  0834               	movf	??___fldiv+2,w
  3071  17A1  00B0               	movwf	___fldiv@b+2
  3072  17A2  0833               	movf	??___fldiv+1,w
  3073  17A3  00AF               	movwf	___fldiv@b+1
  3074  17A4  0832               	movf	??___fldiv,w
  3075  17A5  00AE               	movwf	___fldiv@b
  3076  17A6                     l3543:
  3077  17A6  3001               	movlw	1
  3078  17A7  07BC               	addwf	___fldiv@new_exp,f
  3079  17A8  1803               	skipnc
  3080  17A9  0ABD               	incf	___fldiv@new_exp+1,f
  3081  17AA  3000               	movlw	0
  3082  17AB  07BD               	addwf	___fldiv@new_exp+1,f
  3083  17AC                     l3545:
  3084  17AC  083D               	movf	___fldiv@new_exp+1,w
  3085  17AD  3A80               	xorlw	128
  3086  17AE  00FF               	movwf	btemp+1
  3087  17AF  3080               	movlw	128
  3088  17B0  027F               	subwf	btemp+1,w
  3089  17B1  1D03               	skipz
  3090  17B2  2FB5               	goto	u5435
  3091  17B3  30FF               	movlw	255
  3092  17B4  023C               	subwf	___fldiv@new_exp,w
  3093  17B5                     u5435:
  3094  17B5  1C03               	skipc
  3095  17B6  2FB8               	goto	u5431
  3096  17B7  2FB9               	goto	u5430
  3097  17B8                     u5431:
  3098  17B8  2FC7               	goto	l3549
  3099  17B9                     u5430:
  3100  17B9                     l3547:
  3101  17B9  30FF               	movlw	255
  3102  17BA  1283               	bcf	3,5	;RP0=0, select bank0
  3103  17BB  1303               	bcf	3,6	;RP1=0, select bank0
  3104  17BC  00BC               	movwf	___fldiv@new_exp
  3105  17BD  3000               	movlw	0
  3106  17BE  00BD               	movwf	___fldiv@new_exp+1
  3107  17BF  3000               	movlw	0
  3108  17C0  00B1               	movwf	___fldiv@b+3
  3109  17C1  3000               	movlw	0
  3110  17C2  00B0               	movwf	___fldiv@b+2
  3111  17C3  3000               	movlw	0
  3112  17C4  00AF               	movwf	___fldiv@b+1
  3113  17C5  3000               	movlw	0
  3114  17C6  00AE               	movwf	___fldiv@b
  3115  17C7                     l3549:
  3116  17C7  1283               	bcf	3,5	;RP0=0, select bank0
  3117  17C8  1303               	bcf	3,6	;RP1=0, select bank0
  3118  17C9  083D               	movf	___fldiv@new_exp+1,w
  3119  17CA  3A80               	xorlw	128
  3120  17CB  00FF               	movwf	btemp+1
  3121  17CC  3080               	movlw	128
  3122  17CD  027F               	subwf	btemp+1,w
  3123  17CE  1D03               	skipz
  3124  17CF  2FD2               	goto	u5445
  3125  17D0  3001               	movlw	1
  3126  17D1  023C               	subwf	___fldiv@new_exp,w
  3127  17D2                     u5445:
  3128  17D2  1803               	skipnc
  3129  17D3  2FD5               	goto	u5441
  3130  17D4  2FD6               	goto	u5440
  3131  17D5                     u5441:
  3132  17D5  2FE3               	goto	l673
  3133  17D6                     u5440:
  3134  17D6                     l3551:
  3135  17D6  1283               	bcf	3,5	;RP0=0, select bank0
  3136  17D7  1303               	bcf	3,6	;RP1=0, select bank0
  3137  17D8  01BC               	clrf	___fldiv@new_exp
  3138  17D9  01BD               	clrf	___fldiv@new_exp+1
  3139  17DA                     l3553:
  3140  17DA  3000               	movlw	0
  3141  17DB  00B1               	movwf	___fldiv@b+3
  3142  17DC  3000               	movlw	0
  3143  17DD  00B0               	movwf	___fldiv@b+2
  3144  17DE  3000               	movlw	0
  3145  17DF  00AF               	movwf	___fldiv@b+1
  3146  17E0  3000               	movlw	0
  3147  17E1  00AE               	movwf	___fldiv@b
  3148  17E2                     l3555:
  3149  17E2  01BB               	clrf	___fldiv@sign
  3150  17E3                     l673:
  3151  17E3  1283               	bcf	3,5	;RP0=0, select bank0
  3152  17E4  1303               	bcf	3,6	;RP1=0, select bank0
  3153  17E5  083C               	movf	___fldiv@new_exp,w
  3154  17E6  00B2               	movwf	??___fldiv
  3155  17E7  0832               	movf	??___fldiv,w
  3156  17E8  00C2               	movwf	___fldiv@bexp
  3157  17E9                     l3557:
  3158  17E9  1C42               	btfss	___fldiv@bexp,0
  3159  17EA  2FEC               	goto	u5451
  3160  17EB  2FED               	goto	u5450
  3161  17EC                     u5451:
  3162  17EC  2FEF               	goto	l3561
  3163  17ED                     u5450:
  3164  17ED                     l3559:
  3165  17ED  17B0               	bsf	___fldiv@b+2,7
  3166  17EE  2FF3               	goto	l675
  3167  17EF                     l3561:
  3168  17EF  307F               	movlw	127
  3169  17F0  00B2               	movwf	??___fldiv
  3170  17F1  0832               	movf	??___fldiv,w
  3171  17F2  05B0               	andwf	___fldiv@b+2,f
  3172  17F3                     l675:
  3173  17F3  0842               	movf	___fldiv@bexp,w
  3174  17F4  00B2               	movwf	??___fldiv
  3175  17F5  1003               	clrc
  3176  17F6  0C32               	rrf	??___fldiv,w
  3177  17F7  00B3               	movwf	??___fldiv+1
  3178  17F8  0833               	movf	??___fldiv+1,w
  3179  17F9  00B1               	movwf	___fldiv@b+3
  3180  17FA  083B               	movf	___fldiv@sign,w
  3181  17FB  00B2               	movwf	??___fldiv
  3182  17FC  0832               	movf	??___fldiv,w
  3183  17FD  04B1               	iorwf	___fldiv@b+3,f
  3184  17FE  2E97               	goto	l3469
  3185  17FF                     l653:
  3186  17FF  0008               	return
  3187  1800                     __end_of___fldiv:
  3188                           
  3189                           	psect	text3
  3190  12DD                     __ptext3:	
  3191 ;; *************** function _I2C_Start *****************
  3192 ;; Defined at:
  3193 ;;		line 30 in file "I2C.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  add             1    wreg     unsigned char 
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;  add             1    4[COMMON] unsigned char 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  1    wreg      void 
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0, pclath, cstack
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3207 ;;      Params:         0       0       0       0       0
  3208 ;;      Locals:         1       0       0       0       0
  3209 ;;      Temps:          0       0       0       0       0
  3210 ;;      Totals:         1       0       0       0       0
  3211 ;;Total ram usage:        1 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    3
  3214 ;; This function calls:
  3215 ;;		_I2C_Master_Wait
  3216 ;;		_I2C_Master_Write
  3217 ;; This function is called by:
  3218 ;;		_readMPU
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           
  3223                           ;psect for function _I2C_Start
  3224  12DD                     _I2C_Start:
  3225                           
  3226                           ;incstack = 0
  3227                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  3228                           ;I2C_Start@add stored from wreg
  3229  12DD  00F4               	movwf	I2C_Start@add
  3230  12DE                     l3323:
  3231                           
  3232                           ;I2C.c: 30: void I2C_Start(char add);I2C.c: 31: {;I2C.c: 32:     I2C_Master_Wait();
  3233  12DE  160A  118A  22C0  160A  118A  	fcall	_I2C_Master_Wait
  3234  12E3                     l3325:
  3235                           
  3236                           ;I2C.c: 33:     SEN = 1;
  3237  12E3  1683               	bsf	3,5	;RP0=1, select bank1
  3238  12E4  1303               	bcf	3,6	;RP1=0, select bank1
  3239  12E5  1411               	bsf	17,0	;volatile
  3240                           
  3241                           ;I2C.c: 34:     I2C_Master_Write(add);
  3242  12E6  0874               	movf	I2C_Start@add,w
  3243  12E7  160A  118A  22CD  160A  118A  	fcall	_I2C_Master_Write
  3244  12EC                     l49:
  3245  12EC  0008               	return
  3246  12ED                     __end_of_I2C_Start:
  3247                           
  3248                           	psect	text4
  3249  134F                     __ptext4:	
  3250 ;; *************** function _I2C_Read *****************
  3251 ;; Defined at:
  3252 ;;		line 83 in file "I2C.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;  ACK_NACK        1    wreg     unsigned char 
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;  ACK_NACK        1    4[COMMON] unsigned char 
  3257 ;;  Data            1    5[COMMON] unsigned char 
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      unsigned char 
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0, pclath, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3267 ;;      Params:         0       0       0       0       0
  3268 ;;      Locals:         2       0       0       0       0
  3269 ;;      Temps:          1       0       0       0       0
  3270 ;;      Totals:         3       0       0       0       0
  3271 ;;Total ram usage:        3 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    2
  3274 ;; This function calls:
  3275 ;;		_I2C_ACK
  3276 ;;		_I2C_Master_Wait
  3277 ;;		_I2C_NACK
  3278 ;; This function is called by:
  3279 ;;		_readMPU
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           
  3284                           ;psect for function _I2C_Read
  3285  134F                     _I2C_Read:
  3286                           
  3287                           ;incstack = 0
  3288                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  3289                           ;I2C_Read@ACK_NACK stored from wreg
  3290  134F  00F4               	movwf	I2C_Read@ACK_NACK
  3291  1350                     l3335:
  3292                           
  3293                           ;I2C.c: 83: unsigned char I2C_Read(unsigned char ACK_NACK);I2C.c: 84: { I2C_Master_Wait(
      +                          );
  3294  1350  160A  118A  22C0  160A  118A  	fcall	_I2C_Master_Wait
  3295  1355                     l3337:
  3296                           
  3297                           ;I2C.c: 86:     unsigned char Data;;I2C.c: 87:     RCEN = 1;
  3298  1355  1683               	bsf	3,5	;RP0=1, select bank1
  3299  1356  1303               	bcf	3,6	;RP1=0, select bank1
  3300  1357  1591               	bsf	17,3	;volatile
  3301  1358                     l82:	
  3302                           ;I2C.c: 88:     while(!BF);
  3303                           
  3304  1358  1C14               	btfss	20,0	;volatile
  3305  1359  2B5B               	goto	u4951
  3306  135A  2B5C               	goto	u4950
  3307  135B                     u4951:
  3308  135B  2B58               	goto	l82
  3309  135C                     u4950:
  3310  135C                     l3339:
  3311                           
  3312                           ;I2C.c: 89:     Data = SSPBUF;
  3313  135C  1283               	bcf	3,5	;RP0=0, select bank0
  3314  135D  1303               	bcf	3,6	;RP1=0, select bank0
  3315  135E  0813               	movf	19,w	;volatile
  3316  135F  00F3               	movwf	??_I2C_Read
  3317  1360  0873               	movf	??_I2C_Read,w
  3318  1361  00F5               	movwf	I2C_Read@Data
  3319  1362                     l3341:
  3320                           
  3321                           ;I2C.c: 90:     if(ACK_NACK==0)
  3322  1362  0874               	movf	I2C_Read@ACK_NACK,w
  3323  1363  1D03               	btfss	3,2
  3324  1364  2B66               	goto	u4961
  3325  1365  2B67               	goto	u4960
  3326  1366                     u4961:
  3327  1366  2B6D               	goto	l3345
  3328  1367                     u4960:
  3329  1367                     l3343:
  3330                           
  3331                           ;I2C.c: 91:         I2C_ACK();
  3332  1367  160A  118A  228A  160A  118A  	fcall	_I2C_ACK
  3333  136C  2B72               	goto	l87
  3334  136D                     l3345:
  3335                           
  3336                           ;I2C.c: 93:         I2C_NACK();
  3337  136D  160A  118A  2293  160A  118A  	fcall	_I2C_NACK
  3338  1372                     l87:
  3339  1372  1283               	bcf	3,5	;RP0=0, select bank0
  3340  1373  1303               	bcf	3,6	;RP1=0, select bank0
  3341  1374  1D8C               	btfss	12,3	;volatile
  3342  1375  2B77               	goto	u4971
  3343  1376  2B78               	goto	u4970
  3344  1377                     u4971:
  3345  1377  2B72               	goto	l87
  3346  1378                     u4970:
  3347  1378                     l89:
  3348                           
  3349                           ;I2C.c: 95:     SSPIF=0;
  3350  1378  118C               	bcf	12,3	;volatile
  3351  1379                     l3347:
  3352                           
  3353                           ;I2C.c: 96:     return Data;
  3354  1379  0875               	movf	I2C_Read@Data,w
  3355  137A                     l90:
  3356  137A  0008               	return
  3357  137B                     __end_of_I2C_Read:
  3358                           
  3359                           	psect	text5
  3360  1293                     __ptext5:	
  3361 ;; *************** function _I2C_NACK *****************
  3362 ;; Defined at:
  3363 ;;		line 56 in file "I2C.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;		None
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;		None
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		None
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3377 ;;      Params:         0       0       0       0       0
  3378 ;;      Locals:         0       0       0       0       0
  3379 ;;      Temps:          0       0       0       0       0
  3380 ;;      Totals:         0       0       0       0       0
  3381 ;;Total ram usage:        0 bytes
  3382 ;; Hardware stack levels used:    1
  3383 ;; Hardware stack levels required when called:    1
  3384 ;; This function calls:
  3385 ;;		Nothing
  3386 ;; This function is called by:
  3387 ;;		_I2C_Read
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           
  3392                           ;psect for function _I2C_NACK
  3393  1293                     _I2C_NACK:
  3394  1293                     l3039:	
  3395                           ;incstack = 0
  3396                           ; Regs used in _I2C_NACK: []
  3397                           
  3398                           
  3399                           ;I2C.c: 58:  ACKDT = 1;
  3400  1293  1683               	bsf	3,5	;RP0=1, select bank1
  3401  1294  1303               	bcf	3,6	;RP1=0, select bank1
  3402  1295  1691               	bsf	17,5	;volatile
  3403                           
  3404                           ;I2C.c: 59:  ACKEN = 1;
  3405  1296  1611               	bsf	17,4	;volatile
  3406  1297                     l64:	
  3407                           ;I2C.c: 60:     while(ACKEN);
  3408                           
  3409  1297  1A11               	btfsc	17,4	;volatile
  3410  1298  2A9A               	goto	u4261
  3411  1299  2A9B               	goto	u4260
  3412  129A                     u4261:
  3413  129A  2A97               	goto	l64
  3414  129B                     u4260:
  3415  129B                     l67:
  3416  129B  0008               	return
  3417  129C                     __end_of_I2C_NACK:
  3418                           
  3419                           	psect	text6
  3420  128A                     __ptext6:	
  3421 ;; *************** function _I2C_ACK *****************
  3422 ;; Defined at:
  3423 ;;		line 49 in file "I2C.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;		None
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;		None
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  1    wreg      void 
  3430 ;; Registers used:
  3431 ;;		None
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3437 ;;      Params:         0       0       0       0       0
  3438 ;;      Locals:         0       0       0       0       0
  3439 ;;      Temps:          0       0       0       0       0
  3440 ;;      Totals:         0       0       0       0       0
  3441 ;;Total ram usage:        0 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; Hardware stack levels required when called:    1
  3444 ;; This function calls:
  3445 ;;		Nothing
  3446 ;; This function is called by:
  3447 ;;		_I2C_Read
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           
  3452                           ;psect for function _I2C_ACK
  3453  128A                     _I2C_ACK:
  3454  128A                     l3037:	
  3455                           ;incstack = 0
  3456                           ; Regs used in _I2C_ACK: []
  3457                           
  3458                           
  3459                           ;I2C.c: 51:  ACKDT = 0;
  3460  128A  1683               	bsf	3,5	;RP0=1, select bank1
  3461  128B  1303               	bcf	3,6	;RP1=0, select bank1
  3462  128C  1291               	bcf	17,5	;volatile
  3463                           
  3464                           ;I2C.c: 52:     ACKEN = 1;
  3465  128D  1611               	bsf	17,4	;volatile
  3466  128E                     l58:	
  3467                           ;I2C.c: 53:     while(ACKEN);
  3468                           
  3469  128E  1A11               	btfsc	17,4	;volatile
  3470  128F  2A91               	goto	u4251
  3471  1290  2A92               	goto	u4250
  3472  1291                     u4251:
  3473  1291  2A8E               	goto	l58
  3474  1292                     u4250:
  3475  1292                     l61:
  3476  1292  0008               	return
  3477  1293                     __end_of_I2C_ACK:
  3478                           
  3479                           	psect	text7
  3480  1281                     __ptext7:	
  3481 ;; *************** function _I2C_Master_RepeatedStart *****************
  3482 ;; Defined at:
  3483 ;;		line 37 in file "I2C.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg, status,2, status,0, pclath, cstack
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3497 ;;      Params:         0       0       0       0       0
  3498 ;;      Locals:         0       0       0       0       0
  3499 ;;      Temps:          0       0       0       0       0
  3500 ;;      Totals:         0       0       0       0       0
  3501 ;;Total ram usage:        0 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:    2
  3504 ;; This function calls:
  3505 ;;		_I2C_Master_Wait
  3506 ;; This function is called by:
  3507 ;;		_readMPU
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _I2C_Master_RepeatedStart
  3513  1281                     _I2C_Master_RepeatedStart:
  3514  1281                     l3327:	
  3515                           ;incstack = 0
  3516                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3517                           
  3518                           
  3519                           ;I2C.c: 39:     I2C_Master_Wait();
  3520  1281  160A  118A  22C0  160A  118A  	fcall	_I2C_Master_Wait
  3521  1286                     l3329:
  3522                           
  3523                           ;I2C.c: 40:     RSEN = 1;
  3524  1286  1683               	bsf	3,5	;RP0=1, select bank1
  3525  1287  1303               	bcf	3,6	;RP1=0, select bank1
  3526  1288  1491               	bsf	17,1	;volatile
  3527  1289                     l52:
  3528  1289  0008               	return
  3529  128A                     __end_of_I2C_Master_RepeatedStart:
  3530                           
  3531                           	psect	text8
  3532  0657                     __ptext8:	
  3533 ;; *************** function _ftoa *****************
  3534 ;; Defined at:
  3535 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftoa.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  f               4   64[BANK0 ] float 
  3538 ;;  status          2   68[BANK0 ] PTR int 
  3539 ;;		 -> RAM(512), 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;  l               4   75[BANK0 ] unsigned long 
  3542 ;;  rem             4   71[BANK0 ] unsigned long 
  3543 ;;  cp              1   79[BANK0 ] PTR unsigned char 
  3544 ;;		 -> ftoa@buf(17), 
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      PTR unsigned char 
  3547 ;; Registers used:
  3548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3554 ;;      Params:         0       6       0       0       0
  3555 ;;      Locals:         0       9       0       0       0
  3556 ;;      Temps:          0       1       0       0       0
  3557 ;;      Totals:         0      16       0       0       0
  3558 ;;Total ram usage:       16 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:    3
  3561 ;; This function calls:
  3562 ;;		___flge
  3563 ;;		___flmul
  3564 ;;		___flneg
  3565 ;;		___flsub
  3566 ;;		___fltol
  3567 ;;		___xxtofl
  3568 ;;		_sprintf
  3569 ;; This function is called by:
  3570 ;;		_main
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574                           
  3575                           ;psect for function _ftoa
  3576  0657                     _ftoa:
  3577  0657                     l3953:	
  3578                           ;incstack = 0
  3579                           ; Regs used in _ftoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3580                           
  3581  0657  30C1               	movlw	(low (ftoa@buf| 0))& (0+255)
  3582  0658  1283               	bcf	3,5	;RP0=0, select bank0
  3583  0659  1303               	bcf	3,6	;RP1=0, select bank0
  3584  065A  00E6               	movwf	??_ftoa
  3585  065B  0866               	movf	??_ftoa,w
  3586  065C  00EF               	movwf	ftoa@cp
  3587  065D                     l3955:
  3588  065D  0863               	movf	ftoa@f+3,w
  3589  065E  00A3               	movwf	___flge@ff1+3
  3590  065F  0862               	movf	ftoa@f+2,w
  3591  0660  00A2               	movwf	___flge@ff1+2
  3592  0661  0861               	movf	ftoa@f+1,w
  3593  0662  00A1               	movwf	___flge@ff1+1
  3594  0663  0860               	movf	ftoa@f,w
  3595  0664  00A0               	movwf	___flge@ff1
  3596  0665  3000               	movlw	0
  3597  0666  00A7               	movwf	___flge@ff2+3
  3598  0667  3000               	movlw	0
  3599  0668  00A6               	movwf	___flge@ff2+2
  3600  0669  3000               	movlw	0
  3601  066A  00A5               	movwf	___flge@ff2+1
  3602  066B  3000               	movlw	0
  3603  066C  00A4               	movwf	___flge@ff2
  3604  066D  160A  118A  257F  120A  118A  	fcall	___flge
  3605  0672  1803               	btfsc	3,0
  3606  0673  2E75               	goto	u6221
  3607  0674  2E76               	goto	u6220
  3608  0675                     u6221:
  3609  0675  2E9A               	goto	l3963
  3610  0676                     u6220:
  3611  0676                     l3957:
  3612  0676  302D               	movlw	45
  3613  0677  1283               	bcf	3,5	;RP0=0, select bank0
  3614  0678  1303               	bcf	3,6	;RP1=0, select bank0
  3615  0679  00E6               	movwf	??_ftoa
  3616  067A  086F               	movf	ftoa@cp,w
  3617  067B  0084               	movwf	4
  3618  067C  0866               	movf	??_ftoa,w
  3619  067D  1383               	bcf	3,7	;select IRP bank0
  3620  067E  0080               	movwf	0
  3621  067F                     l3959:
  3622  067F  3001               	movlw	1
  3623  0680  00E6               	movwf	??_ftoa
  3624  0681  0866               	movf	??_ftoa,w
  3625  0682  07EF               	addwf	ftoa@cp,f
  3626  0683                     l3961:
  3627  0683  0863               	movf	ftoa@f+3,w
  3628  0684  00F6               	movwf	___flneg@f1+3
  3629  0685  0862               	movf	ftoa@f+2,w
  3630  0686  00F5               	movwf	___flneg@f1+2
  3631  0687  0861               	movf	ftoa@f+1,w
  3632  0688  00F4               	movwf	___flneg@f1+1
  3633  0689  0860               	movf	ftoa@f,w
  3634  068A  00F3               	movwf	___flneg@f1
  3635  068B  160A  118A  229C  120A  118A  	fcall	___flneg
  3636  0690  0876               	movf	?___flneg+3,w
  3637  0691  1283               	bcf	3,5	;RP0=0, select bank0
  3638  0692  1303               	bcf	3,6	;RP1=0, select bank0
  3639  0693  00E3               	movwf	ftoa@f+3
  3640  0694  0875               	movf	?___flneg+2,w
  3641  0695  00E2               	movwf	ftoa@f+2
  3642  0696  0874               	movf	?___flneg+1,w
  3643  0697  00E1               	movwf	ftoa@f+1
  3644  0698  0873               	movf	?___flneg,w
  3645  0699  00E0               	movwf	ftoa@f
  3646  069A                     l3963:
  3647  069A  1283               	bcf	3,5	;RP0=0, select bank0
  3648  069B  1303               	bcf	3,6	;RP1=0, select bank0
  3649  069C  0863               	movf	ftoa@f+3,w
  3650  069D  00C7               	movwf	___fltol@f1+3
  3651  069E  0862               	movf	ftoa@f+2,w
  3652  069F  00C6               	movwf	___fltol@f1+2
  3653  06A0  0861               	movf	ftoa@f+1,w
  3654  06A1  00C5               	movwf	___fltol@f1+1
  3655  06A2  0860               	movf	ftoa@f,w
  3656  06A3  00C4               	movwf	___fltol@f1
  3657  06A4  160A  118A  2503  120A  118A  	fcall	___fltol
  3658  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  3659  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  3660  06AB  0847               	movf	?___fltol+3,w
  3661  06AC  00EE               	movwf	ftoa@l+3
  3662  06AD  0846               	movf	?___fltol+2,w
  3663  06AE  00ED               	movwf	ftoa@l+2
  3664  06AF  0845               	movf	?___fltol+1,w
  3665  06B0  00EC               	movwf	ftoa@l+1
  3666  06B1  0844               	movf	?___fltol,w
  3667  06B2  00EB               	movwf	ftoa@l
  3668  06B3                     l3965:
  3669  06B3  086E               	movf	ftoa@l+3,w
  3670  06B4  00F6               	movwf	___xxtofl@val+3
  3671  06B5  086D               	movf	ftoa@l+2,w
  3672  06B6  00F5               	movwf	___xxtofl@val+2
  3673  06B7  086C               	movf	ftoa@l+1,w
  3674  06B8  00F4               	movwf	___xxtofl@val+1
  3675  06B9  086B               	movf	ftoa@l,w
  3676  06BA  00F3               	movwf	___xxtofl@val
  3677  06BB  3000               	movlw	0
  3678  06BC  120A  158A  202B  120A  118A  	fcall	___xxtofl
  3679  06C1  0876               	movf	?___xxtofl+3,w
  3680  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  3681  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  3682  06C4  00DB               	movwf	___flsub@a+3
  3683  06C5  0875               	movf	?___xxtofl+2,w
  3684  06C6  00DA               	movwf	___flsub@a+2
  3685  06C7  0874               	movf	?___xxtofl+1,w
  3686  06C8  00D9               	movwf	___flsub@a+1
  3687  06C9  0873               	movf	?___xxtofl,w
  3688  06CA  00D8               	movwf	___flsub@a
  3689  06CB  0863               	movf	ftoa@f+3,w
  3690  06CC  00DF               	movwf	___flsub@b+3
  3691  06CD  0862               	movf	ftoa@f+2,w
  3692  06CE  00DE               	movwf	___flsub@b+2
  3693  06CF  0861               	movf	ftoa@f+1,w
  3694  06D0  00DD               	movwf	___flsub@b+1
  3695  06D1  0860               	movf	ftoa@f,w
  3696  06D2  00DC               	movwf	___flsub@b
  3697  06D3  160A  118A  2306  120A  118A  	fcall	___flsub
  3698  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  3699  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  3700  06DA  085B               	movf	?___flsub+3,w
  3701  06DB  00E3               	movwf	ftoa@f+3
  3702  06DC  085A               	movf	?___flsub+2,w
  3703  06DD  00E2               	movwf	ftoa@f+2
  3704  06DE  0859               	movf	?___flsub+1,w
  3705  06DF  00E1               	movwf	ftoa@f+1
  3706  06E0  0858               	movf	?___flsub,w
  3707  06E1  00E0               	movwf	ftoa@f
  3708  06E2                     l3967:
  3709  06E2  0863               	movf	ftoa@f+3,w
  3710  06E3  00B1               	movwf	___flmul@a+3
  3711  06E4  0862               	movf	ftoa@f+2,w
  3712  06E5  00B0               	movwf	___flmul@a+2
  3713  06E6  0861               	movf	ftoa@f+1,w
  3714  06E7  00AF               	movwf	___flmul@a+1
  3715  06E8  0860               	movf	ftoa@f,w
  3716  06E9  00AE               	movwf	___flmul@a
  3717  06EA  3049               	movlw	73
  3718  06EB  00AD               	movwf	___flmul@b+3
  3719  06EC  3074               	movlw	116
  3720  06ED  00AC               	movwf	___flmul@b+2
  3721  06EE  3024               	movlw	36
  3722  06EF  00AB               	movwf	___flmul@b+1
  3723  06F0  3000               	movlw	0
  3724  06F1  00AA               	movwf	___flmul@b
  3725  06F2  120A  118A  201D  120A  118A  	fcall	___flmul
  3726  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  3727  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  3728  06F9  082D               	movf	?___flmul+3,w
  3729  06FA  00C7               	movwf	___fltol@f1+3
  3730  06FB  082C               	movf	?___flmul+2,w
  3731  06FC  00C6               	movwf	___fltol@f1+2
  3732  06FD  082B               	movf	?___flmul+1,w
  3733  06FE  00C5               	movwf	___fltol@f1+1
  3734  06FF  082A               	movf	?___flmul,w
  3735  0700  00C4               	movwf	___fltol@f1
  3736  0701  160A  118A  2503  120A  118A  	fcall	___fltol
  3737  0706  1283               	bcf	3,5	;RP0=0, select bank0
  3738  0707  1303               	bcf	3,6	;RP1=0, select bank0
  3739  0708  0847               	movf	?___fltol+3,w
  3740  0709  00EA               	movwf	ftoa@rem+3
  3741  070A  0846               	movf	?___fltol+2,w
  3742  070B  00E9               	movwf	ftoa@rem+2
  3743  070C  0845               	movf	?___fltol+1,w
  3744  070D  00E8               	movwf	ftoa@rem+1
  3745  070E  0844               	movf	?___fltol,w
  3746  070F  00E7               	movwf	ftoa@rem
  3747  0710                     l3969:
  3748  0710  3029               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  3749  0711  00E6               	movwf	??_ftoa
  3750  0712  0866               	movf	??_ftoa,w
  3751  0713  00B1               	movwf	sprintf@f
  3752  0714  086E               	movf	ftoa@l+3,w
  3753  0715  00B5               	movwf	?_sprintf+4
  3754  0716  086D               	movf	ftoa@l+2,w
  3755  0717  00B4               	movwf	?_sprintf+3
  3756  0718  086C               	movf	ftoa@l+1,w
  3757  0719  00B3               	movwf	?_sprintf+2
  3758  071A  086B               	movf	ftoa@l,w
  3759  071B  00B2               	movwf	?_sprintf+1
  3760  071C  086A               	movf	ftoa@rem+3,w
  3761  071D  00B9               	movwf	?_sprintf+8
  3762  071E  0869               	movf	ftoa@rem+2,w
  3763  071F  00B8               	movwf	?_sprintf+7
  3764  0720  0868               	movf	ftoa@rem+1,w
  3765  0721  00B7               	movwf	?_sprintf+6
  3766  0722  0867               	movf	ftoa@rem,w
  3767  0723  00B6               	movwf	?_sprintf+5
  3768  0724  086F               	movf	ftoa@cp,w
  3769  0725  120A  158A  232C  120A  118A  	fcall	_sprintf
  3770  072A                     l3971:
  3771  072A  30C1               	movlw	(low (ftoa@buf| 0))& (0+255)
  3772  072B                     l758:
  3773  072B  0008               	return
  3774  072C                     __end_of_ftoa:
  3775                           
  3776                           	psect	text9
  3777  0B2C                     __ptext9:	
  3778 ;; *************** function _sprintf *****************
  3779 ;; Defined at:
  3780 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;  sp              1    wreg     PTR unsigned char 
  3783 ;;		 -> ftoa@buf(17), 
  3784 ;;  f               1   17[BANK0 ] PTR const unsigned char 
  3785 ;;		 -> STR_8(11), 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;  sp              1   37[BANK0 ] PTR unsigned char 
  3788 ;;		 -> ftoa@buf(17), 
  3789 ;;  val             4   33[BANK0 ] unsigned long 
  3790 ;;  tmpval          4    0        struct .
  3791 ;;  prec            2   40[BANK0 ] int 
  3792 ;;  width           2   38[BANK0 ] int 
  3793 ;;  cp              2    0        PTR const unsigned char 
  3794 ;;  len             2    0        unsigned int 
  3795 ;;  c               1   42[BANK0 ] unsigned char 
  3796 ;;  ap              1   32[BANK0 ] PTR void [1]
  3797 ;;		 -> ?_sprintf(2), 
  3798 ;;  flag            1   31[BANK0 ] unsigned char 
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  2   17[BANK0 ] int 
  3801 ;; Registers used:
  3802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3808 ;;      Params:         0       9       0       0       0
  3809 ;;      Locals:         0      12       0       0       0
  3810 ;;      Temps:          0       5       0       0       0
  3811 ;;      Totals:         0      26       0       0       0
  3812 ;;Total ram usage:       26 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:    2
  3815 ;; This function calls:
  3816 ;;		___lldiv
  3817 ;;		___llmod
  3818 ;;		___wmul
  3819 ;;		_isdigit
  3820 ;; This function is called by:
  3821 ;;		_ftoa
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           
  3826                           ;psect for function _sprintf
  3827  0B2C                     _sprintf:
  3828                           
  3829                           ;incstack = 0
  3830                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3831                           ;sprintf@sp stored from wreg
  3832  0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  3833  0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  3834  0B2E  00C5               	movwf	sprintf@sp
  3835  0B2F                     l3751:
  3836                           
  3837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  3838  0B2F  3032               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3839  0B30  00BA               	movwf	??_sprintf
  3840  0B31  083A               	movf	??_sprintf,w
  3841  0B32  00C0               	movwf	sprintf@ap
  3842                           
  3843                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3844  0B33  2D61               	goto	l3849
  3845  0B34                     l3753:
  3846                           
  3847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3848  0B34  3025               	movlw	37
  3849  0B35  064A               	xorwf	sprintf@c,w
  3850  0B36  1903               	btfsc	3,2
  3851  0B37  2B39               	goto	u5971
  3852  0B38  2B3A               	goto	u5970
  3853  0B39                     u5971:
  3854  0B39  2B46               	goto	l3759
  3855  0B3A                     u5970:
  3856  0B3A                     l3755:
  3857                           
  3858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  3859  0B3A  084A               	movf	sprintf@c,w
  3860  0B3B  00BA               	movwf	??_sprintf
  3861  0B3C  0845               	movf	sprintf@sp,w
  3862  0B3D  0084               	movwf	4
  3863  0B3E  083A               	movf	??_sprintf,w
  3864  0B3F  1383               	bcf	3,7	;select IRP bank0
  3865  0B40  0080               	movwf	0
  3866  0B41                     l3757:
  3867  0B41  3001               	movlw	1
  3868  0B42  00BA               	movwf	??_sprintf
  3869  0B43  083A               	movf	??_sprintf,w
  3870  0B44  07C5               	addwf	sprintf@sp,f
  3871                           
  3872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  3873  0B45  2D61               	goto	l3849
  3874  0B46                     l3759:
  3875                           
  3876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  3877  0B46  01C6               	clrf	sprintf@width
  3878  0B47  01C7               	clrf	sprintf@width+1
  3879                           
  3880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3881  0B48  01BF               	clrf	sprintf@flag
  3882  0B49                     l3761:
  3883                           
  3884                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  3885  0B49  0831               	movf	sprintf@f,w
  3886  0B4A  0084               	movwf	4
  3887  0B4B  160A  118A  200A  120A  158A  	fcall	stringdir
  3888  0B50  120A  118A  27EB  120A  158A  	fcall	_isdigit
  3889  0B55  1C03               	btfss	3,0
  3890  0B56  2B58               	goto	u5981
  3891  0B57  2B59               	goto	u5980
  3892  0B58                     u5981:
  3893  0B58  2B99               	goto	l3773
  3894  0B59                     u5980:
  3895  0B59                     l3763:
  3896                           
  3897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  3898  0B59  1283               	bcf	3,5	;RP0=0, select bank0
  3899  0B5A  1303               	bcf	3,6	;RP1=0, select bank0
  3900  0B5B  01C6               	clrf	sprintf@width
  3901  0B5C  01C7               	clrf	sprintf@width+1
  3902  0B5D                     l3765:
  3903                           
  3904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  3905  0B5D  300A               	movlw	10
  3906  0B5E  00F3               	movwf	___wmul@multiplier
  3907  0B5F  3000               	movlw	0
  3908  0B60  00F4               	movwf	___wmul@multiplier+1
  3909  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  3910  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  3911  0B63  0847               	movf	sprintf@width+1,w
  3912  0B64  00F6               	movwf	___wmul@multiplicand+1
  3913  0B65  0846               	movf	sprintf@width,w
  3914  0B66  00F5               	movwf	___wmul@multiplicand
  3915  0B67  160A  118A  232A  120A  158A  	fcall	___wmul
  3916  0B6C  0874               	movf	?___wmul+1,w
  3917  0B6D  1283               	bcf	3,5	;RP0=0, select bank0
  3918  0B6E  1303               	bcf	3,6	;RP1=0, select bank0
  3919  0B6F  00C7               	movwf	sprintf@width+1
  3920  0B70  0873               	movf	?___wmul,w
  3921  0B71  00C6               	movwf	sprintf@width
  3922  0B72                     l3767:
  3923                           
  3924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  3925  0B72  0831               	movf	sprintf@f,w
  3926  0B73  0084               	movwf	4
  3927  0B74  160A  118A  200A  120A  158A  	fcall	stringdir
  3928  0B79  3ED0               	addlw	208
  3929  0B7A  00BA               	movwf	??_sprintf
  3930  0B7B  30FF               	movlw	255
  3931  0B7C  1803               	skipnc
  3932  0B7D  3000               	movlw	0
  3933  0B7E  00BB               	movwf	??_sprintf+1
  3934  0B7F  083A               	movf	??_sprintf,w
  3935  0B80  07C6               	addwf	sprintf@width,f
  3936  0B81  1803               	skipnc
  3937  0B82  0AC7               	incf	sprintf@width+1,f
  3938  0B83  083B               	movf	??_sprintf+1,w
  3939  0B84  07C7               	addwf	sprintf@width+1,f
  3940  0B85                     l3769:
  3941  0B85  3001               	movlw	1
  3942  0B86  00BA               	movwf	??_sprintf
  3943  0B87  083A               	movf	??_sprintf,w
  3944  0B88  07B1               	addwf	sprintf@f,f
  3945  0B89                     l3771:
  3946                           
  3947                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  3948  0B89  0831               	movf	sprintf@f,w
  3949  0B8A  0084               	movwf	4
  3950  0B8B  160A  118A  200A  120A  158A  	fcall	stringdir
  3951  0B90  120A  118A  27EB  120A  158A  	fcall	_isdigit
  3952  0B95  1803               	btfsc	3,0
  3953  0B96  2B98               	goto	u5991
  3954  0B97  2B99               	goto	u5990
  3955  0B98                     u5991:
  3956  0B98  2B5D               	goto	l3765
  3957  0B99                     u5990:
  3958  0B99                     l3773:
  3959                           
  3960                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  3961  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  3962  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  3963  0B9B  0831               	movf	sprintf@f,w
  3964  0B9C  0084               	movwf	4
  3965  0B9D  160A  118A  200A  120A  158A  	fcall	stringdir
  3966  0BA2  3A2E               	xorlw	46
  3967  0BA3  1D03               	skipz
  3968  0BA4  2BA6               	goto	u6001
  3969  0BA5  2BA7               	goto	u6000
  3970  0BA6                     u6001:
  3971  0BA6  2BEB               	goto	l3787
  3972  0BA7                     u6000:
  3973  0BA7                     l3775:
  3974                           
  3975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  3976  0BA7  3001               	movlw	1
  3977  0BA8  00BA               	movwf	??_sprintf
  3978  0BA9  083A               	movf	??_sprintf,w
  3979  0BAA  07B1               	addwf	sprintf@f,f
  3980  0BAB                     l3777:
  3981                           
  3982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  3983  0BAB  01C8               	clrf	sprintf@prec
  3984  0BAC  01C9               	clrf	sprintf@prec+1
  3985                           
  3986                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  3987  0BAD  2BDA               	goto	l3785
  3988  0BAE                     l3779:
  3989                           
  3990                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  3991  0BAE  300A               	movlw	10
  3992  0BAF  00F3               	movwf	___wmul@multiplier
  3993  0BB0  3000               	movlw	0
  3994  0BB1  00F4               	movwf	___wmul@multiplier+1
  3995  0BB2  1283               	bcf	3,5	;RP0=0, select bank0
  3996  0BB3  1303               	bcf	3,6	;RP1=0, select bank0
  3997  0BB4  0849               	movf	sprintf@prec+1,w
  3998  0BB5  00F6               	movwf	___wmul@multiplicand+1
  3999  0BB6  0848               	movf	sprintf@prec,w
  4000  0BB7  00F5               	movwf	___wmul@multiplicand
  4001  0BB8  160A  118A  232A  120A  158A  	fcall	___wmul
  4002  0BBD  0874               	movf	?___wmul+1,w
  4003  0BBE  1283               	bcf	3,5	;RP0=0, select bank0
  4004  0BBF  1303               	bcf	3,6	;RP1=0, select bank0
  4005  0BC0  00C9               	movwf	sprintf@prec+1
  4006  0BC1  0873               	movf	?___wmul,w
  4007  0BC2  00C8               	movwf	sprintf@prec
  4008  0BC3                     l3781:
  4009                           
  4010                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  4011  0BC3  0831               	movf	sprintf@f,w
  4012  0BC4  0084               	movwf	4
  4013  0BC5  160A  118A  200A  120A  158A  	fcall	stringdir
  4014  0BCA  3ED0               	addlw	208
  4015  0BCB  00BA               	movwf	??_sprintf
  4016  0BCC  30FF               	movlw	255
  4017  0BCD  1803               	skipnc
  4018  0BCE  3000               	movlw	0
  4019  0BCF  00BB               	movwf	??_sprintf+1
  4020  0BD0  083A               	movf	??_sprintf,w
  4021  0BD1  07C8               	addwf	sprintf@prec,f
  4022  0BD2  1803               	skipnc
  4023  0BD3  0AC9               	incf	sprintf@prec+1,f
  4024  0BD4  083B               	movf	??_sprintf+1,w
  4025  0BD5  07C9               	addwf	sprintf@prec+1,f
  4026  0BD6                     l3783:
  4027  0BD6  3001               	movlw	1
  4028  0BD7  00BA               	movwf	??_sprintf
  4029  0BD8  083A               	movf	??_sprintf,w
  4030  0BD9  07B1               	addwf	sprintf@f,f
  4031  0BDA                     l3785:
  4032                           
  4033                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  4034  0BDA  0831               	movf	sprintf@f,w
  4035  0BDB  0084               	movwf	4
  4036  0BDC  160A  118A  200A  120A  158A  	fcall	stringdir
  4037  0BE1  120A  118A  27EB  120A  158A  	fcall	_isdigit
  4038  0BE6  1803               	btfsc	3,0
  4039  0BE7  2BE9               	goto	u6011
  4040  0BE8  2BEA               	goto	u6010
  4041  0BE9                     u6011:
  4042  0BE9  2BAE               	goto	l3779
  4043  0BEA                     u6010:
  4044  0BEA  2BF5               	goto	l3793
  4045  0BEB                     l3787:
  4046                           
  4047                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  4048  0BEB  01C8               	clrf	sprintf@prec
  4049  0BEC  01C9               	clrf	sprintf@prec+1
  4050  0BED  2BF5               	goto	l3793
  4051  0BEE                     l784:	
  4052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 667:   case 'l':
  4053                           
  4054                           
  4055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 669:    flag |= 0
      +                          x10;
  4056  0BEE  163F               	bsf	sprintf@flag,4
  4057                           
  4058                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 670:    goto loop
      +                          ;
  4059  0BEF  2BF5               	goto	l3793
  4060  0BF0                     l3789:
  4061                           
  4062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  4063  0BF0  30C0               	movlw	192
  4064  0BF1  00BA               	movwf	??_sprintf
  4065  0BF2  083A               	movf	??_sprintf,w
  4066  0BF3  04BF               	iorwf	sprintf@flag,f
  4067                           
  4068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 845:    break;
  4069  0BF4  2C14               	goto	l787
  4070  0BF5                     l3793:
  4071  0BF5  3001               	movlw	1
  4072  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
  4073  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
  4074  0BF8  07B1               	addwf	sprintf@f,f
  4075  0BF9  30FF               	movlw	-1
  4076  0BFA  0731               	addwf	sprintf@f,w
  4077  0BFB  0084               	movwf	4
  4078  0BFC  160A  118A  200A  120A  158A  	fcall	stringdir
  4079  0C01  00CA               	movwf	sprintf@c
  4080  0C02  00BA               	movwf	??_sprintf
  4081  0C03  01BB               	clrf	??_sprintf+1
  4082                           
  4083                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4084                           ; Switch size 1, requested type "simple"
  4085                           ; Number of cases is 1, Range of values is 0 to 0
  4086                           ; switch strategies available:
  4087                           ; Name         Instructions Cycles
  4088                           ; simple_byte            4     3 (average)
  4089                           ; direct_byte           11     8 (fixed)
  4090                           ; jumptable            260     6 (fixed)
  4091                           ;	Chosen strategy is simple_byte
  4092  0C04  083B               	movf	??_sprintf+1,w
  4093  0C05  3A00               	xorlw	0	; case 0
  4094  0C06  1903               	skipnz
  4095  0C07  2C09               	goto	l4077
  4096  0C08  2D61               	goto	l3849
  4097  0C09                     l4077:
  4098                           
  4099                           ; Switch size 1, requested type "simple"
  4100                           ; Number of cases is 3, Range of values is 0 to 117
  4101                           ; switch strategies available:
  4102                           ; Name         Instructions Cycles
  4103                           ; simple_byte           10     6 (average)
  4104                           ; jumptable            260     6 (fixed)
  4105                           ;	Chosen strategy is simple_byte
  4106  0C09  083A               	movf	??_sprintf,w
  4107  0C0A  3A00               	xorlw	0	; case 0
  4108  0C0B  1903               	skipnz
  4109  0C0C  2D73               	goto	l3851
  4110  0C0D  3A6C               	xorlw	108	; case 108
  4111  0C0E  1903               	skipnz
  4112  0C0F  2BEE               	goto	l784
  4113  0C10  3A19               	xorlw	25	; case 117
  4114  0C11  1903               	skipnz
  4115  0C12  2BF0               	goto	l3789
  4116  0C13  2D61               	goto	l3849
  4117  0C14                     l787:
  4118                           
  4119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1307:     if(flag & 0x10)
  4120  0C14  1E3F               	btfss	sprintf@flag,4
  4121  0C15  2C17               	goto	u6021
  4122  0C16  2C18               	goto	u6020
  4123  0C17                     u6021:
  4124  0C17  2C2B               	goto	l3799
  4125  0C18                     u6020:
  4126  0C18                     l3795:
  4127                           
  4128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1308:     val = (
      +                          *(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned long)0));
  4129  0C18  0840               	movf	sprintf@ap,w
  4130  0C19  0084               	movwf	4
  4131  0C1A  1383               	bcf	3,7	;select IRP bank0
  4132  0C1B  0800               	movf	0,w
  4133  0C1C  00C1               	movwf	sprintf@val
  4134  0C1D  0A84               	incf	4,f
  4135  0C1E  0800               	movf	0,w
  4136  0C1F  00C2               	movwf	sprintf@val+1
  4137  0C20  0A84               	incf	4,f
  4138  0C21  0800               	movf	0,w
  4139  0C22  00C3               	movwf	sprintf@val+2
  4140  0C23  0A84               	incf	4,f
  4141  0C24  0800               	movf	0,w
  4142  0C25  00C4               	movwf	sprintf@val+3
  4143  0C26                     l3797:
  4144  0C26  3004               	movlw	4
  4145  0C27  00BA               	movwf	??_sprintf
  4146  0C28  083A               	movf	??_sprintf,w
  4147  0C29  07C0               	addwf	sprintf@ap,f
  4148  0C2A  2C3D               	goto	l3803
  4149  0C2B                     l3799:
  4150                           
  4151                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1312:     val = (
      +                          *(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4152  0C2B  0840               	movf	sprintf@ap,w
  4153  0C2C  0084               	movwf	4
  4154  0C2D  1383               	bcf	3,7	;select IRP bank0
  4155  0C2E  0800               	movf	0,w
  4156  0C2F  00BA               	movwf	??_sprintf
  4157  0C30  0A84               	incf	4,f
  4158  0C31  0800               	movf	0,w
  4159  0C32  00BB               	movwf	??_sprintf+1
  4160  0C33  083A               	movf	??_sprintf,w
  4161  0C34  00C1               	movwf	sprintf@val
  4162  0C35  083B               	movf	??_sprintf+1,w
  4163  0C36  00C2               	movwf	sprintf@val+1
  4164  0C37  01C3               	clrf	sprintf@val+2
  4165  0C38  01C4               	clrf	sprintf@val+3
  4166  0C39                     l3801:
  4167  0C39  3002               	movlw	2
  4168  0C3A  00BA               	movwf	??_sprintf
  4169  0C3B  083A               	movf	??_sprintf,w
  4170  0C3C  07C0               	addwf	sprintf@ap,f
  4171  0C3D                     l3803:
  4172                           
  4173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  4174  0C3D  0848               	movf	sprintf@prec,w
  4175  0C3E  0449               	iorwf	sprintf@prec+1,w
  4176  0C3F  1D03               	btfss	3,2
  4177  0C40  2C42               	goto	u6031
  4178  0C41  2C43               	goto	u6030
  4179  0C42                     u6031:
  4180  0C42  2C51               	goto	l3809
  4181  0C43                     u6030:
  4182  0C43                     l3805:
  4183  0C43  0844               	movf	sprintf@val+3,w
  4184  0C44  0443               	iorwf	sprintf@val+2,w
  4185  0C45  0442               	iorwf	sprintf@val+1,w
  4186  0C46  0441               	iorwf	sprintf@val,w
  4187  0C47  1D03               	skipz
  4188  0C48  2C4A               	goto	u6041
  4189  0C49  2C4B               	goto	u6040
  4190  0C4A                     u6041:
  4191  0C4A  2C51               	goto	l3809
  4192  0C4B                     u6040:
  4193  0C4B                     l3807:
  4194                           
  4195                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  4196  0C4B  3001               	movlw	1
  4197  0C4C  07C8               	addwf	sprintf@prec,f
  4198  0C4D  1803               	skipnc
  4199  0C4E  0AC9               	incf	sprintf@prec+1,f
  4200  0C4F  3000               	movlw	0
  4201  0C50  07C9               	addwf	sprintf@prec+1,f
  4202  0C51                     l3809:
  4203                           
  4204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4205  0C51  01CA               	clrf	sprintf@c
  4206  0C52  0ACA               	incf	sprintf@c,f
  4207  0C53                     l3815:
  4208                           
  4209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  4210  0C53  084A               	movf	sprintf@c,w
  4211  0C54  00BA               	movwf	??_sprintf
  4212  0C55  3001               	movlw	1
  4213  0C56                     u6055:
  4214  0C56  1003               	clrc
  4215  0C57  0DBA               	rlf	??_sprintf,f
  4216  0C58  3EFF               	addlw	-1
  4217  0C59  1D03               	skipz
  4218  0C5A  2C56               	goto	u6055
  4219  0C5B  1003               	clrc
  4220  0C5C  0D3A               	rlf	??_sprintf,w
  4221  0C5D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4222  0C5E  0084               	movwf	4
  4223  0C5F  160A  118A  200A  120A  158A  	fcall	stringdir
  4224  0C64  00BB               	movwf	??_sprintf+1
  4225  0C65  160A  118A  200A  120A  158A  	fcall	stringdir
  4226  0C6A  00BC               	movwf	??_sprintf+2
  4227  0C6B  160A  118A  200A  120A  158A  	fcall	stringdir
  4228  0C70  00BD               	movwf	??_sprintf+3
  4229  0C71  160A  118A  200A  120A  158A  	fcall	stringdir
  4230  0C76  00BE               	movwf	??_sprintf+4
  4231  0C77  083E               	movf	??_sprintf+4,w
  4232  0C78  0244               	subwf	sprintf@val+3,w
  4233  0C79  1D03               	skipz
  4234  0C7A  2C85               	goto	u6065
  4235  0C7B  083D               	movf	??_sprintf+3,w
  4236  0C7C  0243               	subwf	sprintf@val+2,w
  4237  0C7D  1D03               	skipz
  4238  0C7E  2C85               	goto	u6065
  4239  0C7F  083C               	movf	??_sprintf+2,w
  4240  0C80  0242               	subwf	sprintf@val+1,w
  4241  0C81  1D03               	skipz
  4242  0C82  2C85               	goto	u6065
  4243  0C83  083B               	movf	??_sprintf+1,w
  4244  0C84  0241               	subwf	sprintf@val,w
  4245  0C85                     u6065:
  4246  0C85  1803               	skipnc
  4247  0C86  2C88               	goto	u6061
  4248  0C87  2C89               	goto	u6060
  4249  0C88                     u6061:
  4250  0C88  2C8A               	goto	l3819
  4251  0C89                     u6060:
  4252  0C89  2C94               	goto	l3821
  4253  0C8A                     l3819:
  4254  0C8A  3001               	movlw	1
  4255  0C8B  00BA               	movwf	??_sprintf
  4256  0C8C  083A               	movf	??_sprintf,w
  4257  0C8D  07CA               	addwf	sprintf@c,f
  4258  0C8E  300A               	movlw	10
  4259  0C8F  064A               	xorwf	sprintf@c,w
  4260  0C90  1D03               	btfss	3,2
  4261  0C91  2C93               	goto	u6071
  4262  0C92  2C94               	goto	u6070
  4263  0C93                     u6071:
  4264  0C93  2C53               	goto	l3815
  4265  0C94                     u6070:
  4266  0C94                     l3821:
  4267                           
  4268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  4269  0C94  0849               	movf	sprintf@prec+1,w
  4270  0C95  3A80               	xorlw	128
  4271  0C96  3C80               	sublw	128
  4272  0C97  1D03               	skipz
  4273  0C98  2C9B               	goto	u6085
  4274  0C99  0848               	movf	sprintf@prec,w
  4275  0C9A  024A               	subwf	sprintf@c,w
  4276  0C9B                     u6085:
  4277  0C9B  1803               	skipnc
  4278  0C9C  2C9E               	goto	u6081
  4279  0C9D  2C9F               	goto	u6080
  4280  0C9E                     u6081:
  4281  0C9E  2CA6               	goto	l3825
  4282  0C9F                     u6080:
  4283  0C9F                     l3823:
  4284                           
  4285                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  4286  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  4287  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  4288  0CA1  0848               	movf	sprintf@prec,w
  4289  0CA2  00BA               	movwf	??_sprintf
  4290  0CA3  083A               	movf	??_sprintf,w
  4291  0CA4  00CA               	movwf	sprintf@c
  4292  0CA5  2CBE               	goto	l795
  4293  0CA6                     l3825:
  4294  0CA6  1283               	bcf	3,5	;RP0=0, select bank0
  4295  0CA7  1303               	bcf	3,6	;RP1=0, select bank0
  4296  0CA8  0849               	movf	sprintf@prec+1,w
  4297  0CA9  3A80               	xorlw	128
  4298  0CAA  00BA               	movwf	??_sprintf
  4299  0CAB  3080               	movlw	128
  4300  0CAC  023A               	subwf	??_sprintf,w
  4301  0CAD  1D03               	skipz
  4302  0CAE  2CB1               	goto	u6095
  4303  0CAF  084A               	movf	sprintf@c,w
  4304  0CB0  0248               	subwf	sprintf@prec,w
  4305  0CB1                     u6095:
  4306  0CB1  1803               	skipnc
  4307  0CB2  2CB4               	goto	u6091
  4308  0CB3  2CB5               	goto	u6090
  4309  0CB4                     u6091:
  4310  0CB4  2CBE               	goto	l795
  4311  0CB5                     u6090:
  4312  0CB5                     l3827:
  4313                           
  4314                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  4315  0CB5  1283               	bcf	3,5	;RP0=0, select bank0
  4316  0CB6  1303               	bcf	3,6	;RP1=0, select bank0
  4317  0CB7  084A               	movf	sprintf@c,w
  4318  0CB8  00BA               	movwf	??_sprintf
  4319  0CB9  01BB               	clrf	??_sprintf+1
  4320  0CBA  083A               	movf	??_sprintf,w
  4321  0CBB  00C8               	movwf	sprintf@prec
  4322  0CBC  083B               	movf	??_sprintf+1,w
  4323  0CBD  00C9               	movwf	sprintf@prec+1
  4324  0CBE                     l795:
  4325                           
  4326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  4327  0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  4328  0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  4329  0CC0  0847               	movf	sprintf@width+1,w
  4330  0CC1  3A80               	xorlw	128
  4331  0CC2  3C80               	sublw	128
  4332  0CC3  1D03               	skipz
  4333  0CC4  2CC7               	goto	u6105
  4334  0CC5  0846               	movf	sprintf@width,w
  4335  0CC6  024A               	subwf	sprintf@c,w
  4336  0CC7                     u6105:
  4337  0CC7  1803               	skipnc
  4338  0CC8  2CCA               	goto	u6101
  4339  0CC9  2CCB               	goto	u6100
  4340  0CCA                     u6101:
  4341  0CCA  2CD7               	goto	l3831
  4342  0CCB                     u6100:
  4343  0CCB                     l3829:
  4344                           
  4345                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  4346  0CCB  1283               	bcf	3,5	;RP0=0, select bank0
  4347  0CCC  1303               	bcf	3,6	;RP1=0, select bank0
  4348  0CCD  084A               	movf	sprintf@c,w
  4349  0CCE  00BA               	movwf	??_sprintf
  4350  0CCF  01BB               	clrf	??_sprintf+1
  4351  0CD0  083A               	movf	??_sprintf,w
  4352  0CD1  02C6               	subwf	sprintf@width,f
  4353  0CD2  083B               	movf	??_sprintf+1,w
  4354  0CD3  1C03               	skipc
  4355  0CD4  03C7               	decf	sprintf@width+1,f
  4356  0CD5  02C7               	subwf	sprintf@width+1,f
  4357  0CD6  2CDB               	goto	l3833
  4358  0CD7                     l3831:
  4359                           
  4360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  4361  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  4362  0CD8  1303               	bcf	3,6	;RP1=0, select bank0
  4363  0CD9  01C6               	clrf	sprintf@width
  4364  0CDA  01C7               	clrf	sprintf@width+1
  4365  0CDB                     l3833:
  4366                           
  4367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  4368  0CDB  0846               	movf	sprintf@width,w
  4369  0CDC  0447               	iorwf	sprintf@width+1,w
  4370  0CDD  1903               	btfsc	3,2
  4371  0CDE  2CE0               	goto	u6111
  4372  0CDF  2CE1               	goto	u6110
  4373  0CE0                     u6111:
  4374  0CE0  2D53               	goto	l3847
  4375  0CE1                     u6110:
  4376  0CE1                     l3835:
  4377                           
  4378                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  4379  0CE1  3020               	movlw	32
  4380  0CE2  00BA               	movwf	??_sprintf
  4381  0CE3  0845               	movf	sprintf@sp,w
  4382  0CE4  0084               	movwf	4
  4383  0CE5  083A               	movf	??_sprintf,w
  4384  0CE6  1383               	bcf	3,7	;select IRP bank0
  4385  0CE7  0080               	movwf	0
  4386  0CE8                     l3837:
  4387  0CE8  3001               	movlw	1
  4388  0CE9  00BA               	movwf	??_sprintf
  4389  0CEA  083A               	movf	??_sprintf,w
  4390  0CEB  07C5               	addwf	sprintf@sp,f
  4391  0CEC                     l3839:
  4392  0CEC  30FF               	movlw	255
  4393  0CED  07C6               	addwf	sprintf@width,f
  4394  0CEE  1803               	skipnc
  4395  0CEF  0AC7               	incf	sprintf@width+1,f
  4396  0CF0  30FF               	movlw	255
  4397  0CF1  07C7               	addwf	sprintf@width+1,f
  4398  0CF2  0846               	movf	sprintf@width,w
  4399  0CF3  0447               	iorwf	sprintf@width+1,w
  4400  0CF4  1D03               	btfss	3,2
  4401  0CF5  2CF7               	goto	u6121
  4402  0CF6  2CF8               	goto	u6120
  4403  0CF7                     u6121:
  4404  0CF7  2CE1               	goto	l3835
  4405  0CF8                     u6120:
  4406  0CF8  2D53               	goto	l3847
  4407  0CF9                     l3841:
  4408                           
  4409                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  4410  0CF9  3000               	movlw	0
  4411  0CFA  00AB               	movwf	___llmod@divisor+3
  4412  0CFB  3000               	movlw	0
  4413  0CFC  00AA               	movwf	___llmod@divisor+2
  4414  0CFD  3000               	movlw	0
  4415  0CFE  00A9               	movwf	___llmod@divisor+1
  4416  0CFF  300A               	movlw	10
  4417  0D00  00A8               	movwf	___llmod@divisor
  4418  0D01  0848               	movf	sprintf@prec,w
  4419  0D02  00BA               	movwf	??_sprintf
  4420  0D03  3001               	movlw	1
  4421  0D04                     u6135:
  4422  0D04  1003               	clrc
  4423  0D05  0DBA               	rlf	??_sprintf,f
  4424  0D06  3EFF               	addlw	-1
  4425  0D07  1D03               	skipz
  4426  0D08  2D04               	goto	u6135
  4427  0D09  1003               	clrc
  4428  0D0A  0D3A               	rlf	??_sprintf,w
  4429  0D0B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4430  0D0C  0084               	movwf	4
  4431  0D0D  160A  118A  200A  120A  158A  	fcall	stringdir
  4432  0D12  00A0               	movwf	___lldiv@divisor
  4433  0D13  160A  118A  200A  120A  158A  	fcall	stringdir
  4434  0D18  00A1               	movwf	___lldiv@divisor+1
  4435  0D19  160A  118A  200A  120A  158A  	fcall	stringdir
  4436  0D1E  00A2               	movwf	___lldiv@divisor+2
  4437  0D1F  160A  118A  200A  120A  158A  	fcall	stringdir
  4438  0D24  00A3               	movwf	___lldiv@divisor+3
  4439  0D25  0844               	movf	sprintf@val+3,w
  4440  0D26  00A7               	movwf	___lldiv@dividend+3
  4441  0D27  0843               	movf	sprintf@val+2,w
  4442  0D28  00A6               	movwf	___lldiv@dividend+2
  4443  0D29  0842               	movf	sprintf@val+1,w
  4444  0D2A  00A5               	movwf	___lldiv@dividend+1
  4445  0D2B  0841               	movf	sprintf@val,w
  4446  0D2C  00A4               	movwf	___lldiv@dividend
  4447  0D2D  160A  118A  2428  120A  158A  	fcall	___lldiv
  4448  0D32  1283               	bcf	3,5	;RP0=0, select bank0
  4449  0D33  1303               	bcf	3,6	;RP1=0, select bank0
  4450  0D34  0823               	movf	?___lldiv+3,w
  4451  0D35  00AF               	movwf	___llmod@dividend+3
  4452  0D36  0822               	movf	?___lldiv+2,w
  4453  0D37  00AE               	movwf	___llmod@dividend+2
  4454  0D38  0821               	movf	?___lldiv+1,w
  4455  0D39  00AD               	movwf	___llmod@dividend+1
  4456  0D3A  0820               	movf	?___lldiv,w
  4457  0D3B  00AC               	movwf	___llmod@dividend
  4458  0D3C  160A  118A  237B  120A  158A  	fcall	___llmod
  4459  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  4460  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  4461  0D43  0828               	movf	?___llmod,w
  4462  0D44  3E30               	addlw	48
  4463  0D45  00BB               	movwf	??_sprintf+1
  4464  0D46  083B               	movf	??_sprintf+1,w
  4465  0D47  00CA               	movwf	sprintf@c
  4466  0D48                     l3843:
  4467                           
  4468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  4469  0D48  084A               	movf	sprintf@c,w
  4470  0D49  00BA               	movwf	??_sprintf
  4471  0D4A  0845               	movf	sprintf@sp,w
  4472  0D4B  0084               	movwf	4
  4473  0D4C  083A               	movf	??_sprintf,w
  4474  0D4D  1383               	bcf	3,7	;select IRP bank0
  4475  0D4E  0080               	movwf	0
  4476  0D4F                     l3845:
  4477  0D4F  3001               	movlw	1
  4478  0D50  00BA               	movwf	??_sprintf
  4479  0D51  083A               	movf	??_sprintf,w
  4480  0D52  07C5               	addwf	sprintf@sp,f
  4481  0D53                     l3847:
  4482                           
  4483                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4484  0D53  30FF               	movlw	255
  4485  0D54  07C8               	addwf	sprintf@prec,f
  4486  0D55  1803               	skipnc
  4487  0D56  0AC9               	incf	sprintf@prec+1,f
  4488  0D57  30FF               	movlw	255
  4489  0D58  07C9               	addwf	sprintf@prec+1,f
  4490  0D59  0A48               	incf	sprintf@prec,w
  4491  0D5A  1D03               	skipz
  4492  0D5B  2D60               	goto	u6141
  4493  0D5C  0A49               	incf	sprintf@prec+1,w
  4494  0D5D  1D03               	btfss	3,2
  4495  0D5E  2D60               	goto	u6141
  4496  0D5F  2D61               	goto	u6140
  4497  0D60                     u6141:
  4498  0D60  2CF9               	goto	l3841
  4499  0D61                     u6140:
  4500  0D61                     l3849:
  4501                           
  4502                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4503  0D61  3001               	movlw	1
  4504  0D62  07B1               	addwf	sprintf@f,f
  4505  0D63  30FF               	movlw	-1
  4506  0D64  0731               	addwf	sprintf@f,w
  4507  0D65  0084               	movwf	4
  4508  0D66  160A  118A  200A  120A  158A  	fcall	stringdir
  4509  0D6B  00BA               	movwf	??_sprintf
  4510  0D6C  083A               	movf	??_sprintf,w
  4511  0D6D  00CA               	movwf	sprintf@c
  4512  0D6E  084A               	movf	sprintf@c,w
  4513  0D6F  1D03               	btfss	3,2
  4514  0D70  2D72               	goto	u6151
  4515  0D71  2D73               	goto	u6150
  4516  0D72                     u6151:
  4517  0D72  2B34               	goto	l3753
  4518  0D73                     u6150:
  4519  0D73                     l3851:
  4520                           
  4521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4522  0D73  0845               	movf	sprintf@sp,w
  4523  0D74  0084               	movwf	4
  4524  0D75  1383               	bcf	3,7	;select IRP bank0
  4525  0D76  0180               	clrf	0
  4526  0D77                     l806:
  4527  0D77  0008               	return
  4528  0D78                     __end_of_sprintf:
  4529                           
  4530                           	psect	text10
  4531  07EB                     __ptext10:	
  4532 ;; *************** function _isdigit *****************
  4533 ;; Defined at:
  4534 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;  c               1    wreg     unsigned char 
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;  c               1    4[COMMON] unsigned char 
  4539 ;; Return value:  Size  Location     Type
  4540 ;;		None               void
  4541 ;; Registers used:
  4542 ;;		wreg, status,2, status,0
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4548 ;;      Params:         0       0       0       0       0
  4549 ;;      Locals:         2       0       0       0       0
  4550 ;;      Temps:          0       0       0       0       0
  4551 ;;      Totals:         2       0       0       0       0
  4552 ;;Total ram usage:        2 bytes
  4553 ;; Hardware stack levels used:    1
  4554 ;; Hardware stack levels required when called:    1
  4555 ;; This function calls:
  4556 ;;		Nothing
  4557 ;; This function is called by:
  4558 ;;		_sprintf
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           
  4563                           ;psect for function _isdigit
  4564  07EB                     _isdigit:
  4565                           
  4566                           ;incstack = 0
  4567                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4568                           ;isdigit@c stored from wreg
  4569  07EB  00F4               	movwf	isdigit@c
  4570  07EC                     l3307:
  4571  07EC  01F3               	clrf	_isdigit$886
  4572  07ED                     l3309:
  4573  07ED  303A               	movlw	58
  4574  07EE  0274               	subwf	isdigit@c,w
  4575  07EF  1803               	skipnc
  4576  07F0  2FF2               	goto	u4931
  4577  07F1  2FF3               	goto	u4930
  4578  07F2                     u4931:
  4579  07F2  2FFB               	goto	l3315
  4580  07F3                     u4930:
  4581  07F3                     l3311:
  4582  07F3  3030               	movlw	48
  4583  07F4  0274               	subwf	isdigit@c,w
  4584  07F5  1C03               	skipc
  4585  07F6  2FF8               	goto	u4941
  4586  07F7  2FF9               	goto	u4940
  4587  07F8                     u4941:
  4588  07F8  2FFB               	goto	l3315
  4589  07F9                     u4940:
  4590  07F9                     l3313:
  4591  07F9  01F3               	clrf	_isdigit$886
  4592  07FA  0AF3               	incf	_isdigit$886,f
  4593  07FB                     l3315:
  4594  07FB  0C73               	rrf	_isdigit$886,w
  4595  07FC                     l811:
  4596  07FC  0008               	return
  4597  07FD                     __end_of_isdigit:
  4598                           
  4599                           	psect	text11
  4600  132A                     __ptext11:	
  4601 ;; *************** function ___wmul *****************
  4602 ;; Defined at:
  4603 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;  multiplier      2    3[COMMON] unsigned int 
  4606 ;;  multiplicand    2    5[COMMON] unsigned int 
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;  product         2    7[COMMON] unsigned int 
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  2    3[COMMON] unsigned int 
  4611 ;; Registers used:
  4612 ;;		wreg, status,2, status,0
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4618 ;;      Params:         4       0       0       0       0
  4619 ;;      Locals:         2       0       0       0       0
  4620 ;;      Temps:          0       0       0       0       0
  4621 ;;      Totals:         6       0       0       0       0
  4622 ;;Total ram usage:        6 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; Hardware stack levels required when called:    1
  4625 ;; This function calls:
  4626 ;;		Nothing
  4627 ;; This function is called by:
  4628 ;;		_sprintf
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           
  4633                           ;psect for function ___wmul
  4634  132A                     ___wmul:
  4635  132A                     l3041:	
  4636                           ;incstack = 0
  4637                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4638                           
  4639  132A  01F7               	clrf	___wmul@product
  4640  132B  01F8               	clrf	___wmul@product+1
  4641  132C                     l3043:
  4642  132C  1C73               	btfss	___wmul@multiplier,0
  4643  132D  2B2F               	goto	u4271
  4644  132E  2B30               	goto	u4270
  4645  132F                     u4271:
  4646  132F  2B36               	goto	l302
  4647  1330                     u4270:
  4648  1330                     l3045:
  4649  1330  0875               	movf	___wmul@multiplicand,w
  4650  1331  07F7               	addwf	___wmul@product,f
  4651  1332  1803               	skipnc
  4652  1333  0AF8               	incf	___wmul@product+1,f
  4653  1334  0876               	movf	___wmul@multiplicand+1,w
  4654  1335  07F8               	addwf	___wmul@product+1,f
  4655  1336                     l302:
  4656  1336  3001               	movlw	1
  4657  1337                     u4285:
  4658  1337  1003               	clrc
  4659  1338  0DF5               	rlf	___wmul@multiplicand,f
  4660  1339  0DF6               	rlf	___wmul@multiplicand+1,f
  4661  133A  3EFF               	addlw	-1
  4662  133B  1D03               	skipz
  4663  133C  2B37               	goto	u4285
  4664  133D                     l3047:
  4665  133D  3001               	movlw	1
  4666  133E                     u4295:
  4667  133E  1003               	clrc
  4668  133F  0CF4               	rrf	___wmul@multiplier+1,f
  4669  1340  0CF3               	rrf	___wmul@multiplier,f
  4670  1341  3EFF               	addlw	-1
  4671  1342  1D03               	skipz
  4672  1343  2B3E               	goto	u4295
  4673  1344                     l3049:
  4674  1344  0873               	movf	___wmul@multiplier,w
  4675  1345  0474               	iorwf	___wmul@multiplier+1,w
  4676  1346  1D03               	btfss	3,2
  4677  1347  2B49               	goto	u4301
  4678  1348  2B4A               	goto	u4300
  4679  1349                     u4301:
  4680  1349  2B2C               	goto	l3043
  4681  134A                     u4300:
  4682  134A                     l3051:
  4683  134A  0878               	movf	___wmul@product+1,w
  4684  134B  00F4               	movwf	?___wmul+1
  4685  134C  0877               	movf	___wmul@product,w
  4686  134D  00F3               	movwf	?___wmul
  4687  134E                     l304:
  4688  134E  0008               	return
  4689  134F                     __end_of___wmul:
  4690                           
  4691                           	psect	text12
  4692  137B                     __ptext12:	
  4693 ;; *************** function ___llmod *****************
  4694 ;; Defined at:
  4695 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;  divisor         4    8[BANK0 ] unsigned long 
  4698 ;;  dividend        4   12[BANK0 ] unsigned long 
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;  counter         1   16[BANK0 ] unsigned char 
  4701 ;; Return value:  Size  Location     Type
  4702 ;;                  4    8[BANK0 ] unsigned long 
  4703 ;; Registers used:
  4704 ;;		wreg, status,2, status,0
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4710 ;;      Params:         0       8       0       0       0
  4711 ;;      Locals:         0       1       0       0       0
  4712 ;;      Temps:          1       0       0       0       0
  4713 ;;      Totals:         1       9       0       0       0
  4714 ;;Total ram usage:       10 bytes
  4715 ;; Hardware stack levels used:    1
  4716 ;; Hardware stack levels required when called:    1
  4717 ;; This function calls:
  4718 ;;		Nothing
  4719 ;; This function is called by:
  4720 ;;		_sprintf
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           
  4725                           ;psect for function ___llmod
  4726  137B                     ___llmod:
  4727  137B                     l3079:	
  4728                           ;incstack = 0
  4729                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4730                           
  4731  137B  1283               	bcf	3,5	;RP0=0, select bank0
  4732  137C  1303               	bcf	3,6	;RP1=0, select bank0
  4733  137D  082B               	movf	___llmod@divisor+3,w
  4734  137E  042A               	iorwf	___llmod@divisor+2,w
  4735  137F  0429               	iorwf	___llmod@divisor+1,w
  4736  1380  0428               	iorwf	___llmod@divisor,w
  4737  1381  1903               	skipnz
  4738  1382  2B84               	goto	u4381
  4739  1383  2B85               	goto	u4380
  4740  1384                     u4381:
  4741  1384  2BC8               	goto	l3095
  4742  1385                     u4380:
  4743  1385                     l3081:
  4744  1385  01B0               	clrf	___llmod@counter
  4745  1386  0AB0               	incf	___llmod@counter,f
  4746  1387  2B95               	goto	l3085
  4747  1388                     l3083:
  4748  1388  3001               	movlw	1
  4749  1389  00F9               	movwf	??___llmod
  4750  138A                     u4395:
  4751  138A  1003               	clrc
  4752  138B  0DA8               	rlf	___llmod@divisor,f
  4753  138C  0DA9               	rlf	___llmod@divisor+1,f
  4754  138D  0DAA               	rlf	___llmod@divisor+2,f
  4755  138E  0DAB               	rlf	___llmod@divisor+3,f
  4756  138F  0BF9               	decfsz	??___llmod,f
  4757  1390  2B8A               	goto	u4395
  4758  1391  3001               	movlw	1
  4759  1392  00F9               	movwf	??___llmod
  4760  1393  0879               	movf	??___llmod,w
  4761  1394  07B0               	addwf	___llmod@counter,f
  4762  1395                     l3085:
  4763  1395  1FAB               	btfss	___llmod@divisor+3,7
  4764  1396  2B98               	goto	u4401
  4765  1397  2B99               	goto	u4400
  4766  1398                     u4401:
  4767  1398  2B88               	goto	l3083
  4768  1399                     u4400:
  4769  1399                     l3087:
  4770  1399  082B               	movf	___llmod@divisor+3,w
  4771  139A  022F               	subwf	___llmod@dividend+3,w
  4772  139B  1D03               	skipz
  4773  139C  2BA7               	goto	u4415
  4774  139D  082A               	movf	___llmod@divisor+2,w
  4775  139E  022E               	subwf	___llmod@dividend+2,w
  4776  139F  1D03               	skipz
  4777  13A0  2BA7               	goto	u4415
  4778  13A1  0829               	movf	___llmod@divisor+1,w
  4779  13A2  022D               	subwf	___llmod@dividend+1,w
  4780  13A3  1D03               	skipz
  4781  13A4  2BA7               	goto	u4415
  4782  13A5  0828               	movf	___llmod@divisor,w
  4783  13A6  022C               	subwf	___llmod@dividend,w
  4784  13A7                     u4415:
  4785  13A7  1C03               	skipc
  4786  13A8  2BAA               	goto	u4411
  4787  13A9  2BAB               	goto	u4410
  4788  13AA                     u4411:
  4789  13AA  2BB9               	goto	l3091
  4790  13AB                     u4410:
  4791  13AB                     l3089:
  4792  13AB  0828               	movf	___llmod@divisor,w
  4793  13AC  02AC               	subwf	___llmod@dividend,f
  4794  13AD  0829               	movf	___llmod@divisor+1,w
  4795  13AE  1C03               	skipc
  4796  13AF  0F29               	incfsz	___llmod@divisor+1,w
  4797  13B0  02AD               	subwf	___llmod@dividend+1,f
  4798  13B1  082A               	movf	___llmod@divisor+2,w
  4799  13B2  1C03               	skipc
  4800  13B3  0F2A               	incfsz	___llmod@divisor+2,w
  4801  13B4  02AE               	subwf	___llmod@dividend+2,f
  4802  13B5  082B               	movf	___llmod@divisor+3,w
  4803  13B6  1C03               	skipc
  4804  13B7  0F2B               	incfsz	___llmod@divisor+3,w
  4805  13B8  02AF               	subwf	___llmod@dividend+3,f
  4806  13B9                     l3091:
  4807  13B9  3001               	movlw	1
  4808  13BA                     u4425:
  4809  13BA  1003               	clrc
  4810  13BB  0CAB               	rrf	___llmod@divisor+3,f
  4811  13BC  0CAA               	rrf	___llmod@divisor+2,f
  4812  13BD  0CA9               	rrf	___llmod@divisor+1,f
  4813  13BE  0CA8               	rrf	___llmod@divisor,f
  4814  13BF  3EFF               	addlw	-1
  4815  13C0  1D03               	skipz
  4816  13C1  2BBA               	goto	u4425
  4817  13C2                     l3093:
  4818  13C2  3001               	movlw	1
  4819  13C3  02B0               	subwf	___llmod@counter,f
  4820  13C4  1D03               	btfss	3,2
  4821  13C5  2BC7               	goto	u4431
  4822  13C6  2BC8               	goto	u4430
  4823  13C7                     u4431:
  4824  13C7  2B99               	goto	l3087
  4825  13C8                     u4430:
  4826  13C8                     l3095:
  4827  13C8  082F               	movf	___llmod@dividend+3,w
  4828  13C9  00AB               	movwf	?___llmod+3
  4829  13CA  082E               	movf	___llmod@dividend+2,w
  4830  13CB  00AA               	movwf	?___llmod+2
  4831  13CC  082D               	movf	___llmod@dividend+1,w
  4832  13CD  00A9               	movwf	?___llmod+1
  4833  13CE  082C               	movf	___llmod@dividend,w
  4834  13CF  00A8               	movwf	?___llmod
  4835  13D0                     l524:
  4836  13D0  0008               	return
  4837  13D1                     __end_of___llmod:
  4838                           
  4839                           	psect	text13
  4840  082B                     __ptext13:	
  4841 ;; *************** function ___xxtofl *****************
  4842 ;; Defined at:
  4843 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;  sign            1    wreg     unsigned char 
  4846 ;;  val             4    3[COMMON] long 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  sign            1    4[BANK0 ] unsigned char 
  4849 ;;  arg             4    6[BANK0 ] unsigned long 
  4850 ;;  exp             1    5[BANK0 ] unsigned char 
  4851 ;; Return value:  Size  Location     Type
  4852 ;;                  4    3[COMMON] unsigned char 
  4853 ;; Registers used:
  4854 ;;		wreg, status,2, status,0
  4855 ;; Tracked objects:
  4856 ;;		On entry : 0/0
  4857 ;;		On exit  : 0/0
  4858 ;;		Unchanged: 0/0
  4859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4860 ;;      Params:         4       0       0       0       0
  4861 ;;      Locals:         0       6       0       0       0
  4862 ;;      Temps:          0       4       0       0       0
  4863 ;;      Totals:         4      10       0       0       0
  4864 ;;Total ram usage:       14 bytes
  4865 ;; Hardware stack levels used:    1
  4866 ;; Hardware stack levels required when called:    1
  4867 ;; This function calls:
  4868 ;;		Nothing
  4869 ;; This function is called by:
  4870 ;;		_readMPU
  4871 ;;		_ftoa
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           
  4876                           ;psect for function ___xxtofl
  4877  082B                     ___xxtofl:
  4878                           
  4879                           ;incstack = 0
  4880                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4881                           ;___xxtofl@sign stored from wreg
  4882  082B  1283               	bcf	3,5	;RP0=0, select bank0
  4883  082C  1303               	bcf	3,6	;RP1=0, select bank0
  4884  082D  00A4               	movwf	___xxtofl@sign
  4885  082E                     l3707:
  4886  082E  0824               	movf	___xxtofl@sign,w
  4887  082F  1903               	btfsc	3,2
  4888  0830  2832               	goto	u5831
  4889  0831  2833               	goto	u5830
  4890  0832                     u5831:
  4891  0832  2847               	goto	l3713
  4892  0833                     u5830:
  4893  0833                     l3709:
  4894  0833  1FF6               	btfss	___xxtofl@val+3,7
  4895  0834  2836               	goto	u5841
  4896  0835  2837               	goto	u5840
  4897  0836                     u5841:
  4898  0836  2847               	goto	l3713
  4899  0837                     u5840:
  4900  0837                     l3711:
  4901  0837  0973               	comf	___xxtofl@val,w
  4902  0838  00A6               	movwf	___xxtofl@arg
  4903  0839  0974               	comf	___xxtofl@val+1,w
  4904  083A  00A7               	movwf	___xxtofl@arg+1
  4905  083B  0975               	comf	___xxtofl@val+2,w
  4906  083C  00A8               	movwf	___xxtofl@arg+2
  4907  083D  0976               	comf	___xxtofl@val+3,w
  4908  083E  00A9               	movwf	___xxtofl@arg+3
  4909  083F  0AA6               	incf	___xxtofl@arg,f
  4910  0840  1903               	skipnz
  4911  0841  0AA7               	incf	___xxtofl@arg+1,f
  4912  0842  1903               	skipnz
  4913  0843  0AA8               	incf	___xxtofl@arg+2,f
  4914  0844  1903               	skipnz
  4915  0845  0AA9               	incf	___xxtofl@arg+3,f
  4916  0846  284F               	goto	l735
  4917  0847                     l3713:
  4918  0847  0876               	movf	___xxtofl@val+3,w
  4919  0848  00A9               	movwf	___xxtofl@arg+3
  4920  0849  0875               	movf	___xxtofl@val+2,w
  4921  084A  00A8               	movwf	___xxtofl@arg+2
  4922  084B  0874               	movf	___xxtofl@val+1,w
  4923  084C  00A7               	movwf	___xxtofl@arg+1
  4924  084D  0873               	movf	___xxtofl@val,w
  4925  084E  00A6               	movwf	___xxtofl@arg
  4926  084F                     l735:
  4927  084F  0876               	movf	___xxtofl@val+3,w
  4928  0850  0475               	iorwf	___xxtofl@val+2,w
  4929  0851  0474               	iorwf	___xxtofl@val+1,w
  4930  0852  0473               	iorwf	___xxtofl@val,w
  4931  0853  1D03               	skipz
  4932  0854  2856               	goto	u5851
  4933  0855  2857               	goto	u5850
  4934  0856                     u5851:
  4935  0856  2860               	goto	l3719
  4936  0857                     u5850:
  4937  0857                     l3715:
  4938  0857  3000               	movlw	0
  4939  0858  00F6               	movwf	?___xxtofl+3
  4940  0859  3000               	movlw	0
  4941  085A  00F5               	movwf	?___xxtofl+2
  4942  085B  3000               	movlw	0
  4943  085C  00F4               	movwf	?___xxtofl+1
  4944  085D  3000               	movlw	0
  4945  085E  00F3               	movwf	?___xxtofl
  4946  085F  28E6               	goto	l737
  4947  0860                     l3719:
  4948  0860  3096               	movlw	150
  4949  0861  00A0               	movwf	??___xxtofl
  4950  0862  0820               	movf	??___xxtofl,w
  4951  0863  00A5               	movwf	___xxtofl@exp
  4952  0864  2872               	goto	l3723
  4953  0865                     l3721:
  4954  0865  3001               	movlw	1
  4955  0866  00A0               	movwf	??___xxtofl
  4956  0867  0820               	movf	??___xxtofl,w
  4957  0868  07A5               	addwf	___xxtofl@exp,f
  4958  0869  3001               	movlw	1
  4959  086A                     u5865:
  4960  086A  1003               	clrc
  4961  086B  0CA9               	rrf	___xxtofl@arg+3,f
  4962  086C  0CA8               	rrf	___xxtofl@arg+2,f
  4963  086D  0CA7               	rrf	___xxtofl@arg+1,f
  4964  086E  0CA6               	rrf	___xxtofl@arg,f
  4965  086F  3EFF               	addlw	-1
  4966  0870  1D03               	skipz
  4967  0871  286A               	goto	u5865
  4968  0872                     l3723:
  4969  0872  30FE               	movlw	254
  4970  0873  0529               	andwf	___xxtofl@arg+3,w
  4971  0874  1D03               	btfss	3,2
  4972  0875  2877               	goto	u5871
  4973  0876  2878               	goto	u5870
  4974  0877                     u5871:
  4975  0877  2865               	goto	l3721
  4976  0878                     u5870:
  4977  0878  2894               	goto	l741
  4978  0879                     l3725:
  4979  0879  3001               	movlw	1
  4980  087A  00A0               	movwf	??___xxtofl
  4981  087B  0820               	movf	??___xxtofl,w
  4982  087C  07A5               	addwf	___xxtofl@exp,f
  4983  087D                     l3727:
  4984  087D  3001               	movlw	1
  4985  087E  07A6               	addwf	___xxtofl@arg,f
  4986  087F  3000               	movlw	0
  4987  0880  1803               	skipnc
  4988  0881  3001               	movlw	1
  4989  0882  07A7               	addwf	___xxtofl@arg+1,f
  4990  0883  3000               	movlw	0
  4991  0884  1803               	skipnc
  4992  0885  3001               	movlw	1
  4993  0886  07A8               	addwf	___xxtofl@arg+2,f
  4994  0887  3000               	movlw	0
  4995  0888  1803               	skipnc
  4996  0889  3001               	movlw	1
  4997  088A  07A9               	addwf	___xxtofl@arg+3,f
  4998  088B                     l3729:
  4999  088B  3001               	movlw	1
  5000  088C                     u5885:
  5001  088C  1003               	clrc
  5002  088D  0CA9               	rrf	___xxtofl@arg+3,f
  5003  088E  0CA8               	rrf	___xxtofl@arg+2,f
  5004  088F  0CA7               	rrf	___xxtofl@arg+1,f
  5005  0890  0CA6               	rrf	___xxtofl@arg,f
  5006  0891  3EFF               	addlw	-1
  5007  0892  1D03               	skipz
  5008  0893  288C               	goto	u5885
  5009  0894                     l741:
  5010  0894  30FF               	movlw	255
  5011  0895  0529               	andwf	___xxtofl@arg+3,w
  5012  0896  1D03               	btfss	3,2
  5013  0897  2899               	goto	u5891
  5014  0898  289A               	goto	u5890
  5015  0899                     u5891:
  5016  0899  2879               	goto	l3725
  5017  089A                     u5890:
  5018  089A  28A6               	goto	l3733
  5019  089B                     l3731:
  5020  089B  3001               	movlw	1
  5021  089C  02A5               	subwf	___xxtofl@exp,f
  5022  089D  3001               	movlw	1
  5023  089E  00A0               	movwf	??___xxtofl
  5024  089F                     u5905:
  5025  089F  1003               	clrc
  5026  08A0  0DA6               	rlf	___xxtofl@arg,f
  5027  08A1  0DA7               	rlf	___xxtofl@arg+1,f
  5028  08A2  0DA8               	rlf	___xxtofl@arg+2,f
  5029  08A3  0DA9               	rlf	___xxtofl@arg+3,f
  5030  08A4  0BA0               	decfsz	??___xxtofl,f
  5031  08A5  289F               	goto	u5905
  5032  08A6                     l3733:
  5033  08A6  1BA8               	btfsc	___xxtofl@arg+2,7
  5034  08A7  28A9               	goto	u5911
  5035  08A8  28AA               	goto	u5910
  5036  08A9                     u5911:
  5037  08A9  28B0               	goto	l748
  5038  08AA                     u5910:
  5039  08AA                     l3735:
  5040  08AA  3002               	movlw	2
  5041  08AB  0225               	subwf	___xxtofl@exp,w
  5042  08AC  1803               	skipnc
  5043  08AD  28AF               	goto	u5921
  5044  08AE  28B0               	goto	u5920
  5045  08AF                     u5921:
  5046  08AF  289B               	goto	l3731
  5047  08B0                     u5920:
  5048  08B0                     l748:
  5049  08B0  1825               	btfsc	___xxtofl@exp,0
  5050  08B1  28B3               	goto	u5931
  5051  08B2  28B4               	goto	u5930
  5052  08B3                     u5931:
  5053  08B3  28BC               	goto	l749
  5054  08B4                     u5930:
  5055  08B4                     l3737:
  5056  08B4  30FF               	movlw	255
  5057  08B5  05A6               	andwf	___xxtofl@arg,f
  5058  08B6  30FF               	movlw	255
  5059  08B7  05A7               	andwf	___xxtofl@arg+1,f
  5060  08B8  307F               	movlw	127
  5061  08B9  05A8               	andwf	___xxtofl@arg+2,f
  5062  08BA  30FF               	movlw	255
  5063  08BB  05A9               	andwf	___xxtofl@arg+3,f
  5064  08BC                     l749:
  5065  08BC  1003               	clrc
  5066  08BD  0CA5               	rrf	___xxtofl@exp,f
  5067  08BE                     l3739:
  5068  08BE  0825               	movf	___xxtofl@exp,w
  5069  08BF  00A0               	movwf	??___xxtofl
  5070  08C0  01A1               	clrf	??___xxtofl+1
  5071  08C1  01A2               	clrf	??___xxtofl+2
  5072  08C2  01A3               	clrf	??___xxtofl+3
  5073  08C3  3018               	movlw	24
  5074  08C4                     u5945:
  5075  08C4  1003               	clrc
  5076  08C5  0DA0               	rlf	??___xxtofl,f
  5077  08C6  0DA1               	rlf	??___xxtofl+1,f
  5078  08C7  0DA2               	rlf	??___xxtofl+2,f
  5079  08C8  0DA3               	rlf	??___xxtofl+3,f
  5080  08C9                     u5940:
  5081  08C9  3EFF               	addlw	-1
  5082  08CA  1D03               	skipz
  5083  08CB  28C4               	goto	u5945
  5084  08CC  0820               	movf	??___xxtofl,w
  5085  08CD  04A6               	iorwf	___xxtofl@arg,f
  5086  08CE  0821               	movf	??___xxtofl+1,w
  5087  08CF  04A7               	iorwf	___xxtofl@arg+1,f
  5088  08D0  0822               	movf	??___xxtofl+2,w
  5089  08D1  04A8               	iorwf	___xxtofl@arg+2,f
  5090  08D2  0823               	movf	??___xxtofl+3,w
  5091  08D3  04A9               	iorwf	___xxtofl@arg+3,f
  5092  08D4                     l3741:
  5093  08D4  0824               	movf	___xxtofl@sign,w
  5094  08D5  1903               	btfsc	3,2
  5095  08D6  28D8               	goto	u5951
  5096  08D7  28D9               	goto	u5950
  5097  08D8                     u5951:
  5098  08D8  28DE               	goto	l3747
  5099  08D9                     u5950:
  5100  08D9                     l3743:
  5101  08D9  1FF6               	btfss	___xxtofl@val+3,7
  5102  08DA  28DC               	goto	u5961
  5103  08DB  28DD               	goto	u5960
  5104  08DC                     u5961:
  5105  08DC  28DE               	goto	l3747
  5106  08DD                     u5960:
  5107  08DD                     l3745:
  5108  08DD  17A9               	bsf	___xxtofl@arg+3,7
  5109  08DE                     l3747:
  5110  08DE  0829               	movf	___xxtofl@arg+3,w
  5111  08DF  00F6               	movwf	?___xxtofl+3
  5112  08E0  0828               	movf	___xxtofl@arg+2,w
  5113  08E1  00F5               	movwf	?___xxtofl+2
  5114  08E2  0827               	movf	___xxtofl@arg+1,w
  5115  08E3  00F4               	movwf	?___xxtofl+1
  5116  08E4  0826               	movf	___xxtofl@arg,w
  5117  08E5  00F3               	movwf	?___xxtofl
  5118  08E6                     l737:
  5119  08E6  0008               	return
  5120  08E7                     __end_of___xxtofl:
  5121                           
  5122                           	psect	text14
  5123  1503                     __ptext14:	
  5124 ;; *************** function ___fltol *****************
  5125 ;; Defined at:
  5126 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;  f1              4   36[BANK0 ] unsigned char 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  exp1            1    8[COMMON] unsigned char 
  5131 ;;  sign1           1    7[COMMON] unsigned char 
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  4   36[BANK0 ] long 
  5134 ;; Registers used:
  5135 ;;		wreg, status,2, status,0
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5141 ;;      Params:         0       4       0       0       0
  5142 ;;      Locals:         2       0       0       0       0
  5143 ;;      Temps:          0       5       0       0       0
  5144 ;;      Totals:         2       9       0       0       0
  5145 ;;Total ram usage:       11 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; Hardware stack levels required when called:    1
  5148 ;; This function calls:
  5149 ;;		Nothing
  5150 ;; This function is called by:
  5151 ;;		_ftoa
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           
  5156                           ;psect for function ___fltol
  5157  1503                     ___fltol:
  5158  1503                     l3383:	
  5159                           ;incstack = 0
  5160                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5161                           
  5162  1503  1003               	clrc
  5163  1504  1283               	bcf	3,5	;RP0=0, select bank0
  5164  1505  1303               	bcf	3,6	;RP1=0, select bank0
  5165  1506  0D46               	rlf	___fltol@f1+2,w
  5166  1507  0D47               	rlf	___fltol@f1+3,w
  5167  1508  00C8               	movwf	??___fltol
  5168  1509  0848               	movf	??___fltol,w
  5169  150A  00F8               	movwf	___fltol@exp1
  5170  150B  0878               	movf	___fltol@exp1,w
  5171  150C  1D03               	btfss	3,2
  5172  150D  2D0F               	goto	u5071
  5173  150E  2D10               	goto	u5070
  5174  150F                     u5071:
  5175  150F  2D19               	goto	l3389
  5176  1510                     u5070:
  5177  1510                     l3385:
  5178  1510  3000               	movlw	0
  5179  1511  00C7               	movwf	?___fltol+3
  5180  1512  3000               	movlw	0
  5181  1513  00C6               	movwf	?___fltol+2
  5182  1514  3000               	movlw	0
  5183  1515  00C5               	movwf	?___fltol+1
  5184  1516  3000               	movlw	0
  5185  1517  00C4               	movwf	?___fltol
  5186  1518  2D7E               	goto	l488
  5187  1519                     l3389:
  5188  1519  0844               	movf	___fltol@f1,w
  5189  151A  00C8               	movwf	??___fltol
  5190  151B  0845               	movf	___fltol@f1+1,w
  5191  151C  00C9               	movwf	??___fltol+1
  5192  151D  0846               	movf	___fltol@f1+2,w
  5193  151E  00CA               	movwf	??___fltol+2
  5194  151F  0847               	movf	___fltol@f1+3,w
  5195  1520  00CB               	movwf	??___fltol+3
  5196  1521  301F               	movlw	31
  5197  1522                     u5085:
  5198  1522  1003               	clrc
  5199  1523  0CCB               	rrf	??___fltol+3,f
  5200  1524  0CCA               	rrf	??___fltol+2,f
  5201  1525  0CC9               	rrf	??___fltol+1,f
  5202  1526  0CC8               	rrf	??___fltol,f
  5203  1527                     u5080:
  5204  1527  3EFF               	addlw	-1
  5205  1528  1D03               	skipz
  5206  1529  2D22               	goto	u5085
  5207  152A  0848               	movf	??___fltol,w
  5208  152B  00CC               	movwf	??___fltol+4
  5209  152C  084C               	movf	??___fltol+4,w
  5210  152D  00F7               	movwf	___fltol@sign1
  5211  152E                     l3391:
  5212  152E  17C6               	bsf	___fltol@f1+2,7
  5213  152F                     l3393:
  5214  152F  30FF               	movlw	255
  5215  1530  05C4               	andwf	___fltol@f1,f
  5216  1531  30FF               	movlw	255
  5217  1532  05C5               	andwf	___fltol@f1+1,f
  5218  1533  30FF               	movlw	255
  5219  1534  05C6               	andwf	___fltol@f1+2,f
  5220  1535  3000               	movlw	0
  5221  1536  05C7               	andwf	___fltol@f1+3,f
  5222  1537                     l3395:
  5223  1537  3096               	movlw	150
  5224  1538  02F8               	subwf	___fltol@exp1,f
  5225  1539                     l3397:
  5226  1539  1FF8               	btfss	___fltol@exp1,7
  5227  153A  2D3C               	goto	u5091
  5228  153B  2D3D               	goto	u5090
  5229  153C                     u5091:
  5230  153C  2D57               	goto	l3407
  5231  153D                     u5090:
  5232  153D                     l3399:
  5233  153D  0878               	movf	___fltol@exp1,w
  5234  153E  3A80               	xorlw	128
  5235  153F  3E97               	addlw	151
  5236  1540  1803               	skipnc
  5237  1541  2D43               	goto	u5101
  5238  1542  2D44               	goto	u5100
  5239  1543                     u5101:
  5240  1543  2D45               	goto	l3405
  5241  1544                     u5100:
  5242  1544  2D10               	goto	l3385
  5243  1545                     l3405:
  5244  1545  3001               	movlw	1
  5245  1546                     u5115:
  5246  1546  1003               	clrc
  5247  1547  0CC7               	rrf	___fltol@f1+3,f
  5248  1548  0CC6               	rrf	___fltol@f1+2,f
  5249  1549  0CC5               	rrf	___fltol@f1+1,f
  5250  154A  0CC4               	rrf	___fltol@f1,f
  5251  154B  3EFF               	addlw	-1
  5252  154C  1D03               	skipz
  5253  154D  2D46               	goto	u5115
  5254  154E  3001               	movlw	1
  5255  154F  00C8               	movwf	??___fltol
  5256  1550  0848               	movf	??___fltol,w
  5257  1551  07F8               	addwf	___fltol@exp1,f
  5258  1552  1D03               	btfss	3,2
  5259  1553  2D55               	goto	u5121
  5260  1554  2D56               	goto	u5120
  5261  1555                     u5121:
  5262  1555  2D45               	goto	l3405
  5263  1556                     u5120:
  5264  1556  2D6E               	goto	l3415
  5265  1557                     l3407:
  5266  1557  3020               	movlw	32
  5267  1558  0278               	subwf	___fltol@exp1,w
  5268  1559  1C03               	skipc
  5269  155A  2D5C               	goto	u5131
  5270  155B  2D5D               	goto	u5130
  5271  155C                     u5131:
  5272  155C  2D69               	goto	l495
  5273  155D                     u5130:
  5274  155D  2D10               	goto	l3385
  5275  155E                     l3413:
  5276  155E  3001               	movlw	1
  5277  155F  00C8               	movwf	??___fltol
  5278  1560                     u5145:
  5279  1560  1003               	clrc
  5280  1561  0DC4               	rlf	___fltol@f1,f
  5281  1562  0DC5               	rlf	___fltol@f1+1,f
  5282  1563  0DC6               	rlf	___fltol@f1+2,f
  5283  1564  0DC7               	rlf	___fltol@f1+3,f
  5284  1565  0BC8               	decfsz	??___fltol,f
  5285  1566  2D60               	goto	u5145
  5286  1567  3001               	movlw	1
  5287  1568  02F8               	subwf	___fltol@exp1,f
  5288  1569                     l495:
  5289  1569  0878               	movf	___fltol@exp1,w
  5290  156A  1D03               	btfss	3,2
  5291  156B  2D6D               	goto	u5151
  5292  156C  2D6E               	goto	u5150
  5293  156D                     u5151:
  5294  156D  2D5E               	goto	l3413
  5295  156E                     u5150:
  5296  156E                     l3415:
  5297  156E  0877               	movf	___fltol@sign1,w
  5298  156F  1903               	btfsc	3,2
  5299  1570  2D72               	goto	u5161
  5300  1571  2D73               	goto	u5160
  5301  1572                     u5161:
  5302  1572  2D7E               	goto	l498
  5303  1573                     u5160:
  5304  1573                     l3417:
  5305  1573  09C4               	comf	___fltol@f1,f
  5306  1574  09C5               	comf	___fltol@f1+1,f
  5307  1575  09C6               	comf	___fltol@f1+2,f
  5308  1576  09C7               	comf	___fltol@f1+3,f
  5309  1577  0AC4               	incf	___fltol@f1,f
  5310  1578  1903               	skipnz
  5311  1579  0AC5               	incf	___fltol@f1+1,f
  5312  157A  1903               	skipnz
  5313  157B  0AC6               	incf	___fltol@f1+2,f
  5314  157C  1903               	skipnz
  5315  157D  0AC7               	incf	___fltol@f1+3,f
  5316  157E                     l498:
  5317  157E                     l488:
  5318  157E  0008               	return
  5319  157F                     __end_of___fltol:
  5320                           
  5321                           	psect	text15
  5322  1306                     __ptext15:	
  5323 ;; *************** function ___flsub *****************
  5324 ;; Defined at:
  5325 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;  a               4   56[BANK0 ] long 
  5328 ;;  b               4   60[BANK0 ] long 
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;		None
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  4   56[BANK0 ] long 
  5333 ;; Registers used:
  5334 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5340 ;;      Params:         0       8       0       0       0
  5341 ;;      Locals:         0       0       0       0       0
  5342 ;;      Temps:          0       0       0       0       0
  5343 ;;      Totals:         0       8       0       0       0
  5344 ;;Total ram usage:        8 bytes
  5345 ;; Hardware stack levels used:    1
  5346 ;; Hardware stack levels required when called:    2
  5347 ;; This function calls:
  5348 ;;		___fladd
  5349 ;; This function is called by:
  5350 ;;		_ftoa
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353                           
  5354                           
  5355                           ;psect for function ___flsub
  5356  1306                     ___flsub:
  5357  1306                     l3419:	
  5358                           ;incstack = 0
  5359                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5360                           
  5361  1306  3080               	movlw	128
  5362  1307  1283               	bcf	3,5	;RP0=0, select bank0
  5363  1308  1303               	bcf	3,6	;RP1=0, select bank0
  5364  1309  06DB               	xorwf	___flsub@a+3,f
  5365  130A                     l3421:
  5366  130A  085F               	movf	___flsub@b+3,w
  5367  130B  00C7               	movwf	___fladd@b+3
  5368  130C  085E               	movf	___flsub@b+2,w
  5369  130D  00C6               	movwf	___fladd@b+2
  5370  130E  085D               	movf	___flsub@b+1,w
  5371  130F  00C5               	movwf	___fladd@b+1
  5372  1310  085C               	movf	___flsub@b,w
  5373  1311  00C4               	movwf	___fladd@b
  5374  1312  085B               	movf	___flsub@a+3,w
  5375  1313  00CB               	movwf	___fladd@a+3
  5376  1314  085A               	movf	___flsub@a+2,w
  5377  1315  00CA               	movwf	___fladd@a+2
  5378  1316  0859               	movf	___flsub@a+1,w
  5379  1317  00C9               	movwf	___fladd@a+1
  5380  1318  0858               	movf	___flsub@a,w
  5381  1319  00C8               	movwf	___fladd@a
  5382  131A  120A  158A  2578  160A  118A  	fcall	___fladd
  5383  131F  1283               	bcf	3,5	;RP0=0, select bank0
  5384  1320  1303               	bcf	3,6	;RP1=0, select bank0
  5385  1321  0847               	movf	?___fladd+3,w
  5386  1322  00DB               	movwf	?___flsub+3
  5387  1323  0846               	movf	?___fladd+2,w
  5388  1324  00DA               	movwf	?___flsub+2
  5389  1325  0845               	movf	?___fladd+1,w
  5390  1326  00D9               	movwf	?___flsub+1
  5391  1327  0844               	movf	?___fladd,w
  5392  1328  00D8               	movwf	?___flsub
  5393  1329                     l641:
  5394  1329  0008               	return
  5395  132A                     __end_of___flsub:
  5396                           
  5397                           	psect	text16
  5398  0D78                     __ptext16:	
  5399 ;; *************** function ___fladd *****************
  5400 ;; Defined at:
  5401 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;  b               4   36[BANK0 ] long 
  5404 ;;  a               4   40[BANK0 ] long 
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;  grs             1   55[BANK0 ] unsigned char 
  5407 ;;  bexp            1   54[BANK0 ] unsigned char 
  5408 ;;  aexp            1   53[BANK0 ] unsigned char 
  5409 ;;  signs           1   52[BANK0 ] unsigned char 
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  4   36[BANK0 ] unsigned char 
  5412 ;; Registers used:
  5413 ;;		wreg, status,2, status,0, btemp+1
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5419 ;;      Params:         0       8       0       0       0
  5420 ;;      Locals:         0       4       0       0       0
  5421 ;;      Temps:          0       8       0       0       0
  5422 ;;      Totals:         0      20       0       0       0
  5423 ;;Total ram usage:       20 bytes
  5424 ;; Hardware stack levels used:    1
  5425 ;; Hardware stack levels required when called:    1
  5426 ;; This function calls:
  5427 ;;		Nothing
  5428 ;; This function is called by:
  5429 ;;		_readMPU
  5430 ;;		___flsub
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434                           
  5435                           ;psect for function ___fladd
  5436  0D78                     ___fladd:
  5437  0D78                     l3099:	
  5438                           ;incstack = 0
  5439                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5440                           
  5441  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  5442  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  5443  0D7A  0847               	movf	___fladd@b+3,w
  5444  0D7B  3980               	andlw	128
  5445  0D7C  00CC               	movwf	??___fladd
  5446  0D7D  084C               	movf	??___fladd,w
  5447  0D7E  00D4               	movwf	___fladd@signs
  5448  0D7F                     l3101:
  5449  0D7F  0847               	movf	___fladd@b+3,w
  5450  0D80  00CC               	movwf	??___fladd
  5451  0D81  074C               	addwf	??___fladd,w
  5452  0D82  00CD               	movwf	??___fladd+1
  5453  0D83  084D               	movf	??___fladd+1,w
  5454  0D84  00D6               	movwf	___fladd@bexp
  5455  0D85                     l3103:
  5456  0D85  1FC6               	btfss	___fladd@b+2,7
  5457  0D86  2D88               	goto	u4441
  5458  0D87  2D89               	goto	u4440
  5459  0D88                     u4441:
  5460  0D88  2D8A               	goto	l3107
  5461  0D89                     u4440:
  5462  0D89                     l3105:
  5463  0D89  1456               	bsf	___fladd@bexp,0
  5464  0D8A                     l3107:
  5465  0D8A  0856               	movf	___fladd@bexp,w
  5466  0D8B  1903               	btfsc	3,2
  5467  0D8C  2D8E               	goto	u4451
  5468  0D8D  2D8F               	goto	u4450
  5469  0D8E                     u4451:
  5470  0D8E  2D9F               	goto	l3117
  5471  0D8F                     u4450:
  5472  0D8F                     l3109:
  5473  0D8F  0A56               	incf	___fladd@bexp,w
  5474  0D90  1D03               	btfss	3,2
  5475  0D91  2D93               	goto	u4461
  5476  0D92  2D94               	goto	u4460
  5477  0D93                     u4461:
  5478  0D93  2D9C               	goto	l3113
  5479  0D94                     u4460:
  5480  0D94                     l3111:
  5481  0D94  3000               	movlw	0
  5482  0D95  00C7               	movwf	___fladd@b+3
  5483  0D96  3000               	movlw	0
  5484  0D97  00C6               	movwf	___fladd@b+2
  5485  0D98  3000               	movlw	0
  5486  0D99  00C5               	movwf	___fladd@b+1
  5487  0D9A  3000               	movlw	0
  5488  0D9B  00C4               	movwf	___fladd@b
  5489  0D9C                     l3113:
  5490  0D9C  17C6               	bsf	___fladd@b+2,7
  5491  0D9D                     l3115:
  5492  0D9D  01C7               	clrf	___fladd@b+3
  5493  0D9E  2DA7               	goto	l3119
  5494  0D9F                     l3117:
  5495  0D9F  3000               	movlw	0
  5496  0DA0  00C7               	movwf	___fladd@b+3
  5497  0DA1  3000               	movlw	0
  5498  0DA2  00C6               	movwf	___fladd@b+2
  5499  0DA3  3000               	movlw	0
  5500  0DA4  00C5               	movwf	___fladd@b+1
  5501  0DA5  3000               	movlw	0
  5502  0DA6  00C4               	movwf	___fladd@b
  5503  0DA7                     l3119:
  5504  0DA7  084B               	movf	___fladd@a+3,w
  5505  0DA8  3980               	andlw	128
  5506  0DA9  00CC               	movwf	??___fladd
  5507  0DAA  084C               	movf	??___fladd,w
  5508  0DAB  00D5               	movwf	___fladd@aexp
  5509  0DAC                     l3121:
  5510  0DAC  0855               	movf	___fladd@aexp,w
  5511  0DAD  0654               	xorwf	___fladd@signs,w
  5512  0DAE  1903               	skipnz
  5513  0DAF  2DB1               	goto	u4471
  5514  0DB0  2DB2               	goto	u4470
  5515  0DB1                     u4471:
  5516  0DB1  2DB3               	goto	l3125
  5517  0DB2                     u4470:
  5518  0DB2                     l3123:
  5519  0DB2  1754               	bsf	___fladd@signs,6
  5520  0DB3                     l3125:
  5521  0DB3  084B               	movf	___fladd@a+3,w
  5522  0DB4  00CC               	movwf	??___fladd
  5523  0DB5  074C               	addwf	??___fladd,w
  5524  0DB6  00CD               	movwf	??___fladd+1
  5525  0DB7  084D               	movf	??___fladd+1,w
  5526  0DB8  00D5               	movwf	___fladd@aexp
  5527  0DB9                     l3127:
  5528  0DB9  1FCA               	btfss	___fladd@a+2,7
  5529  0DBA  2DBC               	goto	u4481
  5530  0DBB  2DBD               	goto	u4480
  5531  0DBC                     u4481:
  5532  0DBC  2DBE               	goto	l3131
  5533  0DBD                     u4480:
  5534  0DBD                     l3129:
  5535  0DBD  1455               	bsf	___fladd@aexp,0
  5536  0DBE                     l3131:
  5537  0DBE  0855               	movf	___fladd@aexp,w
  5538  0DBF  1903               	btfsc	3,2
  5539  0DC0  2DC2               	goto	u4491
  5540  0DC1  2DC3               	goto	u4490
  5541  0DC2                     u4491:
  5542  0DC2  2DD3               	goto	l3141
  5543  0DC3                     u4490:
  5544  0DC3                     l3133:
  5545  0DC3  0A55               	incf	___fladd@aexp,w
  5546  0DC4  1D03               	btfss	3,2
  5547  0DC5  2DC7               	goto	u4501
  5548  0DC6  2DC8               	goto	u4500
  5549  0DC7                     u4501:
  5550  0DC7  2DD0               	goto	l3137
  5551  0DC8                     u4500:
  5552  0DC8                     l3135:
  5553  0DC8  3000               	movlw	0
  5554  0DC9  00CB               	movwf	___fladd@a+3
  5555  0DCA  3000               	movlw	0
  5556  0DCB  00CA               	movwf	___fladd@a+2
  5557  0DCC  3000               	movlw	0
  5558  0DCD  00C9               	movwf	___fladd@a+1
  5559  0DCE  3000               	movlw	0
  5560  0DCF  00C8               	movwf	___fladd@a
  5561  0DD0                     l3137:
  5562  0DD0  17CA               	bsf	___fladd@a+2,7
  5563  0DD1                     l3139:
  5564  0DD1  01CB               	clrf	___fladd@a+3
  5565  0DD2  2DDB               	goto	l595
  5566  0DD3                     l3141:
  5567  0DD3  3000               	movlw	0
  5568  0DD4  00CB               	movwf	___fladd@a+3
  5569  0DD5  3000               	movlw	0
  5570  0DD6  00CA               	movwf	___fladd@a+2
  5571  0DD7  3000               	movlw	0
  5572  0DD8  00C9               	movwf	___fladd@a+1
  5573  0DD9  3000               	movlw	0
  5574  0DDA  00C8               	movwf	___fladd@a
  5575  0DDB                     l595:
  5576  0DDB  0856               	movf	___fladd@bexp,w
  5577  0DDC  0255               	subwf	___fladd@aexp,w
  5578  0DDD  1803               	skipnc
  5579  0DDE  2DE0               	goto	u4511
  5580  0DDF  2DE1               	goto	u4510
  5581  0DE0                     u4511:
  5582  0DE0  2E25               	goto	l3177
  5583  0DE1                     u4510:
  5584  0DE1                     l3143:
  5585  0DE1  1F54               	btfss	___fladd@signs,6
  5586  0DE2  2DE4               	goto	u4521
  5587  0DE3  2DE5               	goto	u4520
  5588  0DE4                     u4521:
  5589  0DE4  2DE9               	goto	l3147
  5590  0DE5                     u4520:
  5591  0DE5                     l3145:
  5592  0DE5  3080               	movlw	128
  5593  0DE6  00CC               	movwf	??___fladd
  5594  0DE7  084C               	movf	??___fladd,w
  5595  0DE8  06D4               	xorwf	___fladd@signs,f
  5596  0DE9                     l3147:
  5597  0DE9  0856               	movf	___fladd@bexp,w
  5598  0DEA  00CC               	movwf	??___fladd
  5599  0DEB  084C               	movf	??___fladd,w
  5600  0DEC  00D7               	movwf	___fladd@grs
  5601  0DED                     l3149:
  5602  0DED  0855               	movf	___fladd@aexp,w
  5603  0DEE  00CC               	movwf	??___fladd
  5604  0DEF  084C               	movf	??___fladd,w
  5605  0DF0  00D6               	movwf	___fladd@bexp
  5606  0DF1                     l3151:
  5607  0DF1  0857               	movf	___fladd@grs,w
  5608  0DF2  00CC               	movwf	??___fladd
  5609  0DF3  084C               	movf	??___fladd,w
  5610  0DF4  00D5               	movwf	___fladd@aexp
  5611  0DF5                     l3153:
  5612  0DF5  0844               	movf	___fladd@b,w
  5613  0DF6  00CC               	movwf	??___fladd
  5614  0DF7  084C               	movf	??___fladd,w
  5615  0DF8  00D7               	movwf	___fladd@grs
  5616  0DF9                     l3155:
  5617  0DF9  0848               	movf	___fladd@a,w
  5618  0DFA  00CC               	movwf	??___fladd
  5619  0DFB  084C               	movf	??___fladd,w
  5620  0DFC  00C4               	movwf	___fladd@b
  5621  0DFD                     l3157:
  5622  0DFD  0857               	movf	___fladd@grs,w
  5623  0DFE  00CC               	movwf	??___fladd
  5624  0DFF  084C               	movf	??___fladd,w
  5625  0E00  00C8               	movwf	___fladd@a
  5626  0E01                     l3159:
  5627  0E01  0845               	movf	___fladd@b+1,w
  5628  0E02  00CC               	movwf	??___fladd
  5629  0E03  084C               	movf	??___fladd,w
  5630  0E04  00D7               	movwf	___fladd@grs
  5631  0E05                     l3161:
  5632  0E05  0849               	movf	___fladd@a+1,w
  5633  0E06  00CC               	movwf	??___fladd
  5634  0E07  084C               	movf	??___fladd,w
  5635  0E08  00C5               	movwf	___fladd@b+1
  5636  0E09                     l3163:
  5637  0E09  0857               	movf	___fladd@grs,w
  5638  0E0A  00CC               	movwf	??___fladd
  5639  0E0B  084C               	movf	??___fladd,w
  5640  0E0C  00C9               	movwf	___fladd@a+1
  5641  0E0D                     l3165:
  5642  0E0D  0846               	movf	___fladd@b+2,w
  5643  0E0E  00CC               	movwf	??___fladd
  5644  0E0F  084C               	movf	??___fladd,w
  5645  0E10  00D7               	movwf	___fladd@grs
  5646  0E11                     l3167:
  5647  0E11  084A               	movf	___fladd@a+2,w
  5648  0E12  00CC               	movwf	??___fladd
  5649  0E13  084C               	movf	??___fladd,w
  5650  0E14  00C6               	movwf	___fladd@b+2
  5651  0E15                     l3169:
  5652  0E15  0857               	movf	___fladd@grs,w
  5653  0E16  00CC               	movwf	??___fladd
  5654  0E17  084C               	movf	??___fladd,w
  5655  0E18  00CA               	movwf	___fladd@a+2
  5656  0E19                     l3171:
  5657  0E19  0847               	movf	___fladd@b+3,w
  5658  0E1A  00CC               	movwf	??___fladd
  5659  0E1B  084C               	movf	??___fladd,w
  5660  0E1C  00D7               	movwf	___fladd@grs
  5661  0E1D                     l3173:
  5662  0E1D  084B               	movf	___fladd@a+3,w
  5663  0E1E  00CC               	movwf	??___fladd
  5664  0E1F  084C               	movf	??___fladd,w
  5665  0E20  00C7               	movwf	___fladd@b+3
  5666  0E21                     l3175:
  5667  0E21  0857               	movf	___fladd@grs,w
  5668  0E22  00CC               	movwf	??___fladd
  5669  0E23  084C               	movf	??___fladd,w
  5670  0E24  00CB               	movwf	___fladd@a+3
  5671  0E25                     l3177:
  5672  0E25  01D7               	clrf	___fladd@grs
  5673  0E26                     l3179:
  5674  0E26  0855               	movf	___fladd@aexp,w
  5675  0E27  00CC               	movwf	??___fladd
  5676  0E28  01CD               	clrf	??___fladd+1
  5677  0E29  084D               	movf	??___fladd+1,w
  5678  0E2A  00CF               	movwf	??___fladd+3
  5679  0E2B  0856               	movf	___fladd@bexp,w
  5680  0E2C  024C               	subwf	??___fladd,w
  5681  0E2D  00CE               	movwf	??___fladd+2
  5682  0E2E  1C03               	skipc
  5683  0E2F  03CF               	decf	??___fladd+3,f
  5684  0E30  084F               	movf	??___fladd+3,w
  5685  0E31  3A80               	xorlw	128
  5686  0E32  00FF               	movwf	btemp+1
  5687  0E33  3080               	movlw	128
  5688  0E34  027F               	subwf	btemp+1,w
  5689  0E35  1D03               	skipz
  5690  0E36  2E39               	goto	u4535
  5691  0E37  301A               	movlw	26
  5692  0E38  024E               	subwf	??___fladd+2,w
  5693  0E39                     u4535:
  5694  0E39  1C03               	skipc
  5695  0E3A  2E3C               	goto	u4531
  5696  0E3B  2E3D               	goto	u4530
  5697  0E3C                     u4531:
  5698  0E3C  2E7A               	goto	l3195
  5699  0E3D                     u4530:
  5700  0E3D                     l3181:
  5701  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5702  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5703  0E3F  0847               	movf	___fladd@b+3,w
  5704  0E40  0446               	iorwf	___fladd@b+2,w
  5705  0E41  0445               	iorwf	___fladd@b+1,w
  5706  0E42  0444               	iorwf	___fladd@b,w
  5707  0E43  1D03               	skipz
  5708  0E44  2E46               	goto	u4541
  5709  0E45  2E48               	goto	u4540
  5710  0E46                     u4541:
  5711  0E46  3001               	movlw	1
  5712  0E47  2E49               	goto	u4550
  5713  0E48                     u4540:
  5714  0E48  3000               	movlw	0
  5715  0E49                     u4550:
  5716  0E49  00CC               	movwf	??___fladd
  5717  0E4A  084C               	movf	??___fladd,w
  5718  0E4B  00D7               	movwf	___fladd@grs
  5719  0E4C  3000               	movlw	0
  5720  0E4D  00C7               	movwf	___fladd@b+3
  5721  0E4E  3000               	movlw	0
  5722  0E4F  00C6               	movwf	___fladd@b+2
  5723  0E50  3000               	movlw	0
  5724  0E51  00C5               	movwf	___fladd@b+1
  5725  0E52  3000               	movlw	0
  5726  0E53  00C4               	movwf	___fladd@b
  5727  0E54  0855               	movf	___fladd@aexp,w
  5728  0E55  00CC               	movwf	??___fladd
  5729  0E56  084C               	movf	??___fladd,w
  5730  0E57  00D6               	movwf	___fladd@bexp
  5731  0E58  2E82               	goto	l599
  5732  0E59                     l601:
  5733  0E59  1C57               	btfss	___fladd@grs,0
  5734  0E5A  2E5C               	goto	u4561
  5735  0E5B  2E5D               	goto	u4560
  5736  0E5C                     u4561:
  5737  0E5C  2E66               	goto	l3185
  5738  0E5D                     u4560:
  5739  0E5D                     l3183:
  5740  0E5D  0857               	movf	___fladd@grs,w
  5741  0E5E  00CC               	movwf	??___fladd
  5742  0E5F  1003               	clrc
  5743  0E60  0C4C               	rrf	??___fladd,w
  5744  0E61  3801               	iorlw	1
  5745  0E62  00CD               	movwf	??___fladd+1
  5746  0E63  084D               	movf	??___fladd+1,w
  5747  0E64  00D7               	movwf	___fladd@grs
  5748  0E65  2E68               	goto	l3187
  5749  0E66                     l3185:
  5750  0E66  1003               	clrc
  5751  0E67  0CD7               	rrf	___fladd@grs,f
  5752  0E68                     l3187:
  5753  0E68  1C44               	btfss	___fladd@b,0
  5754  0E69  2E6B               	goto	u4571
  5755  0E6A  2E6C               	goto	u4570
  5756  0E6B                     u4571:
  5757  0E6B  2E6D               	goto	l3191
  5758  0E6C                     u4570:
  5759  0E6C                     l3189:
  5760  0E6C  17D7               	bsf	___fladd@grs,7
  5761  0E6D                     l3191:
  5762  0E6D  3001               	movlw	1
  5763  0E6E  00CC               	movwf	??___fladd
  5764  0E6F                     u4585:
  5765  0E6F  0D47               	rlf	___fladd@b+3,w
  5766  0E70  0CC7               	rrf	___fladd@b+3,f
  5767  0E71  0CC6               	rrf	___fladd@b+2,f
  5768  0E72  0CC5               	rrf	___fladd@b+1,f
  5769  0E73  0CC4               	rrf	___fladd@b,f
  5770  0E74  0BCC               	decfsz	??___fladd& (0+127),f
  5771  0E75  2E6F               	goto	u4585
  5772  0E76                     l3193:
  5773  0E76  3001               	movlw	1
  5774  0E77  00CC               	movwf	??___fladd
  5775  0E78  084C               	movf	??___fladd,w
  5776  0E79  07D6               	addwf	___fladd@bexp,f
  5777  0E7A                     l3195:
  5778  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  5779  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  5780  0E7C  0855               	movf	___fladd@aexp,w
  5781  0E7D  0256               	subwf	___fladd@bexp,w
  5782  0E7E  1C03               	skipc
  5783  0E7F  2E81               	goto	u4591
  5784  0E80  2E82               	goto	u4590
  5785  0E81                     u4591:
  5786  0E81  2E59               	goto	l601
  5787  0E82                     u4590:
  5788  0E82                     l599:
  5789  0E82  1B54               	btfsc	___fladd@signs,6
  5790  0E83  2E85               	goto	u4601
  5791  0E84  2E86               	goto	u4600
  5792  0E85                     u4601:
  5793  0E85  2ED1               	goto	l3221
  5794  0E86                     u4600:
  5795  0E86                     l3197:
  5796  0E86  0856               	movf	___fladd@bexp,w
  5797  0E87  1D03               	btfss	3,2
  5798  0E88  2E8A               	goto	u4611
  5799  0E89  2E8B               	goto	u4610
  5800  0E8A                     u4611:
  5801  0E8A  2E94               	goto	l3203
  5802  0E8B                     u4610:
  5803  0E8B                     l3199:
  5804  0E8B  3000               	movlw	0
  5805  0E8C  00C7               	movwf	?___fladd+3
  5806  0E8D  3000               	movlw	0
  5807  0E8E  00C6               	movwf	?___fladd+2
  5808  0E8F  3000               	movlw	0
  5809  0E90  00C5               	movwf	?___fladd+1
  5810  0E91  3000               	movlw	0
  5811  0E92  00C4               	movwf	?___fladd
  5812  0E93  2FFF               	goto	l608
  5813  0E94                     l3203:
  5814  0E94  0848               	movf	___fladd@a,w
  5815  0E95  07C4               	addwf	___fladd@b,f
  5816  0E96  0849               	movf	___fladd@a+1,w
  5817  0E97  1103               	clrz
  5818  0E98  1803               	skipnc
  5819  0E99  3E01               	addlw	1
  5820  0E9A  1903               	skipnz
  5821  0E9B  2E9D               	goto	u4621
  5822  0E9C  07C5               	addwf	___fladd@b+1,f
  5823  0E9D                     u4621:
  5824  0E9D  084A               	movf	___fladd@a+2,w
  5825  0E9E  1103               	clrz
  5826  0E9F  1803               	skipnc
  5827  0EA0  3E01               	addlw	1
  5828  0EA1  1903               	skipnz
  5829  0EA2  2EA4               	goto	u4622
  5830  0EA3  07C6               	addwf	___fladd@b+2,f
  5831  0EA4                     u4622:
  5832  0EA4  084B               	movf	___fladd@a+3,w
  5833  0EA5  1103               	clrz
  5834  0EA6  1803               	skipnc
  5835  0EA7  3E01               	addlw	1
  5836  0EA8  1903               	skipnz
  5837  0EA9  2EAB               	goto	u4623
  5838  0EAA  07C7               	addwf	___fladd@b+3,f
  5839  0EAB                     u4623:
  5840  0EAB                     l3205:
  5841  0EAB  1C47               	btfss	___fladd@b+3,0
  5842  0EAC  2EAE               	goto	u4631
  5843  0EAD  2EAF               	goto	u4630
  5844  0EAE                     u4631:
  5845  0EAE  2F85               	goto	l3255
  5846  0EAF                     u4630:
  5847  0EAF                     l3207:
  5848  0EAF  1C57               	btfss	___fladd@grs,0
  5849  0EB0  2EB2               	goto	u4641
  5850  0EB1  2EB3               	goto	u4640
  5851  0EB2                     u4641:
  5852  0EB2  2EBC               	goto	l3211
  5853  0EB3                     u4640:
  5854  0EB3                     l3209:
  5855  0EB3  0857               	movf	___fladd@grs,w
  5856  0EB4  00CC               	movwf	??___fladd
  5857  0EB5  1003               	clrc
  5858  0EB6  0C4C               	rrf	??___fladd,w
  5859  0EB7  3801               	iorlw	1
  5860  0EB8  00CD               	movwf	??___fladd+1
  5861  0EB9  084D               	movf	??___fladd+1,w
  5862  0EBA  00D7               	movwf	___fladd@grs
  5863  0EBB  2EBE               	goto	l3213
  5864  0EBC                     l3211:
  5865  0EBC  1003               	clrc
  5866  0EBD  0CD7               	rrf	___fladd@grs,f
  5867  0EBE                     l3213:
  5868  0EBE  1C44               	btfss	___fladd@b,0
  5869  0EBF  2EC1               	goto	u4651
  5870  0EC0  2EC2               	goto	u4650
  5871  0EC1                     u4651:
  5872  0EC1  2EC3               	goto	l3217
  5873  0EC2                     u4650:
  5874  0EC2                     l3215:
  5875  0EC2  17D7               	bsf	___fladd@grs,7
  5876  0EC3                     l3217:
  5877  0EC3  3001               	movlw	1
  5878  0EC4  00CC               	movwf	??___fladd
  5879  0EC5                     u4665:
  5880  0EC5  0D47               	rlf	___fladd@b+3,w
  5881  0EC6  0CC7               	rrf	___fladd@b+3,f
  5882  0EC7  0CC6               	rrf	___fladd@b+2,f
  5883  0EC8  0CC5               	rrf	___fladd@b+1,f
  5884  0EC9  0CC4               	rrf	___fladd@b,f
  5885  0ECA  0BCC               	decfsz	??___fladd& (0+127),f
  5886  0ECB  2EC5               	goto	u4665
  5887  0ECC                     l3219:
  5888  0ECC  3001               	movlw	1
  5889  0ECD  00CC               	movwf	??___fladd
  5890  0ECE  084C               	movf	??___fladd,w
  5891  0ECF  07D6               	addwf	___fladd@bexp,f
  5892  0ED0  2F85               	goto	l3255
  5893  0ED1                     l3221:
  5894  0ED1  0847               	movf	___fladd@b+3,w
  5895  0ED2  3A80               	xorlw	128
  5896  0ED3  00FF               	movwf	btemp+1
  5897  0ED4  084B               	movf	___fladd@a+3,w
  5898  0ED5  3A80               	xorlw	128
  5899  0ED6  027F               	subwf	btemp+1,w
  5900  0ED7  1D03               	skipz
  5901  0ED8  2EE3               	goto	u4673
  5902  0ED9  084A               	movf	___fladd@a+2,w
  5903  0EDA  0246               	subwf	___fladd@b+2,w
  5904  0EDB  1D03               	skipz
  5905  0EDC  2EE3               	goto	u4673
  5906  0EDD  0849               	movf	___fladd@a+1,w
  5907  0EDE  0245               	subwf	___fladd@b+1,w
  5908  0EDF  1D03               	skipz
  5909  0EE0  2EE3               	goto	u4673
  5910  0EE1  0848               	movf	___fladd@a,w
  5911  0EE2  0244               	subwf	___fladd@b,w
  5912  0EE3                     u4673:
  5913  0EE3  1803               	skipnc
  5914  0EE4  2EE6               	goto	u4671
  5915  0EE5  2EE7               	goto	u4670
  5916  0EE6                     u4671:
  5917  0EE6  2F3F               	goto	l3231
  5918  0EE7                     u4670:
  5919  0EE7                     l3223:
  5920  0EE7  30FF               	movlw	255
  5921  0EE8  00CC               	movwf	??___fladd
  5922  0EE9  30FF               	movlw	255
  5923  0EEA  00CD               	movwf	??___fladd+1
  5924  0EEB  30FF               	movlw	255
  5925  0EEC  00CE               	movwf	??___fladd+2
  5926  0EED  30FF               	movlw	255
  5927  0EEE  00CF               	movwf	??___fladd+3
  5928  0EEF  0848               	movf	___fladd@a,w
  5929  0EF0  00D0               	movwf	??___fladd+4
  5930  0EF1  0849               	movf	___fladd@a+1,w
  5931  0EF2  00D1               	movwf	??___fladd+5
  5932  0EF3  084A               	movf	___fladd@a+2,w
  5933  0EF4  00D2               	movwf	??___fladd+6
  5934  0EF5  084B               	movf	___fladd@a+3,w
  5935  0EF6  00D3               	movwf	??___fladd+7
  5936  0EF7  0844               	movf	___fladd@b,w
  5937  0EF8  02D0               	subwf	??___fladd+4,f
  5938  0EF9  0845               	movf	___fladd@b+1,w
  5939  0EFA  1C03               	skipc
  5940  0EFB  0F45               	incfsz	___fladd@b+1,w
  5941  0EFC  2EFE               	goto	u4681
  5942  0EFD  2EFF               	goto	u4682
  5943  0EFE                     u4681:
  5944  0EFE  02D1               	subwf	??___fladd+5,f
  5945  0EFF                     u4682:
  5946  0EFF  0846               	movf	___fladd@b+2,w
  5947  0F00  1C03               	skipc
  5948  0F01  0F46               	incfsz	___fladd@b+2,w
  5949  0F02  2F04               	goto	u4683
  5950  0F03  2F05               	goto	u4684
  5951  0F04                     u4683:
  5952  0F04  02D2               	subwf	??___fladd+6,f
  5953  0F05                     u4684:
  5954  0F05  0847               	movf	___fladd@b+3,w
  5955  0F06  1C03               	skipc
  5956  0F07  0F47               	incfsz	___fladd@b+3,w
  5957  0F08  2F0A               	goto	u4685
  5958  0F09  2F0B               	goto	u4686
  5959  0F0A                     u4685:
  5960  0F0A  02D3               	subwf	??___fladd+7,f
  5961  0F0B                     u4686:
  5962  0F0B  0850               	movf	??___fladd+4,w
  5963  0F0C  07CC               	addwf	??___fladd,f
  5964  0F0D  0851               	movf	??___fladd+5,w
  5965  0F0E  1803               	skipnc
  5966  0F0F  0F51               	incfsz	??___fladd+5,w
  5967  0F10  2F12               	goto	u4690
  5968  0F11  2F13               	goto	u4691
  5969  0F12                     u4690:
  5970  0F12  07CD               	addwf	??___fladd+1,f
  5971  0F13                     u4691:
  5972  0F13  0852               	movf	??___fladd+6,w
  5973  0F14  1803               	skipnc
  5974  0F15  0F52               	incfsz	??___fladd+6,w
  5975  0F16  2F18               	goto	u4692
  5976  0F17  2F19               	goto	u4693
  5977  0F18                     u4692:
  5978  0F18  07CE               	addwf	??___fladd+2,f
  5979  0F19                     u4693:
  5980  0F19  0853               	movf	??___fladd+7,w
  5981  0F1A  1803               	skipnc
  5982  0F1B  0A53               	incf	??___fladd+7,w
  5983  0F1C  07CF               	addwf	??___fladd+3,f
  5984  0F1D  084F               	movf	??___fladd+3,w
  5985  0F1E  00C7               	movwf	___fladd@b+3
  5986  0F1F  084E               	movf	??___fladd+2,w
  5987  0F20  00C6               	movwf	___fladd@b+2
  5988  0F21  084D               	movf	??___fladd+1,w
  5989  0F22  00C5               	movwf	___fladd@b+1
  5990  0F23  084C               	movf	??___fladd,w
  5991  0F24  00C4               	movwf	___fladd@b
  5992  0F25                     l3225:
  5993  0F25  3080               	movlw	128
  5994  0F26  00CC               	movwf	??___fladd
  5995  0F27  084C               	movf	??___fladd,w
  5996  0F28  06D4               	xorwf	___fladd@signs,f
  5997  0F29  09D7               	comf	___fladd@grs,f
  5998  0F2A  0AD7               	incf	___fladd@grs,f
  5999  0F2B                     l3227:
  6000  0F2B  0857               	movf	___fladd@grs,w
  6001  0F2C  1D03               	btfss	3,2
  6002  0F2D  2F2F               	goto	u4701
  6003  0F2E  2F30               	goto	u4700
  6004  0F2F                     u4701:
  6005  0F2F  2F4D               	goto	l616
  6006  0F30                     u4700:
  6007  0F30                     l3229:
  6008  0F30  3001               	movlw	1
  6009  0F31  07C4               	addwf	___fladd@b,f
  6010  0F32  3000               	movlw	0
  6011  0F33  1803               	skipnc
  6012  0F34  3001               	movlw	1
  6013  0F35  07C5               	addwf	___fladd@b+1,f
  6014  0F36  3000               	movlw	0
  6015  0F37  1803               	skipnc
  6016  0F38  3001               	movlw	1
  6017  0F39  07C6               	addwf	___fladd@b+2,f
  6018  0F3A  3000               	movlw	0
  6019  0F3B  1803               	skipnc
  6020  0F3C  3001               	movlw	1
  6021  0F3D  07C7               	addwf	___fladd@b+3,f
  6022  0F3E  2F4D               	goto	l616
  6023  0F3F                     l3231:
  6024  0F3F  0848               	movf	___fladd@a,w
  6025  0F40  02C4               	subwf	___fladd@b,f
  6026  0F41  0849               	movf	___fladd@a+1,w
  6027  0F42  1C03               	skipc
  6028  0F43  0F49               	incfsz	___fladd@a+1,w
  6029  0F44  02C5               	subwf	___fladd@b+1,f
  6030  0F45  084A               	movf	___fladd@a+2,w
  6031  0F46  1C03               	skipc
  6032  0F47  0F4A               	incfsz	___fladd@a+2,w
  6033  0F48  02C6               	subwf	___fladd@b+2,f
  6034  0F49  084B               	movf	___fladd@a+3,w
  6035  0F4A  1C03               	skipc
  6036  0F4B  0F4B               	incfsz	___fladd@a+3,w
  6037  0F4C  02C7               	subwf	___fladd@b+3,f
  6038  0F4D                     l616:
  6039  0F4D  0847               	movf	___fladd@b+3,w
  6040  0F4E  0446               	iorwf	___fladd@b+2,w
  6041  0F4F  0445               	iorwf	___fladd@b+1,w
  6042  0F50  0444               	iorwf	___fladd@b,w
  6043  0F51  1D03               	skipz
  6044  0F52  2F54               	goto	u4711
  6045  0F53  2F55               	goto	u4710
  6046  0F54                     u4711:
  6047  0F54  2F81               	goto	l3253
  6048  0F55                     u4710:
  6049  0F55                     l3233:
  6050  0F55  0857               	movf	___fladd@grs,w
  6051  0F56  1D03               	btfss	3,2
  6052  0F57  2F59               	goto	u4721
  6053  0F58  2F5A               	goto	u4720
  6054  0F59                     u4721:
  6055  0F59  2F81               	goto	l3253
  6056  0F5A                     u4720:
  6057  0F5A                     l3235:
  6058  0F5A  3000               	movlw	0
  6059  0F5B  00C7               	movwf	?___fladd+3
  6060  0F5C  3000               	movlw	0
  6061  0F5D  00C6               	movwf	?___fladd+2
  6062  0F5E  3000               	movlw	0
  6063  0F5F  00C5               	movwf	?___fladd+1
  6064  0F60  3000               	movlw	0
  6065  0F61  00C4               	movwf	?___fladd
  6066  0F62  2FFF               	goto	l608
  6067  0F63                     l3239:
  6068  0F63  3001               	movlw	1
  6069  0F64  00CC               	movwf	??___fladd
  6070  0F65                     u4735:
  6071  0F65  1003               	clrc
  6072  0F66  0DC4               	rlf	___fladd@b,f
  6073  0F67  0DC5               	rlf	___fladd@b+1,f
  6074  0F68  0DC6               	rlf	___fladd@b+2,f
  6075  0F69  0DC7               	rlf	___fladd@b+3,f
  6076  0F6A  0BCC               	decfsz	??___fladd,f
  6077  0F6B  2F65               	goto	u4735
  6078  0F6C                     l3241:
  6079  0F6C  1FD7               	btfss	___fladd@grs,7
  6080  0F6D  2F6F               	goto	u4741
  6081  0F6E  2F70               	goto	u4740
  6082  0F6F                     u4741:
  6083  0F6F  2F71               	goto	l620
  6084  0F70                     u4740:
  6085  0F70                     l3243:
  6086  0F70  1444               	bsf	___fladd@b,0
  6087  0F71                     l620:
  6088  0F71  1C57               	btfss	___fladd@grs,0
  6089  0F72  2F74               	goto	u4751
  6090  0F73  2F75               	goto	u4750
  6091  0F74                     u4751:
  6092  0F74  2F78               	goto	l3247
  6093  0F75                     u4750:
  6094  0F75                     l3245:
  6095  0F75  1403               	setc
  6096  0F76  0DD7               	rlf	___fladd@grs,f
  6097  0F77  2F7A               	goto	l3249
  6098  0F78                     l3247:
  6099  0F78  1003               	clrc
  6100  0F79  0DD7               	rlf	___fladd@grs,f
  6101  0F7A                     l3249:
  6102  0F7A  0856               	movf	___fladd@bexp,w
  6103  0F7B  1903               	btfsc	3,2
  6104  0F7C  2F7E               	goto	u4761
  6105  0F7D  2F7F               	goto	u4760
  6106  0F7E                     u4761:
  6107  0F7E  2F81               	goto	l3253
  6108  0F7F                     u4760:
  6109  0F7F                     l3251:
  6110  0F7F  3001               	movlw	1
  6111  0F80  02D6               	subwf	___fladd@bexp,f
  6112  0F81                     l3253:
  6113  0F81  1FC6               	btfss	___fladd@b+2,7
  6114  0F82  2F84               	goto	u4771
  6115  0F83  2F85               	goto	u4770
  6116  0F84                     u4771:
  6117  0F84  2F63               	goto	l3239
  6118  0F85                     u4770:
  6119  0F85                     l3255:
  6120  0F85  01D5               	clrf	___fladd@aexp
  6121  0F86                     l3257:
  6122  0F86  1FD7               	btfss	___fladd@grs,7
  6123  0F87  2F89               	goto	u4781
  6124  0F88  2F8A               	goto	u4780
  6125  0F89                     u4781:
  6126  0F89  2F98               	goto	l3265
  6127  0F8A                     u4780:
  6128  0F8A                     l3259:
  6129  0F8A  0857               	movf	___fladd@grs,w
  6130  0F8B  397F               	andlw	127
  6131  0F8C  1903               	btfsc	3,2
  6132  0F8D  2F8F               	goto	u4791
  6133  0F8E  2F90               	goto	u4790
  6134  0F8F                     u4791:
  6135  0F8F  2F93               	goto	l626
  6136  0F90                     u4790:
  6137  0F90                     l3261:
  6138  0F90  01D5               	clrf	___fladd@aexp
  6139  0F91  0AD5               	incf	___fladd@aexp,f
  6140  0F92  2F98               	goto	l3265
  6141  0F93                     l626:
  6142  0F93  1C44               	btfss	___fladd@b,0
  6143  0F94  2F96               	goto	u4801
  6144  0F95  2F97               	goto	u4800
  6145  0F96                     u4801:
  6146  0F96  2F98               	goto	l3265
  6147  0F97                     u4800:
  6148  0F97  2F90               	goto	l3261
  6149  0F98                     l3265:
  6150  0F98  0855               	movf	___fladd@aexp,w
  6151  0F99  1903               	btfsc	3,2
  6152  0F9A  2F9C               	goto	u4811
  6153  0F9B  2F9D               	goto	u4810
  6154  0F9C                     u4811:
  6155  0F9C  2FD1               	goto	l629
  6156  0F9D                     u4810:
  6157  0F9D                     l3267:
  6158  0F9D  3001               	movlw	1
  6159  0F9E  07C4               	addwf	___fladd@b,f
  6160  0F9F  3000               	movlw	0
  6161  0FA0  1803               	skipnc
  6162  0FA1  3001               	movlw	1
  6163  0FA2  07C5               	addwf	___fladd@b+1,f
  6164  0FA3  3000               	movlw	0
  6165  0FA4  1803               	skipnc
  6166  0FA5  3001               	movlw	1
  6167  0FA6  07C6               	addwf	___fladd@b+2,f
  6168  0FA7  3000               	movlw	0
  6169  0FA8  1803               	skipnc
  6170  0FA9  3001               	movlw	1
  6171  0FAA  07C7               	addwf	___fladd@b+3,f
  6172  0FAB                     l3269:
  6173  0FAB  1C47               	btfss	___fladd@b+3,0
  6174  0FAC  2FAE               	goto	u4821
  6175  0FAD  2FAF               	goto	u4820
  6176  0FAE                     u4821:
  6177  0FAE  2FD1               	goto	l629
  6178  0FAF                     u4820:
  6179  0FAF                     l3271:
  6180  0FAF  0844               	movf	___fladd@b,w
  6181  0FB0  00CC               	movwf	??___fladd
  6182  0FB1  0845               	movf	___fladd@b+1,w
  6183  0FB2  00CD               	movwf	??___fladd+1
  6184  0FB3  0846               	movf	___fladd@b+2,w
  6185  0FB4  00CE               	movwf	??___fladd+2
  6186  0FB5  0847               	movf	___fladd@b+3,w
  6187  0FB6  00CF               	movwf	??___fladd+3
  6188  0FB7  3001               	movlw	1
  6189  0FB8  00D0               	movwf	??___fladd+4
  6190  0FB9                     u4835:
  6191  0FB9  0D4F               	rlf	??___fladd+3,w
  6192  0FBA  0CCF               	rrf	??___fladd+3,f
  6193  0FBB  0CCE               	rrf	??___fladd+2,f
  6194  0FBC  0CCD               	rrf	??___fladd+1,f
  6195  0FBD  0CCC               	rrf	??___fladd,f
  6196  0FBE                     u4830:
  6197  0FBE  0BD0               	decfsz	??___fladd+4,f
  6198  0FBF  2FB9               	goto	u4835
  6199  0FC0  084F               	movf	??___fladd+3,w
  6200  0FC1  00C7               	movwf	___fladd@b+3
  6201  0FC2  084E               	movf	??___fladd+2,w
  6202  0FC3  00C6               	movwf	___fladd@b+2
  6203  0FC4  084D               	movf	??___fladd+1,w
  6204  0FC5  00C5               	movwf	___fladd@b+1
  6205  0FC6  084C               	movf	??___fladd,w
  6206  0FC7  00C4               	movwf	___fladd@b
  6207  0FC8  0A56               	incf	___fladd@bexp,w
  6208  0FC9  1903               	btfsc	3,2
  6209  0FCA  2FCC               	goto	u4841
  6210  0FCB  2FCD               	goto	u4840
  6211  0FCC                     u4841:
  6212  0FCC  2FD1               	goto	l629
  6213  0FCD                     u4840:
  6214  0FCD                     l3273:
  6215  0FCD  3001               	movlw	1
  6216  0FCE  00CC               	movwf	??___fladd
  6217  0FCF  084C               	movf	??___fladd,w
  6218  0FD0  07D6               	addwf	___fladd@bexp,f
  6219  0FD1                     l629:
  6220  0FD1  0A56               	incf	___fladd@bexp,w
  6221  0FD2  1903               	btfsc	3,2
  6222  0FD3  2FD5               	goto	u4851
  6223  0FD4  2FD6               	goto	u4850
  6224  0FD5                     u4851:
  6225  0FD5  2FDB               	goto	l3277
  6226  0FD6                     u4850:
  6227  0FD6                     l3275:
  6228  0FD6  0856               	movf	___fladd@bexp,w
  6229  0FD7  1D03               	btfss	3,2
  6230  0FD8  2FDA               	goto	u4861
  6231  0FD9  2FDB               	goto	u4860
  6232  0FDA                     u4861:
  6233  0FDA  2FE9               	goto	l3283
  6234  0FDB                     u4860:
  6235  0FDB                     l3277:
  6236  0FDB  3000               	movlw	0
  6237  0FDC  00C7               	movwf	___fladd@b+3
  6238  0FDD  3000               	movlw	0
  6239  0FDE  00C6               	movwf	___fladd@b+2
  6240  0FDF  3000               	movlw	0
  6241  0FE0  00C5               	movwf	___fladd@b+1
  6242  0FE1  3000               	movlw	0
  6243  0FE2  00C4               	movwf	___fladd@b
  6244  0FE3                     l3279:
  6245  0FE3  0856               	movf	___fladd@bexp,w
  6246  0FE4  1D03               	btfss	3,2
  6247  0FE5  2FE7               	goto	u4871
  6248  0FE6  2FE8               	goto	u4870
  6249  0FE7                     u4871:
  6250  0FE7  2FE9               	goto	l3283
  6251  0FE8                     u4870:
  6252  0FE8                     l3281:
  6253  0FE8  01D4               	clrf	___fladd@signs
  6254  0FE9                     l3283:
  6255  0FE9  1C56               	btfss	___fladd@bexp,0
  6256  0FEA  2FEC               	goto	u4881
  6257  0FEB  2FED               	goto	u4880
  6258  0FEC                     u4881:
  6259  0FEC  2FEF               	goto	l3287
  6260  0FED                     u4880:
  6261  0FED                     l3285:
  6262  0FED  17C6               	bsf	___fladd@b+2,7
  6263  0FEE  2FF3               	goto	l637
  6264  0FEF                     l3287:
  6265  0FEF  307F               	movlw	127
  6266  0FF0  00CC               	movwf	??___fladd
  6267  0FF1  084C               	movf	??___fladd,w
  6268  0FF2  05C6               	andwf	___fladd@b+2,f
  6269  0FF3                     l637:
  6270  0FF3  0856               	movf	___fladd@bexp,w
  6271  0FF4  00CC               	movwf	??___fladd
  6272  0FF5  1003               	clrc
  6273  0FF6  0C4C               	rrf	??___fladd,w
  6274  0FF7  00CD               	movwf	??___fladd+1
  6275  0FF8  084D               	movf	??___fladd+1,w
  6276  0FF9  00C7               	movwf	___fladd@b+3
  6277  0FFA                     l3289:
  6278  0FFA  1FD4               	btfss	___fladd@signs,7
  6279  0FFB  2FFD               	goto	u4891
  6280  0FFC  2FFE               	goto	u4890
  6281  0FFD                     u4891:
  6282  0FFD  2FFF               	goto	l638
  6283  0FFE                     u4890:
  6284  0FFE                     l3291:
  6285  0FFE  17C7               	bsf	___fladd@b+3,7
  6286  0FFF                     l638:
  6287  0FFF                     l608:
  6288  0FFF  0008               	return
  6289  1000                     __end_of___fladd:
  6290                           
  6291                           	psect	text17
  6292  129C                     __ptext17:	
  6293 ;; *************** function ___flneg *****************
  6294 ;; Defined at:
  6295 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;  f1              4    3[COMMON] unsigned char 
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;		None
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  4    3[COMMON] unsigned char 
  6302 ;; Registers used:
  6303 ;;		wreg
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6309 ;;      Params:         4       0       0       0       0
  6310 ;;      Locals:         0       0       0       0       0
  6311 ;;      Temps:          0       0       0       0       0
  6312 ;;      Totals:         4       0       0       0       0
  6313 ;;Total ram usage:        4 bytes
  6314 ;; Hardware stack levels used:    1
  6315 ;; Hardware stack levels required when called:    1
  6316 ;; This function calls:
  6317 ;;		Nothing
  6318 ;; This function is called by:
  6319 ;;		_ftoa
  6320 ;; This function uses a non-reentrant model
  6321 ;;
  6322                           
  6323                           
  6324                           ;psect for function ___flneg
  6325  129C                     ___flneg:
  6326  129C                     l3375:	
  6327                           ;incstack = 0
  6328                           ; Regs used in ___flneg: [wreg]
  6329                           
  6330  129C  0876               	movf	___flneg@f1+3,w
  6331  129D  0475               	iorwf	___flneg@f1+2,w
  6332  129E  0474               	iorwf	___flneg@f1+1,w
  6333  129F  0473               	iorwf	___flneg@f1,w
  6334  12A0  1903               	skipnz
  6335  12A1  2AA3               	goto	u5061
  6336  12A2  2AA4               	goto	u5060
  6337  12A3                     u5061:
  6338  12A3  2AA6               	goto	l3379
  6339  12A4                     u5060:
  6340  12A4                     l3377:
  6341  12A4  3080               	movlw	128
  6342  12A5  06F6               	xorwf	___flneg@f1+3,f
  6343  12A6                     l3379:
  6344  12A6                     l484:
  6345  12A6  0008               	return
  6346  12A7                     __end_of___flneg:
  6347                           
  6348                           	psect	text18
  6349  001D                     __ptext18:	
  6350 ;; *************** function ___flmul *****************
  6351 ;; Defined at:
  6352 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;  b               4   10[BANK0 ] unsigned char 
  6355 ;;  a               4   14[BANK0 ] unsigned char 
  6356 ;; Auto vars:     Size  Location     Type
  6357 ;;  prod            4   30[BANK0 ] struct .
  6358 ;;  grs             4   25[BANK0 ] unsigned long 
  6359 ;;  temp            2   34[BANK0 ] struct .
  6360 ;;  bexp            1   29[BANK0 ] unsigned char 
  6361 ;;  aexp            1   24[BANK0 ] unsigned char 
  6362 ;;  sign            1   23[BANK0 ] unsigned char 
  6363 ;; Return value:  Size  Location     Type
  6364 ;;                  4   10[BANK0 ] unsigned char 
  6365 ;; Registers used:
  6366 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6367 ;; Tracked objects:
  6368 ;;		On entry : 0/0
  6369 ;;		On exit  : 0/0
  6370 ;;		Unchanged: 0/0
  6371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6372 ;;      Params:         0       8       0       0       0
  6373 ;;      Locals:         0      13       0       0       0
  6374 ;;      Temps:          0       5       0       0       0
  6375 ;;      Totals:         0      26       0       0       0
  6376 ;;Total ram usage:       26 bytes
  6377 ;; Hardware stack levels used:    1
  6378 ;; Hardware stack levels required when called:    2
  6379 ;; This function calls:
  6380 ;;		__Umul8_16
  6381 ;; This function is called by:
  6382 ;;		_readMPU
  6383 ;;		_ftoa
  6384 ;; This function uses a non-reentrant model
  6385 ;;
  6386                           
  6387                           
  6388                           ;psect for function ___flmul
  6389  001D                     ___flmul:
  6390  001D                     l3567:	
  6391                           ;incstack = 0
  6392                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6393                           
  6394  001D  1283               	bcf	3,5	;RP0=0, select bank0
  6395  001E  1303               	bcf	3,6	;RP1=0, select bank0
  6396  001F  082D               	movf	___flmul@b+3,w
  6397  0020  3980               	andlw	128
  6398  0021  00B2               	movwf	??___flmul
  6399  0022  0832               	movf	??___flmul,w
  6400  0023  00B7               	movwf	___flmul@sign
  6401  0024                     l3569:
  6402  0024  082D               	movf	___flmul@b+3,w
  6403  0025  00B2               	movwf	??___flmul
  6404  0026  0732               	addwf	??___flmul,w
  6405  0027  00B3               	movwf	??___flmul+1
  6406  0028  0833               	movf	??___flmul+1,w
  6407  0029  00BD               	movwf	___flmul@bexp
  6408  002A                     l3571:
  6409  002A  1FAC               	btfss	___flmul@b+2,7
  6410  002B  282D               	goto	u5461
  6411  002C  282E               	goto	u5460
  6412  002D                     u5461:
  6413  002D  282F               	goto	l3575
  6414  002E                     u5460:
  6415  002E                     l3573:
  6416  002E  143D               	bsf	___flmul@bexp,0
  6417  002F                     l3575:
  6418  002F  083D               	movf	___flmul@bexp,w
  6419  0030  1903               	btfsc	3,2
  6420  0031  2833               	goto	u5471
  6421  0032  2834               	goto	u5470
  6422  0033                     u5471:
  6423  0033  2843               	goto	l3583
  6424  0034                     u5470:
  6425  0034                     l3577:
  6426  0034  0A3D               	incf	___flmul@bexp,w
  6427  0035  1D03               	btfss	3,2
  6428  0036  2838               	goto	u5481
  6429  0037  2839               	goto	u5480
  6430  0038                     u5481:
  6431  0038  2841               	goto	l3581
  6432  0039                     u5480:
  6433  0039                     l3579:
  6434  0039  3000               	movlw	0
  6435  003A  00AD               	movwf	___flmul@b+3
  6436  003B  3000               	movlw	0
  6437  003C  00AC               	movwf	___flmul@b+2
  6438  003D  3000               	movlw	0
  6439  003E  00AB               	movwf	___flmul@b+1
  6440  003F  3000               	movlw	0
  6441  0040  00AA               	movwf	___flmul@b
  6442  0041                     l3581:
  6443  0041  17AC               	bsf	___flmul@b+2,7
  6444  0042  284B               	goto	l3585
  6445  0043                     l3583:
  6446  0043  3000               	movlw	0
  6447  0044  00AD               	movwf	___flmul@b+3
  6448  0045  3000               	movlw	0
  6449  0046  00AC               	movwf	___flmul@b+2
  6450  0047  3000               	movlw	0
  6451  0048  00AB               	movwf	___flmul@b+1
  6452  0049  3000               	movlw	0
  6453  004A  00AA               	movwf	___flmul@b
  6454  004B                     l3585:
  6455  004B  0831               	movf	___flmul@a+3,w
  6456  004C  3980               	andlw	128
  6457  004D  00B2               	movwf	??___flmul
  6458  004E  0832               	movf	??___flmul,w
  6459  004F  06B7               	xorwf	___flmul@sign,f
  6460  0050                     l3587:
  6461  0050  0831               	movf	___flmul@a+3,w
  6462  0051  00B2               	movwf	??___flmul
  6463  0052  0732               	addwf	??___flmul,w
  6464  0053  00B3               	movwf	??___flmul+1
  6465  0054  0833               	movf	??___flmul+1,w
  6466  0055  00B8               	movwf	___flmul@aexp
  6467  0056                     l3589:
  6468  0056  1FB0               	btfss	___flmul@a+2,7
  6469  0057  2859               	goto	u5491
  6470  0058  285A               	goto	u5490
  6471  0059                     u5491:
  6472  0059  285B               	goto	l3593
  6473  005A                     u5490:
  6474  005A                     l3591:
  6475  005A  1438               	bsf	___flmul@aexp,0
  6476  005B                     l3593:
  6477  005B  0838               	movf	___flmul@aexp,w
  6478  005C  1903               	btfsc	3,2
  6479  005D  285F               	goto	u5501
  6480  005E  2860               	goto	u5500
  6481  005F                     u5501:
  6482  005F  286F               	goto	l3601
  6483  0060                     u5500:
  6484  0060                     l3595:
  6485  0060  0A38               	incf	___flmul@aexp,w
  6486  0061  1D03               	btfss	3,2
  6487  0062  2864               	goto	u5511
  6488  0063  2865               	goto	u5510
  6489  0064                     u5511:
  6490  0064  286D               	goto	l3599
  6491  0065                     u5510:
  6492  0065                     l3597:
  6493  0065  3000               	movlw	0
  6494  0066  00B1               	movwf	___flmul@a+3
  6495  0067  3000               	movlw	0
  6496  0068  00B0               	movwf	___flmul@a+2
  6497  0069  3000               	movlw	0
  6498  006A  00AF               	movwf	___flmul@a+1
  6499  006B  3000               	movlw	0
  6500  006C  00AE               	movwf	___flmul@a
  6501  006D                     l3599:
  6502  006D  17B0               	bsf	___flmul@a+2,7
  6503  006E  2877               	goto	l3603
  6504  006F                     l3601:
  6505  006F  3000               	movlw	0
  6506  0070  00B1               	movwf	___flmul@a+3
  6507  0071  3000               	movlw	0
  6508  0072  00B0               	movwf	___flmul@a+2
  6509  0073  3000               	movlw	0
  6510  0074  00AF               	movwf	___flmul@a+1
  6511  0075  3000               	movlw	0
  6512  0076  00AE               	movwf	___flmul@a
  6513  0077                     l3603:
  6514  0077  0838               	movf	___flmul@aexp,w
  6515  0078  1903               	btfsc	3,2
  6516  0079  287B               	goto	u5521
  6517  007A  287C               	goto	u5520
  6518  007B                     u5521:
  6519  007B  2881               	goto	l3607
  6520  007C                     u5520:
  6521  007C                     l3605:
  6522  007C  083D               	movf	___flmul@bexp,w
  6523  007D  1D03               	btfss	3,2
  6524  007E  2880               	goto	u5531
  6525  007F  2881               	goto	u5530
  6526  0080                     u5531:
  6527  0080  288A               	goto	l3611
  6528  0081                     u5530:
  6529  0081                     l3607:
  6530  0081  3000               	movlw	0
  6531  0082  00AD               	movwf	?___flmul+3
  6532  0083  3000               	movlw	0
  6533  0084  00AC               	movwf	?___flmul+2
  6534  0085  3000               	movlw	0
  6535  0086  00AB               	movwf	?___flmul+1
  6536  0087  3000               	movlw	0
  6537  0088  00AA               	movwf	?___flmul
  6538  0089  2B7D               	goto	l691
  6539  008A                     l3611:
  6540  008A  082A               	movf	___flmul@b,w
  6541  008B  00B2               	movwf	??___flmul
  6542  008C  0832               	movf	??___flmul,w
  6543  008D  00F3               	movwf	__Umul8_16@multiplicand
  6544  008E  0830               	movf	___flmul@a+2,w
  6545  008F  120A  158A  2002  120A  118A  	fcall	__Umul8_16
  6546  0094  0874               	movf	?__Umul8_16+1,w
  6547  0095  1283               	bcf	3,5	;RP0=0, select bank0
  6548  0096  1303               	bcf	3,6	;RP1=0, select bank0
  6549  0097  00C3               	movwf	___flmul@temp+1
  6550  0098  0873               	movf	?__Umul8_16,w
  6551  0099  00C2               	movwf	___flmul@temp
  6552  009A                     l3613:
  6553  009A  0842               	movf	___flmul@temp,w
  6554  009B  00B2               	movwf	??___flmul
  6555  009C  01B3               	clrf	??___flmul+1
  6556  009D  01B4               	clrf	??___flmul+2
  6557  009E  01B5               	clrf	??___flmul+3
  6558  009F  0835               	movf	??___flmul+3,w
  6559  00A0  00BC               	movwf	___flmul@grs+3
  6560  00A1  0834               	movf	??___flmul+2,w
  6561  00A2  00BB               	movwf	___flmul@grs+2
  6562  00A3  0833               	movf	??___flmul+1,w
  6563  00A4  00BA               	movwf	___flmul@grs+1
  6564  00A5  0832               	movf	??___flmul,w
  6565  00A6  00B9               	movwf	___flmul@grs
  6566  00A7                     l3615:
  6567  00A7  0843               	movf	___flmul@temp+1,w
  6568  00A8  00B2               	movwf	??___flmul
  6569  00A9  01B3               	clrf	??___flmul+1
  6570  00AA  01B4               	clrf	??___flmul+2
  6571  00AB  01B5               	clrf	??___flmul+3
  6572  00AC  0835               	movf	??___flmul+3,w
  6573  00AD  00C1               	movwf	___flmul@prod+3
  6574  00AE  0834               	movf	??___flmul+2,w
  6575  00AF  00C0               	movwf	___flmul@prod+2
  6576  00B0  0833               	movf	??___flmul+1,w
  6577  00B1  00BF               	movwf	___flmul@prod+1
  6578  00B2  0832               	movf	??___flmul,w
  6579  00B3  00BE               	movwf	___flmul@prod
  6580  00B4  082B               	movf	___flmul@b+1,w
  6581  00B5  00B2               	movwf	??___flmul
  6582  00B6  0832               	movf	??___flmul,w
  6583  00B7  00F3               	movwf	__Umul8_16@multiplicand
  6584  00B8  082F               	movf	___flmul@a+1,w
  6585  00B9  120A  158A  2002  120A  118A  	fcall	__Umul8_16
  6586  00BE  0874               	movf	?__Umul8_16+1,w
  6587  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  6588  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  6589  00C1  00C3               	movwf	___flmul@temp+1
  6590  00C2  0873               	movf	?__Umul8_16,w
  6591  00C3  00C2               	movwf	___flmul@temp
  6592  00C4                     l3617:
  6593  00C4  0842               	movf	___flmul@temp,w
  6594  00C5  00B2               	movwf	??___flmul
  6595  00C6  01B3               	clrf	??___flmul+1
  6596  00C7  01B4               	clrf	??___flmul+2
  6597  00C8  01B5               	clrf	??___flmul+3
  6598  00C9  0832               	movf	??___flmul,w
  6599  00CA  07B9               	addwf	___flmul@grs,f
  6600  00CB  0833               	movf	??___flmul+1,w
  6601  00CC  1103               	clrz
  6602  00CD  1803               	skipnc
  6603  00CE  3E01               	addlw	1
  6604  00CF  1903               	skipnz
  6605  00D0  28D2               	goto	u5541
  6606  00D1  07BA               	addwf	___flmul@grs+1,f
  6607  00D2                     u5541:
  6608  00D2  0834               	movf	??___flmul+2,w
  6609  00D3  1103               	clrz
  6610  00D4  1803               	skipnc
  6611  00D5  3E01               	addlw	1
  6612  00D6  1903               	skipnz
  6613  00D7  28D9               	goto	u5542
  6614  00D8  07BB               	addwf	___flmul@grs+2,f
  6615  00D9                     u5542:
  6616  00D9  0835               	movf	??___flmul+3,w
  6617  00DA  1103               	clrz
  6618  00DB  1803               	skipnc
  6619  00DC  3E01               	addlw	1
  6620  00DD  1903               	skipnz
  6621  00DE  28E0               	goto	u5543
  6622  00DF  07BC               	addwf	___flmul@grs+3,f
  6623  00E0                     u5543:
  6624  00E0                     l3619:
  6625  00E0  0843               	movf	___flmul@temp+1,w
  6626  00E1  00B2               	movwf	??___flmul
  6627  00E2  01B3               	clrf	??___flmul+1
  6628  00E3  01B4               	clrf	??___flmul+2
  6629  00E4  01B5               	clrf	??___flmul+3
  6630  00E5  0832               	movf	??___flmul,w
  6631  00E6  07BE               	addwf	___flmul@prod,f
  6632  00E7  0833               	movf	??___flmul+1,w
  6633  00E8  1103               	clrz
  6634  00E9  1803               	skipnc
  6635  00EA  3E01               	addlw	1
  6636  00EB  1903               	skipnz
  6637  00EC  28EE               	goto	u5551
  6638  00ED  07BF               	addwf	___flmul@prod+1,f
  6639  00EE                     u5551:
  6640  00EE  0834               	movf	??___flmul+2,w
  6641  00EF  1103               	clrz
  6642  00F0  1803               	skipnc
  6643  00F1  3E01               	addlw	1
  6644  00F2  1903               	skipnz
  6645  00F3  28F5               	goto	u5552
  6646  00F4  07C0               	addwf	___flmul@prod+2,f
  6647  00F5                     u5552:
  6648  00F5  0835               	movf	??___flmul+3,w
  6649  00F6  1103               	clrz
  6650  00F7  1803               	skipnc
  6651  00F8  3E01               	addlw	1
  6652  00F9  1903               	skipnz
  6653  00FA  28FC               	goto	u5553
  6654  00FB  07C1               	addwf	___flmul@prod+3,f
  6655  00FC                     u5553:
  6656  00FC  082C               	movf	___flmul@b+2,w
  6657  00FD  00B2               	movwf	??___flmul
  6658  00FE  0832               	movf	??___flmul,w
  6659  00FF  00F3               	movwf	__Umul8_16@multiplicand
  6660  0100  082E               	movf	___flmul@a,w
  6661  0101  120A  158A  2002  120A  118A  	fcall	__Umul8_16
  6662  0106  0874               	movf	?__Umul8_16+1,w
  6663  0107  1283               	bcf	3,5	;RP0=0, select bank0
  6664  0108  1303               	bcf	3,6	;RP1=0, select bank0
  6665  0109  00C3               	movwf	___flmul@temp+1
  6666  010A  0873               	movf	?__Umul8_16,w
  6667  010B  00C2               	movwf	___flmul@temp
  6668  010C                     l3621:
  6669  010C  0842               	movf	___flmul@temp,w
  6670  010D  00B2               	movwf	??___flmul
  6671  010E  01B3               	clrf	??___flmul+1
  6672  010F  01B4               	clrf	??___flmul+2
  6673  0110  01B5               	clrf	??___flmul+3
  6674  0111  0832               	movf	??___flmul,w
  6675  0112  07B9               	addwf	___flmul@grs,f
  6676  0113  0833               	movf	??___flmul+1,w
  6677  0114  1103               	clrz
  6678  0115  1803               	skipnc
  6679  0116  3E01               	addlw	1
  6680  0117  1903               	skipnz
  6681  0118  291A               	goto	u5561
  6682  0119  07BA               	addwf	___flmul@grs+1,f
  6683  011A                     u5561:
  6684  011A  0834               	movf	??___flmul+2,w
  6685  011B  1103               	clrz
  6686  011C  1803               	skipnc
  6687  011D  3E01               	addlw	1
  6688  011E  1903               	skipnz
  6689  011F  2921               	goto	u5562
  6690  0120  07BB               	addwf	___flmul@grs+2,f
  6691  0121                     u5562:
  6692  0121  0835               	movf	??___flmul+3,w
  6693  0122  1103               	clrz
  6694  0123  1803               	skipnc
  6695  0124  3E01               	addlw	1
  6696  0125  1903               	skipnz
  6697  0126  2928               	goto	u5563
  6698  0127  07BC               	addwf	___flmul@grs+3,f
  6699  0128                     u5563:
  6700  0128                     l3623:
  6701  0128  0843               	movf	___flmul@temp+1,w
  6702  0129  00B2               	movwf	??___flmul
  6703  012A  01B3               	clrf	??___flmul+1
  6704  012B  01B4               	clrf	??___flmul+2
  6705  012C  01B5               	clrf	??___flmul+3
  6706  012D  0832               	movf	??___flmul,w
  6707  012E  07BE               	addwf	___flmul@prod,f
  6708  012F  0833               	movf	??___flmul+1,w
  6709  0130  1103               	clrz
  6710  0131  1803               	skipnc
  6711  0132  3E01               	addlw	1
  6712  0133  1903               	skipnz
  6713  0134  2936               	goto	u5571
  6714  0135  07BF               	addwf	___flmul@prod+1,f
  6715  0136                     u5571:
  6716  0136  0834               	movf	??___flmul+2,w
  6717  0137  1103               	clrz
  6718  0138  1803               	skipnc
  6719  0139  3E01               	addlw	1
  6720  013A  1903               	skipnz
  6721  013B  293D               	goto	u5572
  6722  013C  07C0               	addwf	___flmul@prod+2,f
  6723  013D                     u5572:
  6724  013D  0835               	movf	??___flmul+3,w
  6725  013E  1103               	clrz
  6726  013F  1803               	skipnc
  6727  0140  3E01               	addlw	1
  6728  0141  1903               	skipnz
  6729  0142  2944               	goto	u5573
  6730  0143  07C1               	addwf	___flmul@prod+3,f
  6731  0144                     u5573:
  6732  0144                     l3625:
  6733  0144  3008               	movlw	8
  6734  0145  00B2               	movwf	??___flmul
  6735  0146                     u5585:
  6736  0146  1003               	clrc
  6737  0147  0DB9               	rlf	___flmul@grs,f
  6738  0148  0DBA               	rlf	___flmul@grs+1,f
  6739  0149  0DBB               	rlf	___flmul@grs+2,f
  6740  014A  0DBC               	rlf	___flmul@grs+3,f
  6741  014B  0BB2               	decfsz	??___flmul,f
  6742  014C  2946               	goto	u5585
  6743  014D                     l3627:
  6744  014D  082B               	movf	___flmul@b+1,w
  6745  014E  00B2               	movwf	??___flmul
  6746  014F  0832               	movf	??___flmul,w
  6747  0150  00F3               	movwf	__Umul8_16@multiplicand
  6748  0151  082E               	movf	___flmul@a,w
  6749  0152  120A  158A  2002  120A  118A  	fcall	__Umul8_16
  6750  0157  0874               	movf	?__Umul8_16+1,w
  6751  0158  1283               	bcf	3,5	;RP0=0, select bank0
  6752  0159  1303               	bcf	3,6	;RP1=0, select bank0
  6753  015A  00C3               	movwf	___flmul@temp+1
  6754  015B  0873               	movf	?__Umul8_16,w
  6755  015C  00C2               	movwf	___flmul@temp
  6756  015D                     l3629:
  6757  015D  0842               	movf	___flmul@temp,w
  6758  015E  00B2               	movwf	??___flmul
  6759  015F  0843               	movf	___flmul@temp+1,w
  6760  0160  00B3               	movwf	??___flmul+1
  6761  0161  01B4               	clrf	??___flmul+2
  6762  0162  01B5               	clrf	??___flmul+3
  6763  0163  0832               	movf	??___flmul,w
  6764  0164  07B9               	addwf	___flmul@grs,f
  6765  0165  0833               	movf	??___flmul+1,w
  6766  0166  1103               	clrz
  6767  0167  1803               	skipnc
  6768  0168  3E01               	addlw	1
  6769  0169  1903               	skipnz
  6770  016A  296C               	goto	u5591
  6771  016B  07BA               	addwf	___flmul@grs+1,f
  6772  016C                     u5591:
  6773  016C  0834               	movf	??___flmul+2,w
  6774  016D  1103               	clrz
  6775  016E  1803               	skipnc
  6776  016F  3E01               	addlw	1
  6777  0170  1903               	skipnz
  6778  0171  2973               	goto	u5592
  6779  0172  07BB               	addwf	___flmul@grs+2,f
  6780  0173                     u5592:
  6781  0173  0835               	movf	??___flmul+3,w
  6782  0174  1103               	clrz
  6783  0175  1803               	skipnc
  6784  0176  3E01               	addlw	1
  6785  0177  1903               	skipnz
  6786  0178  297A               	goto	u5593
  6787  0179  07BC               	addwf	___flmul@grs+3,f
  6788  017A                     u5593:
  6789  017A                     l3631:
  6790  017A  082A               	movf	___flmul@b,w
  6791  017B  00B2               	movwf	??___flmul
  6792  017C  0832               	movf	??___flmul,w
  6793  017D  00F3               	movwf	__Umul8_16@multiplicand
  6794  017E  082F               	movf	___flmul@a+1,w
  6795  017F  120A  158A  2002  120A  118A  	fcall	__Umul8_16
  6796  0184  0874               	movf	?__Umul8_16+1,w
  6797  0185  1283               	bcf	3,5	;RP0=0, select bank0
  6798  0186  1303               	bcf	3,6	;RP1=0, select bank0
  6799  0187  00C3               	movwf	___flmul@temp+1
  6800  0188  0873               	movf	?__Umul8_16,w
  6801  0189  00C2               	movwf	___flmul@temp
  6802  018A                     l3633:
  6803  018A  0842               	movf	___flmul@temp,w
  6804  018B  00B2               	movwf	??___flmul
  6805  018C  0843               	movf	___flmul@temp+1,w
  6806  018D  00B3               	movwf	??___flmul+1
  6807  018E  01B4               	clrf	??___flmul+2
  6808  018F  01B5               	clrf	??___flmul+3
  6809  0190  0832               	movf	??___flmul,w
  6810  0191  07B9               	addwf	___flmul@grs,f
  6811  0192  0833               	movf	??___flmul+1,w
  6812  0193  1103               	clrz
  6813  0194  1803               	skipnc
  6814  0195  3E01               	addlw	1
  6815  0196  1903               	skipnz
  6816  0197  2999               	goto	u5601
  6817  0198  07BA               	addwf	___flmul@grs+1,f
  6818  0199                     u5601:
  6819  0199  0834               	movf	??___flmul+2,w
  6820  019A  1103               	clrz
  6821  019B  1803               	skipnc
  6822  019C  3E01               	addlw	1
  6823  019D  1903               	skipnz
  6824  019E  29A0               	goto	u5602
  6825  019F  07BB               	addwf	___flmul@grs+2,f
  6826  01A0                     u5602:
  6827  01A0  0835               	movf	??___flmul+3,w
  6828  01A1  1103               	clrz
  6829  01A2  1803               	skipnc
  6830  01A3  3E01               	addlw	1
  6831  01A4  1903               	skipnz
  6832  01A5  29A7               	goto	u5603
  6833  01A6  07BC               	addwf	___flmul@grs+3,f
  6834  01A7                     u5603:
  6835  01A7                     l3635:
  6836  01A7  3008               	movlw	8
  6837  01A8  00B2               	movwf	??___flmul
  6838  01A9                     u5615:
  6839  01A9  1003               	clrc
  6840  01AA  0DB9               	rlf	___flmul@grs,f
  6841  01AB  0DBA               	rlf	___flmul@grs+1,f
  6842  01AC  0DBB               	rlf	___flmul@grs+2,f
  6843  01AD  0DBC               	rlf	___flmul@grs+3,f
  6844  01AE  0BB2               	decfsz	??___flmul,f
  6845  01AF  29A9               	goto	u5615
  6846  01B0  082A               	movf	___flmul@b,w
  6847  01B1  00B2               	movwf	??___flmul
  6848  01B2  0832               	movf	??___flmul,w
  6849  01B3  00F3               	movwf	__Umul8_16@multiplicand
  6850  01B4  082E               	movf	___flmul@a,w
  6851  01B5  120A  158A  2002  120A  118A  	fcall	__Umul8_16
  6852  01BA  0874               	movf	?__Umul8_16+1,w
  6853  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  6854  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  6855  01BD  00C3               	movwf	___flmul@temp+1
  6856  01BE  0873               	movf	?__Umul8_16,w
  6857  01BF  00C2               	movwf	___flmul@temp
  6858  01C0                     l3637:
  6859  01C0  0842               	movf	___flmul@temp,w
  6860  01C1  00B2               	movwf	??___flmul
  6861  01C2  0843               	movf	___flmul@temp+1,w
  6862  01C3  00B3               	movwf	??___flmul+1
  6863  01C4  01B4               	clrf	??___flmul+2
  6864  01C5  01B5               	clrf	??___flmul+3
  6865  01C6  0832               	movf	??___flmul,w
  6866  01C7  07B9               	addwf	___flmul@grs,f
  6867  01C8  0833               	movf	??___flmul+1,w
  6868  01C9  1103               	clrz
  6869  01CA  1803               	skipnc
  6870  01CB  3E01               	addlw	1
  6871  01CC  1903               	skipnz
  6872  01CD  29CF               	goto	u5621
  6873  01CE  07BA               	addwf	___flmul@grs+1,f
  6874  01CF                     u5621:
  6875  01CF  0834               	movf	??___flmul+2,w
  6876  01D0  1103               	clrz
  6877  01D1  1803               	skipnc
  6878  01D2  3E01               	addlw	1
  6879  01D3  1903               	skipnz
  6880  01D4  29D6               	goto	u5622
  6881  01D5  07BB               	addwf	___flmul@grs+2,f
  6882  01D6                     u5622:
  6883  01D6  0835               	movf	??___flmul+3,w
  6884  01D7  1103               	clrz
  6885  01D8  1803               	skipnc
  6886  01D9  3E01               	addlw	1
  6887  01DA  1903               	skipnz
  6888  01DB  29DD               	goto	u5623
  6889  01DC  07BC               	addwf	___flmul@grs+3,f
  6890  01DD                     u5623:
  6891  01DD                     l3639:
  6892  01DD  082B               	movf	___flmul@b+1,w
  6893  01DE  00B2               	movwf	??___flmul
  6894  01DF  0832               	movf	??___flmul,w
  6895  01E0  00F3               	movwf	__Umul8_16@multiplicand
  6896  01E1  0830               	movf	___flmul@a+2,w
  6897  01E2  120A  158A  2002  120A  118A  	fcall	__Umul8_16
  6898  01E7  0874               	movf	?__Umul8_16+1,w
  6899  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  6900  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  6901  01EA  00C3               	movwf	___flmul@temp+1
  6902  01EB  0873               	movf	?__Umul8_16,w
  6903  01EC  00C2               	movwf	___flmul@temp
  6904  01ED  0842               	movf	___flmul@temp,w
  6905  01EE  00B2               	movwf	??___flmul
  6906  01EF  0843               	movf	___flmul@temp+1,w
  6907  01F0  00B3               	movwf	??___flmul+1
  6908  01F1  01B4               	clrf	??___flmul+2
  6909  01F2  01B5               	clrf	??___flmul+3
  6910  01F3  0832               	movf	??___flmul,w
  6911  01F4  07BE               	addwf	___flmul@prod,f
  6912  01F5  0833               	movf	??___flmul+1,w
  6913  01F6  1103               	clrz
  6914  01F7  1803               	skipnc
  6915  01F8  3E01               	addlw	1
  6916  01F9  1903               	skipnz
  6917  01FA  29FC               	goto	u5631
  6918  01FB  07BF               	addwf	___flmul@prod+1,f
  6919  01FC                     u5631:
  6920  01FC  0834               	movf	??___flmul+2,w
  6921  01FD  1103               	clrz
  6922  01FE  1803               	skipnc
  6923  01FF  3E01               	addlw	1
  6924  0200  1903               	skipnz
  6925  0201  2A03               	goto	u5632
  6926  0202  07C0               	addwf	___flmul@prod+2,f
  6927  0203                     u5632:
  6928  0203  0835               	movf	??___flmul+3,w
  6929  0204  1103               	clrz
  6930  0205  1803               	skipnc
  6931  0206  3E01               	addlw	1
  6932  0207  1903               	skipnz
  6933  0208  2A0A               	goto	u5633
  6934  0209  07C1               	addwf	___flmul@prod+3,f
  6935  020A                     u5633:
  6936  020A                     l3641:
  6937  020A  082C               	movf	___flmul@b+2,w
  6938  020B  00B2               	movwf	??___flmul
  6939  020C  0832               	movf	??___flmul,w
  6940  020D  00F3               	movwf	__Umul8_16@multiplicand
  6941  020E  082F               	movf	___flmul@a+1,w
  6942  020F  120A  158A  2002  120A  118A  	fcall	__Umul8_16
  6943  0214  0874               	movf	?__Umul8_16+1,w
  6944  0215  1283               	bcf	3,5	;RP0=0, select bank0
  6945  0216  1303               	bcf	3,6	;RP1=0, select bank0
  6946  0217  00C3               	movwf	___flmul@temp+1
  6947  0218  0873               	movf	?__Umul8_16,w
  6948  0219  00C2               	movwf	___flmul@temp
  6949  021A                     l3643:
  6950  021A  0842               	movf	___flmul@temp,w
  6951  021B  00B2               	movwf	??___flmul
  6952  021C  0843               	movf	___flmul@temp+1,w
  6953  021D  00B3               	movwf	??___flmul+1
  6954  021E  01B4               	clrf	??___flmul+2
  6955  021F  01B5               	clrf	??___flmul+3
  6956  0220  0832               	movf	??___flmul,w
  6957  0221  07BE               	addwf	___flmul@prod,f
  6958  0222  0833               	movf	??___flmul+1,w
  6959  0223  1103               	clrz
  6960  0224  1803               	skipnc
  6961  0225  3E01               	addlw	1
  6962  0226  1903               	skipnz
  6963  0227  2A29               	goto	u5641
  6964  0228  07BF               	addwf	___flmul@prod+1,f
  6965  0229                     u5641:
  6966  0229  0834               	movf	??___flmul+2,w
  6967  022A  1103               	clrz
  6968  022B  1803               	skipnc
  6969  022C  3E01               	addlw	1
  6970  022D  1903               	skipnz
  6971  022E  2A30               	goto	u5642
  6972  022F  07C0               	addwf	___flmul@prod+2,f
  6973  0230                     u5642:
  6974  0230  0835               	movf	??___flmul+3,w
  6975  0231  1103               	clrz
  6976  0232  1803               	skipnc
  6977  0233  3E01               	addlw	1
  6978  0234  1903               	skipnz
  6979  0235  2A37               	goto	u5643
  6980  0236  07C1               	addwf	___flmul@prod+3,f
  6981  0237                     u5643:
  6982  0237  082C               	movf	___flmul@b+2,w
  6983  0238  00B2               	movwf	??___flmul
  6984  0239  0832               	movf	??___flmul,w
  6985  023A  00F3               	movwf	__Umul8_16@multiplicand
  6986  023B  0830               	movf	___flmul@a+2,w
  6987  023C  120A  158A  2002  120A  118A  	fcall	__Umul8_16
  6988  0241  0874               	movf	?__Umul8_16+1,w
  6989  0242  1283               	bcf	3,5	;RP0=0, select bank0
  6990  0243  1303               	bcf	3,6	;RP1=0, select bank0
  6991  0244  00C3               	movwf	___flmul@temp+1
  6992  0245  0873               	movf	?__Umul8_16,w
  6993  0246  00C2               	movwf	___flmul@temp
  6994  0247                     l3645:
  6995  0247  0842               	movf	___flmul@temp,w
  6996  0248  00B2               	movwf	??___flmul
  6997  0249  0843               	movf	___flmul@temp+1,w
  6998  024A  00B3               	movwf	??___flmul+1
  6999  024B  01B4               	clrf	??___flmul+2
  7000  024C  01B5               	clrf	??___flmul+3
  7001  024D  3008               	movlw	8
  7002  024E                     u5655:
  7003  024E  1003               	clrc
  7004  024F  0DB2               	rlf	??___flmul,f
  7005  0250  0DB3               	rlf	??___flmul+1,f
  7006  0251  0DB4               	rlf	??___flmul+2,f
  7007  0252  0DB5               	rlf	??___flmul+3,f
  7008  0253                     u5650:
  7009  0253  3EFF               	addlw	-1
  7010  0254  1D03               	skipz
  7011  0255  2A4E               	goto	u5655
  7012  0256  0832               	movf	??___flmul,w
  7013  0257  07BE               	addwf	___flmul@prod,f
  7014  0258  0833               	movf	??___flmul+1,w
  7015  0259  1103               	clrz
  7016  025A  1803               	skipnc
  7017  025B  3E01               	addlw	1
  7018  025C  1903               	skipnz
  7019  025D  2A5F               	goto	u5661
  7020  025E  07BF               	addwf	___flmul@prod+1,f
  7021  025F                     u5661:
  7022  025F  0834               	movf	??___flmul+2,w
  7023  0260  1103               	clrz
  7024  0261  1803               	skipnc
  7025  0262  3E01               	addlw	1
  7026  0263  1903               	skipnz
  7027  0264  2A66               	goto	u5662
  7028  0265  07C0               	addwf	___flmul@prod+2,f
  7029  0266                     u5662:
  7030  0266  0835               	movf	??___flmul+3,w
  7031  0267  1103               	clrz
  7032  0268  1803               	skipnc
  7033  0269  3E01               	addlw	1
  7034  026A  1903               	skipnz
  7035  026B  2A6D               	goto	u5663
  7036  026C  07C1               	addwf	___flmul@prod+3,f
  7037  026D                     u5663:
  7038  026D                     l3647:
  7039  026D  0839               	movf	___flmul@grs,w
  7040  026E  00B2               	movwf	??___flmul
  7041  026F  083A               	movf	___flmul@grs+1,w
  7042  0270  00B3               	movwf	??___flmul+1
  7043  0271  083B               	movf	___flmul@grs+2,w
  7044  0272  00B4               	movwf	??___flmul+2
  7045  0273  083C               	movf	___flmul@grs+3,w
  7046  0274  00B5               	movwf	??___flmul+3
  7047  0275  3018               	movlw	24
  7048  0276                     u5675:
  7049  0276  1003               	clrc
  7050  0277  0CB5               	rrf	??___flmul+3,f
  7051  0278  0CB4               	rrf	??___flmul+2,f
  7052  0279  0CB3               	rrf	??___flmul+1,f
  7053  027A  0CB2               	rrf	??___flmul,f
  7054  027B                     u5670:
  7055  027B  3EFF               	addlw	-1
  7056  027C  1D03               	skipz
  7057  027D  2A76               	goto	u5675
  7058  027E  0832               	movf	??___flmul,w
  7059  027F  07BE               	addwf	___flmul@prod,f
  7060  0280  0833               	movf	??___flmul+1,w
  7061  0281  1103               	clrz
  7062  0282  1803               	skipnc
  7063  0283  3E01               	addlw	1
  7064  0284  1903               	skipnz
  7065  0285  2A87               	goto	u5681
  7066  0286  07BF               	addwf	___flmul@prod+1,f
  7067  0287                     u5681:
  7068  0287  0834               	movf	??___flmul+2,w
  7069  0288  1103               	clrz
  7070  0289  1803               	skipnc
  7071  028A  3E01               	addlw	1
  7072  028B  1903               	skipnz
  7073  028C  2A8E               	goto	u5682
  7074  028D  07C0               	addwf	___flmul@prod+2,f
  7075  028E                     u5682:
  7076  028E  0835               	movf	??___flmul+3,w
  7077  028F  1103               	clrz
  7078  0290  1803               	skipnc
  7079  0291  3E01               	addlw	1
  7080  0292  1903               	skipnz
  7081  0293  2A95               	goto	u5683
  7082  0294  07C1               	addwf	___flmul@prod+3,f
  7083  0295                     u5683:
  7084  0295                     l3649:
  7085  0295  3008               	movlw	8
  7086  0296  00B2               	movwf	??___flmul
  7087  0297                     u5695:
  7088  0297  1003               	clrc
  7089  0298  0DB9               	rlf	___flmul@grs,f
  7090  0299  0DBA               	rlf	___flmul@grs+1,f
  7091  029A  0DBB               	rlf	___flmul@grs+2,f
  7092  029B  0DBC               	rlf	___flmul@grs+3,f
  7093  029C  0BB2               	decfsz	??___flmul,f
  7094  029D  2A97               	goto	u5695
  7095  029E                     l3651:
  7096  029E  083D               	movf	___flmul@bexp,w
  7097  029F  0738               	addwf	___flmul@aexp,w
  7098  02A0  00B2               	movwf	??___flmul
  7099  02A1  01B3               	clrf	??___flmul+1
  7100  02A2  0DB3               	rlf	??___flmul+1,f
  7101  02A3  0832               	movf	??___flmul,w
  7102  02A4  3E82               	addlw	130
  7103  02A5  00C2               	movwf	___flmul@temp
  7104  02A6  0833               	movf	??___flmul+1,w
  7105  02A7  1803               	skipnc
  7106  02A8  3E01               	addlw	1
  7107  02A9  3EFF               	addlw	255
  7108  02AA  00C3               	movwf	___flmul@temp+1
  7109  02AB  2AC9               	goto	l3663
  7110  02AC                     l3653:
  7111  02AC  3001               	movlw	1
  7112  02AD  00B2               	movwf	??___flmul
  7113  02AE                     u5705:
  7114  02AE  1003               	clrc
  7115  02AF  0DBE               	rlf	___flmul@prod,f
  7116  02B0  0DBF               	rlf	___flmul@prod+1,f
  7117  02B1  0DC0               	rlf	___flmul@prod+2,f
  7118  02B2  0DC1               	rlf	___flmul@prod+3,f
  7119  02B3  0BB2               	decfsz	??___flmul,f
  7120  02B4  2AAE               	goto	u5705
  7121  02B5                     l3655:
  7122  02B5  1FBC               	btfss	___flmul@grs+3,7
  7123  02B6  2AB8               	goto	u5711
  7124  02B7  2AB9               	goto	u5710
  7125  02B8                     u5711:
  7126  02B8  2ABA               	goto	l3659
  7127  02B9                     u5710:
  7128  02B9                     l3657:
  7129  02B9  143E               	bsf	___flmul@prod,0
  7130  02BA                     l3659:
  7131  02BA  3001               	movlw	1
  7132  02BB  00B2               	movwf	??___flmul
  7133  02BC                     u5725:
  7134  02BC  1003               	clrc
  7135  02BD  0DB9               	rlf	___flmul@grs,f
  7136  02BE  0DBA               	rlf	___flmul@grs+1,f
  7137  02BF  0DBB               	rlf	___flmul@grs+2,f
  7138  02C0  0DBC               	rlf	___flmul@grs+3,f
  7139  02C1  0BB2               	decfsz	??___flmul,f
  7140  02C2  2ABC               	goto	u5725
  7141  02C3                     l3661:
  7142  02C3  30FF               	movlw	255
  7143  02C4  07C2               	addwf	___flmul@temp,f
  7144  02C5  1803               	skipnc
  7145  02C6  0AC3               	incf	___flmul@temp+1,f
  7146  02C7  30FF               	movlw	255
  7147  02C8  07C3               	addwf	___flmul@temp+1,f
  7148  02C9                     l3663:
  7149  02C9  1FC0               	btfss	___flmul@prod+2,7
  7150  02CA  2ACC               	goto	u5731
  7151  02CB  2ACD               	goto	u5730
  7152  02CC                     u5731:
  7153  02CC  2AAC               	goto	l3653
  7154  02CD                     u5730:
  7155  02CD                     l3665:
  7156  02CD  01B8               	clrf	___flmul@aexp
  7157  02CE                     l3667:
  7158  02CE  1FBC               	btfss	___flmul@grs+3,7
  7159  02CF  2AD1               	goto	u5741
  7160  02D0  2AD2               	goto	u5740
  7161  02D1                     u5741:
  7162  02D1  2AEE               	goto	l3675
  7163  02D2                     u5740:
  7164  02D2                     l3669:
  7165  02D2  30FF               	movlw	255
  7166  02D3  0539               	andwf	___flmul@grs,w
  7167  02D4  00B2               	movwf	??___flmul
  7168  02D5  30FF               	movlw	255
  7169  02D6  053A               	andwf	___flmul@grs+1,w
  7170  02D7  00B3               	movwf	??___flmul+1
  7171  02D8  30FF               	movlw	255
  7172  02D9  053B               	andwf	___flmul@grs+2,w
  7173  02DA  00B4               	movwf	??___flmul+2
  7174  02DB  307F               	movlw	127
  7175  02DC  053C               	andwf	___flmul@grs+3,w
  7176  02DD  00B5               	movwf	??___flmul+3
  7177  02DE  0835               	movf	??___flmul+3,w
  7178  02DF  0434               	iorwf	??___flmul+2,w
  7179  02E0  0433               	iorwf	??___flmul+1,w
  7180  02E1  0432               	iorwf	??___flmul,w
  7181  02E2  1903               	skipnz
  7182  02E3  2AE5               	goto	u5751
  7183  02E4  2AE6               	goto	u5750
  7184  02E5                     u5751:
  7185  02E5  2AE9               	goto	l697
  7186  02E6                     u5750:
  7187  02E6                     l3671:
  7188  02E6  01B8               	clrf	___flmul@aexp
  7189  02E7  0AB8               	incf	___flmul@aexp,f
  7190  02E8  2AEE               	goto	l3675
  7191  02E9                     l697:
  7192  02E9  1C3E               	btfss	___flmul@prod,0
  7193  02EA  2AEC               	goto	u5761
  7194  02EB  2AED               	goto	u5760
  7195  02EC                     u5761:
  7196  02EC  2AEE               	goto	l3675
  7197  02ED                     u5760:
  7198  02ED  2AE6               	goto	l3671
  7199  02EE                     l3675:
  7200  02EE  0838               	movf	___flmul@aexp,w
  7201  02EF  1903               	btfsc	3,2
  7202  02F0  2AF2               	goto	u5771
  7203  02F1  2AF3               	goto	u5770
  7204  02F2                     u5771:
  7205  02F2  2B24               	goto	l3685
  7206  02F3                     u5770:
  7207  02F3                     l3677:
  7208  02F3  3001               	movlw	1
  7209  02F4  07BE               	addwf	___flmul@prod,f
  7210  02F5  3000               	movlw	0
  7211  02F6  1803               	skipnc
  7212  02F7  3001               	movlw	1
  7213  02F8  07BF               	addwf	___flmul@prod+1,f
  7214  02F9  3000               	movlw	0
  7215  02FA  1803               	skipnc
  7216  02FB  3001               	movlw	1
  7217  02FC  07C0               	addwf	___flmul@prod+2,f
  7218  02FD  3000               	movlw	0
  7219  02FE  1803               	skipnc
  7220  02FF  3001               	movlw	1
  7221  0300  07C1               	addwf	___flmul@prod+3,f
  7222  0301                     l3679:
  7223  0301  1C41               	btfss	___flmul@prod+3,0
  7224  0302  2B04               	goto	u5781
  7225  0303  2B05               	goto	u5780
  7226  0304                     u5781:
  7227  0304  2B24               	goto	l3685
  7228  0305                     u5780:
  7229  0305                     l3681:
  7230  0305  083E               	movf	___flmul@prod,w
  7231  0306  00B2               	movwf	??___flmul
  7232  0307  083F               	movf	___flmul@prod+1,w
  7233  0308  00B3               	movwf	??___flmul+1
  7234  0309  0840               	movf	___flmul@prod+2,w
  7235  030A  00B4               	movwf	??___flmul+2
  7236  030B  0841               	movf	___flmul@prod+3,w
  7237  030C  00B5               	movwf	??___flmul+3
  7238  030D  3001               	movlw	1
  7239  030E  00B6               	movwf	??___flmul+4
  7240  030F                     u5795:
  7241  030F  0D35               	rlf	??___flmul+3,w
  7242  0310  0CB5               	rrf	??___flmul+3,f
  7243  0311  0CB4               	rrf	??___flmul+2,f
  7244  0312  0CB3               	rrf	??___flmul+1,f
  7245  0313  0CB2               	rrf	??___flmul,f
  7246  0314                     u5790:
  7247  0314  0BB6               	decfsz	??___flmul+4,f
  7248  0315  2B0F               	goto	u5795
  7249  0316  0835               	movf	??___flmul+3,w
  7250  0317  00C1               	movwf	___flmul@prod+3
  7251  0318  0834               	movf	??___flmul+2,w
  7252  0319  00C0               	movwf	___flmul@prod+2
  7253  031A  0833               	movf	??___flmul+1,w
  7254  031B  00BF               	movwf	___flmul@prod+1
  7255  031C  0832               	movf	??___flmul,w
  7256  031D  00BE               	movwf	___flmul@prod
  7257  031E                     l3683:
  7258  031E  3001               	movlw	1
  7259  031F  07C2               	addwf	___flmul@temp,f
  7260  0320  1803               	skipnc
  7261  0321  0AC3               	incf	___flmul@temp+1,f
  7262  0322  3000               	movlw	0
  7263  0323  07C3               	addwf	___flmul@temp+1,f
  7264  0324                     l3685:
  7265  0324  0843               	movf	___flmul@temp+1,w
  7266  0325  3A80               	xorlw	128
  7267  0326  00FF               	movwf	btemp+1
  7268  0327  3080               	movlw	128
  7269  0328  027F               	subwf	btemp+1,w
  7270  0329  1D03               	skipz
  7271  032A  2B2D               	goto	u5805
  7272  032B  30FF               	movlw	255
  7273  032C  0242               	subwf	___flmul@temp,w
  7274  032D                     u5805:
  7275  032D  1C03               	skipc
  7276  032E  2B30               	goto	u5801
  7277  032F  2B31               	goto	u5800
  7278  0330                     u5801:
  7279  0330  2B3C               	goto	l3689
  7280  0331                     u5800:
  7281  0331                     l3687:
  7282  0331  307F               	movlw	127
  7283  0332  1283               	bcf	3,5	;RP0=0, select bank0
  7284  0333  1303               	bcf	3,6	;RP1=0, select bank0
  7285  0334  00C1               	movwf	___flmul@prod+3
  7286  0335  3080               	movlw	128
  7287  0336  00C0               	movwf	___flmul@prod+2
  7288  0337  3000               	movlw	0
  7289  0338  00BF               	movwf	___flmul@prod+1
  7290  0339  3000               	movlw	0
  7291  033A  00BE               	movwf	___flmul@prod
  7292  033B  2B71               	goto	l703
  7293  033C                     l3689:
  7294  033C  1283               	bcf	3,5	;RP0=0, select bank0
  7295  033D  1303               	bcf	3,6	;RP1=0, select bank0
  7296  033E  0843               	movf	___flmul@temp+1,w
  7297  033F  3A80               	xorlw	128
  7298  0340  00FF               	movwf	btemp+1
  7299  0341  3080               	movlw	128
  7300  0342  027F               	subwf	btemp+1,w
  7301  0343  1D03               	skipz
  7302  0344  2B47               	goto	u5815
  7303  0345  3001               	movlw	1
  7304  0346  0242               	subwf	___flmul@temp,w
  7305  0347                     u5815:
  7306  0347  1803               	skipnc
  7307  0348  2B4A               	goto	u5811
  7308  0349  2B4B               	goto	u5810
  7309  034A                     u5811:
  7310  034A  2B57               	goto	l3695
  7311  034B                     u5810:
  7312  034B                     l3691:
  7313  034B  3000               	movlw	0
  7314  034C  1283               	bcf	3,5	;RP0=0, select bank0
  7315  034D  1303               	bcf	3,6	;RP1=0, select bank0
  7316  034E  00C1               	movwf	___flmul@prod+3
  7317  034F  3000               	movlw	0
  7318  0350  00C0               	movwf	___flmul@prod+2
  7319  0351  3000               	movlw	0
  7320  0352  00BF               	movwf	___flmul@prod+1
  7321  0353  3000               	movlw	0
  7322  0354  00BE               	movwf	___flmul@prod
  7323  0355                     l3693:
  7324  0355  01B7               	clrf	___flmul@sign
  7325  0356  2B71               	goto	l703
  7326  0357                     l3695:
  7327  0357  1283               	bcf	3,5	;RP0=0, select bank0
  7328  0358  1303               	bcf	3,6	;RP1=0, select bank0
  7329  0359  0842               	movf	___flmul@temp,w
  7330  035A  00B2               	movwf	??___flmul
  7331  035B  0832               	movf	??___flmul,w
  7332  035C  00BD               	movwf	___flmul@bexp
  7333  035D  30FF               	movlw	255
  7334  035E  05BE               	andwf	___flmul@prod,f
  7335  035F  30FF               	movlw	255
  7336  0360  05BF               	andwf	___flmul@prod+1,f
  7337  0361  307F               	movlw	127
  7338  0362  05C0               	andwf	___flmul@prod+2,f
  7339  0363  3000               	movlw	0
  7340  0364  05C1               	andwf	___flmul@prod+3,f
  7341  0365                     l3697:
  7342  0365  1C3D               	btfss	___flmul@bexp,0
  7343  0366  2B68               	goto	u5821
  7344  0367  2B69               	goto	u5820
  7345  0368                     u5821:
  7346  0368  2B6A               	goto	l3701
  7347  0369                     u5820:
  7348  0369                     l3699:
  7349  0369  17C0               	bsf	___flmul@prod+2,7
  7350  036A                     l3701:
  7351  036A  083D               	movf	___flmul@bexp,w
  7352  036B  00B2               	movwf	??___flmul
  7353  036C  1003               	clrc
  7354  036D  0C32               	rrf	??___flmul,w
  7355  036E  00B3               	movwf	??___flmul+1
  7356  036F  0833               	movf	??___flmul+1,w
  7357  0370  00C1               	movwf	___flmul@prod+3
  7358  0371                     l703:
  7359  0371  0837               	movf	___flmul@sign,w
  7360  0372  00B2               	movwf	??___flmul
  7361  0373  0832               	movf	??___flmul,w
  7362  0374  04C1               	iorwf	___flmul@prod+3,f
  7363  0375                     l3703:
  7364  0375  0841               	movf	___flmul@prod+3,w
  7365  0376  00AD               	movwf	?___flmul+3
  7366  0377  0840               	movf	___flmul@prod+2,w
  7367  0378  00AC               	movwf	?___flmul+2
  7368  0379  083F               	movf	___flmul@prod+1,w
  7369  037A  00AB               	movwf	?___flmul+1
  7370  037B  083E               	movf	___flmul@prod,w
  7371  037C  00AA               	movwf	?___flmul
  7372  037D                     l691:
  7373  037D  0008               	return
  7374  037E                     __end_of___flmul:
  7375                           
  7376                           	psect	text19
  7377  0802                     __ptext19:	
  7378 ;; *************** function __Umul8_16 *****************
  7379 ;; Defined at:
  7380 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  7381 ;; Parameters:    Size  Location     Type
  7382 ;;  multiplier      1    wreg     unsigned char 
  7383 ;;  multiplicand    1    3[COMMON] unsigned char 
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;  multiplier      1    4[BANK0 ] unsigned char 
  7386 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  7387 ;;  product         2    0[BANK0 ] unsigned int 
  7388 ;; Return value:  Size  Location     Type
  7389 ;;                  2    3[COMMON] unsigned int 
  7390 ;; Registers used:
  7391 ;;		wreg, status,2, status,0
  7392 ;; Tracked objects:
  7393 ;;		On entry : 0/0
  7394 ;;		On exit  : 0/0
  7395 ;;		Unchanged: 0/0
  7396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7397 ;;      Params:         2       0       0       0       0
  7398 ;;      Locals:         0       5       0       0       0
  7399 ;;      Temps:          2       0       0       0       0
  7400 ;;      Totals:         4       5       0       0       0
  7401 ;;Total ram usage:        9 bytes
  7402 ;; Hardware stack levels used:    1
  7403 ;; Hardware stack levels required when called:    1
  7404 ;; This function calls:
  7405 ;;		Nothing
  7406 ;; This function is called by:
  7407 ;;		___flmul
  7408 ;; This function uses a non-reentrant model
  7409 ;;
  7410                           
  7411                           
  7412                           ;psect for function __Umul8_16
  7413  0802                     __Umul8_16:
  7414                           
  7415                           ;incstack = 0
  7416                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7417                           ;__Umul8_16@multiplier stored from wreg
  7418  0802  1283               	bcf	3,5	;RP0=0, select bank0
  7419  0803  1303               	bcf	3,6	;RP1=0, select bank0
  7420  0804  00A4               	movwf	__Umul8_16@multiplier
  7421  0805                     l3293:
  7422  0805  01A0               	clrf	__Umul8_16@product
  7423  0806  01A1               	clrf	__Umul8_16@product+1
  7424  0807                     l3295:
  7425  0807  0873               	movf	__Umul8_16@multiplicand,w
  7426  0808  00F5               	movwf	??__Umul8_16
  7427  0809  01F6               	clrf	??__Umul8_16+1
  7428  080A  0875               	movf	??__Umul8_16,w
  7429  080B  00A2               	movwf	__Umul8_16@word_mpld
  7430  080C  0876               	movf	??__Umul8_16+1,w
  7431  080D  00A3               	movwf	__Umul8_16@word_mpld+1
  7432  080E                     l3297:
  7433  080E  1C24               	btfss	__Umul8_16@multiplier,0
  7434  080F  2811               	goto	u4901
  7435  0810  2812               	goto	u4900
  7436  0811                     u4901:
  7437  0811  2818               	goto	l710
  7438  0812                     u4900:
  7439  0812                     l3299:
  7440  0812  0822               	movf	__Umul8_16@word_mpld,w
  7441  0813  07A0               	addwf	__Umul8_16@product,f
  7442  0814  1803               	skipnc
  7443  0815  0AA1               	incf	__Umul8_16@product+1,f
  7444  0816  0823               	movf	__Umul8_16@word_mpld+1,w
  7445  0817  07A1               	addwf	__Umul8_16@product+1,f
  7446  0818                     l710:
  7447  0818  3001               	movlw	1
  7448  0819                     u4915:
  7449  0819  1003               	clrc
  7450  081A  0DA2               	rlf	__Umul8_16@word_mpld,f
  7451  081B  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  7452  081C  3EFF               	addlw	-1
  7453  081D  1D03               	skipz
  7454  081E  2819               	goto	u4915
  7455  081F  1003               	clrc
  7456  0820  0CA4               	rrf	__Umul8_16@multiplier,f
  7457  0821                     l3301:
  7458  0821  0824               	movf	__Umul8_16@multiplier,w
  7459  0822  1D03               	btfss	3,2
  7460  0823  2825               	goto	u4921
  7461  0824  2826               	goto	u4920
  7462  0825                     u4921:
  7463  0825  280E               	goto	l3297
  7464  0826                     u4920:
  7465  0826                     l3303:
  7466  0826  0821               	movf	__Umul8_16@product+1,w
  7467  0827  00F4               	movwf	?__Umul8_16+1
  7468  0828  0820               	movf	__Umul8_16@product,w
  7469  0829  00F3               	movwf	?__Umul8_16
  7470  082A                     l712:
  7471  082A  0008               	return
  7472  082B                     __end_of__Umul8_16:
  7473                           
  7474                           	psect	text20
  7475  157F                     __ptext20:	
  7476 ;; *************** function ___flge *****************
  7477 ;; Defined at:
  7478 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7479 ;; Parameters:    Size  Location     Type
  7480 ;;  ff1             4    0[BANK0 ] unsigned int 
  7481 ;;  ff2             4    4[BANK0 ] unsigned int 
  7482 ;; Auto vars:     Size  Location     Type
  7483 ;;		None
  7484 ;; Return value:  Size  Location     Type
  7485 ;;		None               void
  7486 ;; Registers used:
  7487 ;;		wreg, status,2, status,0
  7488 ;; Tracked objects:
  7489 ;;		On entry : 0/0
  7490 ;;		On exit  : 0/0
  7491 ;;		Unchanged: 0/0
  7492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7493 ;;      Params:         0       8       0       0       0
  7494 ;;      Locals:         0       0       0       0       0
  7495 ;;      Temps:          4       0       0       0       0
  7496 ;;      Totals:         4       8       0       0       0
  7497 ;;Total ram usage:       12 bytes
  7498 ;; Hardware stack levels used:    1
  7499 ;; Hardware stack levels required when called:    1
  7500 ;; This function calls:
  7501 ;;		Nothing
  7502 ;; This function is called by:
  7503 ;;		_ftoa
  7504 ;; This function uses a non-reentrant model
  7505 ;;
  7506                           
  7507                           
  7508                           ;psect for function ___flge
  7509  157F                     ___flge:
  7510  157F                     l3355:	
  7511                           ;incstack = 0
  7512                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7513                           
  7514  157F  3000               	movlw	0
  7515  1580  1283               	bcf	3,5	;RP0=0, select bank0
  7516  1581  1303               	bcf	3,6	;RP1=0, select bank0
  7517  1582  0520               	andwf	___flge@ff1,w
  7518  1583  00F3               	movwf	??___flge
  7519  1584  3000               	movlw	0
  7520  1585  0521               	andwf	___flge@ff1+1,w
  7521  1586  00F4               	movwf	??___flge+1
  7522  1587  3080               	movlw	128
  7523  1588  0522               	andwf	___flge@ff1+2,w
  7524  1589  00F5               	movwf	??___flge+2
  7525  158A  307F               	movlw	127
  7526  158B  0523               	andwf	___flge@ff1+3,w
  7527  158C  00F6               	movwf	??___flge+3
  7528  158D  0876               	movf	??___flge+3,w
  7529  158E  0475               	iorwf	??___flge+2,w
  7530  158F  0474               	iorwf	??___flge+1,w
  7531  1590  0473               	iorwf	??___flge,w
  7532  1591  1D03               	skipz
  7533  1592  2D94               	goto	u4991
  7534  1593  2D95               	goto	u4990
  7535  1594                     u4991:
  7536  1594  2D9D               	goto	l476
  7537  1595                     u4990:
  7538  1595                     l3357:
  7539  1595  3000               	movlw	0
  7540  1596  00A3               	movwf	___flge@ff1+3
  7541  1597  3000               	movlw	0
  7542  1598  00A2               	movwf	___flge@ff1+2
  7543  1599  3000               	movlw	0
  7544  159A  00A1               	movwf	___flge@ff1+1
  7545  159B  3000               	movlw	0
  7546  159C  00A0               	movwf	___flge@ff1
  7547  159D                     l476:
  7548  159D  3000               	movlw	0
  7549  159E  0524               	andwf	___flge@ff2,w
  7550  159F  00F3               	movwf	??___flge
  7551  15A0  3000               	movlw	0
  7552  15A1  0525               	andwf	___flge@ff2+1,w
  7553  15A2  00F4               	movwf	??___flge+1
  7554  15A3  3080               	movlw	128
  7555  15A4  0526               	andwf	___flge@ff2+2,w
  7556  15A5  00F5               	movwf	??___flge+2
  7557  15A6  307F               	movlw	127
  7558  15A7  0527               	andwf	___flge@ff2+3,w
  7559  15A8  00F6               	movwf	??___flge+3
  7560  15A9  0876               	movf	??___flge+3,w
  7561  15AA  0475               	iorwf	??___flge+2,w
  7562  15AB  0474               	iorwf	??___flge+1,w
  7563  15AC  0473               	iorwf	??___flge,w
  7564  15AD  1D03               	skipz
  7565  15AE  2DB0               	goto	u5001
  7566  15AF  2DB1               	goto	u5000
  7567  15B0                     u5001:
  7568  15B0  2DB9               	goto	l3361
  7569  15B1                     u5000:
  7570  15B1                     l3359:
  7571  15B1  3000               	movlw	0
  7572  15B2  00A7               	movwf	___flge@ff2+3
  7573  15B3  3000               	movlw	0
  7574  15B4  00A6               	movwf	___flge@ff2+2
  7575  15B5  3000               	movlw	0
  7576  15B6  00A5               	movwf	___flge@ff2+1
  7577  15B7  3000               	movlw	0
  7578  15B8  00A4               	movwf	___flge@ff2
  7579  15B9                     l3361:
  7580  15B9  1FA3               	btfss	___flge@ff1+3,7
  7581  15BA  2DBC               	goto	u5011
  7582  15BB  2DBD               	goto	u5010
  7583  15BC                     u5011:
  7584  15BC  2DE1               	goto	l3365
  7585  15BD                     u5010:
  7586  15BD                     l3363:
  7587  15BD  3000               	movlw	0
  7588  15BE  00F3               	movwf	??___flge
  7589  15BF  3000               	movlw	0
  7590  15C0  00F4               	movwf	??___flge+1
  7591  15C1  3000               	movlw	0
  7592  15C2  00F5               	movwf	??___flge+2
  7593  15C3  3080               	movlw	128
  7594  15C4  00F6               	movwf	??___flge+3
  7595  15C5  0820               	movf	___flge@ff1,w
  7596  15C6  02F3               	subwf	??___flge,f
  7597  15C7  0821               	movf	___flge@ff1+1,w
  7598  15C8  1C03               	skipc
  7599  15C9  0F21               	incfsz	___flge@ff1+1,w
  7600  15CA  2DCC               	goto	u5021
  7601  15CB  2DCD               	goto	u5022
  7602  15CC                     u5021:
  7603  15CC  02F4               	subwf	??___flge+1,f
  7604  15CD                     u5022:
  7605  15CD  0822               	movf	___flge@ff1+2,w
  7606  15CE  1C03               	skipc
  7607  15CF  0F22               	incfsz	___flge@ff1+2,w
  7608  15D0  2DD2               	goto	u5023
  7609  15D1  2DD3               	goto	u5024
  7610  15D2                     u5023:
  7611  15D2  02F5               	subwf	??___flge+2,f
  7612  15D3                     u5024:
  7613  15D3  0823               	movf	___flge@ff1+3,w
  7614  15D4  1C03               	skipc
  7615  15D5  0F23               	incfsz	___flge@ff1+3,w
  7616  15D6  2DD8               	goto	u5025
  7617  15D7  2DD9               	goto	u5026
  7618  15D8                     u5025:
  7619  15D8  02F6               	subwf	??___flge+3,f
  7620  15D9                     u5026:
  7621  15D9  0876               	movf	??___flge+3,w
  7622  15DA  00A3               	movwf	___flge@ff1+3
  7623  15DB  0875               	movf	??___flge+2,w
  7624  15DC  00A2               	movwf	___flge@ff1+2
  7625  15DD  0874               	movf	??___flge+1,w
  7626  15DE  00A1               	movwf	___flge@ff1+1
  7627  15DF  0873               	movf	??___flge,w
  7628  15E0  00A0               	movwf	___flge@ff1
  7629  15E1                     l3365:
  7630  15E1  1FA7               	btfss	___flge@ff2+3,7
  7631  15E2  2DE4               	goto	u5031
  7632  15E3  2DE5               	goto	u5030
  7633  15E4                     u5031:
  7634  15E4  2E09               	goto	l479
  7635  15E5                     u5030:
  7636  15E5                     l3367:
  7637  15E5  3000               	movlw	0
  7638  15E6  00F3               	movwf	??___flge
  7639  15E7  3000               	movlw	0
  7640  15E8  00F4               	movwf	??___flge+1
  7641  15E9  3000               	movlw	0
  7642  15EA  00F5               	movwf	??___flge+2
  7643  15EB  3080               	movlw	128
  7644  15EC  00F6               	movwf	??___flge+3
  7645  15ED  0824               	movf	___flge@ff2,w
  7646  15EE  02F3               	subwf	??___flge,f
  7647  15EF  0825               	movf	___flge@ff2+1,w
  7648  15F0  1C03               	skipc
  7649  15F1  0F25               	incfsz	___flge@ff2+1,w
  7650  15F2  2DF4               	goto	u5041
  7651  15F3  2DF5               	goto	u5042
  7652  15F4                     u5041:
  7653  15F4  02F4               	subwf	??___flge+1,f
  7654  15F5                     u5042:
  7655  15F5  0826               	movf	___flge@ff2+2,w
  7656  15F6  1C03               	skipc
  7657  15F7  0F26               	incfsz	___flge@ff2+2,w
  7658  15F8  2DFA               	goto	u5043
  7659  15F9  2DFB               	goto	u5044
  7660  15FA                     u5043:
  7661  15FA  02F5               	subwf	??___flge+2,f
  7662  15FB                     u5044:
  7663  15FB  0827               	movf	___flge@ff2+3,w
  7664  15FC  1C03               	skipc
  7665  15FD  0F27               	incfsz	___flge@ff2+3,w
  7666  15FE  2E00               	goto	u5045
  7667  15FF  2E01               	goto	u5046
  7668  1600                     u5045:
  7669  1600  02F6               	subwf	??___flge+3,f
  7670  1601                     u5046:
  7671  1601  0876               	movf	??___flge+3,w
  7672  1602  00A7               	movwf	___flge@ff2+3
  7673  1603  0875               	movf	??___flge+2,w
  7674  1604  00A6               	movwf	___flge@ff2+2
  7675  1605  0874               	movf	??___flge+1,w
  7676  1606  00A5               	movwf	___flge@ff2+1
  7677  1607  0873               	movf	??___flge,w
  7678  1608  00A4               	movwf	___flge@ff2
  7679  1609                     l479:
  7680  1609  3080               	movlw	128
  7681  160A  06A3               	xorwf	___flge@ff1+3,f
  7682  160B  3080               	movlw	128
  7683  160C  06A7               	xorwf	___flge@ff2+3,f
  7684  160D  0827               	movf	___flge@ff2+3,w
  7685  160E  0223               	subwf	___flge@ff1+3,w
  7686  160F  1D03               	skipz
  7687  1610  2E1B               	goto	u5055
  7688  1611  0826               	movf	___flge@ff2+2,w
  7689  1612  0222               	subwf	___flge@ff1+2,w
  7690  1613  1D03               	skipz
  7691  1614  2E1B               	goto	u5055
  7692  1615  0825               	movf	___flge@ff2+1,w
  7693  1616  0221               	subwf	___flge@ff1+1,w
  7694  1617  1D03               	skipz
  7695  1618  2E1B               	goto	u5055
  7696  1619  0824               	movf	___flge@ff2,w
  7697  161A  0220               	subwf	___flge@ff1,w
  7698  161B                     u5055:
  7699  161B  1803               	skipnc
  7700  161C  2E1E               	goto	u5051
  7701  161D  2E1F               	goto	u5050
  7702  161E                     u5051:
  7703  161E  2E21               	goto	l3371
  7704  161F                     u5050:
  7705  161F                     l3369:
  7706  161F  1003               	clrc
  7707  1620  2E22               	goto	l480
  7708  1621                     l3371:
  7709  1621  1403               	setc
  7710  1622                     l480:
  7711  1622  0008               	return
  7712  1623                     __end_of___flge:
  7713                           
  7714                           	psect	text21
  7715  072C                     __ptext21:	
  7716 ;; *************** function _confMPU *****************
  7717 ;; Defined at:
  7718 ;;		line 63 in file "MPU6050.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;		None
  7721 ;; Auto vars:     Size  Location     Type
  7722 ;;		None
  7723 ;; Return value:  Size  Location     Type
  7724 ;;                  1    wreg      void 
  7725 ;; Registers used:
  7726 ;;		wreg, status,2, status,0, pclath, cstack
  7727 ;; Tracked objects:
  7728 ;;		On entry : 0/0
  7729 ;;		On exit  : 0/0
  7730 ;;		Unchanged: 0/0
  7731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7732 ;;      Params:         0       0       0       0       0
  7733 ;;      Locals:         0       0       0       0       0
  7734 ;;      Temps:          0       0       0       0       0
  7735 ;;      Totals:         0       0       0       0       0
  7736 ;;Total ram usage:        0 bytes
  7737 ;; Hardware stack levels used:    1
  7738 ;; Hardware stack levels required when called:    3
  7739 ;; This function calls:
  7740 ;;		_I2C_Master_Start
  7741 ;;		_I2C_Master_Stop
  7742 ;;		_I2C_Master_Write
  7743 ;; This function is called by:
  7744 ;;		_main
  7745 ;; This function uses a non-reentrant model
  7746 ;;
  7747                           
  7748                           
  7749                           ;psect for function _confMPU
  7750  072C                     _confMPU:
  7751  072C                     l3899:	
  7752                           ;incstack = 0
  7753                           ; Regs used in _confMPU: [wreg+status,2+status,0+pclath+cstack]
  7754                           
  7755                           
  7756                           ;MPU6050.c: 65:     I2C_Master_Start();
  7757  072C  160A  118A  226F  120A  118A  	fcall	_I2C_Master_Start
  7758                           
  7759                           ;MPU6050.c: 66:     I2C_Master_Write(0xD0);
  7760  0731  30D0               	movlw	208
  7761  0732  160A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
  7762                           
  7763                           ;MPU6050.c: 67:     I2C_Master_Write(0x6B);
  7764  0737  306B               	movlw	107
  7765  0738  160A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
  7766                           
  7767                           ;MPU6050.c: 68:     I2C_Master_Write(0x01);
  7768  073D  3001               	movlw	1
  7769  073E  160A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
  7770                           
  7771                           ;MPU6050.c: 69:     I2C_Master_Stop();
  7772  0743  160A  118A  2278  120A  118A  	fcall	_I2C_Master_Stop
  7773                           
  7774                           ;MPU6050.c: 71:     I2C_Master_Start();
  7775  0748  160A  118A  226F  120A  118A  	fcall	_I2C_Master_Start
  7776                           
  7777                           ;MPU6050.c: 72:     I2C_Master_Write(0xD0);
  7778  074D  30D0               	movlw	208
  7779  074E  160A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
  7780                           
  7781                           ;MPU6050.c: 73:     I2C_Master_Write(0x00);
  7782  0753  3000               	movlw	0
  7783  0754  160A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
  7784                           
  7785                           ;MPU6050.c: 74:     I2C_Master_Stop();
  7786  0759  160A  118A  2278  120A  118A  	fcall	_I2C_Master_Stop
  7787                           
  7788                           ;MPU6050.c: 77:     I2C_Master_Start();
  7789  075E  160A  118A  226F  120A  118A  	fcall	_I2C_Master_Start
  7790                           
  7791                           ;MPU6050.c: 78:     I2C_Master_Write(0xD0);
  7792  0763  30D0               	movlw	208
  7793  0764  160A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
  7794                           
  7795                           ;MPU6050.c: 79:     I2C_Master_Write(0x19);
  7796  0769  3019               	movlw	25
  7797  076A  160A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
  7798                           
  7799                           ;MPU6050.c: 80:     I2C_Master_Write(0x08);
  7800  076F  3008               	movlw	8
  7801  0770  160A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
  7802                           
  7803                           ;MPU6050.c: 81:     I2C_Master_Stop();
  7804  0775  160A  118A  2278  120A  118A  	fcall	_I2C_Master_Stop
  7805                           
  7806                           ;MPU6050.c: 83:     I2C_Master_Start();
  7807  077A  160A  118A  226F  120A  118A  	fcall	_I2C_Master_Start
  7808                           
  7809                           ;MPU6050.c: 84:     I2C_Master_Write(0xD0);
  7810  077F  30D0               	movlw	208
  7811  0780  160A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
  7812                           
  7813                           ;MPU6050.c: 85:     I2C_Master_Write(0x1A);
  7814  0785  301A               	movlw	26
  7815  0786  160A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
  7816                           
  7817                           ;MPU6050.c: 86:     I2C_Master_Write(0x00);
  7818  078B  3000               	movlw	0
  7819  078C  160A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
  7820                           
  7821                           ;MPU6050.c: 87:     I2C_Master_Stop();
  7822  0791  160A  118A  2278  120A  118A  	fcall	_I2C_Master_Stop
  7823                           
  7824                           ;MPU6050.c: 89:     I2C_Master_Start();
  7825  0796  160A  118A  226F  120A  118A  	fcall	_I2C_Master_Start
  7826                           
  7827                           ;MPU6050.c: 90:     I2C_Master_Write(0xD0);
  7828  079B  30D0               	movlw	208
  7829  079C  160A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
  7830                           
  7831                           ;MPU6050.c: 91:     I2C_Master_Write(0x1B);
  7832  07A1  301B               	movlw	27
  7833  07A2  160A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
  7834                           
  7835                           ;MPU6050.c: 92:     I2C_Master_Write(0x00);
  7836  07A7  3000               	movlw	0
  7837  07A8  160A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
  7838                           
  7839                           ;MPU6050.c: 93:     I2C_Master_Stop();
  7840  07AD  160A  118A  2278  120A  118A  	fcall	_I2C_Master_Stop
  7841                           
  7842                           ;MPU6050.c: 95:     I2C_Master_Start();
  7843  07B2  160A  118A  226F  120A  118A  	fcall	_I2C_Master_Start
  7844                           
  7845                           ;MPU6050.c: 96:     I2C_Master_Write(0xD0);
  7846  07B7  30D0               	movlw	208
  7847  07B8  160A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
  7848                           
  7849                           ;MPU6050.c: 97:     I2C_Master_Write(0x1C);
  7850  07BD  301C               	movlw	28
  7851  07BE  160A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
  7852                           
  7853                           ;MPU6050.c: 98:     I2C_Master_Write(0x00);
  7854  07C3  3000               	movlw	0
  7855  07C4  160A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
  7856                           
  7857                           ;MPU6050.c: 99:     I2C_Master_Stop();
  7858  07C9  160A  118A  2278  120A  118A  	fcall	_I2C_Master_Stop
  7859                           
  7860                           ;MPU6050.c: 103:     I2C_Master_Start();
  7861  07CE  160A  118A  226F  120A  118A  	fcall	_I2C_Master_Start
  7862                           
  7863                           ;MPU6050.c: 104:     I2C_Master_Write(0x68);
  7864  07D3  3068               	movlw	104
  7865  07D4  160A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
  7866                           
  7867                           ;MPU6050.c: 105:     I2C_Master_Write(0x6C);
  7868  07D9  306C               	movlw	108
  7869  07DA  160A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
  7870                           
  7871                           ;MPU6050.c: 106:     I2C_Master_Write(0x00);
  7872  07DF  3000               	movlw	0
  7873  07E0  160A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
  7874                           
  7875                           ;MPU6050.c: 107:     I2C_Master_Stop();
  7876  07E5  160A  118A  2278  120A  118A  	fcall	_I2C_Master_Stop
  7877  07EA                     l216:
  7878  07EA  0008               	return
  7879  07EB                     __end_of_confMPU:
  7880                           
  7881                           	psect	text22
  7882  12CD                     __ptext22:	
  7883 ;; *************** function _I2C_Master_Write *****************
  7884 ;; Defined at:
  7885 ;;		line 63 in file "I2C.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;  data            1    wreg     unsigned char 
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;  data            1    3[COMMON] unsigned char 
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  1    wreg      unsigned char 
  7892 ;; Registers used:
  7893 ;;		wreg, status,2, status,0, pclath, cstack
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7899 ;;      Params:         0       0       0       0       0
  7900 ;;      Locals:         1       0       0       0       0
  7901 ;;      Temps:          0       0       0       0       0
  7902 ;;      Totals:         1       0       0       0       0
  7903 ;;Total ram usage:        1 bytes
  7904 ;; Hardware stack levels used:    1
  7905 ;; Hardware stack levels required when called:    2
  7906 ;; This function calls:
  7907 ;;		_I2C_Master_Wait
  7908 ;; This function is called by:
  7909 ;;		_I2C_Start
  7910 ;;		_readMPU
  7911 ;;		_confMPU
  7912 ;; This function uses a non-reentrant model
  7913 ;;
  7914                           
  7915                           
  7916                           ;psect for function _I2C_Master_Write
  7917  12CD                     _I2C_Master_Write:
  7918                           
  7919                           ;incstack = 0
  7920                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  7921                           ;I2C_Master_Write@data stored from wreg
  7922  12CD  00F3               	movwf	I2C_Master_Write@data
  7923  12CE                     l3033:
  7924                           
  7925                           ;I2C.c: 63: unsigned char I2C_Master_Write(unsigned char data);I2C.c: 64: {;I2C.c: 65:  
      +                             I2C_Master_Wait();
  7926  12CE  160A  118A  22C0  160A  118A  	fcall	_I2C_Master_Wait
  7927  12D3                     l3035:
  7928                           
  7929                           ;I2C.c: 66:     SSPBUF = data;
  7930  12D3  0873               	movf	I2C_Master_Write@data,w
  7931  12D4  1283               	bcf	3,5	;RP0=0, select bank0
  7932  12D5  1303               	bcf	3,6	;RP1=0, select bank0
  7933  12D6  0093               	movwf	19	;volatile
  7934  12D7                     l70:	
  7935                           ;I2C.c: 67:     while(!SSPIF);
  7936                           
  7937  12D7  1D8C               	btfss	12,3	;volatile
  7938  12D8  2ADA               	goto	u4241
  7939  12D9  2ADB               	goto	u4240
  7940  12DA                     u4241:
  7941  12DA  2AD7               	goto	l70
  7942  12DB                     u4240:
  7943  12DB                     l72:
  7944                           
  7945                           ;I2C.c: 68:  SSPIF = 0;
  7946  12DB  118C               	bcf	12,3	;volatile
  7947  12DC                     l73:	
  7948                           ;I2C.c: 69:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  7949                           
  7950  12DC  0008               	return
  7951  12DD                     __end_of_I2C_Master_Write:
  7952                           
  7953                           	psect	text23
  7954  1278                     __ptext23:	
  7955 ;; *************** function _I2C_Master_Stop *****************
  7956 ;; Defined at:
  7957 ;;		line 43 in file "I2C.c"
  7958 ;; Parameters:    Size  Location     Type
  7959 ;;		None
  7960 ;; Auto vars:     Size  Location     Type
  7961 ;;		None
  7962 ;; Return value:  Size  Location     Type
  7963 ;;                  1    wreg      void 
  7964 ;; Registers used:
  7965 ;;		wreg, status,2, status,0, pclath, cstack
  7966 ;; Tracked objects:
  7967 ;;		On entry : 0/0
  7968 ;;		On exit  : 0/0
  7969 ;;		Unchanged: 0/0
  7970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7971 ;;      Params:         0       0       0       0       0
  7972 ;;      Locals:         0       0       0       0       0
  7973 ;;      Temps:          0       0       0       0       0
  7974 ;;      Totals:         0       0       0       0       0
  7975 ;;Total ram usage:        0 bytes
  7976 ;; Hardware stack levels used:    1
  7977 ;; Hardware stack levels required when called:    2
  7978 ;; This function calls:
  7979 ;;		_I2C_Master_Wait
  7980 ;; This function is called by:
  7981 ;;		_readMPU
  7982 ;;		_confMPU
  7983 ;; This function uses a non-reentrant model
  7984 ;;
  7985                           
  7986                           
  7987                           ;psect for function _I2C_Master_Stop
  7988  1278                     _I2C_Master_Stop:
  7989  1278                     l3331:	
  7990                           ;incstack = 0
  7991                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  7992                           
  7993                           
  7994                           ;I2C.c: 45:     I2C_Master_Wait();
  7995  1278  160A  118A  22C0  160A  118A  	fcall	_I2C_Master_Wait
  7996  127D                     l3333:
  7997                           
  7998                           ;I2C.c: 46:     PEN = 1;
  7999  127D  1683               	bsf	3,5	;RP0=1, select bank1
  8000  127E  1303               	bcf	3,6	;RP1=0, select bank1
  8001  127F  1511               	bsf	17,2	;volatile
  8002  1280                     l55:
  8003  1280  0008               	return
  8004  1281                     __end_of_I2C_Master_Stop:
  8005                           
  8006                           	psect	text24
  8007  126F                     __ptext24:	
  8008 ;; *************** function _I2C_Master_Start *****************
  8009 ;; Defined at:
  8010 ;;		line 24 in file "I2C.c"
  8011 ;; Parameters:    Size  Location     Type
  8012 ;;		None
  8013 ;; Auto vars:     Size  Location     Type
  8014 ;;		None
  8015 ;; Return value:  Size  Location     Type
  8016 ;;                  1    wreg      void 
  8017 ;; Registers used:
  8018 ;;		wreg, status,2, status,0, pclath, cstack
  8019 ;; Tracked objects:
  8020 ;;		On entry : 0/0
  8021 ;;		On exit  : 0/0
  8022 ;;		Unchanged: 0/0
  8023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8024 ;;      Params:         0       0       0       0       0
  8025 ;;      Locals:         0       0       0       0       0
  8026 ;;      Temps:          0       0       0       0       0
  8027 ;;      Totals:         0       0       0       0       0
  8028 ;;Total ram usage:        0 bytes
  8029 ;; Hardware stack levels used:    1
  8030 ;; Hardware stack levels required when called:    2
  8031 ;; This function calls:
  8032 ;;		_I2C_Master_Wait
  8033 ;; This function is called by:
  8034 ;;		_confMPU
  8035 ;; This function uses a non-reentrant model
  8036 ;;
  8037                           
  8038                           
  8039                           ;psect for function _I2C_Master_Start
  8040  126F                     _I2C_Master_Start:
  8041  126F                     l3319:	
  8042                           ;incstack = 0
  8043                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  8044                           
  8045                           
  8046                           ;I2C.c: 26:     I2C_Master_Wait();
  8047  126F  160A  118A  22C0  160A  118A  	fcall	_I2C_Master_Wait
  8048  1274                     l3321:
  8049                           
  8050                           ;I2C.c: 27:     SEN = 1;
  8051  1274  1683               	bsf	3,5	;RP0=1, select bank1
  8052  1275  1303               	bcf	3,6	;RP1=0, select bank1
  8053  1276  1411               	bsf	17,0	;volatile
  8054  1277                     l46:
  8055  1277  0008               	return
  8056  1278                     __end_of_I2C_Master_Start:
  8057                           
  8058                           	psect	text25
  8059  12C0                     __ptext25:	
  8060 ;; *************** function _I2C_Master_Wait *****************
  8061 ;; Defined at:
  8062 ;;		line 19 in file "I2C.c"
  8063 ;; Parameters:    Size  Location     Type
  8064 ;;		None
  8065 ;; Auto vars:     Size  Location     Type
  8066 ;;		None
  8067 ;; Return value:  Size  Location     Type
  8068 ;;                  1    wreg      void 
  8069 ;; Registers used:
  8070 ;;		wreg, status,2
  8071 ;; Tracked objects:
  8072 ;;		On entry : 0/0
  8073 ;;		On exit  : 0/0
  8074 ;;		Unchanged: 0/0
  8075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8076 ;;      Params:         0       0       0       0       0
  8077 ;;      Locals:         0       0       0       0       0
  8078 ;;      Temps:          0       0       0       0       0
  8079 ;;      Totals:         0       0       0       0       0
  8080 ;;Total ram usage:        0 bytes
  8081 ;; Hardware stack levels used:    1
  8082 ;; Hardware stack levels required when called:    1
  8083 ;; This function calls:
  8084 ;;		Nothing
  8085 ;; This function is called by:
  8086 ;;		_I2C_Master_Start
  8087 ;;		_I2C_Start
  8088 ;;		_I2C_Master_RepeatedStart
  8089 ;;		_I2C_Master_Stop
  8090 ;;		_I2C_Master_Write
  8091 ;;		_I2C_Read
  8092 ;;		_I2C_Read_Byte
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           
  8096                           
  8097                           ;psect for function _I2C_Master_Wait
  8098  12C0                     _I2C_Master_Wait:
  8099  12C0                     l3029:	
  8100                           ;incstack = 0
  8101                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  8102                           
  8103  12C0                     l40:	
  8104                           ;I2C.c: 21:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  8105                           
  8106  12C0  1683               	bsf	3,5	;RP0=1, select bank1
  8107  12C1  1303               	bcf	3,6	;RP1=0, select bank1
  8108  12C2  1914               	btfsc	20,2	;volatile
  8109  12C3  2AC5               	goto	u4221
  8110  12C4  2AC6               	goto	u4220
  8111  12C5                     u4221:
  8112  12C5  2AC0               	goto	l40
  8113  12C6                     u4220:
  8114  12C6                     l3031:
  8115  12C6  0811               	movf	17,w	;volatile
  8116  12C7  391F               	andlw	31
  8117  12C8  1D03               	btfss	3,2
  8118  12C9  2ACB               	goto	u4231
  8119  12CA  2ACC               	goto	u4230
  8120  12CB                     u4231:
  8121  12CB  2AC0               	goto	l40
  8122  12CC                     u4230:
  8123  12CC                     l43:
  8124  12CC  0008               	return
  8125  12CD                     __end_of_I2C_Master_Wait:
  8126                           
  8127                           	psect	text26
  8128  13D1                     __ptext26:	
  8129 ;; *************** function _UARTSendString *****************
  8130 ;; Defined at:
  8131 ;;		line 49 in file "UART.c"
  8132 ;; Parameters:    Size  Location     Type
  8133 ;;  str             2    4[COMMON] PTR const unsigned char 
  8134 ;;		 -> ftoa@buf(17), STR_7(2), STR_6(2), STR_5(2), 
  8135 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
  8136 ;;  max_length      1    6[COMMON] const unsigned char 
  8137 ;; Auto vars:     Size  Location     Type
  8138 ;;  i               2    0[BANK0 ] int 
  8139 ;; Return value:  Size  Location     Type
  8140 ;;                  1    wreg      void 
  8141 ;; Registers used:
  8142 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8143 ;; Tracked objects:
  8144 ;;		On entry : 0/0
  8145 ;;		On exit  : 0/0
  8146 ;;		Unchanged: 0/0
  8147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8148 ;;      Params:         3       0       0       0       0
  8149 ;;      Locals:         0       2       0       0       0
  8150 ;;      Temps:          3       0       0       0       0
  8151 ;;      Totals:         6       2       0       0       0
  8152 ;;Total ram usage:        8 bytes
  8153 ;; Hardware stack levels used:    1
  8154 ;; Hardware stack levels required when called:    2
  8155 ;; This function calls:
  8156 ;;		_UARTSendChar
  8157 ;; This function is called by:
  8158 ;;		_main
  8159 ;; This function uses a non-reentrant model
  8160 ;;
  8161                           
  8162                           
  8163                           ;psect for function _UARTSendString
  8164  13D1                     _UARTSendString:
  8165  13D1                     l3975:	
  8166                           ;incstack = 0
  8167                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8168                           
  8169                           
  8170                           ;UART.c: 50:     int i = 0;
  8171  13D1  1283               	bcf	3,5	;RP0=0, select bank0
  8172  13D2  1303               	bcf	3,6	;RP1=0, select bank0
  8173  13D3  01A0               	clrf	UARTSendString@i
  8174  13D4  01A1               	clrf	UARTSendString@i+1
  8175                           
  8176                           ;UART.c: 51:     for (i=0 ; i<max_length && str[i]!='\0' ; i++) {
  8177  13D5  01A0               	clrf	UARTSendString@i
  8178  13D6  01A1               	clrf	UARTSendString@i+1
  8179  13D7  2BFC               	goto	l3981
  8180  13D8                     l3977:
  8181                           
  8182                           ;UART.c: 52:         UARTSendChar(str[i]);
  8183  13D8  0820               	movf	UARTSendString@i,w
  8184  13D9  0774               	addwf	UARTSendString@str,w
  8185  13DA  00F8               	movwf	??_UARTSendString+1
  8186  13DB  0875               	movf	UARTSendString@str+1,w
  8187  13DC  00F7               	movwf	??_UARTSendString
  8188  13DD  1803               	skipnc
  8189  13DE  0AF7               	incf	??_UARTSendString,f
  8190  13DF  1FA0               	btfss	UARTSendString@i,7
  8191  13E0  2BE2               	goto	u6230
  8192  13E1  03F7               	decf	??_UARTSendString,f
  8193  13E2                     u6230:
  8194  13E2  0877               	movf	??_UARTSendString,w
  8195  13E3  00F9               	movwf	??_UARTSendString+2
  8196  13E4  0879               	movf	??_UARTSendString+2,w
  8197  13E5  1283               	bcf	3,5	;RP0=0, select bank0
  8198  13E6  1303               	bcf	3,6	;RP1=0, select bank0
  8199  13E7  00FF               	movwf	btemp+1
  8200  13E8  0878               	movf	??_UARTSendString+1,w
  8201  13E9  0084               	movwf	4
  8202  13EA  160A  118A  2000  160A  118A  	fcall	stringtab
  8203  13EF  160A  118A  22A7  160A  118A  	fcall	_UARTSendChar
  8204  13F4                     l3979:
  8205                           
  8206                           ;UART.c: 53:     }
  8207  13F4  3001               	movlw	1
  8208  13F5  1283               	bcf	3,5	;RP0=0, select bank0
  8209  13F6  1303               	bcf	3,6	;RP1=0, select bank0
  8210  13F7  07A0               	addwf	UARTSendString@i,f
  8211  13F8  1803               	skipnc
  8212  13F9  0AA1               	incf	UARTSendString@i+1,f
  8213  13FA  3000               	movlw	0
  8214  13FB  07A1               	addwf	UARTSendString@i+1,f
  8215  13FC                     l3981:
  8216  13FC  0821               	movf	UARTSendString@i+1,w
  8217  13FD  3A80               	xorlw	128
  8218  13FE  00F7               	movwf	??_UARTSendString
  8219  13FF  3080               	movlw	128
  8220  1400  0277               	subwf	??_UARTSendString,w
  8221  1401  1D03               	skipz
  8222  1402  2C05               	goto	u6245
  8223  1403  0876               	movf	UARTSendString@max_length,w
  8224  1404  0220               	subwf	UARTSendString@i,w
  8225  1405                     u6245:
  8226  1405  1803               	skipnc
  8227  1406  2C08               	goto	u6241
  8228  1407  2C09               	goto	u6240
  8229  1408                     u6241:
  8230  1408  2C27               	goto	l170
  8231  1409                     u6240:
  8232  1409                     l3983:
  8233  1409  1283               	bcf	3,5	;RP0=0, select bank0
  8234  140A  1303               	bcf	3,6	;RP1=0, select bank0
  8235  140B  0820               	movf	UARTSendString@i,w
  8236  140C  0774               	addwf	UARTSendString@str,w
  8237  140D  00F8               	movwf	??_UARTSendString+1
  8238  140E  0875               	movf	UARTSendString@str+1,w
  8239  140F  00F7               	movwf	??_UARTSendString
  8240  1410  1803               	skipnc
  8241  1411  0AF7               	incf	??_UARTSendString,f
  8242  1412  1FA0               	btfss	UARTSendString@i,7
  8243  1413  2C15               	goto	u6250
  8244  1414  03F7               	decf	??_UARTSendString,f
  8245  1415                     u6250:
  8246  1415  0877               	movf	??_UARTSendString,w
  8247  1416  00F9               	movwf	??_UARTSendString+2
  8248  1417  0879               	movf	??_UARTSendString+2,w
  8249  1418  1283               	bcf	3,5	;RP0=0, select bank0
  8250  1419  1303               	bcf	3,6	;RP1=0, select bank0
  8251  141A  00FF               	movwf	btemp+1
  8252  141B  0878               	movf	??_UARTSendString+1,w
  8253  141C  0084               	movwf	4
  8254  141D  160A  118A  2000  160A  118A  	fcall	stringtab
  8255  1422  3A00               	xorlw	0
  8256  1423  1D03               	skipz
  8257  1424  2C26               	goto	u6261
  8258  1425  2C27               	goto	u6260
  8259  1426                     u6261:
  8260  1426  2BD8               	goto	l3977
  8261  1427                     u6260:
  8262  1427                     l170:
  8263  1427  0008               	return
  8264  1428                     __end_of_UARTSendString:
  8265                           
  8266                           	psect	text27
  8267  12A7                     __ptext27:	
  8268 ;; *************** function _UARTSendChar *****************
  8269 ;; Defined at:
  8270 ;;		line 39 in file "UART.c"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;  c               1    wreg     const unsigned char 
  8273 ;; Auto vars:     Size  Location     Type
  8274 ;;  c               1    3[COMMON] const unsigned char 
  8275 ;; Return value:  Size  Location     Type
  8276 ;;                  1    wreg      void 
  8277 ;; Registers used:
  8278 ;;		wreg
  8279 ;; Tracked objects:
  8280 ;;		On entry : 0/0
  8281 ;;		On exit  : 0/0
  8282 ;;		Unchanged: 0/0
  8283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8284 ;;      Params:         0       0       0       0       0
  8285 ;;      Locals:         1       0       0       0       0
  8286 ;;      Temps:          0       0       0       0       0
  8287 ;;      Totals:         1       0       0       0       0
  8288 ;;Total ram usage:        1 bytes
  8289 ;; Hardware stack levels used:    1
  8290 ;; Hardware stack levels required when called:    1
  8291 ;; This function calls:
  8292 ;;		Nothing
  8293 ;; This function is called by:
  8294 ;;		_main
  8295 ;;		_UARTSendString
  8296 ;; This function uses a non-reentrant model
  8297 ;;
  8298                           
  8299                           
  8300                           ;psect for function _UARTSendChar
  8301  12A7                     _UARTSendChar:
  8302                           
  8303                           ;incstack = 0
  8304                           ; Regs used in _UARTSendChar: [wreg]
  8305                           ;UARTSendChar@c stored from wreg
  8306  12A7  00F3               	movwf	UARTSendChar@c
  8307  12A8                     l3351:
  8308  12A8                     l159:	
  8309                           ;UART.c: 40:     while (TXSTAbits.TRMT == 0);
  8310                           
  8311  12A8  1683               	bsf	3,5	;RP0=1, select bank1
  8312  12A9  1303               	bcf	3,6	;RP1=0, select bank1
  8313  12AA  1C98               	btfss	24,1	;volatile
  8314  12AB  2AAD               	goto	u4981
  8315  12AC  2AAE               	goto	u4980
  8316  12AD                     u4981:
  8317  12AD  2AA8               	goto	l159
  8318  12AE                     u4980:
  8319  12AE                     l3353:
  8320                           
  8321                           ;UART.c: 41:     TXREG = c;
  8322  12AE  0873               	movf	UARTSendChar@c,w
  8323  12AF  1283               	bcf	3,5	;RP0=0, select bank0
  8324  12B0  1303               	bcf	3,6	;RP1=0, select bank0
  8325  12B1  0099               	movwf	25	;volatile
  8326  12B2                     l162:
  8327  12B2  0008               	return
  8328  12B3                     __end_of_UARTSendChar:
  8329                           
  8330                           	psect	text28
  8331  1490                     __ptext28:	
  8332 ;; *************** function _UARTInit *****************
  8333 ;; Defined at:
  8334 ;;		line 8 in file "UART.c"
  8335 ;; Parameters:    Size  Location     Type
  8336 ;;  baud_rate       4    8[BANK0 ] const unsigned long 
  8337 ;;  BRGH            1   12[BANK0 ] const unsigned char 
  8338 ;; Auto vars:     Size  Location     Type
  8339 ;;		None
  8340 ;; Return value:  Size  Location     Type
  8341 ;;                  1    wreg      void 
  8342 ;; Registers used:
  8343 ;;		wreg, status,2, status,0, pclath, cstack
  8344 ;; Tracked objects:
  8345 ;;		On entry : 0/0
  8346 ;;		On exit  : 0/0
  8347 ;;		Unchanged: 0/0
  8348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8349 ;;      Params:         0       5       0       0       0
  8350 ;;      Locals:         0       0       0       0       0
  8351 ;;      Temps:          0       4       0       0       0
  8352 ;;      Totals:         0       9       0       0       0
  8353 ;;Total ram usage:        9 bytes
  8354 ;; Hardware stack levels used:    1
  8355 ;; Hardware stack levels required when called:    2
  8356 ;; This function calls:
  8357 ;;		___lldiv
  8358 ;; This function is called by:
  8359 ;;		_main
  8360 ;; This function uses a non-reentrant model
  8361 ;;
  8362                           
  8363                           
  8364                           ;psect for function _UARTInit
  8365  1490                     _UARTInit:
  8366  1490                     l3869:	
  8367                           ;incstack = 0
  8368                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  8369                           
  8370                           
  8371                           ;UART.c: 10:     if (BRGH == 0) {
  8372  1490  1283               	bcf	3,5	;RP0=0, select bank0
  8373  1491  1303               	bcf	3,6	;RP1=0, select bank0
  8374  1492  082C               	movf	UARTInit@BRGH,w
  8375  1493  1D03               	btfss	3,2
  8376  1494  2C96               	goto	u6161
  8377  1495  2C97               	goto	u6160
  8378  1496                     u6161:
  8379  1496  2CC6               	goto	l3875
  8380  1497                     u6160:
  8381  1497                     l3871:
  8382                           
  8383                           ;UART.c: 11:         SPBRG = 4000000/(64*baud_rate) - 1;
  8384  1497  0828               	movf	UARTInit@baud_rate,w
  8385  1498  00AD               	movwf	??_UARTInit
  8386  1499  0829               	movf	UARTInit@baud_rate+1,w
  8387  149A  00AE               	movwf	??_UARTInit+1
  8388  149B  082A               	movf	UARTInit@baud_rate+2,w
  8389  149C  00AF               	movwf	??_UARTInit+2
  8390  149D  082B               	movf	UARTInit@baud_rate+3,w
  8391  149E  00B0               	movwf	??_UARTInit+3
  8392  149F  3006               	movlw	6
  8393  14A0                     u6175:
  8394  14A0  1003               	clrc
  8395  14A1  0DAD               	rlf	??_UARTInit,f
  8396  14A2  0DAE               	rlf	??_UARTInit+1,f
  8397  14A3  0DAF               	rlf	??_UARTInit+2,f
  8398  14A4  0DB0               	rlf	??_UARTInit+3,f
  8399  14A5                     u6170:
  8400  14A5  3EFF               	addlw	-1
  8401  14A6  1D03               	skipz
  8402  14A7  2CA0               	goto	u6175
  8403  14A8  0830               	movf	??_UARTInit+3,w
  8404  14A9  00A3               	movwf	___lldiv@divisor+3
  8405  14AA  082F               	movf	??_UARTInit+2,w
  8406  14AB  00A2               	movwf	___lldiv@divisor+2
  8407  14AC  082E               	movf	??_UARTInit+1,w
  8408  14AD  00A1               	movwf	___lldiv@divisor+1
  8409  14AE  082D               	movf	??_UARTInit,w
  8410  14AF  00A0               	movwf	___lldiv@divisor
  8411  14B0  3000               	movlw	0
  8412  14B1  00A7               	movwf	___lldiv@dividend+3
  8413  14B2  303D               	movlw	61
  8414  14B3  00A6               	movwf	___lldiv@dividend+2
  8415  14B4  3009               	movlw	9
  8416  14B5  00A5               	movwf	___lldiv@dividend+1
  8417  14B6  3000               	movlw	0
  8418  14B7  00A4               	movwf	___lldiv@dividend
  8419  14B8  160A  118A  2428  160A  118A  	fcall	___lldiv
  8420  14BD  1283               	bcf	3,5	;RP0=0, select bank0
  8421  14BE  1303               	bcf	3,6	;RP1=0, select bank0
  8422  14BF  0820               	movf	?___lldiv,w
  8423  14C0  3EFF               	addlw	255
  8424  14C1  1683               	bsf	3,5	;RP0=1, select bank1
  8425  14C2  1303               	bcf	3,6	;RP1=0, select bank1
  8426  14C3  0099               	movwf	25	;volatile
  8427  14C4                     l3873:
  8428                           
  8429                           ;UART.c: 12:         TXSTAbits.BRGH = 0;
  8430  14C4  1118               	bcf	24,2	;volatile
  8431                           
  8432                           ;UART.c: 13:     } else {
  8433  14C5  2CF4               	goto	l3879
  8434  14C6                     l3875:
  8435                           
  8436                           ;UART.c: 14:         SPBRG = 4000000/(16*baud_rate) - 1;
  8437  14C6  0828               	movf	UARTInit@baud_rate,w
  8438  14C7  00AD               	movwf	??_UARTInit
  8439  14C8  0829               	movf	UARTInit@baud_rate+1,w
  8440  14C9  00AE               	movwf	??_UARTInit+1
  8441  14CA  082A               	movf	UARTInit@baud_rate+2,w
  8442  14CB  00AF               	movwf	??_UARTInit+2
  8443  14CC  082B               	movf	UARTInit@baud_rate+3,w
  8444  14CD  00B0               	movwf	??_UARTInit+3
  8445  14CE  3004               	movlw	4
  8446  14CF                     u6185:
  8447  14CF  1003               	clrc
  8448  14D0  0DAD               	rlf	??_UARTInit,f
  8449  14D1  0DAE               	rlf	??_UARTInit+1,f
  8450  14D2  0DAF               	rlf	??_UARTInit+2,f
  8451  14D3  0DB0               	rlf	??_UARTInit+3,f
  8452  14D4                     u6180:
  8453  14D4  3EFF               	addlw	-1
  8454  14D5  1D03               	skipz
  8455  14D6  2CCF               	goto	u6185
  8456  14D7  0830               	movf	??_UARTInit+3,w
  8457  14D8  00A3               	movwf	___lldiv@divisor+3
  8458  14D9  082F               	movf	??_UARTInit+2,w
  8459  14DA  00A2               	movwf	___lldiv@divisor+2
  8460  14DB  082E               	movf	??_UARTInit+1,w
  8461  14DC  00A1               	movwf	___lldiv@divisor+1
  8462  14DD  082D               	movf	??_UARTInit,w
  8463  14DE  00A0               	movwf	___lldiv@divisor
  8464  14DF  3000               	movlw	0
  8465  14E0  00A7               	movwf	___lldiv@dividend+3
  8466  14E1  303D               	movlw	61
  8467  14E2  00A6               	movwf	___lldiv@dividend+2
  8468  14E3  3009               	movlw	9
  8469  14E4  00A5               	movwf	___lldiv@dividend+1
  8470  14E5  3000               	movlw	0
  8471  14E6  00A4               	movwf	___lldiv@dividend
  8472  14E7  160A  118A  2428  160A  118A  	fcall	___lldiv
  8473  14EC  1283               	bcf	3,5	;RP0=0, select bank0
  8474  14ED  1303               	bcf	3,6	;RP1=0, select bank0
  8475  14EE  0820               	movf	?___lldiv,w
  8476  14EF  3EFF               	addlw	255
  8477  14F0  1683               	bsf	3,5	;RP0=1, select bank1
  8478  14F1  1303               	bcf	3,6	;RP1=0, select bank1
  8479  14F2  0099               	movwf	25	;volatile
  8480  14F3                     l3877:
  8481                           
  8482                           ;UART.c: 15:         TXSTAbits.BRGH = 1;
  8483  14F3  1518               	bsf	24,2	;volatile
  8484  14F4                     l3879:
  8485                           
  8486                           ;UART.c: 19:     TXSTAbits.TX9 = 0;
  8487  14F4  1318               	bcf	24,6	;volatile
  8488  14F5                     l3881:
  8489                           
  8490                           ;UART.c: 20:     TXSTAbits.TXEN = 1;
  8491  14F5  1698               	bsf	24,5	;volatile
  8492  14F6                     l3883:
  8493                           
  8494                           ;UART.c: 21:     TXSTAbits.SYNC = 0;
  8495  14F6  1218               	bcf	24,4	;volatile
  8496  14F7                     l3885:
  8497                           
  8498                           ;UART.c: 24:     RCSTAbits.SPEN = 1;
  8499  14F7  1283               	bcf	3,5	;RP0=0, select bank0
  8500  14F8  1303               	bcf	3,6	;RP1=0, select bank0
  8501  14F9  1798               	bsf	24,7	;volatile
  8502  14FA                     l3887:
  8503                           
  8504                           ;UART.c: 25:     RCSTAbits.RX9 = 0;
  8505  14FA  1318               	bcf	24,6	;volatile
  8506  14FB                     l3889:
  8507                           
  8508                           ;UART.c: 26:     RCSTAbits.CREN = 1;
  8509  14FB  1618               	bsf	24,4	;volatile
  8510  14FC                     l3891:
  8511                           
  8512                           ;UART.c: 27:     RCSTAbits.FERR = 0;
  8513  14FC  1118               	bcf	24,2	;volatile
  8514  14FD                     l3893:
  8515                           
  8516                           ;UART.c: 28:     RCSTAbits.OERR = 0;
  8517  14FD  1098               	bcf	24,1	;volatile
  8518  14FE                     l3895:
  8519                           
  8520                           ;UART.c: 31:     TRISCbits.TRISC7 = 1;
  8521  14FE  1683               	bsf	3,5	;RP0=1, select bank1
  8522  14FF  1303               	bcf	3,6	;RP1=0, select bank1
  8523  1500  1787               	bsf	7,7	;volatile
  8524  1501                     l3897:
  8525                           
  8526                           ;UART.c: 32:     TRISCbits.TRISC6 = 0;
  8527  1501  1307               	bcf	7,6	;volatile
  8528  1502                     l156:
  8529  1502  0008               	return
  8530  1503                     __end_of_UARTInit:
  8531                           
  8532                           	psect	text29
  8533  1428                     __ptext29:	
  8534 ;; *************** function ___lldiv *****************
  8535 ;; Defined at:
  8536 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;  divisor         4    0[BANK0 ] unsigned long 
  8539 ;;  dividend        4    4[BANK0 ] unsigned long 
  8540 ;; Auto vars:     Size  Location     Type
  8541 ;;  quotient        4    4[COMMON] unsigned long 
  8542 ;;  counter         1    8[COMMON] unsigned char 
  8543 ;; Return value:  Size  Location     Type
  8544 ;;                  4    0[BANK0 ] unsigned long 
  8545 ;; Registers used:
  8546 ;;		wreg, status,2, status,0
  8547 ;; Tracked objects:
  8548 ;;		On entry : 0/0
  8549 ;;		On exit  : 0/0
  8550 ;;		Unchanged: 0/0
  8551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8552 ;;      Params:         0       8       0       0       0
  8553 ;;      Locals:         5       0       0       0       0
  8554 ;;      Temps:          1       0       0       0       0
  8555 ;;      Totals:         6       8       0       0       0
  8556 ;;Total ram usage:       14 bytes
  8557 ;; Hardware stack levels used:    1
  8558 ;; Hardware stack levels required when called:    1
  8559 ;; This function calls:
  8560 ;;		Nothing
  8561 ;; This function is called by:
  8562 ;;		_UARTInit
  8563 ;;		_sprintf
  8564 ;; This function uses a non-reentrant model
  8565 ;;
  8566                           
  8567                           
  8568                           ;psect for function ___lldiv
  8569  1428                     ___lldiv:
  8570  1428                     l3055:	
  8571                           ;incstack = 0
  8572                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8573                           
  8574  1428  3000               	movlw	0
  8575  1429  00F7               	movwf	___lldiv@quotient+3
  8576  142A  3000               	movlw	0
  8577  142B  00F6               	movwf	___lldiv@quotient+2
  8578  142C  3000               	movlw	0
  8579  142D  00F5               	movwf	___lldiv@quotient+1
  8580  142E  3000               	movlw	0
  8581  142F  00F4               	movwf	___lldiv@quotient
  8582  1430  1283               	bcf	3,5	;RP0=0, select bank0
  8583  1431  1303               	bcf	3,6	;RP1=0, select bank0
  8584  1432  0823               	movf	___lldiv@divisor+3,w
  8585  1433  0422               	iorwf	___lldiv@divisor+2,w
  8586  1434  0421               	iorwf	___lldiv@divisor+1,w
  8587  1435  0420               	iorwf	___lldiv@divisor,w
  8588  1436  1903               	skipnz
  8589  1437  2C39               	goto	u4311
  8590  1438  2C3A               	goto	u4310
  8591  1439                     u4311:
  8592  1439  2C87               	goto	l3075
  8593  143A                     u4310:
  8594  143A                     l3057:
  8595  143A  01F8               	clrf	___lldiv@counter
  8596  143B  0AF8               	incf	___lldiv@counter,f
  8597  143C  2C4A               	goto	l3061
  8598  143D                     l3059:
  8599  143D  3001               	movlw	1
  8600  143E  00F3               	movwf	??___lldiv
  8601  143F                     u4325:
  8602  143F  1003               	clrc
  8603  1440  0DA0               	rlf	___lldiv@divisor,f
  8604  1441  0DA1               	rlf	___lldiv@divisor+1,f
  8605  1442  0DA2               	rlf	___lldiv@divisor+2,f
  8606  1443  0DA3               	rlf	___lldiv@divisor+3,f
  8607  1444  0BF3               	decfsz	??___lldiv,f
  8608  1445  2C3F               	goto	u4325
  8609  1446  3001               	movlw	1
  8610  1447  00F3               	movwf	??___lldiv
  8611  1448  0873               	movf	??___lldiv,w
  8612  1449  07F8               	addwf	___lldiv@counter,f
  8613  144A                     l3061:
  8614  144A  1FA3               	btfss	___lldiv@divisor+3,7
  8615  144B  2C4D               	goto	u4331
  8616  144C  2C4E               	goto	u4330
  8617  144D                     u4331:
  8618  144D  2C3D               	goto	l3059
  8619  144E                     u4330:
  8620  144E                     l3063:
  8621  144E  3001               	movlw	1
  8622  144F  00F3               	movwf	??___lldiv
  8623  1450                     u4345:
  8624  1450  1003               	clrc
  8625  1451  0DF4               	rlf	___lldiv@quotient,f
  8626  1452  0DF5               	rlf	___lldiv@quotient+1,f
  8627  1453  0DF6               	rlf	___lldiv@quotient+2,f
  8628  1454  0DF7               	rlf	___lldiv@quotient+3,f
  8629  1455  0BF3               	decfsz	??___lldiv,f
  8630  1456  2C50               	goto	u4345
  8631  1457                     l3065:
  8632  1457  0823               	movf	___lldiv@divisor+3,w
  8633  1458  0227               	subwf	___lldiv@dividend+3,w
  8634  1459  1D03               	skipz
  8635  145A  2C65               	goto	u4355
  8636  145B  0822               	movf	___lldiv@divisor+2,w
  8637  145C  0226               	subwf	___lldiv@dividend+2,w
  8638  145D  1D03               	skipz
  8639  145E  2C65               	goto	u4355
  8640  145F  0821               	movf	___lldiv@divisor+1,w
  8641  1460  0225               	subwf	___lldiv@dividend+1,w
  8642  1461  1D03               	skipz
  8643  1462  2C65               	goto	u4355
  8644  1463  0820               	movf	___lldiv@divisor,w
  8645  1464  0224               	subwf	___lldiv@dividend,w
  8646  1465                     u4355:
  8647  1465  1C03               	skipc
  8648  1466  2C68               	goto	u4351
  8649  1467  2C69               	goto	u4350
  8650  1468                     u4351:
  8651  1468  2C78               	goto	l3071
  8652  1469                     u4350:
  8653  1469                     l3067:
  8654  1469  0820               	movf	___lldiv@divisor,w
  8655  146A  02A4               	subwf	___lldiv@dividend,f
  8656  146B  0821               	movf	___lldiv@divisor+1,w
  8657  146C  1C03               	skipc
  8658  146D  0F21               	incfsz	___lldiv@divisor+1,w
  8659  146E  02A5               	subwf	___lldiv@dividend+1,f
  8660  146F  0822               	movf	___lldiv@divisor+2,w
  8661  1470  1C03               	skipc
  8662  1471  0F22               	incfsz	___lldiv@divisor+2,w
  8663  1472  02A6               	subwf	___lldiv@dividend+2,f
  8664  1473  0823               	movf	___lldiv@divisor+3,w
  8665  1474  1C03               	skipc
  8666  1475  0F23               	incfsz	___lldiv@divisor+3,w
  8667  1476  02A7               	subwf	___lldiv@dividend+3,f
  8668  1477                     l3069:
  8669  1477  1474               	bsf	___lldiv@quotient,0
  8670  1478                     l3071:
  8671  1478  3001               	movlw	1
  8672  1479                     u4365:
  8673  1479  1003               	clrc
  8674  147A  0CA3               	rrf	___lldiv@divisor+3,f
  8675  147B  0CA2               	rrf	___lldiv@divisor+2,f
  8676  147C  0CA1               	rrf	___lldiv@divisor+1,f
  8677  147D  0CA0               	rrf	___lldiv@divisor,f
  8678  147E  3EFF               	addlw	-1
  8679  147F  1D03               	skipz
  8680  1480  2C79               	goto	u4365
  8681  1481                     l3073:
  8682  1481  3001               	movlw	1
  8683  1482  02F8               	subwf	___lldiv@counter,f
  8684  1483  1D03               	btfss	3,2
  8685  1484  2C86               	goto	u4371
  8686  1485  2C87               	goto	u4370
  8687  1486                     u4371:
  8688  1486  2C4E               	goto	l3063
  8689  1487                     u4370:
  8690  1487                     l3075:
  8691  1487  0877               	movf	___lldiv@quotient+3,w
  8692  1488  00A3               	movwf	?___lldiv+3
  8693  1489  0876               	movf	___lldiv@quotient+2,w
  8694  148A  00A2               	movwf	?___lldiv+2
  8695  148B  0875               	movf	___lldiv@quotient+1,w
  8696  148C  00A1               	movwf	?___lldiv+1
  8697  148D  0874               	movf	___lldiv@quotient,w
  8698  148E  00A0               	movwf	?___lldiv
  8699  148F                     l338:
  8700  148F  0008               	return
  8701  1490                     __end_of___lldiv:
  8702                           
  8703                           	psect	text30
  8704  12B3                     __ptext30:	
  8705 ;; *************** function _I2C_Master_Init *****************
  8706 ;; Defined at:
  8707 ;;		line 9 in file "I2C.c"
  8708 ;; Parameters:    Size  Location     Type
  8709 ;;		None
  8710 ;; Auto vars:     Size  Location     Type
  8711 ;;		None
  8712 ;; Return value:  Size  Location     Type
  8713 ;;                  1    wreg      void 
  8714 ;; Registers used:
  8715 ;;		wreg, status,2
  8716 ;; Tracked objects:
  8717 ;;		On entry : 0/0
  8718 ;;		On exit  : 0/0
  8719 ;;		Unchanged: 0/0
  8720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8721 ;;      Params:         0       0       0       0       0
  8722 ;;      Locals:         0       0       0       0       0
  8723 ;;      Temps:          0       0       0       0       0
  8724 ;;      Totals:         0       0       0       0       0
  8725 ;;Total ram usage:        0 bytes
  8726 ;; Hardware stack levels used:    1
  8727 ;; Hardware stack levels required when called:    1
  8728 ;; This function calls:
  8729 ;;		Nothing
  8730 ;; This function is called by:
  8731 ;;		_main
  8732 ;; This function uses a non-reentrant model
  8733 ;;
  8734                           
  8735                           
  8736                           ;psect for function _I2C_Master_Init
  8737  12B3                     _I2C_Master_Init:
  8738  12B3                     l3859:	
  8739                           ;incstack = 0
  8740                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  8741                           
  8742                           
  8743                           ;I2C.c: 11:   SSPCON = 0x28;
  8744  12B3  3028               	movlw	40
  8745  12B4  1283               	bcf	3,5	;RP0=0, select bank0
  8746  12B5  1303               	bcf	3,6	;RP1=0, select bank0
  8747  12B6  0094               	movwf	20	;volatile
  8748  12B7                     l3861:
  8749                           
  8750                           ;I2C.c: 12:   SSPCON2 = 0x00;
  8751  12B7  1683               	bsf	3,5	;RP0=1, select bank1
  8752  12B8  1303               	bcf	3,6	;RP1=0, select bank1
  8753  12B9  0191               	clrf	17	;volatile
  8754  12BA                     l3863:
  8755                           
  8756                           ;I2C.c: 13:   SSPSTAT = 0x00;
  8757  12BA  0194               	clrf	20	;volatile
  8758                           
  8759                           ;I2C.c: 14:   SSPADD = ((4000000/4)/100000) - 1;
  8760  12BB  3009               	movlw	9
  8761  12BC  0093               	movwf	19	;volatile
  8762  12BD                     l3865:
  8763                           
  8764                           ;I2C.c: 15:   TRISC3 = 1;
  8765  12BD  1587               	bsf	7,3	;volatile
  8766  12BE                     l3867:
  8767                           
  8768                           ;I2C.c: 16:   TRISC4 = 1;
  8769  12BE  1607               	bsf	7,4	;volatile
  8770  12BF                     l37:
  8771  12BF  0008               	return
  8772  12C0                     __end_of_I2C_Master_Init:
  8773                           
  8774                           	psect	text31
  8775  12ED                     __ptext31:	
  8776 ;; *************** function _isr *****************
  8777 ;; Defined at:
  8778 ;;		line 106 in file "main.c"
  8779 ;; Parameters:    Size  Location     Type
  8780 ;;		None
  8781 ;; Auto vars:     Size  Location     Type
  8782 ;;		None
  8783 ;; Return value:  Size  Location     Type
  8784 ;;                  1    wreg      void 
  8785 ;; Registers used:
  8786 ;;		wreg, status,2, status,0
  8787 ;; Tracked objects:
  8788 ;;		On entry : 0/0
  8789 ;;		On exit  : 0/0
  8790 ;;		Unchanged: 0/0
  8791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8792 ;;      Params:         0       0       0       0       0
  8793 ;;      Locals:         0       0       0       0       0
  8794 ;;      Temps:          3       0       0       0       0
  8795 ;;      Totals:         3       0       0       0       0
  8796 ;;Total ram usage:        3 bytes
  8797 ;; Hardware stack levels used:    1
  8798 ;; This function calls:
  8799 ;;		Nothing
  8800 ;; This function is called by:
  8801 ;;		Interrupt level 1
  8802 ;; This function uses a non-reentrant model
  8803 ;;
  8804                           
  8805                           
  8806                           ;psect for function _isr
  8807  12ED                     _isr:
  8808  12ED                     i1l2997:
  8809                           
  8810                           ;main.c: 108:     if (PIR1bits.RCIF) {
  8811  12ED  1283               	bcf	3,5	;RP0=0, select bank0
  8812  12EE  1303               	bcf	3,6	;RP1=0, select bank0
  8813  12EF  1E8C               	btfss	12,5	;volatile
  8814  12F0  2AF2               	goto	u420_21
  8815  12F1  2AF3               	goto	u420_20
  8816  12F2                     u420_21:
  8817  12F2  2AFF               	goto	i1l137
  8818  12F3                     u420_20:
  8819  12F3                     i1l2999:
  8820                           
  8821                           ;main.c: 111:         if (RCREG == 'A') {
  8822  12F3  3041               	movlw	65
  8823  12F4  061A               	xorwf	26,w	;volatile
  8824  12F5  1D03               	btfss	3,2
  8825  12F6  2AF8               	goto	u421_21
  8826  12F7  2AF9               	goto	u421_20
  8827  12F8                     u421_21:
  8828  12F8  2AFF               	goto	i1l137
  8829  12F9                     u421_20:
  8830  12F9                     i1l3001:
  8831                           
  8832                           ;main.c: 112:             bandera = 1;
  8833  12F9  3001               	movlw	1
  8834  12FA  00F0               	movwf	??_isr
  8835  12FB  0870               	movf	??_isr,w
  8836  12FC  1683               	bsf	3,5	;RP0=1, select bank1
  8837  12FD  1303               	bcf	3,6	;RP1=0, select bank1
  8838  12FE  00C0               	movwf	_bandera^(0+128)	;volatile
  8839  12FF                     i1l137:
  8840  12FF  0872               	movf	??_isr+2,w
  8841  1300  008A               	movwf	10
  8842  1301  0E71               	swapf	??_isr+1,w
  8843  1302  0083               	movwf	3
  8844  1303  0EFE               	swapf	btemp,f
  8845  1304  0E7E               	swapf	btemp,w
  8846  1305  0009               	retfie
  8847  1306                     __end_of_isr:
  8848  007E                     btemp	set	126	;btemp
  8849  007E                     wtemp0	set	126
  8850                           
  8851                           	psect	intentry
  8852  0004                     __pintentry:	
  8853                           ;incstack = 0
  8854                           ; Regs used in _isr: [wreg+status,2+status,0]
  8855                           
  8856  0004                     interrupt_function:
  8857  007E                     saved_w	set	btemp
  8858  0004  00FE               	movwf	btemp
  8859  0005  0E03               	swapf	3,w
  8860  0006  00F1               	movwf	??_isr+1
  8861  0007  080A               	movf	10,w
  8862  0008  00F2               	movwf	??_isr+2
  8863  0009  160A  118A  2AED   	ljmp	_isr
  8864                           
  8865                           	psect	config
  8866                           
  8867                           ;Config register CONFIG1 @ 0x2007
  8868                           ;	Oscillator Selection bits
  8869                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8870                           ;	Watchdog Timer Enable bit
  8871                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8872                           ;	Power-up Timer Enable bit
  8873                           ;	PWRTE = OFF, PWRT disabled
  8874                           ;	RE3/MCLR pin function select bit
  8875                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8876                           ;	Code Protection bit
  8877                           ;	CP = OFF, Program memory code protection is disabled
  8878                           ;	Data Code Protection bit
  8879                           ;	CPD = OFF, Data memory code protection is disabled
  8880                           ;	Brown Out Reset Selection bits
  8881                           ;	BOREN = OFF, BOR disabled
  8882                           ;	Internal External Switchover bit
  8883                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8884                           ;	Fail-Safe Clock Monitor Enabled bit
  8885                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8886                           ;	Low Voltage Programming Enable bit
  8887                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8888                           ;	In-Circuit Debugger Mode bit
  8889                           ;	DEBUG = 0x1, unprogrammed default
  8890  2007                     	org	8199
  8891  2007  20D4               	dw	8404
  8892                           
  8893                           ;Config register CONFIG2 @ 0x2008
  8894                           ;	Brown-out Reset Selection bit
  8895                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8896                           ;	Flash Program Memory Self Write Enable bits
  8897                           ;	WRT = OFF, Write protection off
  8898  2008                     	org	8200
  8899  2008  3FFF               	dw	16383

Data Sizes:
    Strings     13
    Constant    40
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     80      80
    BANK1            80     32      50
    BANK3            96     31      31
    BANK2            96      0       0

Pointer List with Targets:

    ftoa@status	PTR int  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_8(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    ftoa@cp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    readMPU@datos	PTR float  size(1) Largest target is 28
		 -> main@datos(BANK3[28]), 

    UARTSendString@str	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK1[17]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    main@buffer	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 


Critical Paths under _main in COMMON

    _main->_UARTSendString
    _readMPU->___xxtofl
    ___fldiv->___xxtofl
    _I2C_Start->_I2C_Master_Write
    _sprintf->___llmod
    ___llmod->___lldiv
    ___flsub->___xxtofl
    ___fladd->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl
    _confMPU->_I2C_Master_Write
    _UARTSendString->_UARTSendChar
    _UARTInit->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ftoa
    _readMPU->___fladd
    ___fldiv->___xxtofl
    _ftoa->___flsub
    _sprintf->___llmod
    ___llmod->___lldiv
    ___fltol->___flmul
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    _UARTInit->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_readMPU

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0   32068
                                             31 BANK1      1     1      0
                                              0 BANK3     31    31      0
                    _I2C_Master_Init
                           _UARTInit
                       _UARTSendChar
                     _UARTSendString
                            _confMPU
                               _ftoa
                            _readMPU
 ---------------------------------------------------------------------------------
 (1) _readMPU                                             35    35      0   12311
                                             56 BANK0      4     4      0
                                              0 BANK1     31    31      0
           _I2C_Master_RepeatedStart
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1863
                                             10 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      62
                                              4 COMMON     1     1      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      65
                                              3 COMMON     3     3      0
                            _I2C_ACK
                    _I2C_Master_Wait
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _ftoa                                                16    10      6   15132
                                             64 BANK0     16    10      6
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             34    25      9    3250
                                             17 BANK0     26    17      9
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     496
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     412
                                              9 COMMON     1     1      0
                                              8 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1196
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     517
                                              7 COMMON     2     2      0
                                             36 BANK0      9     5      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3547
                                             56 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    3302
                                             36 BANK0     20    12      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     155
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    4433
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     446
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _confMPU                                              0     0      0      31
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      31
                                              3 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       8     5      3    2746
                                              4 COMMON     6     3      3
                                              0 BANK0      2     2      0
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             9     4      5    1054
                                              8 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     781
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _UARTInit
     ___lldiv
   _UARTSendChar
   _UARTSendString
     _UARTSendChar
   _confMPU
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _ftoa
     ___flge
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       _isdigit
   _readMPU
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read
       _I2C_ACK
       _I2C_Master_Wait
       _I2C_NACK
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AC       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     20      32       7       62.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60     1F      1F       9       32.3%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AC      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Mar 02 23:14:05 2021

                UARTInit@baud_rate 0028                       ___fldiv@aexp 0043  
                     ___fldiv@bexp 0042                                  pc 0002  
                     ___fldiv@sign 003B                 __size_of_I2C_Start 0010  
                               _BF 04A0                                 l40 12C0  
                               l43 12CC                                 l52 1289  
                               l37 12BF                                 l61 1292  
                               l46 1277                                 l70 12D7  
                               l55 1280                                 l72 12DB  
                               l64 1297                                 l73 12DC  
                               l49 12EC                                 l58 128E  
                               l90 137A                                 l82 1358  
                               l67 129B                                 l87 1372  
                               l89 1378                                 fsr 0004  
              ___wmul@multiplicand 0075                __Umul8_16@word_mpld 0022  
                              l213 0656                                l205 0387  
                              l302 1336                                l216 07EA  
                              l304 134E                                l208 0393  
                              l162 12B2                                l170 1427  
                              l156 1502                                l159 12A8  
                              l601 0E59                                l338 148F  
                              l620 0F71                                l524 13D0  
                              l710 0818                                l703 0371  
                              l480 1622                                l712 082A  
                              l616 0F4D                                l608 0FFF  
                              l641 1329                                l626 0F93  
                              l811 07FC                                l651 167F  
                              l476 159D                                l484 12A6  
                              l637 0FF3                                l629 0FD1  
                              l741 0894                                l653 17FF  
                              l638 0FFF                                l806 0D77  
                              l479 1609                                l495 1569  
                              l735 084F                                l488 157E  
                              l737 08E6                                l673 17E3  
                              l498 157E                                l691 037D  
                              l595 0DDB                                l675 17F3  
                              l667 1771                                l748 08B0  
                              l749 08BC                                l758 072B  
                              l599 0E82                                l784 0BEE  
                              l697 02E9                                l795 0CBE  
                              l787 0C14                                _PEN 048A  
                              _SEN 0488                    __end_of_I2C_ACK 1293  
                              _isr 12ED                                fsr0 0004  
                              indf 0000                       ___flmul@aexp 0038  
                     ___flmul@bexp 003D                       ___flmul@sign 0037  
                     ___flmul@temp 0042                       ___flmul@prod 003E  
                     ___fltol@exp1 0078                               l3101 0D7F  
                             l3031 12C6                               l3111 0D94  
                             l3103 0D85                               l3033 12CE  
                             l3121 0DAC                               l3113 0D9C  
                             l3105 0D89                               l3041 132A  
                             l4001 0906                               l3035 12D3  
                             l3211 0EBC                               l3203 0E94  
                             l3131 0DBE                               l3123 0DB2  
                             l3115 0D9D                               l3107 0D8A  
                             l3051 134A                               l3043 132C  
                             l4011 0916                               l4003 090B  
                             l3061 144A                               l3029 12C0  
                             l3301 0821                               l3213 0EBE  
                             l3205 0EAB                               l3221 0ED1  
                             l3133 0DC3                               l3141 0DD3  
                             l3125 0DB3                               l3109 0D8F  
                             l3117 0D9F                               l3045 1330  
                             l3037 128A                               l4021 0992  
                             l4013 0919                               l4005 090C  
                             l3071 1478                               l3063 144E  
                             l3055 1428                               l3303 0826  
                             l3223 0EE7                               l3231 0F3F  
                             l3215 0EC2                               l3207 0EAF  
                             l3151 0DF1                               l3143 0DE1  
                             l3135 0DC8                               l3127 0DB9  
                             l3119 0DA7                               l3047 133D  
                             l3311 07F3                               l3039 1293  
                             l4031 09FB                               l4023 09A1  
                             l4015 0949                               l4007 090D  
                             l3073 1481                               l3065 1457  
                             l3057 143A                               l3321 1274  
                             l3241 0F6C                               l3233 0F55  
                             l3225 0F25                               l3217 0EC3  
                             l3209 0EB3                               l3161 0E05  
                             l3153 0DF5                               l3145 0DE5  
                             l3137 0DD0                               l3129 0DBD  
                             l3081 1385                               l3049 1344  
                             l3313 07F9                               l4041 0A7C  
                             l4033 0A24                               l4025 09B2  
                             l4017 0958                               l4009 0910  
                             l3067 1469                               l3059 143D  
                             l3075 1487                               l3331 1278  
                             l3251 0F7F                               l3243 0F70  
                             l3235 0F5A                               l3227 0F2B  
                             l3219 0ECC                               l3171 0E19  
                             l3163 0E09                               l3155 0DF9  
                             l3147 0DE9                               l3139 0DD1  
                             l3091 13B9                               l3083 1388  
                             l3315 07FB                               l3307 07EC  
                             l3323 12DE                               l4051 0AFF  
                             l4043 0A8D                               l4035 0A33  
                             l4027 09DB                               l4019 0969  
                             l3069 1477                               l3333 127D  
                             l3261 0F90                               l3245 0F75  
                             l3253 0F81                               l3229 0F30  
                             l3181 0E3D                               l3173 0E1D  
                             l3165 0E0D                               l3157 0DFD  
                             l3149 0DED                               l3421 130A  
                             l3413 155E                               l3405 1545  
                             l3093 13C2                               l3085 1395  
                             l3309 07ED                               l3341 1362  
                             l3325 12E3                               l3501 1711  
                             l4053 0B0E                               l4045 0AB6  
                             l4037 0A44                               l4029 09EA  
                             l3351 12A8                               l3319 126F  
                             l3271 0FAF                               l3247 0F78  
                             l3239 0F63                               l3255 0F85  
                             l3191 0E6D                               l3183 0E5D  
                             l3175 0E21                               l3167 0E11  
                             l3159 0E01                               l3415 156E  
                             l3407 1557                               l3087 1399  
                             l3095 13C8                               l3079 137B  
                             l3327 1281                               l3343 1367  
                             l3335 1350                               l3511 1732  
                             l3503 1712                               l3431 1634  
                             l4055 0B25                               l4047 0AC5  
                             l4039 0A6D                               l3353 12AE  
                             l3361 15B9                               l3601 006F  
                             l3281 0FE8                               l3273 0FCD  
                             l3265 0F98                               l3257 0F86  
                             l3249 0F7A                               l3193 0E76  
                             l3185 0E66                               l3169 0E15  
                             l3177 0E25                               l3417 1573  
                             l3089 13AB                               l3329 1286  
                             l3345 136D                               l3337 1355  
                             l3521 174B                               l3513 1734  
                             l3505 1720                               l3441 1648  
                             l3433 1635                               l3425 1623  
                             l4049 0AD6                               l3371 1621  
                             l3363 15BD                               l3355 157F  
                             l3611 008A                               l3603 0077  
                             l3291 0FFE                               l3283 0FE9  
                             l3275 0FD6                               l3267 0F9D  
                             l3259 0F8A                               l3187 0E68  
                             l3195 0E7A                               l3179 0E26  
                             l3099 0D78                               l3419 1306  
                             l3347 1379                               l3339 135C  
                             l3531 176E                               l3515 173D  
                             l3523 1751                               l3507 1724  
                             l3451 1661                               l3435 163A  
                             l3443 164A                               l3427 162A  
                             l3365 15E1                               l3357 1595  
                             l3293 0805                               l3701 036A  
                             l3621 010C                               l3613 009A  
                             l3605 007C                               l3285 0FED  
                             l3277 0FDB                               l3269 0FAB  
                             l3197 0E86                               l3189 0E6C  
                             l4077 0C09                               l3541 178D  
                             l3525 1755                               l3517 1741  
                             l3509 172A                               l3461 1675  
                             l3453 1662                               l3445 1652  
                             l3437 163F                               l3429 1630  
                             l3367 15E5                               l3359 15B1  
                             l3295 0807                               l3703 0375  
                             l3631 017A                               l3623 0128  
                             l3615 00A7                               l3607 0081  
                             l3375 129C                               l3287 0FEF  
                             l3279 0FE3                               l3199 0E8B  
                             l3391 152E                               l3383 1503  
                             l3711 0837                               l3551 17D6  
                             l3543 17A6                               l3535 1776  
                             l3527 1756                               l3519 1742  
                             l3455 1667                               l3463 1677  
                             l3447 1657                               l3439 1647  
                             l3369 161F                               l3297 080E  
                             l3641 020A                               l3633 018A  
                             l3625 0144                               l3617 00C4  
                             l3377 12A4                               l3289 0FFA  
                             l3393 152F                               l3385 1510  
                             l3721 0865                               l3713 0847  
                             l3801 0C39                               l3561 17EF  
                             l3553 17DA                               l3537 177B  
                             l3545 17AC                               l3529 175A  
                             l3481 16C0                               l3465 1687  
                             l3473 16A0                               l3457 166C  
                             l3449 165D                               l3299 0812  
                             l3651 029E                               l3643 021A  
                             l3635 01A7                               l3627 014D  
                             l3619 00E0                               l3571 002A  
                             l3379 12A6                               l3395 1537  
                             l3731 089B                               l3723 0872  
                             l3715 0857                               l3707 082E  
                             l3803 0C3D                               l3555 17E2  
                             l3547 17B9                               l3539 1789  
                             l3491 16DF                               l3483 16C8  
                             l3475 16A5                               l3467 1693  
                             l3459 1674                               l3661 02C3  
                             l3653 02AC                               l3645 0247  
                             l3637 01C0                               l3629 015D  
                             l3581 0041                               l3573 002E  
                             l3397 1539                               l3389 1519  
                             l3741 08D4                               l3733 08A6  
                             l3725 0879                               l3709 0833  
                             l3821 0C94                               l3805 0C43  
                             l3557 17E9                               l3549 17C7  
                             l3493 16F1                               l3485 16D0  
                             l3469 1697                               l3671 02E6  
                             l3655 02B5                               l3663 02C9  
                             l3647 026D                               l3639 01DD  
                             l3591 005A                               l3583 0043  
                             l3575 002F                               l3567 001D  
                             l3399 153D                               l3743 08D9  
                             l3735 08AA                               l3727 087D  
                             l3719 0860                               l3831 0CD7  
                             l3823 0C9F                               l3815 0C53  
                             l3807 0C4B                               l3751 0B2F  
                             l3559 17ED                               l3495 16F5  
                             l3487 16D8                               l3479 16AE  
                             l3903 0381                               l3681 0305  
                             l3665 02CD                               l3657 02B9  
                             l3649 0295                               l3593 005B  
                             l3585 004B                               l3577 0034  
                             l3569 0024                               l3745 08DD  
                             l3737 08B4                               l3729 088B  
                             l3841 0CF9                               l3833 0CDB  
                             l3825 0CA6                               l3809 0C51  
                             l3761 0B49                               l3753 0B34  
                             l3497 16F6                               l3489 16DA  
                             l3921 03D0                               l3905 038D  
                             l3691 034B                               l3683 031E  
                             l3675 02EE                               l3667 02CE  
                             l3659 02BA                               l3595 0060  
                             l3587 0050                               l3579 0039  
                             l3747 08DE                               l3739 08BE  
                             l3843 0D48                               l3835 0CE1  
                             l3827 0CB5                               l3819 0C8A  
                             l3851 0D73                               l3771 0B89  
                             l3763 0B59                               l3755 0B3A  
                             l3499 16FF                               l3931 0450  
                             l3923 03E2                               l3915 03A8  
                             l3907 0399                               l3861 12B7  
                             l3693 0355                               l3677 02F3  
                             l3685 0324                               l3669 02D2  
                             l3597 0065                               l3589 0056  
                             l3845 0D4F                               l3837 0CE8  
                             l3829 0CCB                               l3781 0BC3  
                             l3765 0B5D                               l3773 0B99  
                             l3757 0B41                               l3941 0518  
                             l3933 046B                               l3925 03FF  
                             l3917 03BB                               l3909 03A4  
                             l3863 12BA                               l3871 1497  
                             l3695 0357                               l3687 0331  
                             l3679 0301                               l3599 006D  
                             l3839 0CEC                               l3847 0D53  
                             l3783 0BD6                               l3775 0BA7  
                             l3767 0B72                               l3759 0B46  
                             l3943 0553                               l3935 0486  
                             l3927 041A                               l3919 03C3  
                             l3865 12BD                               l3881 14F5  
                             l3873 14C4                               l3697 0365  
                             l3689 033C                               l3793 0BF5  
                             l3785 0BDA                               l3777 0BAB  
                             l3769 0B85                               l3849 0D61  
                             l3961 0683                               l3953 0657  
                             l3945 05A5                               l3937 04A1  
                             l3929 0435                               l3867 12BE  
                             l3859 12B3                               l3891 14FC  
                             l3883 14F6                               l3875 14C6  
                             l3699 0369                               l3795 0C18  
                             l3779 0BAE                               l3787 0BEB  
                             l3971 072A                               l3963 069A  
                             l3955 065D                               l3947 05E0  
                             l3939 04DD                               l3893 14FD  
                             l3885 14F7                               l3877 14F3  
                             l3869 1490                               l3981 13FC  
                             l3797 0C26                               l3789 0BF0  
                             l3965 06B3                               l3957 0676  
                             l3949 061B                               l3895 14FE  
                             l3887 14FA                               l3879 14F4  
                             l3983 1409                               l3975 13D1  
                             l3799 0C2B                               l3967 06E2  
                             l3959 067F                               l3897 1501  
                             l3889 14FB                               l3977 13D8  
                             l3969 0710                               l3979 13F4  
                             l3899 072C                               l3995 08E7  
                             ?_isr 0070                               l3997 08F0  
                             l3999 08F5                               STR_1 1043  
                             STR_2 1043                               STR_3 1043  
                             STR_4 1043                               STR_5 1043  
                             STR_6 1043                               STR_7 1043  
                             STR_8 1038                               u5000 15B1  
                             u5001 15B0                               u5010 15BD  
                             u5011 15BC                               u4220 12C6  
                             u5100 1544                               u4300 134A  
                             u4221 12C5                               u5021 15CC  
                             u5101 1543                               u4301 1349  
                             u4310 143A                               u4230 12CC  
                             u5030 15E5                               u5022 15CD  
                             u4311 1439                               u4231 12CB  
                             u5031 15E4                               u5023 15D2  
                             u4240 12DB                               u5024 15D3  
                             u5120 1556                               u4400 1399  
                             u6000 0BA7                               u5200 1661  
                             u4241 12DA                               u5041 15F4  
                             u5025 15D8                               u5121 1555  
                             u4401 1398                               u6001 0BA6  
                             u5201 1660                               u4330 144E  
                             u5050 161F                               u5042 15F5  
                             u5026 15D9                               u5130 155D  
                             u4410 13AB                               u6010 0BEA  
                             u4250 1292                               u5210 1667  
                             u4331 144D                               u5051 161E  
                             u5043 15FA                               u5131 155C  
                             u5115 1546                               u4411 13AA  
                             u6011 0BE9                               u4251 1291  
                             u5211 1666                               u5044 15FB  
                             u5060 12A4                               u4500 0DC8  
                             u6100 0CCB                               u6020 0C18  
                             u4260 129B                               u5300 1711  
                             u5220 166C                               u4325 143F  
                             u5045 1600                               u5061 12A3  
                             u4501 0DC7                               u6101 0CCA  
                             u6021 0C17                               u4261 129A  
                             u5301 1710                               u5221 166B  
                             u4350 1469                               u5046 1601  
                             u4510 0DE1                               u5150 156E  
                             u5070 1510                               u4430 13C8  
                             u4270 1330                               u6110 0CE1  
                             u6030 0C43                               u5310 172A  
                             u5230 1687                               u4351 1468  
                             u5055 161B                               u4511 0DE0  
                             u5151 156D                               u5071 150F  
                             u4431 13C7                               u4415 13A7  
                             u4271 132F                               u6111 0CE0  
                             u6031 0C42                               u5311 1729  
                             u5231 1686                               u4600 0E86  
                             u4520 0DE5                               u4440 0D89  
                             u5160 1573                               u5080 1527  
                             u6120 0CF8                               u6040 0C4B  
                             u5400 177B                               u5320 1732  
                             u5240 16A5                               u6200 0399  
                             u4345 1450                               u4601 0E85  
                             u4521 0DE4                               u4441 0D88  
                             u5161 1572                               u5145 1560  
                             u4425 13BA                               u6121 0CF7  
                             u6105 0CC7                               u6041 0C4A  
                             u5401 177A                               u5321 1731  
                             u5305 170D                               u5241 16A4  
                             u6201 0398                               u4370 1487  
                             u4610 0E8B                               u4530 0E3D  
                             u4450 0D8F                               u5090 153D  
                             u5410 178D                               u5250 16DF  
                             u5170 1634                               u6210 03D0  
                             u4371 1486                               u4355 1465  
                             u4611 0E8A                               u4531 0E3C  
                             u4451 0D8E                               u5091 153C  
                             u5411 178C                               u5251 16DE  
                             u5171 1633                               u6211 03CF  
                             u5500 0060                               u4700 0F30  
                             u4540 0E48                               u4460 0D94  
                             u4380 1385                               u6140 0D61  
                             u6060 0C89                               u6220 0676  
                             u5420 179C                               u5340 1741  
                             u5180 163A                               u4365 1479  
                             u5501 005F                               u4701 0F2F  
                             u4621 0E9D                               u4541 0E46  
                             u4461 0D93                               u5085 1522  
                             u4381 1384                               u4285 1337  
                             u6141 0D60                               u6061 0C88  
                             u6221 0675                               u5341 1740  
                             u5181 1639                               u6230 13E2  
                             u5510 0065                               u4710 0F55  
                             u4630 0EAF                               u4622 0EA4  
                             u4550 0E49                               u4470 0DB2  
                             u6150 0D73                               u6070 0C94  
                             u5430 17B9                               u5190 163F  
                             u5511 0064                               u4711 0F54  
                             u4631 0EAE                               u4623 0EAB  
                             u4535 0E39                               u4471 0DB1  
                             u4295 133E                               u6151 0D72  
                             u6135 0D04                               u6071 0C93  
                             u6055 0C56                               u5431 17B8  
                             u5335 1736                               u5191 163E  
                             u6215 03CC                               u6160 1497  
                             u6240 1409                               u5520 007C  
                             u4800 0F97                               u4720 0F5A  
                             u4640 0EB3                               u4560 0E5D  
                             u4480 0DBD                               u6080 0C9F  
                             u5440 17D6                               u5360 1755  
                             u5280 16F5                               u6161 1496  
                             u6241 1408                               u5601 0199  
                             u5521 007B                               u4801 0F96  
                             u4721 0F59                               u4641 0EB2  
                             u4561 0E5C                               u4481 0DBC  
                             u6081 0C9E                               u6065 0C85  
                             u5441 17D5                               u5425 1797  
                             u5361 1754                               u5281 16F4  
                             u5265 16E1                               u6170 14A5  
                             u6250 1415                               u5602 01A0  
                             u5530 0081                               u4810 0F9D  
                             u4650 0EC2                               u4570 0E6C  
                             u4490 0DC3                               u6090 0CB5  
                             u5450 17ED                               u5370 175A  
                             u5603 01A7                               u5531 0080  
                             u4811 0F9C                               u4651 0EC1  
                             u4571 0E6B                               u4491 0DC2  
                             u4395 138A                               u6091 0CB4  
                             u5451 17EC                               u5435 17B5  
                             u5371 1759                               u5355 1744  
                             u5275 16EA                               u6180 14D4  
                             u6260 1427                               u4900 0812  
                             u5460 002E                               u4820 0FAF  
                             u4740 0F70                               u5380 176E  
                             _RCEN 048B                               u6261 1426  
                             u6245 1405                               u4901 0811  
                             u5621 01CF                               u5541 00D2  
                             u5461 002D                               u4821 0FAE  
                             u4741 0F6F                               u6085 0C9B  
                             u5445 17D2                               u5381 176D  
                             u5710 02B9                               u5622 01D6  
                             u5542 00D9                               u5470 0034  
                             u4830 0FBE                               u4750 0F75  
                             u4670 0EE7                               u4590 0E82  
                             u5390 1775                               u6190 038D  
                             u6175 14A0                               u5711 02B8  
                             u5631 01FC                               u5623 01DD  
                             u5615 01A9                               u5551 00EE  
                             u5543 00E0                               u5471 0033  
                             u4751 0F74                               u4735 0F65  
                             u4671 0EE6                               u4591 0E81  
                             u6095 0CB1                               u5391 1774  
                             u5295 16F8                               u6191 038C  
                             u4920 0826                               u5800 0331  
                             u5632 0203                               u5552 00F5  
                             u5480 0039                               u4840 0FCD  
                             u4760 0F7F                               u6185 14CF  
                             u4921 0825                               u5801 0330  
                             u5705 02AE                               u5641 0229  
                             u5633 020A                               u5561 011A  
                             u5553 00FC                               u5481 0038  
                             u4841 0FCC                               u4761 0F7E  
                             u4681 0EFE                               u4673 0EE3  
                             u4665 0EC5                               u4585 0E6F  
                             u5810 034B                               u5730 02CD  
                             u5650 0253                               u5642 0230  
                             u5562 0121                               u5490 005A  
                             u4850 0FD6                               u4770 0F85  
                             u4690 0F12                               u4682 0EFF  
                             u4930 07F3                               u4915 0819  
                             u5811 034A                               u5731 02CC  
                             u5643 0237                               u5571 0136  
                             u5563 0128                               u5491 0059  
                             u4851 0FD5                               u4835 0FB9  
                             u4771 0F84                               u4691 0F13  
                             u4683 0F04                               u4931 07F2  
                             u5820 0369                               u5740 02D2  
                             u5572 013D                               u4860 0FDB  
                             u4780 0F8A                               u4692 0F18  
                             u4684 0F05                               u4940 07F9  
                             u5821 0368                               u5805 032D  
                             u5741 02D1                               u5725 02BC  
                             u5661 025F                               u5573 0144  
                             u4861 0FDA                               u4781 0F89  
                             u4693 0F19                               u4685 0F0A  
                             u4941 07F8                               u5750 02E6  
                             u5670 027B                               u5662 0266  
                             u4870 0FE8                               u4790 0F90  
                             u4686 0F0B                               u5910 08AA  
                             u5830 0833                               u4950 135C  
                             u5815 0347                               u5751 02E5  
                             u5663 026D                               u5655 024E  
                             u5591 016C                               u4871 0FE7  
                             u4791 0F8F                               u5911 08A9  
                             u5831 0832                               u4951 135B  
                             u5760 02ED                               u5592 0173  
                             u4880 0FED                               u5920 08B0  
                             u5840 0837                               u4960 1367  
                             u5761 02EC                               u5681 0287  
                             u5593 017A                               u5585 0146  
                             u4881 0FEC                               u5921 08AF  
                             u5905 089F                               u5841 0836  
                             u4961 1366                               u5770 02F3  
                             u5682 028E                               u4890 0FFE  
                             u5930 08B4                               u5850 0857  
                             u4970 1378                               u5771 02F2  
                             u5683 0295                               u5675 0276  
                             u4891 0FFD                               u5931 08B3  
                             u5851 0856                               u4971 1377  
                             u4980 12AE                               u5780 0305  
                             u5940 08C9                               u4981 12AD  
                             u5781 0304                               u4990 1595  
                             u5790 0314                               u5950 08D9  
                             u5870 0878                               u4991 1594  
                             u5695 0297                               u5951 08D8  
                             u5871 0877                               u5960 08DD  
                             u5961 08DC                               u5945 08C4  
                             u5865 086A                               u5890 089A  
                             u5970 0B3A                               u5795 030F  
                             u5891 0899                               u5971 0B39  
                             u5980 0B59                               u5885 088C  
                             u5981 0B58                               u5990 0B99  
                             u5991 0B98                               _RSEN 0489  
                 __end_of_I2C_NACK 129C   __end_of_I2C_Master_RepeatedStart 128A  
                             _main 08E7                               _ftoa 0657  
                 __end_of_I2C_Read 137B                               btemp 007E  
                             start 000C                    ___fldiv@new_exp 003C  
                            ??_isr 0070                   ?_I2C_Master_Init 0070  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                    ___fltol@sign1 0077                    __end_of___fladd 1000  
                            ?_main 0070                              _ACKEN 048C  
                            ?_ftoa 0060                              _ACKDT 048D  
                  __end_of___fldiv 1800                    __end_of___flneg 12A7  
                  __end_of___flmul 037E                    __end_of___flsub 132A  
                  __end_of___fltol 157F                              _ANSEL 0188  
                  __end_of___lldiv 1490                    __end_of___llmod 13D1  
                            i1l137 12FF                              _RCREG 001A  
                            _SPBRG 0099                              _PORTA 0005  
                            _TRISA 0085                              _SSPIF 0063  
                            _TXREG 0019                    __end_of_confMPU 07EB  
                 __end_of_UARTInit 1503                    __end_of_readMPU 0657  
                  __end_of_dpowers 1038                    __end_of_isdigit 07FD  
                            ftoa@f 0060                              ftoa@l 006B  
                __end_of_I2C_Start 12ED                              pclath 000A  
                            status 0003                              wtemp0 007E  
                  __end_of_sprintf 0D78                    __initialization 000F  
                     __end_of_main 0B2C                       __end_of_ftoa 072C  
                        ??_I2C_ACK 0073                             ??_main 00BF  
                           ??_ftoa 0066                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0070                 ??_I2C_Master_Start 0073  
               ??_I2C_Master_Write 0073                   ___llmod@dividend 002C  
                           i1l3001 12F9                             i1l2997 12ED  
                           i1l2999 12F3                             u420_20 12F3  
                           u420_21 12F2                             u421_20 12F9  
                           u421_21 12F8                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
                 __end_of___xxtofl 08E7           _I2C_Master_RepeatedStart 1281  
                           ___flge 157F                   I2C_Read@ACK_NACK 0074  
                        ??___fladd 004C                             ___wmul 132A  
                        ??___fldiv 0032                          ??___flneg 0077  
                        ??___flmul 0032                     readMPU@guardar 00AE  
                        ??___flsub 0077                          ??___fltol 0048  
                        ??___lldiv 0073                          ??___llmod 0079  
          __size_of_UARTSendString 0057                     readMPU@valores 00A0  
                        ??_confMPU 0074                             ftoa@cp 006F  
                        ?_I2C_NACK 0070                          ??_readMPU 0058  
                        ??_isdigit 0073                          ?_I2C_Read 0070  
               __size_of__Umul8_16 0029                             saved_w 007E  
                        ??_sprintf 003A                         ___flge@ff1 0020  
                       ___flge@ff2 0024                       ___xxtofl@arg 0026  
                     ___xxtofl@exp 0025                       ___xxtofl@val 0073  
          __end_of__initialization 0019                         ___flneg@f1 0073  
                       ___fltol@f1 0044                     __pcstackCOMMON 0070  
                        ?_UARTInit 0028                         ??_I2C_NACK 0073  
                       ??_I2C_Read 0073           UARTSendString@max_length 0076  
                     _datoRecibido 007A                       readMPU@datos 00BE  
                     sprintf@width 0046                         __pbssBANK1 00C0  
                     I2C_Read@Data 0075                  __end_of__Umul8_16 082B  
                       __pmaintext 08E7                            ?___flge 0020  
                          ?___wmul 0073                         ??_UARTInit 002D  
                       __pintentry 0004                            _I2C_ACK 128A  
                          _ACKSTAT 048E                          ?___xxtofl 0073  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                       __stringtab 1000                      ?_UARTSendChar 0070  
                     I2C_Start@add 0074                          _I2C_Start 12DD  
                  __size_of___flge 00A4                            ___fladd 0D78  
                          ___fldiv 1623                            ___flneg 129C  
                          ___flmul 001D                            ___flsub 1306  
                          ___fltol 1503                            ___lldiv 1428  
                  __size_of___wmul 0025                            ___llmod 137B  
                   _UARTSendString 13D1                            _bandera 00C0  
                          _confMPU 072C                            __ptext1 037E  
                          __ptext2 1623                            __ptext3 12DD  
                          __ptext4 134F                            __ptext5 1293  
                          __ptext6 128A                            __ptext7 1281  
                          __ptext8 0657                            __ptext9 0B2C  
                          _readMPU 037E                            _dpowers 1010  
                          _isdigit 07EB                       __size_of_isr 0019  
                       ??___xxtofl 0020           __size_of_I2C_Master_Init 000D  
         __size_of_I2C_Master_Wait 000D           __size_of_I2C_Master_Stop 0009  
                          _sprintf 0B2C                            clrloop0 1268  
             end_of_initialization 0019                     ??_UARTSendChar 0073  
                          ftoa@buf 00C1                            ftoa@rem 0067  
       ??_I2C_Master_RepeatedStart 0073                         ?_I2C_Start 0070  
        __size_of_I2C_Master_Start 0009          __size_of_I2C_Master_Write 0010  
                  ___lldiv@divisor 0020                    ___lldiv@counter 0078  
                        _RCSTAbits 0018             __end_of_UARTSendString 1428  
                      ___fladd@grs 0057                      ___xxtofl@sign 0024  
                __size_of_I2C_NACK 0009                          _TRISCbits 0087  
                __size_of_I2C_Read 002C                        ___fldiv@grs 003E  
                      ___fldiv@rem 0037                        ___flmul@grs 0039  
                       main@buffer 01AE                          _TXSTAbits 0098  
                       main@status 01AC                    ?_UARTSendString 0074  
                   __end_of___flge 1623                     __end_of___wmul 134F  
                __size_of_UARTInit 0073                start_initialization 000F  
                      __end_of_isr 1306                         ftoa@status 0064  
                ??_I2C_Master_Init 0073                  ??_I2C_Master_Wait 0073  
                ??_I2C_Master_Stop 0073                    ___llmod@divisor 0028  
                      ??_I2C_Start 0074                    ___llmod@counter 0030  
                         ??___flge 0073                           ??___wmul 0077  
                        __Umul8_16 0802                           ?_I2C_ACK 0070  
             __end_of_UARTSendChar 12B3                          ___fladd@a 0048  
                        ___fladd@b 0044                          ___fldiv@a 002A  
                        ___fldiv@b 002E                          ___flmul@a 002E  
                        ___flmul@b 002A                        __pbssCOMMON 007A  
                        ___flsub@a 0058                          ___flsub@b 005C  
                        ___latbits 0002                      __pcstackBANK0 0020  
                    __pcstackBANK1 00A0                      __pcstackBANK3 0190  
                __size_of___xxtofl 00BC                        sprintf@flag 003F  
                      sprintf@prec 0048                   _I2C_Master_Start 126F  
                 _I2C_Master_Write 12CD                      UARTSendChar@c 0073  
                         ?___fladd 0044                           ?___fldiv 002A  
                         ?___flneg 0073                           ?___flmul 002A  
                         ?___flsub 0058                           ?___fltol 0044  
                         ?___lldiv 0020                           ?___llmod 0028  
                       ?__Umul8_16 0073               I2C_Master_Write@data 0073  
                        __pstrings 1000                           ?_confMPU 0070  
                         _I2C_NACK 1293                           ?_readMPU 0070  
                         ?_isdigit 0070                           _I2C_Read 134F  
                         ?_sprintf 0031                  interrupt_function 0004  
                   ___wmul@product 0077                          clear_ram0 1267  
                         _PIE1bits 008C                    UARTSendString@i 0020  
                         _PIR1bits 000C                           _UARTInit 1490  
                 __size_of_I2C_ACK 0009                        __stringbase 100F  
                ___wmul@multiplier 0073                          main@datos 0190  
                 ??_UARTSendString 0077              __size_of_UARTSendChar 000C  
                     UARTInit@BRGH 002C                        ??__Umul8_16 0075  
__size_of_I2C_Master_RepeatedStart 0009                   __size_of___fladd 0288  
                 __size_of___fldiv 01DD                   __size_of___flneg 000B  
                 __size_of___flmul 0361          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___flsub 0024                   __size_of___fltol 007C  
                 __size_of___lldiv 0068                   __size_of___llmod 0056  
               __end_of__stringtab 1010                        _isdigit$886 0073  
                 __size_of_confMPU 00BF                         sprintf@val 0041  
                  _I2C_Master_Init 12B3                           ___xxtofl 082B  
                  _I2C_Master_Wait 12C0                   __size_of_readMPU 02D9  
                  _I2C_Master_Stop 1278                   __size_of_isdigit 0012  
                         __ptext10 07EB                           __ptext11 132A  
                         __ptext20 157F                           __ptext12 137B  
                         __ptext21 072C                           __ptext13 082B  
                         __ptext30 12B3                           __ptext22 12CD  
                         __ptext14 1503                           __ptext31 12ED  
                         __ptext23 1278                           __ptext15 1306  
                         __ptext24 126F                           __ptext16 0D78  
                         __ptext25 12C0                           __ptext17 129C  
                         __ptext26 13D1                           __ptext18 001D  
                         __ptext27 12A7                           __ptext19 0802  
                         __ptext28 1490                           __ptext29 1428  
                 __size_of_sprintf 024C                       _UARTSendChar 12A7  
                    __size_of_main 0245                      __size_of_ftoa 00D5  
         __end_of_I2C_Master_Start 1278                           readMPU@i 00BC  
         __end_of_I2C_Master_Write 12DD                         _INTCONbits 000B  
                         isdigit@c 0074                  UARTSendString@str 0074  
                         intlevel1 0000                          sprintf@ap 0040  
                        sprintf@sp 0045                   ___lldiv@dividend 0024  
                        stringcode 100A            __end_of_I2C_Master_Init 12C0  
          __end_of_I2C_Master_Wait 12CD            __end_of_I2C_Master_Stop 1281  
           __Umul8_16@multiplicand 0073                           sprintf@c 004A  
                         sprintf@f 0031                   ___lldiv@quotient 0074  
                         stringdir 100A                           stringtab 1000  
                      _SSPCON2bits 0091                      ___fladd@signs 0054  
                     ___fladd@aexp 0055                       ___fladd@bexp 0056  
             __Umul8_16@multiplier 0024                  __Umul8_16@product 0020  
